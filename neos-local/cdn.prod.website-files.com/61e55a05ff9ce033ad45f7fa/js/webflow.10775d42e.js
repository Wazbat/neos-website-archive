
/*!
 * Webflow: Front-end site library
 * @license MIT
 * Inline scripts may access the api using an async handler:
 *   var Webflow = Webflow || [];
 *   Webflow.push(readyFunction);
 */

(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __defNormalProp = (obj, key2, value2) => key2 in obj ? __defProp(obj, key2, { enumerable: true, configurable: true, writable: true, value: value2 }) : obj[key2] = value2;
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x + '" is not supported');
  });
  var __esm = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
  var __commonJS = (cb, mod2) => function __require2() {
    return mod2 || (0, cb[__getOwnPropNames(cb)[0]])((mod2 = { exports: {} }).exports, mod2), mod2.exports;
  };
  var __export = (target, all) => {
    for (var name2 in all)
      __defProp(target, name2, { get: all[name2], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key2 of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key2) && key2 !== except)
          __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod2, isNodeMode, target) => (target = mod2 != null ? __create(__getProtoOf(mod2)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod2 || !mod2.__esModule ? __defProp(target, "default", { value: mod2, enumerable: true }) : target,
    mod2
  ));
  var __toCommonJS = (mod2) => __copyProps(__defProp({}, "__esModule", { value: true }), mod2);
  var __publicField = (obj, key2, value2) => {
    __defNormalProp(obj, typeof key2 !== "symbol" ? key2 + "" : key2, value2);
    return value2;
  };

  // packages/shared/render/plugins/BaseSiteModules/tram-min.js
  var require_tram_min = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/tram-min.js"() {
      "use strict";
      window.tram = function(a) {
        function b(a2, b2) {
          var c2 = new M.Bare();
          return c2.init(a2, b2);
        }
        function c(a2) {
          return a2.replace(/[A-Z]/g, function(a3) {
            return "-" + a3.toLowerCase();
          });
        }
        function d(a2) {
          var b2 = parseInt(a2.slice(1), 16), c2 = b2 >> 16 & 255, d2 = b2 >> 8 & 255, e2 = 255 & b2;
          return [c2, d2, e2];
        }
        function e(a2, b2, c2) {
          return "#" + (1 << 24 | a2 << 16 | b2 << 8 | c2).toString(16).slice(1);
        }
        function f() {
        }
        function g(a2, b2) {
          j("Type warning: Expected: [" + a2 + "] Got: [" + typeof b2 + "] " + b2);
        }
        function h(a2, b2, c2) {
          j("Units do not match [" + a2 + "]: " + b2 + ", " + c2);
        }
        function i(a2, b2, c2) {
          if (void 0 !== b2 && (c2 = b2), void 0 === a2)
            return c2;
          var d2 = c2;
          return $2.test(a2) || !_.test(a2) ? d2 = parseInt(a2, 10) : _.test(a2) && (d2 = 1e3 * parseFloat(a2)), 0 > d2 && (d2 = 0), d2 === d2 ? d2 : c2;
        }
        function j(a2) {
          U.debug && window && window.console.warn(a2);
        }
        function k(a2) {
          for (var b2 = -1, c2 = a2 ? a2.length : 0, d2 = []; ++b2 < c2; ) {
            var e2 = a2[b2];
            e2 && d2.push(e2);
          }
          return d2;
        }
        var l = function(a2, b2, c2) {
          function d2(a3) {
            return "object" == typeof a3;
          }
          function e2(a3) {
            return "function" == typeof a3;
          }
          function f2() {
          }
          function g2(h2, i2) {
            function j2() {
              var a3 = new k2();
              return e2(a3.init) && a3.init.apply(a3, arguments), a3;
            }
            function k2() {
            }
            i2 === c2 && (i2 = h2, h2 = Object), j2.Bare = k2;
            var l2, m2 = f2[a2] = h2[a2], n2 = k2[a2] = j2[a2] = new f2();
            return n2.constructor = j2, j2.mixin = function(b3) {
              return k2[a2] = j2[a2] = g2(j2, b3)[a2], j2;
            }, j2.open = function(a3) {
              if (l2 = {}, e2(a3) ? l2 = a3.call(j2, n2, m2, j2, h2) : d2(a3) && (l2 = a3), d2(l2))
                for (var c3 in l2)
                  b2.call(l2, c3) && (n2[c3] = l2[c3]);
              return e2(n2.init) || (n2.init = h2), j2;
            }, j2.open(i2);
          }
          return g2;
        }("prototype", {}.hasOwnProperty), m = {
          ease: ["ease", function(a2, b2, c2, d2) {
            var e2 = (a2 /= d2) * a2, f2 = e2 * a2;
            return b2 + c2 * (-2.75 * f2 * e2 + 11 * e2 * e2 + -15.5 * f2 + 8 * e2 + 0.25 * a2);
          }],
          "ease-in": ["ease-in", function(a2, b2, c2, d2) {
            var e2 = (a2 /= d2) * a2, f2 = e2 * a2;
            return b2 + c2 * (-1 * f2 * e2 + 3 * e2 * e2 + -3 * f2 + 2 * e2);
          }],
          "ease-out": ["ease-out", function(a2, b2, c2, d2) {
            var e2 = (a2 /= d2) * a2, f2 = e2 * a2;
            return b2 + c2 * (0.3 * f2 * e2 + -1.6 * e2 * e2 + 2.2 * f2 + -1.8 * e2 + 1.9 * a2);
          }],
          "ease-in-out": ["ease-in-out", function(a2, b2, c2, d2) {
            var e2 = (a2 /= d2) * a2, f2 = e2 * a2;
            return b2 + c2 * (2 * f2 * e2 + -5 * e2 * e2 + 2 * f2 + 2 * e2);
          }],
          linear: ["linear", function(a2, b2, c2, d2) {
            return c2 * a2 / d2 + b2;
          }],
          "ease-in-quad": ["cubic-bezier(0.550, 0.085, 0.680, 0.530)", function(a2, b2, c2, d2) {
            return c2 * (a2 /= d2) * a2 + b2;
          }],
          "ease-out-quad": ["cubic-bezier(0.250, 0.460, 0.450, 0.940)", function(a2, b2, c2, d2) {
            return -c2 * (a2 /= d2) * (a2 - 2) + b2;
          }],
          "ease-in-out-quad": ["cubic-bezier(0.455, 0.030, 0.515, 0.955)", function(a2, b2, c2, d2) {
            return (a2 /= d2 / 2) < 1 ? c2 / 2 * a2 * a2 + b2 : -c2 / 2 * (--a2 * (a2 - 2) - 1) + b2;
          }],
          "ease-in-cubic": ["cubic-bezier(0.550, 0.055, 0.675, 0.190)", function(a2, b2, c2, d2) {
            return c2 * (a2 /= d2) * a2 * a2 + b2;
          }],
          "ease-out-cubic": ["cubic-bezier(0.215, 0.610, 0.355, 1)", function(a2, b2, c2, d2) {
            return c2 * ((a2 = a2 / d2 - 1) * a2 * a2 + 1) + b2;
          }],
          "ease-in-out-cubic": ["cubic-bezier(0.645, 0.045, 0.355, 1)", function(a2, b2, c2, d2) {
            return (a2 /= d2 / 2) < 1 ? c2 / 2 * a2 * a2 * a2 + b2 : c2 / 2 * ((a2 -= 2) * a2 * a2 + 2) + b2;
          }],
          "ease-in-quart": ["cubic-bezier(0.895, 0.030, 0.685, 0.220)", function(a2, b2, c2, d2) {
            return c2 * (a2 /= d2) * a2 * a2 * a2 + b2;
          }],
          "ease-out-quart": ["cubic-bezier(0.165, 0.840, 0.440, 1)", function(a2, b2, c2, d2) {
            return -c2 * ((a2 = a2 / d2 - 1) * a2 * a2 * a2 - 1) + b2;
          }],
          "ease-in-out-quart": ["cubic-bezier(0.770, 0, 0.175, 1)", function(a2, b2, c2, d2) {
            return (a2 /= d2 / 2) < 1 ? c2 / 2 * a2 * a2 * a2 * a2 + b2 : -c2 / 2 * ((a2 -= 2) * a2 * a2 * a2 - 2) + b2;
          }],
          "ease-in-quint": ["cubic-bezier(0.755, 0.050, 0.855, 0.060)", function(a2, b2, c2, d2) {
            return c2 * (a2 /= d2) * a2 * a2 * a2 * a2 + b2;
          }],
          "ease-out-quint": ["cubic-bezier(0.230, 1, 0.320, 1)", function(a2, b2, c2, d2) {
            return c2 * ((a2 = a2 / d2 - 1) * a2 * a2 * a2 * a2 + 1) + b2;
          }],
          "ease-in-out-quint": ["cubic-bezier(0.860, 0, 0.070, 1)", function(a2, b2, c2, d2) {
            return (a2 /= d2 / 2) < 1 ? c2 / 2 * a2 * a2 * a2 * a2 * a2 + b2 : c2 / 2 * ((a2 -= 2) * a2 * a2 * a2 * a2 + 2) + b2;
          }],
          "ease-in-sine": ["cubic-bezier(0.470, 0, 0.745, 0.715)", function(a2, b2, c2, d2) {
            return -c2 * Math.cos(a2 / d2 * (Math.PI / 2)) + c2 + b2;
          }],
          "ease-out-sine": ["cubic-bezier(0.390, 0.575, 0.565, 1)", function(a2, b2, c2, d2) {
            return c2 * Math.sin(a2 / d2 * (Math.PI / 2)) + b2;
          }],
          "ease-in-out-sine": ["cubic-bezier(0.445, 0.050, 0.550, 0.950)", function(a2, b2, c2, d2) {
            return -c2 / 2 * (Math.cos(Math.PI * a2 / d2) - 1) + b2;
          }],
          "ease-in-expo": ["cubic-bezier(0.950, 0.050, 0.795, 0.035)", function(a2, b2, c2, d2) {
            return 0 === a2 ? b2 : c2 * Math.pow(2, 10 * (a2 / d2 - 1)) + b2;
          }],
          "ease-out-expo": ["cubic-bezier(0.190, 1, 0.220, 1)", function(a2, b2, c2, d2) {
            return a2 === d2 ? b2 + c2 : c2 * (-Math.pow(2, -10 * a2 / d2) + 1) + b2;
          }],
          "ease-in-out-expo": ["cubic-bezier(1, 0, 0, 1)", function(a2, b2, c2, d2) {
            return 0 === a2 ? b2 : a2 === d2 ? b2 + c2 : (a2 /= d2 / 2) < 1 ? c2 / 2 * Math.pow(2, 10 * (a2 - 1)) + b2 : c2 / 2 * (-Math.pow(2, -10 * --a2) + 2) + b2;
          }],
          "ease-in-circ": ["cubic-bezier(0.600, 0.040, 0.980, 0.335)", function(a2, b2, c2, d2) {
            return -c2 * (Math.sqrt(1 - (a2 /= d2) * a2) - 1) + b2;
          }],
          "ease-out-circ": ["cubic-bezier(0.075, 0.820, 0.165, 1)", function(a2, b2, c2, d2) {
            return c2 * Math.sqrt(1 - (a2 = a2 / d2 - 1) * a2) + b2;
          }],
          "ease-in-out-circ": ["cubic-bezier(0.785, 0.135, 0.150, 0.860)", function(a2, b2, c2, d2) {
            return (a2 /= d2 / 2) < 1 ? -c2 / 2 * (Math.sqrt(1 - a2 * a2) - 1) + b2 : c2 / 2 * (Math.sqrt(1 - (a2 -= 2) * a2) + 1) + b2;
          }],
          "ease-in-back": ["cubic-bezier(0.600, -0.280, 0.735, 0.045)", function(a2, b2, c2, d2, e2) {
            return void 0 === e2 && (e2 = 1.70158), c2 * (a2 /= d2) * a2 * ((e2 + 1) * a2 - e2) + b2;
          }],
          "ease-out-back": ["cubic-bezier(0.175, 0.885, 0.320, 1.275)", function(a2, b2, c2, d2, e2) {
            return void 0 === e2 && (e2 = 1.70158), c2 * ((a2 = a2 / d2 - 1) * a2 * ((e2 + 1) * a2 + e2) + 1) + b2;
          }],
          "ease-in-out-back": ["cubic-bezier(0.680, -0.550, 0.265, 1.550)", function(a2, b2, c2, d2, e2) {
            return void 0 === e2 && (e2 = 1.70158), (a2 /= d2 / 2) < 1 ? c2 / 2 * a2 * a2 * (((e2 *= 1.525) + 1) * a2 - e2) + b2 : c2 / 2 * ((a2 -= 2) * a2 * (((e2 *= 1.525) + 1) * a2 + e2) + 2) + b2;
          }]
        }, n = {
          "ease-in-back": "cubic-bezier(0.600, 0, 0.735, 0.045)",
          "ease-out-back": "cubic-bezier(0.175, 0.885, 0.320, 1)",
          "ease-in-out-back": "cubic-bezier(0.680, 0, 0.265, 1)"
        }, o = document, p = window, q = "bkwld-tram", r = /[\-\.0-9]/g, s = /[A-Z]/, t = "number", u = /^(rgb|#)/, v = /(em|cm|mm|in|pt|pc|px)$/, w = /(em|cm|mm|in|pt|pc|px|%)$/, x = /(deg|rad|turn)$/, y = "unitless", z = /(all|none) 0s ease 0s/, A = /^(width|height)$/, B = " ", C = o.createElement("a"), D = ["Webkit", "Moz", "O", "ms"], E = ["-webkit-", "-moz-", "-o-", "-ms-"], F = function(a2) {
          if (a2 in C.style)
            return {
              dom: a2,
              css: a2
            };
          var b2, c2, d2 = "", e2 = a2.split("-");
          for (b2 = 0; b2 < e2.length; b2++)
            d2 += e2[b2].charAt(0).toUpperCase() + e2[b2].slice(1);
          for (b2 = 0; b2 < D.length; b2++)
            if (c2 = D[b2] + d2, c2 in C.style)
              return {
                dom: c2,
                css: E[b2] + a2
              };
        }, G = b.support = {
          bind: Function.prototype.bind,
          transform: F("transform"),
          transition: F("transition"),
          backface: F("backface-visibility"),
          timing: F("transition-timing-function")
        };
        if (G.transition) {
          var H = G.timing.dom;
          if (C.style[H] = m["ease-in-back"][0], !C.style[H])
            for (var I in n)
              m[I][0] = n[I];
        }
        var J = b.frame = function() {
          var a2 = p.requestAnimationFrame || p.webkitRequestAnimationFrame || p.mozRequestAnimationFrame || p.oRequestAnimationFrame || p.msRequestAnimationFrame;
          return a2 && G.bind ? a2.bind(p) : function(a3) {
            p.setTimeout(a3, 16);
          };
        }(), K = b.now = function() {
          var a2 = p.performance, b2 = a2 && (a2.now || a2.webkitNow || a2.msNow || a2.mozNow);
          return b2 && G.bind ? b2.bind(a2) : Date.now || function() {
            return +/* @__PURE__ */ new Date();
          };
        }(), L = l(function(b2) {
          function d2(a2, b3) {
            var c2 = k(("" + a2).split(B)), d3 = c2[0];
            b3 = b3 || {};
            var e3 = Y[d3];
            if (!e3)
              return j("Unsupported property: " + d3);
            if (!b3.weak || !this.props[d3]) {
              var f3 = e3[0], g3 = this.props[d3];
              return g3 || (g3 = this.props[d3] = new f3.Bare()), g3.init(this.$el, c2, e3, b3), g3;
            }
          }
          function e2(a2, b3, c2) {
            if (a2) {
              var e3 = typeof a2;
              if (b3 || (this.timer && this.timer.destroy(), this.queue = [], this.active = false), "number" == e3 && b3)
                return this.timer = new S({
                  duration: a2,
                  context: this,
                  complete: h2
                }), void (this.active = true);
              if ("string" == e3 && b3) {
                switch (a2) {
                  case "hide":
                    o2.call(this);
                    break;
                  case "stop":
                    l2.call(this);
                    break;
                  case "redraw":
                    p2.call(this);
                    break;
                  default:
                    d2.call(this, a2, c2 && c2[1]);
                }
                return h2.call(this);
              }
              if ("function" == e3)
                return void a2.call(this, this);
              if ("object" == e3) {
                var f3 = 0;
                u2.call(this, a2, function(a3, b4) {
                  a3.span > f3 && (f3 = a3.span), a3.stop(), a3.animate(b4);
                }, function(a3) {
                  "wait" in a3 && (f3 = i(a3.wait, 0));
                }), t2.call(this), f3 > 0 && (this.timer = new S({
                  duration: f3,
                  context: this
                }), this.active = true, b3 && (this.timer.complete = h2));
                var g3 = this, j2 = false, k2 = {};
                J(function() {
                  u2.call(g3, a2, function(a3) {
                    a3.active && (j2 = true, k2[a3.name] = a3.nextStyle);
                  }), j2 && g3.$el.css(k2);
                });
              }
            }
          }
          function f2(a2) {
            a2 = i(a2, 0), this.active ? this.queue.push({
              options: a2
            }) : (this.timer = new S({
              duration: a2,
              context: this,
              complete: h2
            }), this.active = true);
          }
          function g2(a2) {
            return this.active ? (this.queue.push({
              options: a2,
              args: arguments
            }), void (this.timer.complete = h2)) : j("No active transition timer. Use start() or wait() before then().");
          }
          function h2() {
            if (this.timer && this.timer.destroy(), this.active = false, this.queue.length) {
              var a2 = this.queue.shift();
              e2.call(this, a2.options, true, a2.args);
            }
          }
          function l2(a2) {
            this.timer && this.timer.destroy(), this.queue = [], this.active = false;
            var b3;
            "string" == typeof a2 ? (b3 = {}, b3[a2] = 1) : b3 = "object" == typeof a2 && null != a2 ? a2 : this.props, u2.call(this, b3, v2), t2.call(this);
          }
          function m2(a2) {
            l2.call(this, a2), u2.call(this, a2, w2, x2);
          }
          function n2(a2) {
            "string" != typeof a2 && (a2 = "block"), this.el.style.display = a2;
          }
          function o2() {
            l2.call(this), this.el.style.display = "none";
          }
          function p2() {
            this.el.offsetHeight;
          }
          function r2() {
            l2.call(this), a.removeData(this.el, q), this.$el = this.el = null;
          }
          function t2() {
            var a2, b3, c2 = [];
            this.upstream && c2.push(this.upstream);
            for (a2 in this.props)
              b3 = this.props[a2], b3.active && c2.push(b3.string);
            c2 = c2.join(","), this.style !== c2 && (this.style = c2, this.el.style[G.transition.dom] = c2);
          }
          function u2(a2, b3, e3) {
            var f3, g3, h3, i2, j2 = b3 !== v2, k2 = {};
            for (f3 in a2)
              h3 = a2[f3], f3 in Z ? (k2.transform || (k2.transform = {}), k2.transform[f3] = h3) : (s.test(f3) && (f3 = c(f3)), f3 in Y ? k2[f3] = h3 : (i2 || (i2 = {}), i2[f3] = h3));
            for (f3 in k2) {
              if (h3 = k2[f3], g3 = this.props[f3], !g3) {
                if (!j2)
                  continue;
                g3 = d2.call(this, f3);
              }
              b3.call(this, g3, h3);
            }
            e3 && i2 && e3.call(this, i2);
          }
          function v2(a2) {
            a2.stop();
          }
          function w2(a2, b3) {
            a2.set(b3);
          }
          function x2(a2) {
            this.$el.css(a2);
          }
          function y2(a2, c2) {
            b2[a2] = function() {
              return this.children ? A2.call(this, c2, arguments) : (this.el && c2.apply(this, arguments), this);
            };
          }
          function A2(a2, b3) {
            var c2, d3 = this.children.length;
            for (c2 = 0; d3 > c2; c2++)
              a2.apply(this.children[c2], b3);
            return this;
          }
          b2.init = function(b3) {
            if (this.$el = a(b3), this.el = this.$el[0], this.props = {}, this.queue = [], this.style = "", this.active = false, U.keepInherited && !U.fallback) {
              var c2 = W(this.el, "transition");
              c2 && !z.test(c2) && (this.upstream = c2);
            }
            G.backface && U.hideBackface && V(this.el, G.backface.css, "hidden");
          }, y2("add", d2), y2("start", e2), y2("wait", f2), y2("then", g2), y2("next", h2), y2("stop", l2), y2("set", m2), y2("show", n2), y2("hide", o2), y2("redraw", p2), y2("destroy", r2);
        }), M = l(L, function(b2) {
          function c2(b3, c3) {
            var d2 = a.data(b3, q) || a.data(b3, q, new L.Bare());
            return d2.el || d2.init(b3), c3 ? d2.start(c3) : d2;
          }
          b2.init = function(b3, d2) {
            var e2 = a(b3);
            if (!e2.length)
              return this;
            if (1 === e2.length)
              return c2(e2[0], d2);
            var f2 = [];
            return e2.each(function(a2, b4) {
              f2.push(c2(b4, d2));
            }), this.children = f2, this;
          };
        }), N = l(function(a2) {
          function b2() {
            var a3 = this.get();
            this.update("auto");
            var b3 = this.get();
            return this.update(a3), b3;
          }
          function c2(a3, b3, c3) {
            return void 0 !== b3 && (c3 = b3), a3 in m ? a3 : c3;
          }
          function d2(a3) {
            var b3 = /rgba?\((\d+),\s*(\d+),\s*(\d+)/.exec(a3);
            return (b3 ? e(b3[1], b3[2], b3[3]) : a3).replace(/#(\w)(\w)(\w)$/, "#$1$1$2$2$3$3");
          }
          var f2 = {
            duration: 500,
            ease: "ease",
            delay: 0
          };
          a2.init = function(a3, b3, d3, e2) {
            this.$el = a3, this.el = a3[0];
            var g2 = b3[0];
            d3[2] && (g2 = d3[2]), X[g2] && (g2 = X[g2]), this.name = g2, this.type = d3[1], this.duration = i(b3[1], this.duration, f2.duration), this.ease = c2(b3[2], this.ease, f2.ease), this.delay = i(b3[3], this.delay, f2.delay), this.span = this.duration + this.delay, this.active = false, this.nextStyle = null, this.auto = A.test(this.name), this.unit = e2.unit || this.unit || U.defaultUnit, this.angle = e2.angle || this.angle || U.defaultAngle, U.fallback || e2.fallback ? this.animate = this.fallback : (this.animate = this.transition, this.string = this.name + B + this.duration + "ms" + ("ease" != this.ease ? B + m[this.ease][0] : "") + (this.delay ? B + this.delay + "ms" : ""));
          }, a2.set = function(a3) {
            a3 = this.convert(a3, this.type), this.update(a3), this.redraw();
          }, a2.transition = function(a3) {
            this.active = true, a3 = this.convert(a3, this.type), this.auto && ("auto" == this.el.style[this.name] && (this.update(this.get()), this.redraw()), "auto" == a3 && (a3 = b2.call(this))), this.nextStyle = a3;
          }, a2.fallback = function(a3) {
            var c3 = this.el.style[this.name] || this.convert(this.get(), this.type);
            a3 = this.convert(a3, this.type), this.auto && ("auto" == c3 && (c3 = this.convert(this.get(), this.type)), "auto" == a3 && (a3 = b2.call(this))), this.tween = new R({
              from: c3,
              to: a3,
              duration: this.duration,
              delay: this.delay,
              ease: this.ease,
              update: this.update,
              context: this
            });
          }, a2.get = function() {
            return W(this.el, this.name);
          }, a2.update = function(a3) {
            V(this.el, this.name, a3);
          }, a2.stop = function() {
            (this.active || this.nextStyle) && (this.active = false, this.nextStyle = null, V(this.el, this.name, this.get()));
            var a3 = this.tween;
            a3 && a3.context && a3.destroy();
          }, a2.convert = function(a3, b3) {
            if ("auto" == a3 && this.auto)
              return a3;
            var c3, e2 = "number" == typeof a3, f3 = "string" == typeof a3;
            switch (b3) {
              case t:
                if (e2)
                  return a3;
                if (f3 && "" === a3.replace(r, ""))
                  return +a3;
                c3 = "number(unitless)";
                break;
              case u:
                if (f3) {
                  if ("" === a3 && this.original)
                    return this.original;
                  if (b3.test(a3))
                    return "#" == a3.charAt(0) && 7 == a3.length ? a3 : d2(a3);
                }
                c3 = "hex or rgb string";
                break;
              case v:
                if (e2)
                  return a3 + this.unit;
                if (f3 && b3.test(a3))
                  return a3;
                c3 = "number(px) or string(unit)";
                break;
              case w:
                if (e2)
                  return a3 + this.unit;
                if (f3 && b3.test(a3))
                  return a3;
                c3 = "number(px) or string(unit or %)";
                break;
              case x:
                if (e2)
                  return a3 + this.angle;
                if (f3 && b3.test(a3))
                  return a3;
                c3 = "number(deg) or string(angle)";
                break;
              case y:
                if (e2)
                  return a3;
                if (f3 && w.test(a3))
                  return a3;
                c3 = "number(unitless) or string(unit or %)";
            }
            return g(c3, a3), a3;
          }, a2.redraw = function() {
            this.el.offsetHeight;
          };
        }), O = l(N, function(a2, b2) {
          a2.init = function() {
            b2.init.apply(this, arguments), this.original || (this.original = this.convert(this.get(), u));
          };
        }), P = l(N, function(a2, b2) {
          a2.init = function() {
            b2.init.apply(this, arguments), this.animate = this.fallback;
          }, a2.get = function() {
            return this.$el[this.name]();
          }, a2.update = function(a3) {
            this.$el[this.name](a3);
          };
        }), Q = l(N, function(a2, b2) {
          function c2(a3, b3) {
            var c3, d2, e2, f2, g2;
            for (c3 in a3)
              f2 = Z[c3], e2 = f2[0], d2 = f2[1] || c3, g2 = this.convert(a3[c3], e2), b3.call(this, d2, g2, e2);
          }
          a2.init = function() {
            b2.init.apply(this, arguments), this.current || (this.current = {}, Z.perspective && U.perspective && (this.current.perspective = U.perspective, V(this.el, this.name, this.style(this.current)), this.redraw()));
          }, a2.set = function(a3) {
            c2.call(this, a3, function(a4, b3) {
              this.current[a4] = b3;
            }), V(this.el, this.name, this.style(this.current)), this.redraw();
          }, a2.transition = function(a3) {
            var b3 = this.values(a3);
            this.tween = new T({
              current: this.current,
              values: b3,
              duration: this.duration,
              delay: this.delay,
              ease: this.ease
            });
            var c3, d2 = {};
            for (c3 in this.current)
              d2[c3] = c3 in b3 ? b3[c3] : this.current[c3];
            this.active = true, this.nextStyle = this.style(d2);
          }, a2.fallback = function(a3) {
            var b3 = this.values(a3);
            this.tween = new T({
              current: this.current,
              values: b3,
              duration: this.duration,
              delay: this.delay,
              ease: this.ease,
              update: this.update,
              context: this
            });
          }, a2.update = function() {
            V(this.el, this.name, this.style(this.current));
          }, a2.style = function(a3) {
            var b3, c3 = "";
            for (b3 in a3)
              c3 += b3 + "(" + a3[b3] + ") ";
            return c3;
          }, a2.values = function(a3) {
            var b3, d2 = {};
            return c2.call(this, a3, function(a4, c3, e2) {
              d2[a4] = c3, void 0 === this.current[a4] && (b3 = 0, ~a4.indexOf("scale") && (b3 = 1), this.current[a4] = this.convert(b3, e2));
            }), d2;
          };
        }), R = l(function(b2) {
          function c2(a2) {
            1 === n2.push(a2) && J(g2);
          }
          function g2() {
            var a2, b3, c3, d2 = n2.length;
            if (d2)
              for (J(g2), b3 = K(), a2 = d2; a2--; )
                c3 = n2[a2], c3 && c3.render(b3);
          }
          function i2(b3) {
            var c3, d2 = a.inArray(b3, n2);
            d2 >= 0 && (c3 = n2.slice(d2 + 1), n2.length = d2, c3.length && (n2 = n2.concat(c3)));
          }
          function j2(a2) {
            return Math.round(a2 * o2) / o2;
          }
          function k2(a2, b3, c3) {
            return e(a2[0] + c3 * (b3[0] - a2[0]), a2[1] + c3 * (b3[1] - a2[1]), a2[2] + c3 * (b3[2] - a2[2]));
          }
          var l2 = {
            ease: m.ease[1],
            from: 0,
            to: 1
          };
          b2.init = function(a2) {
            this.duration = a2.duration || 0, this.delay = a2.delay || 0;
            var b3 = a2.ease || l2.ease;
            m[b3] && (b3 = m[b3][1]), "function" != typeof b3 && (b3 = l2.ease), this.ease = b3, this.update = a2.update || f, this.complete = a2.complete || f, this.context = a2.context || this, this.name = a2.name;
            var c3 = a2.from, d2 = a2.to;
            void 0 === c3 && (c3 = l2.from), void 0 === d2 && (d2 = l2.to), this.unit = a2.unit || "", "number" == typeof c3 && "number" == typeof d2 ? (this.begin = c3, this.change = d2 - c3) : this.format(d2, c3), this.value = this.begin + this.unit, this.start = K(), a2.autoplay !== false && this.play();
          }, b2.play = function() {
            this.active || (this.start || (this.start = K()), this.active = true, c2(this));
          }, b2.stop = function() {
            this.active && (this.active = false, i2(this));
          }, b2.render = function(a2) {
            var b3, c3 = a2 - this.start;
            if (this.delay) {
              if (c3 <= this.delay)
                return;
              c3 -= this.delay;
            }
            if (c3 < this.duration) {
              var d2 = this.ease(c3, 0, 1, this.duration);
              return b3 = this.startRGB ? k2(this.startRGB, this.endRGB, d2) : j2(this.begin + d2 * this.change), this.value = b3 + this.unit, void this.update.call(this.context, this.value);
            }
            b3 = this.endHex || this.begin + this.change, this.value = b3 + this.unit, this.update.call(this.context, this.value), this.complete.call(this.context), this.destroy();
          }, b2.format = function(a2, b3) {
            if (b3 += "", a2 += "", "#" == a2.charAt(0))
              return this.startRGB = d(b3), this.endRGB = d(a2), this.endHex = a2, this.begin = 0, void (this.change = 1);
            if (!this.unit) {
              var c3 = b3.replace(r, ""), e2 = a2.replace(r, "");
              c3 !== e2 && h("tween", b3, a2), this.unit = c3;
            }
            b3 = parseFloat(b3), a2 = parseFloat(a2), this.begin = this.value = b3, this.change = a2 - b3;
          }, b2.destroy = function() {
            this.stop(), this.context = null, this.ease = this.update = this.complete = f;
          };
          var n2 = [], o2 = 1e3;
        }), S = l(R, function(a2) {
          a2.init = function(a3) {
            this.duration = a3.duration || 0, this.complete = a3.complete || f, this.context = a3.context, this.play();
          }, a2.render = function(a3) {
            var b2 = a3 - this.start;
            b2 < this.duration || (this.complete.call(this.context), this.destroy());
          };
        }), T = l(R, function(a2, b2) {
          a2.init = function(a3) {
            this.context = a3.context, this.update = a3.update, this.tweens = [], this.current = a3.current;
            var b3, c2;
            for (b3 in a3.values)
              c2 = a3.values[b3], this.current[b3] !== c2 && this.tweens.push(new R({
                name: b3,
                from: this.current[b3],
                to: c2,
                duration: a3.duration,
                delay: a3.delay,
                ease: a3.ease,
                autoplay: false
              }));
            this.play();
          }, a2.render = function(a3) {
            var b3, c2, d2 = this.tweens.length, e2 = false;
            for (b3 = d2; b3--; )
              c2 = this.tweens[b3], c2.context && (c2.render(a3), this.current[c2.name] = c2.value, e2 = true);
            return e2 ? void (this.update && this.update.call(this.context)) : this.destroy();
          }, a2.destroy = function() {
            if (b2.destroy.call(this), this.tweens) {
              var a3, c2 = this.tweens.length;
              for (a3 = c2; a3--; )
                this.tweens[a3].destroy();
              this.tweens = null, this.current = null;
            }
          };
        }), U = b.config = {
          debug: false,
          defaultUnit: "px",
          defaultAngle: "deg",
          keepInherited: false,
          hideBackface: false,
          perspective: "",
          fallback: !G.transition,
          agentTests: []
        };
        b.fallback = function(a2) {
          if (!G.transition)
            return U.fallback = true;
          U.agentTests.push("(" + a2 + ")");
          var b2 = new RegExp(U.agentTests.join("|"), "i");
          U.fallback = b2.test(navigator.userAgent);
        }, b.fallback("6.0.[2-5] Safari"), b.tween = function(a2) {
          return new R(a2);
        }, b.delay = function(a2, b2, c2) {
          return new S({
            complete: b2,
            duration: a2,
            context: c2
          });
        }, a.fn.tram = function(a2) {
          return b.call(null, this, a2);
        };
        var V = a.style, W = a.css, X = {
          transform: G.transform && G.transform.css
        }, Y = {
          color: [O, u],
          background: [O, u, "background-color"],
          "outline-color": [O, u],
          "border-color": [O, u],
          "border-top-color": [O, u],
          "border-right-color": [O, u],
          "border-bottom-color": [O, u],
          "border-left-color": [O, u],
          "border-width": [N, v],
          "border-top-width": [N, v],
          "border-right-width": [N, v],
          "border-bottom-width": [N, v],
          "border-left-width": [N, v],
          "border-spacing": [N, v],
          "letter-spacing": [N, v],
          margin: [N, v],
          "margin-top": [N, v],
          "margin-right": [N, v],
          "margin-bottom": [N, v],
          "margin-left": [N, v],
          padding: [N, v],
          "padding-top": [N, v],
          "padding-right": [N, v],
          "padding-bottom": [N, v],
          "padding-left": [N, v],
          "outline-width": [N, v],
          opacity: [N, t],
          top: [N, w],
          right: [N, w],
          bottom: [N, w],
          left: [N, w],
          "font-size": [N, w],
          "text-indent": [N, w],
          "word-spacing": [N, w],
          width: [N, w],
          "min-width": [N, w],
          "max-width": [N, w],
          height: [N, w],
          "min-height": [N, w],
          "max-height": [N, w],
          "line-height": [N, y],
          "scroll-top": [P, t, "scrollTop"],
          "scroll-left": [P, t, "scrollLeft"]
        }, Z = {};
        G.transform && (Y.transform = [Q], Z = {
          x: [w, "translateX"],
          y: [w, "translateY"],
          rotate: [x],
          rotateX: [x],
          rotateY: [x],
          scale: [t],
          scaleX: [t],
          scaleY: [t],
          skew: [x],
          skewX: [x],
          skewY: [x]
        }), G.transform && G.backface && (Z.z = [w, "translateZ"], Z.rotateZ = [x], Z.scaleZ = [t], Z.perspective = [v]);
        var $2 = /ms/, _ = /s|\./;
        return a.tram = b;
      }(window.jQuery);
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/underscore-custom.js
  var require_underscore_custom = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/underscore-custom.js"(exports2, module2) {
      "use strict";
      var $2 = window.$;
      var tram = require_tram_min() && $2.tram;
      module2.exports = function() {
        var _ = {};
        _.VERSION = "1.6.0-Webflow";
        var breaker = {};
        var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;
        var push = ArrayProto.push, slice3 = ArrayProto.slice, concat2 = ArrayProto.concat, toString3 = ObjProto.toString, hasOwnProperty9 = ObjProto.hasOwnProperty;
        var nativeForEach = ArrayProto.forEach, nativeMap = ArrayProto.map, nativeReduce = ArrayProto.reduce, nativeReduceRight = ArrayProto.reduceRight, nativeFilter = ArrayProto.filter, nativeEvery = ArrayProto.every, nativeSome = ArrayProto.some, nativeIndexOf = ArrayProto.indexOf, nativeLastIndexOf = ArrayProto.lastIndexOf, nativeIsArray = Array.isArray, nativeKeys = Object.keys, nativeBind = FuncProto.bind;
        var each = _.each = _.forEach = function(obj, iterator, context) {
          if (obj == null)
            return obj;
          if (nativeForEach && obj.forEach === nativeForEach) {
            obj.forEach(iterator, context);
          } else if (obj.length === +obj.length) {
            for (var i = 0, length2 = obj.length; i < length2; i++) {
              if (iterator.call(context, obj[i], i, obj) === breaker)
                return;
            }
          } else {
            var keys = _.keys(obj);
            for (var i = 0, length2 = keys.length; i < length2; i++) {
              if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)
                return;
            }
          }
          return obj;
        };
        _.map = _.collect = function(obj, iterator, context) {
          var results = [];
          if (obj == null)
            return results;
          if (nativeMap && obj.map === nativeMap)
            return obj.map(iterator, context);
          each(obj, function(value2, index2, list) {
            results.push(iterator.call(context, value2, index2, list));
          });
          return results;
        };
        _.find = _.detect = function(obj, predicate, context) {
          var result2;
          any(obj, function(value2, index2, list) {
            if (predicate.call(context, value2, index2, list)) {
              result2 = value2;
              return true;
            }
          });
          return result2;
        };
        _.filter = _.select = function(obj, predicate, context) {
          var results = [];
          if (obj == null)
            return results;
          if (nativeFilter && obj.filter === nativeFilter)
            return obj.filter(predicate, context);
          each(obj, function(value2, index2, list) {
            if (predicate.call(context, value2, index2, list))
              results.push(value2);
          });
          return results;
        };
        var any = _.some = _.any = function(obj, predicate, context) {
          predicate || (predicate = _.identity);
          var result2 = false;
          if (obj == null)
            return result2;
          if (nativeSome && obj.some === nativeSome)
            return obj.some(predicate, context);
          each(obj, function(value2, index2, list) {
            if (result2 || (result2 = predicate.call(context, value2, index2, list)))
              return breaker;
          });
          return !!result2;
        };
        _.contains = _.include = function(obj, target) {
          if (obj == null)
            return false;
          if (nativeIndexOf && obj.indexOf === nativeIndexOf)
            return obj.indexOf(target) != -1;
          return any(obj, function(value2) {
            return value2 === target;
          });
        };
        _.delay = function(func, wait) {
          var args = slice3.call(arguments, 2);
          return setTimeout(function() {
            return func.apply(null, args);
          }, wait);
        };
        _.defer = function(func) {
          return _.delay.apply(_, [func, 1].concat(slice3.call(arguments, 1)));
        };
        _.throttle = function(func) {
          var wait, args, context;
          return function() {
            if (wait)
              return;
            wait = true;
            args = arguments;
            context = this;
            tram.frame(function() {
              wait = false;
              func.apply(context, args);
            });
          };
        };
        _.debounce = function(func, wait, immediate) {
          var timeout, args, context, timestamp, result2;
          var later = function() {
            var last = _.now() - timestamp;
            if (last < wait) {
              timeout = setTimeout(later, wait - last);
            } else {
              timeout = null;
              if (!immediate) {
                result2 = func.apply(context, args);
                context = args = null;
              }
            }
          };
          return function() {
            context = this;
            args = arguments;
            timestamp = _.now();
            var callNow = immediate && !timeout;
            if (!timeout) {
              timeout = setTimeout(later, wait);
            }
            if (callNow) {
              result2 = func.apply(context, args);
              context = args = null;
            }
            return result2;
          };
        };
        _.defaults = function(obj) {
          if (!_.isObject(obj))
            return obj;
          for (var i = 1, length2 = arguments.length; i < length2; i++) {
            var source = arguments[i];
            for (var prop in source) {
              if (obj[prop] === void 0)
                obj[prop] = source[prop];
            }
          }
          return obj;
        };
        _.keys = function(obj) {
          if (!_.isObject(obj))
            return [];
          if (nativeKeys)
            return nativeKeys(obj);
          var keys = [];
          for (var key2 in obj)
            if (_.has(obj, key2))
              keys.push(key2);
          return keys;
        };
        _.has = function(obj, key2) {
          return hasOwnProperty9.call(obj, key2);
        };
        _.isObject = function(obj) {
          return obj === Object(obj);
        };
        _.now = Date.now || function() {
          return (/* @__PURE__ */ new Date()).getTime();
        };
        _.templateSettings = {
          evaluate: /<%([\s\S]+?)%>/g,
          interpolate: /<%=([\s\S]+?)%>/g,
          escape: /<%-([\s\S]+?)%>/g
        };
        var noMatch = /(.)^/;
        var escapes = {
          "'": "'",
          "\\": "\\",
          "\r": "r",
          "\n": "n",
          "\u2028": "u2028",
          "\u2029": "u2029"
        };
        var escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;
        var escapeChar = function(match) {
          return "\\" + escapes[match];
        };
        var bareIdentifier = /^\s*(\w|\$)+\s*$/;
        _.template = function(text2, settings, oldSettings) {
          if (!settings && oldSettings)
            settings = oldSettings;
          settings = _.defaults({}, settings, _.templateSettings);
          var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join("|") + "|$", "g");
          var index2 = 0;
          var source = "__p+='";
          text2.replace(matcher, function(match, escape5, interpolate, evaluate, offset) {
            source += text2.slice(index2, offset).replace(escapeRegExp, escapeChar);
            index2 = offset + match.length;
            if (escape5) {
              source += "'+\n((__t=(" + escape5 + "))==null?'':_.escape(__t))+\n'";
            } else if (interpolate) {
              source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
            } else if (evaluate) {
              source += "';\n" + evaluate + "\n__p+='";
            }
            return match;
          });
          source += "';\n";
          var argument = settings.variable;
          if (argument) {
            if (!bareIdentifier.test(argument))
              throw new Error("variable is not a bare identifier: " + argument);
          } else {
            source = "with(obj||{}){\n" + source + "}\n";
            argument = "obj";
          }
          source = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + source + "return __p;\n";
          var render;
          try {
            render = new Function(settings.variable || "obj", "_", source);
          } catch (e) {
            e.source = source;
            throw e;
          }
          var template = function(data2) {
            return render.call(this, data2, _);
          };
          template.source = "function(" + argument + "){\n" + source + "}";
          return template;
        };
        return _;
      }();
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-lib.js
  var require_webflow_lib = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-lib.js"(exports2, module2) {
      "use strict";
      var Webflow = {};
      var modules = {};
      var primary = [];
      var secondary = window.Webflow || [];
      var $2 = window.jQuery;
      var $win = $2(window);
      var $doc = $2(document);
      var isFunction3 = $2.isFunction;
      var _ = Webflow._ = require_underscore_custom();
      var tram = Webflow.tram = require_tram_min() && $2.tram;
      var domready = false;
      var destroyed = false;
      tram.config.hideBackface = false;
      tram.config.keepInherited = true;
      Webflow.define = function(name2, factory2, options) {
        if (modules[name2]) {
          unbindModule(modules[name2]);
        }
        var instance = modules[name2] = factory2($2, _, options) || {};
        bindModule(instance);
        return instance;
      };
      Webflow.require = function(name2) {
        return modules[name2];
      };
      function bindModule(module3) {
        if (Webflow.env()) {
          isFunction3(module3.design) && $win.on("__wf_design", module3.design);
          isFunction3(module3.preview) && $win.on("__wf_preview", module3.preview);
        }
        isFunction3(module3.destroy) && $win.on("__wf_destroy", module3.destroy);
        if (module3.ready && isFunction3(module3.ready)) {
          addReady(module3);
        }
      }
      function addReady(module3) {
        if (domready) {
          module3.ready();
          return;
        }
        if (_.contains(primary, module3.ready)) {
          return;
        }
        primary.push(module3.ready);
      }
      function unbindModule(module3) {
        isFunction3(module3.design) && $win.off("__wf_design", module3.design);
        isFunction3(module3.preview) && $win.off("__wf_preview", module3.preview);
        isFunction3(module3.destroy) && $win.off("__wf_destroy", module3.destroy);
        if (module3.ready && isFunction3(module3.ready)) {
          removeReady(module3);
        }
      }
      function removeReady(module3) {
        primary = _.filter(primary, function(readyFn) {
          return readyFn !== module3.ready;
        });
      }
      Webflow.push = function(ready2) {
        if (domready) {
          isFunction3(ready2) && ready2();
          return;
        }
        secondary.push(ready2);
      };
      Webflow.env = function(mode) {
        var designFlag = window.__wf_design;
        var inApp = typeof designFlag !== "undefined";
        if (!mode) {
          return inApp;
        }
        if (mode === "design") {
          return inApp && designFlag;
        }
        if (mode === "preview") {
          return inApp && !designFlag;
        }
        if (mode === "slug") {
          return inApp && window.__wf_slug;
        }
        if (mode === "editor") {
          return window.WebflowEditor;
        }
        if (mode === "test") {
          return window.__wf_test;
        }
        if (mode === "frame") {
          return window !== window.top;
        }
      };
      var userAgent = navigator.userAgent.toLowerCase();
      var touch = Webflow.env.touch = "ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch;
      var chrome = Webflow.env.chrome = /chrome/.test(userAgent) && /Google/.test(navigator.vendor) && parseInt(userAgent.match(/chrome\/(\d+)\./)[1], 10);
      var ios = Webflow.env.ios = /(ipod|iphone|ipad)/.test(userAgent);
      Webflow.env.safari = /safari/.test(userAgent) && !chrome && !ios;
      var touchTarget;
      touch && $doc.on("touchstart mousedown", function(evt) {
        touchTarget = evt.target;
      });
      Webflow.validClick = touch ? function(clickTarget) {
        return clickTarget === touchTarget || $2.contains(clickTarget, touchTarget);
      } : function() {
        return true;
      };
      var resizeEvents = "resize.webflow orientationchange.webflow load.webflow";
      var scrollEvents = "scroll.webflow " + resizeEvents;
      Webflow.resize = eventProxy($win, resizeEvents);
      Webflow.scroll = eventProxy($win, scrollEvents);
      Webflow.redraw = eventProxy();
      function eventProxy(target, types) {
        var handlers = [];
        var proxy = {};
        proxy.up = _.throttle(function(evt) {
          _.each(handlers, function(h) {
            h(evt);
          });
        });
        if (target && types) {
          target.on(types, proxy.up);
        }
        proxy.on = function(handler) {
          if (typeof handler !== "function") {
            return;
          }
          if (_.contains(handlers, handler)) {
            return;
          }
          handlers.push(handler);
        };
        proxy.off = function(handler) {
          if (!arguments.length) {
            handlers = [];
            return;
          }
          handlers = _.filter(handlers, function(h) {
            return h !== handler;
          });
        };
        return proxy;
      }
      Webflow.location = function(url) {
        window.location = url;
      };
      if (Webflow.env()) {
        Webflow.location = function() {
        };
      }
      Webflow.ready = function() {
        domready = true;
        if (destroyed) {
          restoreModules();
        } else {
          _.each(primary, callReady);
        }
        _.each(secondary, callReady);
        Webflow.resize.up();
      };
      function callReady(readyFn) {
        isFunction3(readyFn) && readyFn();
      }
      function restoreModules() {
        destroyed = false;
        _.each(modules, bindModule);
      }
      var deferLoad;
      Webflow.load = function(handler) {
        deferLoad.then(handler);
      };
      function bindLoad() {
        if (deferLoad) {
          deferLoad.reject();
          $win.off("load", deferLoad.resolve);
        }
        deferLoad = new $2.Deferred();
        $win.on("load", deferLoad.resolve);
      }
      Webflow.destroy = function(options) {
        options = options || {};
        destroyed = true;
        $win.triggerHandler("__wf_destroy");
        if (options.domready != null) {
          domready = options.domready;
        }
        _.each(modules, unbindModule);
        Webflow.resize.off();
        Webflow.scroll.off();
        Webflow.redraw.off();
        primary = [];
        secondary = [];
        if (deferLoad.state() === "pending") {
          bindLoad();
        }
      };
      $2(Webflow.ready);
      bindLoad();
      module2.exports = window.Webflow = Webflow;
    }
  });

  // node_modules/lodash/_baseFindIndex.js
  var require_baseFindIndex = __commonJS({
    "node_modules/lodash/_baseFindIndex.js"(exports2, module2) {
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length2 = array.length, index2 = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index2-- : ++index2 < length2) {
          if (predicate(array[index2], index2, array)) {
            return index2;
          }
        }
        return -1;
      }
      module2.exports = baseFindIndex;
    }
  });

  // node_modules/lodash/_listCacheClear.js
  var require_listCacheClear = __commonJS({
    "node_modules/lodash/_listCacheClear.js"(exports2, module2) {
      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }
      module2.exports = listCacheClear;
    }
  });

  // node_modules/lodash/eq.js
  var require_eq = __commonJS({
    "node_modules/lodash/eq.js"(exports2, module2) {
      function eq(value2, other) {
        return value2 === other || value2 !== value2 && other !== other;
      }
      module2.exports = eq;
    }
  });

  // node_modules/lodash/_assocIndexOf.js
  var require_assocIndexOf = __commonJS({
    "node_modules/lodash/_assocIndexOf.js"(exports2, module2) {
      var eq = require_eq();
      function assocIndexOf(array, key2) {
        var length2 = array.length;
        while (length2--) {
          if (eq(array[length2][0], key2)) {
            return length2;
          }
        }
        return -1;
      }
      module2.exports = assocIndexOf;
    }
  });

  // node_modules/lodash/_listCacheDelete.js
  var require_listCacheDelete = __commonJS({
    "node_modules/lodash/_listCacheDelete.js"(exports2, module2) {
      var assocIndexOf = require_assocIndexOf();
      var arrayProto = Array.prototype;
      var splice = arrayProto.splice;
      function listCacheDelete(key2) {
        var data2 = this.__data__, index2 = assocIndexOf(data2, key2);
        if (index2 < 0) {
          return false;
        }
        var lastIndex = data2.length - 1;
        if (index2 == lastIndex) {
          data2.pop();
        } else {
          splice.call(data2, index2, 1);
        }
        --this.size;
        return true;
      }
      module2.exports = listCacheDelete;
    }
  });

  // node_modules/lodash/_listCacheGet.js
  var require_listCacheGet = __commonJS({
    "node_modules/lodash/_listCacheGet.js"(exports2, module2) {
      var assocIndexOf = require_assocIndexOf();
      function listCacheGet(key2) {
        var data2 = this.__data__, index2 = assocIndexOf(data2, key2);
        return index2 < 0 ? void 0 : data2[index2][1];
      }
      module2.exports = listCacheGet;
    }
  });

  // node_modules/lodash/_listCacheHas.js
  var require_listCacheHas = __commonJS({
    "node_modules/lodash/_listCacheHas.js"(exports2, module2) {
      var assocIndexOf = require_assocIndexOf();
      function listCacheHas(key2) {
        return assocIndexOf(this.__data__, key2) > -1;
      }
      module2.exports = listCacheHas;
    }
  });

  // node_modules/lodash/_listCacheSet.js
  var require_listCacheSet = __commonJS({
    "node_modules/lodash/_listCacheSet.js"(exports2, module2) {
      var assocIndexOf = require_assocIndexOf();
      function listCacheSet(key2, value2) {
        var data2 = this.__data__, index2 = assocIndexOf(data2, key2);
        if (index2 < 0) {
          ++this.size;
          data2.push([key2, value2]);
        } else {
          data2[index2][1] = value2;
        }
        return this;
      }
      module2.exports = listCacheSet;
    }
  });

  // node_modules/lodash/_ListCache.js
  var require_ListCache = __commonJS({
    "node_modules/lodash/_ListCache.js"(exports2, module2) {
      var listCacheClear = require_listCacheClear();
      var listCacheDelete = require_listCacheDelete();
      var listCacheGet = require_listCacheGet();
      var listCacheHas = require_listCacheHas();
      var listCacheSet = require_listCacheSet();
      function ListCache(entries) {
        var index2 = -1, length2 = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length2) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype["delete"] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;
      module2.exports = ListCache;
    }
  });

  // node_modules/lodash/_stackClear.js
  var require_stackClear = __commonJS({
    "node_modules/lodash/_stackClear.js"(exports2, module2) {
      var ListCache = require_ListCache();
      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }
      module2.exports = stackClear;
    }
  });

  // node_modules/lodash/_stackDelete.js
  var require_stackDelete = __commonJS({
    "node_modules/lodash/_stackDelete.js"(exports2, module2) {
      function stackDelete(key2) {
        var data2 = this.__data__, result2 = data2["delete"](key2);
        this.size = data2.size;
        return result2;
      }
      module2.exports = stackDelete;
    }
  });

  // node_modules/lodash/_stackGet.js
  var require_stackGet = __commonJS({
    "node_modules/lodash/_stackGet.js"(exports2, module2) {
      function stackGet(key2) {
        return this.__data__.get(key2);
      }
      module2.exports = stackGet;
    }
  });

  // node_modules/lodash/_stackHas.js
  var require_stackHas = __commonJS({
    "node_modules/lodash/_stackHas.js"(exports2, module2) {
      function stackHas(key2) {
        return this.__data__.has(key2);
      }
      module2.exports = stackHas;
    }
  });

  // node_modules/lodash/_freeGlobal.js
  var require_freeGlobal = __commonJS({
    "node_modules/lodash/_freeGlobal.js"(exports2, module2) {
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      module2.exports = freeGlobal;
    }
  });

  // node_modules/lodash/_root.js
  var require_root = __commonJS({
    "node_modules/lodash/_root.js"(exports2, module2) {
      var freeGlobal = require_freeGlobal();
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root2 = freeGlobal || freeSelf || Function("return this")();
      module2.exports = root2;
    }
  });

  // node_modules/lodash/_Symbol.js
  var require_Symbol = __commonJS({
    "node_modules/lodash/_Symbol.js"(exports2, module2) {
      var root2 = require_root();
      var Symbol2 = root2.Symbol;
      module2.exports = Symbol2;
    }
  });

  // node_modules/lodash/_getRawTag.js
  var require_getRawTag = __commonJS({
    "node_modules/lodash/_getRawTag.js"(exports2, module2) {
      var Symbol2 = require_Symbol();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      var nativeObjectToString = objectProto.toString;
      var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
      function getRawTag(value2) {
        var isOwn = hasOwnProperty9.call(value2, symToStringTag), tag = value2[symToStringTag];
        try {
          value2[symToStringTag] = void 0;
          var unmasked = true;
        } catch (e) {
        }
        var result2 = nativeObjectToString.call(value2);
        if (unmasked) {
          if (isOwn) {
            value2[symToStringTag] = tag;
          } else {
            delete value2[symToStringTag];
          }
        }
        return result2;
      }
      module2.exports = getRawTag;
    }
  });

  // node_modules/lodash/_objectToString.js
  var require_objectToString = __commonJS({
    "node_modules/lodash/_objectToString.js"(exports2, module2) {
      var objectProto = Object.prototype;
      var nativeObjectToString = objectProto.toString;
      function objectToString(value2) {
        return nativeObjectToString.call(value2);
      }
      module2.exports = objectToString;
    }
  });

  // node_modules/lodash/_baseGetTag.js
  var require_baseGetTag = __commonJS({
    "node_modules/lodash/_baseGetTag.js"(exports2, module2) {
      var Symbol2 = require_Symbol();
      var getRawTag = require_getRawTag();
      var objectToString = require_objectToString();
      var nullTag = "[object Null]";
      var undefinedTag = "[object Undefined]";
      var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
      function baseGetTag(value2) {
        if (value2 == null) {
          return value2 === void 0 ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value2) ? getRawTag(value2) : objectToString(value2);
      }
      module2.exports = baseGetTag;
    }
  });

  // node_modules/lodash/isObject.js
  var require_isObject = __commonJS({
    "node_modules/lodash/isObject.js"(exports2, module2) {
      function isObject2(value2) {
        var type = typeof value2;
        return value2 != null && (type == "object" || type == "function");
      }
      module2.exports = isObject2;
    }
  });

  // node_modules/lodash/isFunction.js
  var require_isFunction = __commonJS({
    "node_modules/lodash/isFunction.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var isObject2 = require_isObject();
      var asyncTag = "[object AsyncFunction]";
      var funcTag = "[object Function]";
      var genTag = "[object GeneratorFunction]";
      var proxyTag = "[object Proxy]";
      function isFunction3(value2) {
        if (!isObject2(value2)) {
          return false;
        }
        var tag = baseGetTag(value2);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
      }
      module2.exports = isFunction3;
    }
  });

  // node_modules/lodash/_coreJsData.js
  var require_coreJsData = __commonJS({
    "node_modules/lodash/_coreJsData.js"(exports2, module2) {
      var root2 = require_root();
      var coreJsData = root2["__core-js_shared__"];
      module2.exports = coreJsData;
    }
  });

  // node_modules/lodash/_isMasked.js
  var require_isMasked = __commonJS({
    "node_modules/lodash/_isMasked.js"(exports2, module2) {
      var coreJsData = require_coreJsData();
      var maskSrcKey = function() {
        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
        return uid ? "Symbol(src)_1." + uid : "";
      }();
      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }
      module2.exports = isMasked;
    }
  });

  // node_modules/lodash/_toSource.js
  var require_toSource = __commonJS({
    "node_modules/lodash/_toSource.js"(exports2, module2) {
      var funcProto = Function.prototype;
      var funcToString = funcProto.toString;
      function toSource(func) {
        if (func != null) {
          try {
            return funcToString.call(func);
          } catch (e) {
          }
          try {
            return func + "";
          } catch (e) {
          }
        }
        return "";
      }
      module2.exports = toSource;
    }
  });

  // node_modules/lodash/_baseIsNative.js
  var require_baseIsNative = __commonJS({
    "node_modules/lodash/_baseIsNative.js"(exports2, module2) {
      var isFunction3 = require_isFunction();
      var isMasked = require_isMasked();
      var isObject2 = require_isObject();
      var toSource = require_toSource();
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var funcProto = Function.prototype;
      var objectProto = Object.prototype;
      var funcToString = funcProto.toString;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      var reIsNative = RegExp(
        "^" + funcToString.call(hasOwnProperty9).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
      );
      function baseIsNative(value2) {
        if (!isObject2(value2) || isMasked(value2)) {
          return false;
        }
        var pattern = isFunction3(value2) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value2));
      }
      module2.exports = baseIsNative;
    }
  });

  // node_modules/lodash/_getValue.js
  var require_getValue = __commonJS({
    "node_modules/lodash/_getValue.js"(exports2, module2) {
      function getValue(object, key2) {
        return object == null ? void 0 : object[key2];
      }
      module2.exports = getValue;
    }
  });

  // node_modules/lodash/_getNative.js
  var require_getNative = __commonJS({
    "node_modules/lodash/_getNative.js"(exports2, module2) {
      var baseIsNative = require_baseIsNative();
      var getValue = require_getValue();
      function getNative(object, key2) {
        var value2 = getValue(object, key2);
        return baseIsNative(value2) ? value2 : void 0;
      }
      module2.exports = getNative;
    }
  });

  // node_modules/lodash/_Map.js
  var require_Map = __commonJS({
    "node_modules/lodash/_Map.js"(exports2, module2) {
      var getNative = require_getNative();
      var root2 = require_root();
      var Map2 = getNative(root2, "Map");
      module2.exports = Map2;
    }
  });

  // node_modules/lodash/_nativeCreate.js
  var require_nativeCreate = __commonJS({
    "node_modules/lodash/_nativeCreate.js"(exports2, module2) {
      var getNative = require_getNative();
      var nativeCreate = getNative(Object, "create");
      module2.exports = nativeCreate;
    }
  });

  // node_modules/lodash/_hashClear.js
  var require_hashClear = __commonJS({
    "node_modules/lodash/_hashClear.js"(exports2, module2) {
      var nativeCreate = require_nativeCreate();
      function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
      }
      module2.exports = hashClear;
    }
  });

  // node_modules/lodash/_hashDelete.js
  var require_hashDelete = __commonJS({
    "node_modules/lodash/_hashDelete.js"(exports2, module2) {
      function hashDelete(key2) {
        var result2 = this.has(key2) && delete this.__data__[key2];
        this.size -= result2 ? 1 : 0;
        return result2;
      }
      module2.exports = hashDelete;
    }
  });

  // node_modules/lodash/_hashGet.js
  var require_hashGet = __commonJS({
    "node_modules/lodash/_hashGet.js"(exports2, module2) {
      var nativeCreate = require_nativeCreate();
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function hashGet(key2) {
        var data2 = this.__data__;
        if (nativeCreate) {
          var result2 = data2[key2];
          return result2 === HASH_UNDEFINED ? void 0 : result2;
        }
        return hasOwnProperty9.call(data2, key2) ? data2[key2] : void 0;
      }
      module2.exports = hashGet;
    }
  });

  // node_modules/lodash/_hashHas.js
  var require_hashHas = __commonJS({
    "node_modules/lodash/_hashHas.js"(exports2, module2) {
      var nativeCreate = require_nativeCreate();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function hashHas(key2) {
        var data2 = this.__data__;
        return nativeCreate ? data2[key2] !== void 0 : hasOwnProperty9.call(data2, key2);
      }
      module2.exports = hashHas;
    }
  });

  // node_modules/lodash/_hashSet.js
  var require_hashSet = __commonJS({
    "node_modules/lodash/_hashSet.js"(exports2, module2) {
      var nativeCreate = require_nativeCreate();
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      function hashSet(key2, value2) {
        var data2 = this.__data__;
        this.size += this.has(key2) ? 0 : 1;
        data2[key2] = nativeCreate && value2 === void 0 ? HASH_UNDEFINED : value2;
        return this;
      }
      module2.exports = hashSet;
    }
  });

  // node_modules/lodash/_Hash.js
  var require_Hash = __commonJS({
    "node_modules/lodash/_Hash.js"(exports2, module2) {
      var hashClear = require_hashClear();
      var hashDelete = require_hashDelete();
      var hashGet = require_hashGet();
      var hashHas = require_hashHas();
      var hashSet = require_hashSet();
      function Hash(entries) {
        var index2 = -1, length2 = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length2) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      Hash.prototype.clear = hashClear;
      Hash.prototype["delete"] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;
      module2.exports = Hash;
    }
  });

  // node_modules/lodash/_mapCacheClear.js
  var require_mapCacheClear = __commonJS({
    "node_modules/lodash/_mapCacheClear.js"(exports2, module2) {
      var Hash = require_Hash();
      var ListCache = require_ListCache();
      var Map2 = require_Map();
      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          "hash": new Hash(),
          "map": new (Map2 || ListCache)(),
          "string": new Hash()
        };
      }
      module2.exports = mapCacheClear;
    }
  });

  // node_modules/lodash/_isKeyable.js
  var require_isKeyable = __commonJS({
    "node_modules/lodash/_isKeyable.js"(exports2, module2) {
      function isKeyable(value2) {
        var type = typeof value2;
        return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value2 !== "__proto__" : value2 === null;
      }
      module2.exports = isKeyable;
    }
  });

  // node_modules/lodash/_getMapData.js
  var require_getMapData = __commonJS({
    "node_modules/lodash/_getMapData.js"(exports2, module2) {
      var isKeyable = require_isKeyable();
      function getMapData(map, key2) {
        var data2 = map.__data__;
        return isKeyable(key2) ? data2[typeof key2 == "string" ? "string" : "hash"] : data2.map;
      }
      module2.exports = getMapData;
    }
  });

  // node_modules/lodash/_mapCacheDelete.js
  var require_mapCacheDelete = __commonJS({
    "node_modules/lodash/_mapCacheDelete.js"(exports2, module2) {
      var getMapData = require_getMapData();
      function mapCacheDelete(key2) {
        var result2 = getMapData(this, key2)["delete"](key2);
        this.size -= result2 ? 1 : 0;
        return result2;
      }
      module2.exports = mapCacheDelete;
    }
  });

  // node_modules/lodash/_mapCacheGet.js
  var require_mapCacheGet = __commonJS({
    "node_modules/lodash/_mapCacheGet.js"(exports2, module2) {
      var getMapData = require_getMapData();
      function mapCacheGet(key2) {
        return getMapData(this, key2).get(key2);
      }
      module2.exports = mapCacheGet;
    }
  });

  // node_modules/lodash/_mapCacheHas.js
  var require_mapCacheHas = __commonJS({
    "node_modules/lodash/_mapCacheHas.js"(exports2, module2) {
      var getMapData = require_getMapData();
      function mapCacheHas(key2) {
        return getMapData(this, key2).has(key2);
      }
      module2.exports = mapCacheHas;
    }
  });

  // node_modules/lodash/_mapCacheSet.js
  var require_mapCacheSet = __commonJS({
    "node_modules/lodash/_mapCacheSet.js"(exports2, module2) {
      var getMapData = require_getMapData();
      function mapCacheSet(key2, value2) {
        var data2 = getMapData(this, key2), size2 = data2.size;
        data2.set(key2, value2);
        this.size += data2.size == size2 ? 0 : 1;
        return this;
      }
      module2.exports = mapCacheSet;
    }
  });

  // node_modules/lodash/_MapCache.js
  var require_MapCache = __commonJS({
    "node_modules/lodash/_MapCache.js"(exports2, module2) {
      var mapCacheClear = require_mapCacheClear();
      var mapCacheDelete = require_mapCacheDelete();
      var mapCacheGet = require_mapCacheGet();
      var mapCacheHas = require_mapCacheHas();
      var mapCacheSet = require_mapCacheSet();
      function MapCache(entries) {
        var index2 = -1, length2 = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length2) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype["delete"] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;
      module2.exports = MapCache;
    }
  });

  // node_modules/lodash/_stackSet.js
  var require_stackSet = __commonJS({
    "node_modules/lodash/_stackSet.js"(exports2, module2) {
      var ListCache = require_ListCache();
      var Map2 = require_Map();
      var MapCache = require_MapCache();
      var LARGE_ARRAY_SIZE = 200;
      function stackSet(key2, value2) {
        var data2 = this.__data__;
        if (data2 instanceof ListCache) {
          var pairs = data2.__data__;
          if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([key2, value2]);
            this.size = ++data2.size;
            return this;
          }
          data2 = this.__data__ = new MapCache(pairs);
        }
        data2.set(key2, value2);
        this.size = data2.size;
        return this;
      }
      module2.exports = stackSet;
    }
  });

  // node_modules/lodash/_Stack.js
  var require_Stack = __commonJS({
    "node_modules/lodash/_Stack.js"(exports2, module2) {
      var ListCache = require_ListCache();
      var stackClear = require_stackClear();
      var stackDelete = require_stackDelete();
      var stackGet = require_stackGet();
      var stackHas = require_stackHas();
      var stackSet = require_stackSet();
      function Stack(entries) {
        var data2 = this.__data__ = new ListCache(entries);
        this.size = data2.size;
      }
      Stack.prototype.clear = stackClear;
      Stack.prototype["delete"] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;
      module2.exports = Stack;
    }
  });

  // node_modules/lodash/_setCacheAdd.js
  var require_setCacheAdd = __commonJS({
    "node_modules/lodash/_setCacheAdd.js"(exports2, module2) {
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      function setCacheAdd(value2) {
        this.__data__.set(value2, HASH_UNDEFINED);
        return this;
      }
      module2.exports = setCacheAdd;
    }
  });

  // node_modules/lodash/_setCacheHas.js
  var require_setCacheHas = __commonJS({
    "node_modules/lodash/_setCacheHas.js"(exports2, module2) {
      function setCacheHas(value2) {
        return this.__data__.has(value2);
      }
      module2.exports = setCacheHas;
    }
  });

  // node_modules/lodash/_SetCache.js
  var require_SetCache = __commonJS({
    "node_modules/lodash/_SetCache.js"(exports2, module2) {
      var MapCache = require_MapCache();
      var setCacheAdd = require_setCacheAdd();
      var setCacheHas = require_setCacheHas();
      function SetCache(values2) {
        var index2 = -1, length2 = values2 == null ? 0 : values2.length;
        this.__data__ = new MapCache();
        while (++index2 < length2) {
          this.add(values2[index2]);
        }
      }
      SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
      SetCache.prototype.has = setCacheHas;
      module2.exports = SetCache;
    }
  });

  // node_modules/lodash/_arraySome.js
  var require_arraySome = __commonJS({
    "node_modules/lodash/_arraySome.js"(exports2, module2) {
      function arraySome(array, predicate) {
        var index2 = -1, length2 = array == null ? 0 : array.length;
        while (++index2 < length2) {
          if (predicate(array[index2], index2, array)) {
            return true;
          }
        }
        return false;
      }
      module2.exports = arraySome;
    }
  });

  // node_modules/lodash/_cacheHas.js
  var require_cacheHas = __commonJS({
    "node_modules/lodash/_cacheHas.js"(exports2, module2) {
      function cacheHas(cache2, key2) {
        return cache2.has(key2);
      }
      module2.exports = cacheHas;
    }
  });

  // node_modules/lodash/_equalArrays.js
  var require_equalArrays = __commonJS({
    "node_modules/lodash/_equalArrays.js"(exports2, module2) {
      var SetCache = require_SetCache();
      var arraySome = require_arraySome();
      var cacheHas = require_cacheHas();
      var COMPARE_PARTIAL_FLAG = 1;
      var COMPARE_UNORDERED_FLAG = 2;
      function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }
        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);
        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }
        var index2 = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
        stack.set(array, other);
        stack.set(other, array);
        while (++index2 < arrLength) {
          var arrValue = array[index2], othValue = other[index2];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
          }
          if (compared !== void 0) {
            if (compared) {
              continue;
            }
            result2 = false;
            break;
          }
          if (seen) {
            if (!arraySome(other, function(othValue2, othIndex) {
              if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result2 = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result2 = false;
            break;
          }
        }
        stack["delete"](array);
        stack["delete"](other);
        return result2;
      }
      module2.exports = equalArrays;
    }
  });

  // node_modules/lodash/_Uint8Array.js
  var require_Uint8Array = __commonJS({
    "node_modules/lodash/_Uint8Array.js"(exports2, module2) {
      var root2 = require_root();
      var Uint8Array2 = root2.Uint8Array;
      module2.exports = Uint8Array2;
    }
  });

  // node_modules/lodash/_mapToArray.js
  var require_mapToArray = __commonJS({
    "node_modules/lodash/_mapToArray.js"(exports2, module2) {
      function mapToArray(map) {
        var index2 = -1, result2 = Array(map.size);
        map.forEach(function(value2, key2) {
          result2[++index2] = [key2, value2];
        });
        return result2;
      }
      module2.exports = mapToArray;
    }
  });

  // node_modules/lodash/_setToArray.js
  var require_setToArray = __commonJS({
    "node_modules/lodash/_setToArray.js"(exports2, module2) {
      function setToArray(set3) {
        var index2 = -1, result2 = Array(set3.size);
        set3.forEach(function(value2) {
          result2[++index2] = value2;
        });
        return result2;
      }
      module2.exports = setToArray;
    }
  });

  // node_modules/lodash/_equalByTag.js
  var require_equalByTag = __commonJS({
    "node_modules/lodash/_equalByTag.js"(exports2, module2) {
      var Symbol2 = require_Symbol();
      var Uint8Array2 = require_Uint8Array();
      var eq = require_eq();
      var equalArrays = require_equalArrays();
      var mapToArray = require_mapToArray();
      var setToArray = require_setToArray();
      var COMPARE_PARTIAL_FLAG = 1;
      var COMPARE_UNORDERED_FLAG = 2;
      var boolTag = "[object Boolean]";
      var dateTag = "[object Date]";
      var errorTag = "[object Error]";
      var mapTag = "[object Map]";
      var numberTag = "[object Number]";
      var regexpTag = "[object RegExp]";
      var setTag = "[object Set]";
      var stringTag = "[object String]";
      var symbolTag = "[object Symbol]";
      var arrayBufferTag = "[object ArrayBuffer]";
      var dataViewTag = "[object DataView]";
      var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
      var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
      function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }
            object = object.buffer;
            other = other.buffer;
          case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
              return false;
            }
            return true;
          case boolTag:
          case dateTag:
          case numberTag:
            return eq(+object, +other);
          case errorTag:
            return object.name == other.name && object.message == other.message;
          case regexpTag:
          case stringTag:
            return object == other + "";
          case mapTag:
            var convert = mapToArray;
          case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) {
              return false;
            }
            var stacked = stack.get(object);
            if (stacked) {
              return stacked == other;
            }
            bitmask |= COMPARE_UNORDERED_FLAG;
            stack.set(object, other);
            var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack["delete"](object);
            return result2;
          case symbolTag:
            if (symbolValueOf) {
              return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
        }
        return false;
      }
      module2.exports = equalByTag;
    }
  });

  // node_modules/lodash/_arrayPush.js
  var require_arrayPush = __commonJS({
    "node_modules/lodash/_arrayPush.js"(exports2, module2) {
      function arrayPush(array, values2) {
        var index2 = -1, length2 = values2.length, offset = array.length;
        while (++index2 < length2) {
          array[offset + index2] = values2[index2];
        }
        return array;
      }
      module2.exports = arrayPush;
    }
  });

  // node_modules/lodash/isArray.js
  var require_isArray = __commonJS({
    "node_modules/lodash/isArray.js"(exports2, module2) {
      var isArray2 = Array.isArray;
      module2.exports = isArray2;
    }
  });

  // node_modules/lodash/_baseGetAllKeys.js
  var require_baseGetAllKeys = __commonJS({
    "node_modules/lodash/_baseGetAllKeys.js"(exports2, module2) {
      var arrayPush = require_arrayPush();
      var isArray2 = require_isArray();
      function baseGetAllKeys(object, keysFunc, symbolsFunc) {
        var result2 = keysFunc(object);
        return isArray2(object) ? result2 : arrayPush(result2, symbolsFunc(object));
      }
      module2.exports = baseGetAllKeys;
    }
  });

  // node_modules/lodash/_arrayFilter.js
  var require_arrayFilter = __commonJS({
    "node_modules/lodash/_arrayFilter.js"(exports2, module2) {
      function arrayFilter(array, predicate) {
        var index2 = -1, length2 = array == null ? 0 : array.length, resIndex = 0, result2 = [];
        while (++index2 < length2) {
          var value2 = array[index2];
          if (predicate(value2, index2, array)) {
            result2[resIndex++] = value2;
          }
        }
        return result2;
      }
      module2.exports = arrayFilter;
    }
  });

  // node_modules/lodash/stubArray.js
  var require_stubArray = __commonJS({
    "node_modules/lodash/stubArray.js"(exports2, module2) {
      function stubArray() {
        return [];
      }
      module2.exports = stubArray;
    }
  });

  // node_modules/lodash/_getSymbols.js
  var require_getSymbols = __commonJS({
    "node_modules/lodash/_getSymbols.js"(exports2, module2) {
      var arrayFilter = require_arrayFilter();
      var stubArray = require_stubArray();
      var objectProto = Object.prototype;
      var propertyIsEnumerable = objectProto.propertyIsEnumerable;
      var nativeGetSymbols = Object.getOwnPropertySymbols;
      var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
        if (object == null) {
          return [];
        }
        object = Object(object);
        return arrayFilter(nativeGetSymbols(object), function(symbol) {
          return propertyIsEnumerable.call(object, symbol);
        });
      };
      module2.exports = getSymbols;
    }
  });

  // node_modules/lodash/_baseTimes.js
  var require_baseTimes = __commonJS({
    "node_modules/lodash/_baseTimes.js"(exports2, module2) {
      function baseTimes(n, iteratee) {
        var index2 = -1, result2 = Array(n);
        while (++index2 < n) {
          result2[index2] = iteratee(index2);
        }
        return result2;
      }
      module2.exports = baseTimes;
    }
  });

  // node_modules/lodash/isObjectLike.js
  var require_isObjectLike = __commonJS({
    "node_modules/lodash/isObjectLike.js"(exports2, module2) {
      function isObjectLike2(value2) {
        return value2 != null && typeof value2 == "object";
      }
      module2.exports = isObjectLike2;
    }
  });

  // node_modules/lodash/_baseIsArguments.js
  var require_baseIsArguments = __commonJS({
    "node_modules/lodash/_baseIsArguments.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var isObjectLike2 = require_isObjectLike();
      var argsTag = "[object Arguments]";
      function baseIsArguments(value2) {
        return isObjectLike2(value2) && baseGetTag(value2) == argsTag;
      }
      module2.exports = baseIsArguments;
    }
  });

  // node_modules/lodash/isArguments.js
  var require_isArguments = __commonJS({
    "node_modules/lodash/isArguments.js"(exports2, module2) {
      var baseIsArguments = require_baseIsArguments();
      var isObjectLike2 = require_isObjectLike();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      var propertyIsEnumerable = objectProto.propertyIsEnumerable;
      var isArguments = baseIsArguments(function() {
        return arguments;
      }()) ? baseIsArguments : function(value2) {
        return isObjectLike2(value2) && hasOwnProperty9.call(value2, "callee") && !propertyIsEnumerable.call(value2, "callee");
      };
      module2.exports = isArguments;
    }
  });

  // node_modules/lodash/stubFalse.js
  var require_stubFalse = __commonJS({
    "node_modules/lodash/stubFalse.js"(exports2, module2) {
      function stubFalse() {
        return false;
      }
      module2.exports = stubFalse;
    }
  });

  // node_modules/lodash/isBuffer.js
  var require_isBuffer = __commonJS({
    "node_modules/lodash/isBuffer.js"(exports2, module2) {
      var root2 = require_root();
      var stubFalse = require_stubFalse();
      var freeExports = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var Buffer2 = moduleExports ? root2.Buffer : void 0;
      var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
      var isBuffer = nativeIsBuffer || stubFalse;
      module2.exports = isBuffer;
    }
  });

  // node_modules/lodash/_isIndex.js
  var require_isIndex = __commonJS({
    "node_modules/lodash/_isIndex.js"(exports2, module2) {
      var MAX_SAFE_INTEGER = 9007199254740991;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      function isIndex(value2, length2) {
        var type = typeof value2;
        length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
        return !!length2 && (type == "number" || type != "symbol" && reIsUint.test(value2)) && (value2 > -1 && value2 % 1 == 0 && value2 < length2);
      }
      module2.exports = isIndex;
    }
  });

  // node_modules/lodash/isLength.js
  var require_isLength = __commonJS({
    "node_modules/lodash/isLength.js"(exports2, module2) {
      var MAX_SAFE_INTEGER = 9007199254740991;
      function isLength(value2) {
        return typeof value2 == "number" && value2 > -1 && value2 % 1 == 0 && value2 <= MAX_SAFE_INTEGER;
      }
      module2.exports = isLength;
    }
  });

  // node_modules/lodash/_baseIsTypedArray.js
  var require_baseIsTypedArray = __commonJS({
    "node_modules/lodash/_baseIsTypedArray.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var isLength = require_isLength();
      var isObjectLike2 = require_isObjectLike();
      var argsTag = "[object Arguments]";
      var arrayTag = "[object Array]";
      var boolTag = "[object Boolean]";
      var dateTag = "[object Date]";
      var errorTag = "[object Error]";
      var funcTag = "[object Function]";
      var mapTag = "[object Map]";
      var numberTag = "[object Number]";
      var objectTag = "[object Object]";
      var regexpTag = "[object RegExp]";
      var setTag = "[object Set]";
      var stringTag = "[object String]";
      var weakMapTag = "[object WeakMap]";
      var arrayBufferTag = "[object ArrayBuffer]";
      var dataViewTag = "[object DataView]";
      var float32Tag = "[object Float32Array]";
      var float64Tag = "[object Float64Array]";
      var int8Tag = "[object Int8Array]";
      var int16Tag = "[object Int16Array]";
      var int32Tag = "[object Int32Array]";
      var uint8Tag = "[object Uint8Array]";
      var uint8ClampedTag = "[object Uint8ClampedArray]";
      var uint16Tag = "[object Uint16Array]";
      var uint32Tag = "[object Uint32Array]";
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
      function baseIsTypedArray(value2) {
        return isObjectLike2(value2) && isLength(value2.length) && !!typedArrayTags[baseGetTag(value2)];
      }
      module2.exports = baseIsTypedArray;
    }
  });

  // node_modules/lodash/_baseUnary.js
  var require_baseUnary = __commonJS({
    "node_modules/lodash/_baseUnary.js"(exports2, module2) {
      function baseUnary(func) {
        return function(value2) {
          return func(value2);
        };
      }
      module2.exports = baseUnary;
    }
  });

  // node_modules/lodash/_nodeUtil.js
  var require_nodeUtil = __commonJS({
    "node_modules/lodash/_nodeUtil.js"(exports2, module2) {
      var freeGlobal = require_freeGlobal();
      var freeExports = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal.process;
      var nodeUtil = function() {
        try {
          var types = freeModule && freeModule.require && freeModule.require("util").types;
          if (types) {
            return types;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {
        }
      }();
      module2.exports = nodeUtil;
    }
  });

  // node_modules/lodash/isTypedArray.js
  var require_isTypedArray = __commonJS({
    "node_modules/lodash/isTypedArray.js"(exports2, module2) {
      var baseIsTypedArray = require_baseIsTypedArray();
      var baseUnary = require_baseUnary();
      var nodeUtil = require_nodeUtil();
      var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
      var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
      module2.exports = isTypedArray;
    }
  });

  // node_modules/lodash/_arrayLikeKeys.js
  var require_arrayLikeKeys = __commonJS({
    "node_modules/lodash/_arrayLikeKeys.js"(exports2, module2) {
      var baseTimes = require_baseTimes();
      var isArguments = require_isArguments();
      var isArray2 = require_isArray();
      var isBuffer = require_isBuffer();
      var isIndex = require_isIndex();
      var isTypedArray = require_isTypedArray();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function arrayLikeKeys(value2, inherited) {
        var isArr = isArray2(value2), isArg = !isArr && isArguments(value2), isBuff = !isArr && !isArg && isBuffer(value2), isType = !isArr && !isArg && !isBuff && isTypedArray(value2), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value2.length, String) : [], length2 = result2.length;
        for (var key2 in value2) {
          if ((inherited || hasOwnProperty9.call(value2, key2)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
          (key2 == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
          isBuff && (key2 == "offset" || key2 == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
          isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || // Skip index properties.
          isIndex(key2, length2)))) {
            result2.push(key2);
          }
        }
        return result2;
      }
      module2.exports = arrayLikeKeys;
    }
  });

  // node_modules/lodash/_isPrototype.js
  var require_isPrototype = __commonJS({
    "node_modules/lodash/_isPrototype.js"(exports2, module2) {
      var objectProto = Object.prototype;
      function isPrototype(value2) {
        var Ctor = value2 && value2.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
        return value2 === proto;
      }
      module2.exports = isPrototype;
    }
  });

  // node_modules/lodash/_overArg.js
  var require_overArg = __commonJS({
    "node_modules/lodash/_overArg.js"(exports2, module2) {
      function overArg(func, transform3) {
        return function(arg) {
          return func(transform3(arg));
        };
      }
      module2.exports = overArg;
    }
  });

  // node_modules/lodash/_nativeKeys.js
  var require_nativeKeys = __commonJS({
    "node_modules/lodash/_nativeKeys.js"(exports2, module2) {
      var overArg = require_overArg();
      var nativeKeys = overArg(Object.keys, Object);
      module2.exports = nativeKeys;
    }
  });

  // node_modules/lodash/_baseKeys.js
  var require_baseKeys = __commonJS({
    "node_modules/lodash/_baseKeys.js"(exports2, module2) {
      var isPrototype = require_isPrototype();
      var nativeKeys = require_nativeKeys();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function baseKeys(object) {
        if (!isPrototype(object)) {
          return nativeKeys(object);
        }
        var result2 = [];
        for (var key2 in Object(object)) {
          if (hasOwnProperty9.call(object, key2) && key2 != "constructor") {
            result2.push(key2);
          }
        }
        return result2;
      }
      module2.exports = baseKeys;
    }
  });

  // node_modules/lodash/isArrayLike.js
  var require_isArrayLike = __commonJS({
    "node_modules/lodash/isArrayLike.js"(exports2, module2) {
      var isFunction3 = require_isFunction();
      var isLength = require_isLength();
      function isArrayLike(value2) {
        return value2 != null && isLength(value2.length) && !isFunction3(value2);
      }
      module2.exports = isArrayLike;
    }
  });

  // node_modules/lodash/keys.js
  var require_keys = __commonJS({
    "node_modules/lodash/keys.js"(exports2, module2) {
      var arrayLikeKeys = require_arrayLikeKeys();
      var baseKeys = require_baseKeys();
      var isArrayLike = require_isArrayLike();
      function keys(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
      }
      module2.exports = keys;
    }
  });

  // node_modules/lodash/_getAllKeys.js
  var require_getAllKeys = __commonJS({
    "node_modules/lodash/_getAllKeys.js"(exports2, module2) {
      var baseGetAllKeys = require_baseGetAllKeys();
      var getSymbols = require_getSymbols();
      var keys = require_keys();
      function getAllKeys(object) {
        return baseGetAllKeys(object, keys, getSymbols);
      }
      module2.exports = getAllKeys;
    }
  });

  // node_modules/lodash/_equalObjects.js
  var require_equalObjects = __commonJS({
    "node_modules/lodash/_equalObjects.js"(exports2, module2) {
      var getAllKeys = require_getAllKeys();
      var COMPARE_PARTIAL_FLAG = 1;
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
        if (objLength != othLength && !isPartial) {
          return false;
        }
        var index2 = objLength;
        while (index2--) {
          var key2 = objProps[index2];
          if (!(isPartial ? key2 in other : hasOwnProperty9.call(other, key2))) {
            return false;
          }
        }
        var objStacked = stack.get(object);
        var othStacked = stack.get(other);
        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }
        var result2 = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;
        while (++index2 < objLength) {
          key2 = objProps[index2];
          var objValue = object[key2], othValue = other[key2];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
          }
          if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result2 = false;
            break;
          }
          skipCtor || (skipCtor = key2 == "constructor");
        }
        if (result2 && !skipCtor) {
          var objCtor = object.constructor, othCtor = other.constructor;
          if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
            result2 = false;
          }
        }
        stack["delete"](object);
        stack["delete"](other);
        return result2;
      }
      module2.exports = equalObjects;
    }
  });

  // node_modules/lodash/_DataView.js
  var require_DataView = __commonJS({
    "node_modules/lodash/_DataView.js"(exports2, module2) {
      var getNative = require_getNative();
      var root2 = require_root();
      var DataView = getNative(root2, "DataView");
      module2.exports = DataView;
    }
  });

  // node_modules/lodash/_Promise.js
  var require_Promise = __commonJS({
    "node_modules/lodash/_Promise.js"(exports2, module2) {
      var getNative = require_getNative();
      var root2 = require_root();
      var Promise3 = getNative(root2, "Promise");
      module2.exports = Promise3;
    }
  });

  // node_modules/lodash/_Set.js
  var require_Set = __commonJS({
    "node_modules/lodash/_Set.js"(exports2, module2) {
      var getNative = require_getNative();
      var root2 = require_root();
      var Set2 = getNative(root2, "Set");
      module2.exports = Set2;
    }
  });

  // node_modules/lodash/_WeakMap.js
  var require_WeakMap = __commonJS({
    "node_modules/lodash/_WeakMap.js"(exports2, module2) {
      var getNative = require_getNative();
      var root2 = require_root();
      var WeakMap2 = getNative(root2, "WeakMap");
      module2.exports = WeakMap2;
    }
  });

  // node_modules/lodash/_getTag.js
  var require_getTag = __commonJS({
    "node_modules/lodash/_getTag.js"(exports2, module2) {
      var DataView = require_DataView();
      var Map2 = require_Map();
      var Promise3 = require_Promise();
      var Set2 = require_Set();
      var WeakMap2 = require_WeakMap();
      var baseGetTag = require_baseGetTag();
      var toSource = require_toSource();
      var mapTag = "[object Map]";
      var objectTag = "[object Object]";
      var promiseTag = "[object Promise]";
      var setTag = "[object Set]";
      var weakMapTag = "[object WeakMap]";
      var dataViewTag = "[object DataView]";
      var dataViewCtorString = toSource(DataView);
      var mapCtorString = toSource(Map2);
      var promiseCtorString = toSource(Promise3);
      var setCtorString = toSource(Set2);
      var weakMapCtorString = toSource(WeakMap2);
      var getTag = baseGetTag;
      if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise3 && getTag(Promise3.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
        getTag = function(value2) {
          var result2 = baseGetTag(value2), Ctor = result2 == objectTag ? value2.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString:
                return dataViewTag;
              case mapCtorString:
                return mapTag;
              case promiseCtorString:
                return promiseTag;
              case setCtorString:
                return setTag;
              case weakMapCtorString:
                return weakMapTag;
            }
          }
          return result2;
        };
      }
      module2.exports = getTag;
    }
  });

  // node_modules/lodash/_baseIsEqualDeep.js
  var require_baseIsEqualDeep = __commonJS({
    "node_modules/lodash/_baseIsEqualDeep.js"(exports2, module2) {
      var Stack = require_Stack();
      var equalArrays = require_equalArrays();
      var equalByTag = require_equalByTag();
      var equalObjects = require_equalObjects();
      var getTag = require_getTag();
      var isArray2 = require_isArray();
      var isBuffer = require_isBuffer();
      var isTypedArray = require_isTypedArray();
      var COMPARE_PARTIAL_FLAG = 1;
      var argsTag = "[object Arguments]";
      var arrayTag = "[object Array]";
      var objectTag = "[object Object]";
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray2(object), othIsArr = isArray2(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
        objTag = objTag == argsTag ? objectTag : objTag;
        othTag = othTag == argsTag ? objectTag : othTag;
        var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
        if (isSameTag && isBuffer(object)) {
          if (!isBuffer(other)) {
            return false;
          }
          objIsArr = true;
          objIsObj = false;
        }
        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack());
          return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }
        if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
          var objIsWrapped = objIsObj && hasOwnProperty9.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty9.call(other, "__wrapped__");
          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }
        if (!isSameTag) {
          return false;
        }
        stack || (stack = new Stack());
        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
      }
      module2.exports = baseIsEqualDeep;
    }
  });

  // node_modules/lodash/_baseIsEqual.js
  var require_baseIsEqual = __commonJS({
    "node_modules/lodash/_baseIsEqual.js"(exports2, module2) {
      var baseIsEqualDeep = require_baseIsEqualDeep();
      var isObjectLike2 = require_isObjectLike();
      function baseIsEqual(value2, other, bitmask, customizer, stack) {
        if (value2 === other) {
          return true;
        }
        if (value2 == null || other == null || !isObjectLike2(value2) && !isObjectLike2(other)) {
          return value2 !== value2 && other !== other;
        }
        return baseIsEqualDeep(value2, other, bitmask, customizer, baseIsEqual, stack);
      }
      module2.exports = baseIsEqual;
    }
  });

  // node_modules/lodash/_baseIsMatch.js
  var require_baseIsMatch = __commonJS({
    "node_modules/lodash/_baseIsMatch.js"(exports2, module2) {
      var Stack = require_Stack();
      var baseIsEqual = require_baseIsEqual();
      var COMPARE_PARTIAL_FLAG = 1;
      var COMPARE_UNORDERED_FLAG = 2;
      function baseIsMatch(object, source, matchData, customizer) {
        var index2 = matchData.length, length2 = index2, noCustomizer = !customizer;
        if (object == null) {
          return !length2;
        }
        object = Object(object);
        while (index2--) {
          var data2 = matchData[index2];
          if (noCustomizer && data2[2] ? data2[1] !== object[data2[0]] : !(data2[0] in object)) {
            return false;
          }
        }
        while (++index2 < length2) {
          data2 = matchData[index2];
          var key2 = data2[0], objValue = object[key2], srcValue = data2[1];
          if (noCustomizer && data2[2]) {
            if (objValue === void 0 && !(key2 in object)) {
              return false;
            }
          } else {
            var stack = new Stack();
            if (customizer) {
              var result2 = customizer(objValue, srcValue, key2, object, source, stack);
            }
            if (!(result2 === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
              return false;
            }
          }
        }
        return true;
      }
      module2.exports = baseIsMatch;
    }
  });

  // node_modules/lodash/_isStrictComparable.js
  var require_isStrictComparable = __commonJS({
    "node_modules/lodash/_isStrictComparable.js"(exports2, module2) {
      var isObject2 = require_isObject();
      function isStrictComparable(value2) {
        return value2 === value2 && !isObject2(value2);
      }
      module2.exports = isStrictComparable;
    }
  });

  // node_modules/lodash/_getMatchData.js
  var require_getMatchData = __commonJS({
    "node_modules/lodash/_getMatchData.js"(exports2, module2) {
      var isStrictComparable = require_isStrictComparable();
      var keys = require_keys();
      function getMatchData(object) {
        var result2 = keys(object), length2 = result2.length;
        while (length2--) {
          var key2 = result2[length2], value2 = object[key2];
          result2[length2] = [key2, value2, isStrictComparable(value2)];
        }
        return result2;
      }
      module2.exports = getMatchData;
    }
  });

  // node_modules/lodash/_matchesStrictComparable.js
  var require_matchesStrictComparable = __commonJS({
    "node_modules/lodash/_matchesStrictComparable.js"(exports2, module2) {
      function matchesStrictComparable(key2, srcValue) {
        return function(object) {
          if (object == null) {
            return false;
          }
          return object[key2] === srcValue && (srcValue !== void 0 || key2 in Object(object));
        };
      }
      module2.exports = matchesStrictComparable;
    }
  });

  // node_modules/lodash/_baseMatches.js
  var require_baseMatches = __commonJS({
    "node_modules/lodash/_baseMatches.js"(exports2, module2) {
      var baseIsMatch = require_baseIsMatch();
      var getMatchData = require_getMatchData();
      var matchesStrictComparable = require_matchesStrictComparable();
      function baseMatches(source) {
        var matchData = getMatchData(source);
        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable(matchData[0][0], matchData[0][1]);
        }
        return function(object) {
          return object === source || baseIsMatch(object, source, matchData);
        };
      }
      module2.exports = baseMatches;
    }
  });

  // node_modules/lodash/isSymbol.js
  var require_isSymbol = __commonJS({
    "node_modules/lodash/isSymbol.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var isObjectLike2 = require_isObjectLike();
      var symbolTag = "[object Symbol]";
      function isSymbol(value2) {
        return typeof value2 == "symbol" || isObjectLike2(value2) && baseGetTag(value2) == symbolTag;
      }
      module2.exports = isSymbol;
    }
  });

  // node_modules/lodash/_isKey.js
  var require_isKey = __commonJS({
    "node_modules/lodash/_isKey.js"(exports2, module2) {
      var isArray2 = require_isArray();
      var isSymbol = require_isSymbol();
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
      var reIsPlainProp = /^\w*$/;
      function isKey(value2, object) {
        if (isArray2(value2)) {
          return false;
        }
        var type = typeof value2;
        if (type == "number" || type == "symbol" || type == "boolean" || value2 == null || isSymbol(value2)) {
          return true;
        }
        return reIsPlainProp.test(value2) || !reIsDeepProp.test(value2) || object != null && value2 in Object(object);
      }
      module2.exports = isKey;
    }
  });

  // node_modules/lodash/memoize.js
  var require_memoize = __commonJS({
    "node_modules/lodash/memoize.js"(exports2, module2) {
      var MapCache = require_MapCache();
      var FUNC_ERROR_TEXT = "Expected a function";
      function memoize2(func, resolver) {
        if (typeof func != "function" || resolver != null && typeof resolver != "function") {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        var memoized = function() {
          var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache2 = memoized.cache;
          if (cache2.has(key2)) {
            return cache2.get(key2);
          }
          var result2 = func.apply(this, args);
          memoized.cache = cache2.set(key2, result2) || cache2;
          return result2;
        };
        memoized.cache = new (memoize2.Cache || MapCache)();
        return memoized;
      }
      memoize2.Cache = MapCache;
      module2.exports = memoize2;
    }
  });

  // node_modules/lodash/_memoizeCapped.js
  var require_memoizeCapped = __commonJS({
    "node_modules/lodash/_memoizeCapped.js"(exports2, module2) {
      var memoize2 = require_memoize();
      var MAX_MEMOIZE_SIZE = 500;
      function memoizeCapped(func) {
        var result2 = memoize2(func, function(key2) {
          if (cache2.size === MAX_MEMOIZE_SIZE) {
            cache2.clear();
          }
          return key2;
        });
        var cache2 = result2.cache;
        return result2;
      }
      module2.exports = memoizeCapped;
    }
  });

  // node_modules/lodash/_stringToPath.js
  var require_stringToPath = __commonJS({
    "node_modules/lodash/_stringToPath.js"(exports2, module2) {
      var memoizeCapped = require_memoizeCapped();
      var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reEscapeChar = /\\(\\)?/g;
      var stringToPath = memoizeCapped(function(string) {
        var result2 = [];
        if (string.charCodeAt(0) === 46) {
          result2.push("");
        }
        string.replace(rePropName, function(match, number, quote, subString) {
          result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
        });
        return result2;
      });
      module2.exports = stringToPath;
    }
  });

  // node_modules/lodash/_arrayMap.js
  var require_arrayMap = __commonJS({
    "node_modules/lodash/_arrayMap.js"(exports2, module2) {
      function arrayMap(array, iteratee) {
        var index2 = -1, length2 = array == null ? 0 : array.length, result2 = Array(length2);
        while (++index2 < length2) {
          result2[index2] = iteratee(array[index2], index2, array);
        }
        return result2;
      }
      module2.exports = arrayMap;
    }
  });

  // node_modules/lodash/_baseToString.js
  var require_baseToString = __commonJS({
    "node_modules/lodash/_baseToString.js"(exports2, module2) {
      var Symbol2 = require_Symbol();
      var arrayMap = require_arrayMap();
      var isArray2 = require_isArray();
      var isSymbol = require_isSymbol();
      var INFINITY = 1 / 0;
      var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
      var symbolToString = symbolProto ? symbolProto.toString : void 0;
      function baseToString(value2) {
        if (typeof value2 == "string") {
          return value2;
        }
        if (isArray2(value2)) {
          return arrayMap(value2, baseToString) + "";
        }
        if (isSymbol(value2)) {
          return symbolToString ? symbolToString.call(value2) : "";
        }
        var result2 = value2 + "";
        return result2 == "0" && 1 / value2 == -INFINITY ? "-0" : result2;
      }
      module2.exports = baseToString;
    }
  });

  // node_modules/lodash/toString.js
  var require_toString = __commonJS({
    "node_modules/lodash/toString.js"(exports2, module2) {
      var baseToString = require_baseToString();
      function toString3(value2) {
        return value2 == null ? "" : baseToString(value2);
      }
      module2.exports = toString3;
    }
  });

  // node_modules/lodash/_castPath.js
  var require_castPath = __commonJS({
    "node_modules/lodash/_castPath.js"(exports2, module2) {
      var isArray2 = require_isArray();
      var isKey = require_isKey();
      var stringToPath = require_stringToPath();
      var toString3 = require_toString();
      function castPath(value2, object) {
        if (isArray2(value2)) {
          return value2;
        }
        return isKey(value2, object) ? [value2] : stringToPath(toString3(value2));
      }
      module2.exports = castPath;
    }
  });

  // node_modules/lodash/_toKey.js
  var require_toKey = __commonJS({
    "node_modules/lodash/_toKey.js"(exports2, module2) {
      var isSymbol = require_isSymbol();
      var INFINITY = 1 / 0;
      function toKey(value2) {
        if (typeof value2 == "string" || isSymbol(value2)) {
          return value2;
        }
        var result2 = value2 + "";
        return result2 == "0" && 1 / value2 == -INFINITY ? "-0" : result2;
      }
      module2.exports = toKey;
    }
  });

  // node_modules/lodash/_baseGet.js
  var require_baseGet = __commonJS({
    "node_modules/lodash/_baseGet.js"(exports2, module2) {
      var castPath = require_castPath();
      var toKey = require_toKey();
      function baseGet(object, path) {
        path = castPath(path, object);
        var index2 = 0, length2 = path.length;
        while (object != null && index2 < length2) {
          object = object[toKey(path[index2++])];
        }
        return index2 && index2 == length2 ? object : void 0;
      }
      module2.exports = baseGet;
    }
  });

  // node_modules/lodash/get.js
  var require_get = __commonJS({
    "node_modules/lodash/get.js"(exports2, module2) {
      var baseGet = require_baseGet();
      function get8(object, path, defaultValue) {
        var result2 = object == null ? void 0 : baseGet(object, path);
        return result2 === void 0 ? defaultValue : result2;
      }
      module2.exports = get8;
    }
  });

  // node_modules/lodash/_baseHasIn.js
  var require_baseHasIn = __commonJS({
    "node_modules/lodash/_baseHasIn.js"(exports2, module2) {
      function baseHasIn(object, key2) {
        return object != null && key2 in Object(object);
      }
      module2.exports = baseHasIn;
    }
  });

  // node_modules/lodash/_hasPath.js
  var require_hasPath = __commonJS({
    "node_modules/lodash/_hasPath.js"(exports2, module2) {
      var castPath = require_castPath();
      var isArguments = require_isArguments();
      var isArray2 = require_isArray();
      var isIndex = require_isIndex();
      var isLength = require_isLength();
      var toKey = require_toKey();
      function hasPath(object, path, hasFunc) {
        path = castPath(path, object);
        var index2 = -1, length2 = path.length, result2 = false;
        while (++index2 < length2) {
          var key2 = toKey(path[index2]);
          if (!(result2 = object != null && hasFunc(object, key2))) {
            break;
          }
          object = object[key2];
        }
        if (result2 || ++index2 != length2) {
          return result2;
        }
        length2 = object == null ? 0 : object.length;
        return !!length2 && isLength(length2) && isIndex(key2, length2) && (isArray2(object) || isArguments(object));
      }
      module2.exports = hasPath;
    }
  });

  // node_modules/lodash/hasIn.js
  var require_hasIn = __commonJS({
    "node_modules/lodash/hasIn.js"(exports2, module2) {
      var baseHasIn = require_baseHasIn();
      var hasPath = require_hasPath();
      function hasIn(object, path) {
        return object != null && hasPath(object, path, baseHasIn);
      }
      module2.exports = hasIn;
    }
  });

  // node_modules/lodash/_baseMatchesProperty.js
  var require_baseMatchesProperty = __commonJS({
    "node_modules/lodash/_baseMatchesProperty.js"(exports2, module2) {
      var baseIsEqual = require_baseIsEqual();
      var get8 = require_get();
      var hasIn = require_hasIn();
      var isKey = require_isKey();
      var isStrictComparable = require_isStrictComparable();
      var matchesStrictComparable = require_matchesStrictComparable();
      var toKey = require_toKey();
      var COMPARE_PARTIAL_FLAG = 1;
      var COMPARE_UNORDERED_FLAG = 2;
      function baseMatchesProperty(path, srcValue) {
        if (isKey(path) && isStrictComparable(srcValue)) {
          return matchesStrictComparable(toKey(path), srcValue);
        }
        return function(object) {
          var objValue = get8(object, path);
          return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
        };
      }
      module2.exports = baseMatchesProperty;
    }
  });

  // node_modules/lodash/identity.js
  var require_identity = __commonJS({
    "node_modules/lodash/identity.js"(exports2, module2) {
      function identity3(value2) {
        return value2;
      }
      module2.exports = identity3;
    }
  });

  // node_modules/lodash/_baseProperty.js
  var require_baseProperty = __commonJS({
    "node_modules/lodash/_baseProperty.js"(exports2, module2) {
      function baseProperty(key2) {
        return function(object) {
          return object == null ? void 0 : object[key2];
        };
      }
      module2.exports = baseProperty;
    }
  });

  // node_modules/lodash/_basePropertyDeep.js
  var require_basePropertyDeep = __commonJS({
    "node_modules/lodash/_basePropertyDeep.js"(exports2, module2) {
      var baseGet = require_baseGet();
      function basePropertyDeep(path) {
        return function(object) {
          return baseGet(object, path);
        };
      }
      module2.exports = basePropertyDeep;
    }
  });

  // node_modules/lodash/property.js
  var require_property = __commonJS({
    "node_modules/lodash/property.js"(exports2, module2) {
      var baseProperty = require_baseProperty();
      var basePropertyDeep = require_basePropertyDeep();
      var isKey = require_isKey();
      var toKey = require_toKey();
      function property2(path) {
        return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
      }
      module2.exports = property2;
    }
  });

  // node_modules/lodash/_baseIteratee.js
  var require_baseIteratee = __commonJS({
    "node_modules/lodash/_baseIteratee.js"(exports2, module2) {
      var baseMatches = require_baseMatches();
      var baseMatchesProperty = require_baseMatchesProperty();
      var identity3 = require_identity();
      var isArray2 = require_isArray();
      var property2 = require_property();
      function baseIteratee(value2) {
        if (typeof value2 == "function") {
          return value2;
        }
        if (value2 == null) {
          return identity3;
        }
        if (typeof value2 == "object") {
          return isArray2(value2) ? baseMatchesProperty(value2[0], value2[1]) : baseMatches(value2);
        }
        return property2(value2);
      }
      module2.exports = baseIteratee;
    }
  });

  // node_modules/lodash/_trimmedEndIndex.js
  var require_trimmedEndIndex = __commonJS({
    "node_modules/lodash/_trimmedEndIndex.js"(exports2, module2) {
      var reWhitespace = /\s/;
      function trimmedEndIndex(string) {
        var index2 = string.length;
        while (index2-- && reWhitespace.test(string.charAt(index2))) {
        }
        return index2;
      }
      module2.exports = trimmedEndIndex;
    }
  });

  // node_modules/lodash/_baseTrim.js
  var require_baseTrim = __commonJS({
    "node_modules/lodash/_baseTrim.js"(exports2, module2) {
      var trimmedEndIndex = require_trimmedEndIndex();
      var reTrimStart = /^\s+/;
      function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
      }
      module2.exports = baseTrim;
    }
  });

  // node_modules/lodash/toNumber.js
  var require_toNumber = __commonJS({
    "node_modules/lodash/toNumber.js"(exports2, module2) {
      var baseTrim = require_baseTrim();
      var isObject2 = require_isObject();
      var isSymbol = require_isSymbol();
      var NAN = 0 / 0;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsOctal = /^0o[0-7]+$/i;
      var freeParseInt = parseInt;
      function toNumber(value2) {
        if (typeof value2 == "number") {
          return value2;
        }
        if (isSymbol(value2)) {
          return NAN;
        }
        if (isObject2(value2)) {
          var other = typeof value2.valueOf == "function" ? value2.valueOf() : value2;
          value2 = isObject2(other) ? other + "" : other;
        }
        if (typeof value2 != "string") {
          return value2 === 0 ? value2 : +value2;
        }
        value2 = baseTrim(value2);
        var isBinary = reIsBinary.test(value2);
        return isBinary || reIsOctal.test(value2) ? freeParseInt(value2.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value2) ? NAN : +value2;
      }
      module2.exports = toNumber;
    }
  });

  // node_modules/lodash/toFinite.js
  var require_toFinite = __commonJS({
    "node_modules/lodash/toFinite.js"(exports2, module2) {
      var toNumber = require_toNumber();
      var INFINITY = 1 / 0;
      var MAX_INTEGER = 17976931348623157e292;
      function toFinite(value2) {
        if (!value2) {
          return value2 === 0 ? value2 : 0;
        }
        value2 = toNumber(value2);
        if (value2 === INFINITY || value2 === -INFINITY) {
          var sign = value2 < 0 ? -1 : 1;
          return sign * MAX_INTEGER;
        }
        return value2 === value2 ? value2 : 0;
      }
      module2.exports = toFinite;
    }
  });

  // node_modules/lodash/toInteger.js
  var require_toInteger = __commonJS({
    "node_modules/lodash/toInteger.js"(exports2, module2) {
      var toFinite = require_toFinite();
      function toInteger(value2) {
        var result2 = toFinite(value2), remainder = result2 % 1;
        return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
      }
      module2.exports = toInteger;
    }
  });

  // node_modules/lodash/findIndex.js
  var require_findIndex = __commonJS({
    "node_modules/lodash/findIndex.js"(exports2, module2) {
      var baseFindIndex = require_baseFindIndex();
      var baseIteratee = require_baseIteratee();
      var toInteger = require_toInteger();
      var nativeMax = Math.max;
      function findIndex2(array, predicate, fromIndex) {
        var length2 = array == null ? 0 : array.length;
        if (!length2) {
          return -1;
        }
        var index2 = fromIndex == null ? 0 : toInteger(fromIndex);
        if (index2 < 0) {
          index2 = nativeMax(length2 + index2, 0);
        }
        return baseFindIndex(array, baseIteratee(predicate, 3), index2);
      }
      module2.exports = findIndex2;
    }
  });

  // node_modules/core-js/internals/global.js
  var require_global = __commonJS({
    "node_modules/core-js/internals/global.js"(exports2, module2) {
      var check2 = function(it) {
        return it && it.Math == Math && it;
      };
      module2.exports = // eslint-disable-next-line es/no-global-this -- safe
      check2(typeof globalThis == "object" && globalThis) || check2(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
      check2(typeof self == "object" && self) || check2(typeof global == "object" && global) || // eslint-disable-next-line no-new-func -- fallback
      function() {
        return this;
      }() || Function("return this")();
    }
  });

  // node_modules/core-js/internals/fails.js
  var require_fails = __commonJS({
    "node_modules/core-js/internals/fails.js"(exports2, module2) {
      module2.exports = function(exec) {
        try {
          return !!exec();
        } catch (error) {
          return true;
        }
      };
    }
  });

  // node_modules/core-js/internals/descriptors.js
  var require_descriptors = __commonJS({
    "node_modules/core-js/internals/descriptors.js"(exports2, module2) {
      var fails = require_fails();
      module2.exports = !fails(function() {
        return Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1] != 7;
      });
    }
  });

  // node_modules/core-js/internals/function-call.js
  var require_function_call = __commonJS({
    "node_modules/core-js/internals/function-call.js"(exports2, module2) {
      var call = Function.prototype.call;
      module2.exports = call.bind ? call.bind(call) : function() {
        return call.apply(call, arguments);
      };
    }
  });

  // node_modules/core-js/internals/object-property-is-enumerable.js
  var require_object_property_is_enumerable = __commonJS({
    "node_modules/core-js/internals/object-property-is-enumerable.js"(exports2) {
      "use strict";
      var $propertyIsEnumerable = {}.propertyIsEnumerable;
      var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);
      exports2.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
        var descriptor = getOwnPropertyDescriptor(this, V);
        return !!descriptor && descriptor.enumerable;
      } : $propertyIsEnumerable;
    }
  });

  // node_modules/core-js/internals/create-property-descriptor.js
  var require_create_property_descriptor = __commonJS({
    "node_modules/core-js/internals/create-property-descriptor.js"(exports2, module2) {
      module2.exports = function(bitmap, value2) {
        return {
          enumerable: !(bitmap & 1),
          configurable: !(bitmap & 2),
          writable: !(bitmap & 4),
          value: value2
        };
      };
    }
  });

  // node_modules/core-js/internals/function-uncurry-this.js
  var require_function_uncurry_this = __commonJS({
    "node_modules/core-js/internals/function-uncurry-this.js"(exports2, module2) {
      var FunctionPrototype = Function.prototype;
      var bind3 = FunctionPrototype.bind;
      var call = FunctionPrototype.call;
      var callBind = bind3 && bind3.bind(call);
      module2.exports = bind3 ? function(fn) {
        return fn && callBind(call, fn);
      } : function(fn) {
        return fn && function() {
          return call.apply(fn, arguments);
        };
      };
    }
  });

  // node_modules/core-js/internals/classof-raw.js
  var require_classof_raw = __commonJS({
    "node_modules/core-js/internals/classof-raw.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var toString3 = uncurryThis({}.toString);
      var stringSlice = uncurryThis("".slice);
      module2.exports = function(it) {
        return stringSlice(toString3(it), 8, -1);
      };
    }
  });

  // node_modules/core-js/internals/indexed-object.js
  var require_indexed_object = __commonJS({
    "node_modules/core-js/internals/indexed-object.js"(exports2, module2) {
      var global2 = require_global();
      var uncurryThis = require_function_uncurry_this();
      var fails = require_fails();
      var classof = require_classof_raw();
      var Object2 = global2.Object;
      var split = uncurryThis("".split);
      module2.exports = fails(function() {
        return !Object2("z").propertyIsEnumerable(0);
      }) ? function(it) {
        return classof(it) == "String" ? split(it, "") : Object2(it);
      } : Object2;
    }
  });

  // node_modules/core-js/internals/require-object-coercible.js
  var require_require_object_coercible = __commonJS({
    "node_modules/core-js/internals/require-object-coercible.js"(exports2, module2) {
      var global2 = require_global();
      var TypeError2 = global2.TypeError;
      module2.exports = function(it) {
        if (it == void 0)
          throw TypeError2("Can't call method on " + it);
        return it;
      };
    }
  });

  // node_modules/core-js/internals/to-indexed-object.js
  var require_to_indexed_object = __commonJS({
    "node_modules/core-js/internals/to-indexed-object.js"(exports2, module2) {
      var IndexedObject = require_indexed_object();
      var requireObjectCoercible = require_require_object_coercible();
      module2.exports = function(it) {
        return IndexedObject(requireObjectCoercible(it));
      };
    }
  });

  // node_modules/core-js/internals/is-callable.js
  var require_is_callable = __commonJS({
    "node_modules/core-js/internals/is-callable.js"(exports2, module2) {
      module2.exports = function(argument) {
        return typeof argument == "function";
      };
    }
  });

  // node_modules/core-js/internals/is-object.js
  var require_is_object = __commonJS({
    "node_modules/core-js/internals/is-object.js"(exports2, module2) {
      var isCallable = require_is_callable();
      module2.exports = function(it) {
        return typeof it == "object" ? it !== null : isCallable(it);
      };
    }
  });

  // node_modules/core-js/internals/get-built-in.js
  var require_get_built_in = __commonJS({
    "node_modules/core-js/internals/get-built-in.js"(exports2, module2) {
      var global2 = require_global();
      var isCallable = require_is_callable();
      var aFunction = function(argument) {
        return isCallable(argument) ? argument : void 0;
      };
      module2.exports = function(namespace, method) {
        return arguments.length < 2 ? aFunction(global2[namespace]) : global2[namespace] && global2[namespace][method];
      };
    }
  });

  // node_modules/core-js/internals/object-is-prototype-of.js
  var require_object_is_prototype_of = __commonJS({
    "node_modules/core-js/internals/object-is-prototype-of.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      module2.exports = uncurryThis({}.isPrototypeOf);
    }
  });

  // node_modules/core-js/internals/engine-user-agent.js
  var require_engine_user_agent = __commonJS({
    "node_modules/core-js/internals/engine-user-agent.js"(exports2, module2) {
      var getBuiltIn = require_get_built_in();
      module2.exports = getBuiltIn("navigator", "userAgent") || "";
    }
  });

  // node_modules/core-js/internals/engine-v8-version.js
  var require_engine_v8_version = __commonJS({
    "node_modules/core-js/internals/engine-v8-version.js"(exports2, module2) {
      var global2 = require_global();
      var userAgent = require_engine_user_agent();
      var process2 = global2.process;
      var Deno = global2.Deno;
      var versions = process2 && process2.versions || Deno && Deno.version;
      var v8 = versions && versions.v8;
      var match;
      var version2;
      if (v8) {
        match = v8.split(".");
        version2 = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
      }
      if (!version2 && userAgent) {
        match = userAgent.match(/Edge\/(\d+)/);
        if (!match || match[1] >= 74) {
          match = userAgent.match(/Chrome\/(\d+)/);
          if (match)
            version2 = +match[1];
        }
      }
      module2.exports = version2;
    }
  });

  // node_modules/core-js/internals/native-symbol.js
  var require_native_symbol = __commonJS({
    "node_modules/core-js/internals/native-symbol.js"(exports2, module2) {
      var V8_VERSION = require_engine_v8_version();
      var fails = require_fails();
      module2.exports = !!Object.getOwnPropertySymbols && !fails(function() {
        var symbol = Symbol();
        return !String(symbol) || !(Object(symbol) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
        !Symbol.sham && V8_VERSION && V8_VERSION < 41;
      });
    }
  });

  // node_modules/core-js/internals/use-symbol-as-uid.js
  var require_use_symbol_as_uid = __commonJS({
    "node_modules/core-js/internals/use-symbol-as-uid.js"(exports2, module2) {
      var NATIVE_SYMBOL = require_native_symbol();
      module2.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == "symbol";
    }
  });

  // node_modules/core-js/internals/is-symbol.js
  var require_is_symbol = __commonJS({
    "node_modules/core-js/internals/is-symbol.js"(exports2, module2) {
      var global2 = require_global();
      var getBuiltIn = require_get_built_in();
      var isCallable = require_is_callable();
      var isPrototypeOf = require_object_is_prototype_of();
      var USE_SYMBOL_AS_UID = require_use_symbol_as_uid();
      var Object2 = global2.Object;
      module2.exports = USE_SYMBOL_AS_UID ? function(it) {
        return typeof it == "symbol";
      } : function(it) {
        var $Symbol = getBuiltIn("Symbol");
        return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object2(it));
      };
    }
  });

  // node_modules/core-js/internals/try-to-string.js
  var require_try_to_string = __commonJS({
    "node_modules/core-js/internals/try-to-string.js"(exports2, module2) {
      var global2 = require_global();
      var String2 = global2.String;
      module2.exports = function(argument) {
        try {
          return String2(argument);
        } catch (error) {
          return "Object";
        }
      };
    }
  });

  // node_modules/core-js/internals/a-callable.js
  var require_a_callable = __commonJS({
    "node_modules/core-js/internals/a-callable.js"(exports2, module2) {
      var global2 = require_global();
      var isCallable = require_is_callable();
      var tryToString = require_try_to_string();
      var TypeError2 = global2.TypeError;
      module2.exports = function(argument) {
        if (isCallable(argument))
          return argument;
        throw TypeError2(tryToString(argument) + " is not a function");
      };
    }
  });

  // node_modules/core-js/internals/get-method.js
  var require_get_method = __commonJS({
    "node_modules/core-js/internals/get-method.js"(exports2, module2) {
      var aCallable = require_a_callable();
      module2.exports = function(V, P) {
        var func = V[P];
        return func == null ? void 0 : aCallable(func);
      };
    }
  });

  // node_modules/core-js/internals/ordinary-to-primitive.js
  var require_ordinary_to_primitive = __commonJS({
    "node_modules/core-js/internals/ordinary-to-primitive.js"(exports2, module2) {
      var global2 = require_global();
      var call = require_function_call();
      var isCallable = require_is_callable();
      var isObject2 = require_is_object();
      var TypeError2 = global2.TypeError;
      module2.exports = function(input, pref) {
        var fn, val2;
        if (pref === "string" && isCallable(fn = input.toString) && !isObject2(val2 = call(fn, input)))
          return val2;
        if (isCallable(fn = input.valueOf) && !isObject2(val2 = call(fn, input)))
          return val2;
        if (pref !== "string" && isCallable(fn = input.toString) && !isObject2(val2 = call(fn, input)))
          return val2;
        throw TypeError2("Can't convert object to primitive value");
      };
    }
  });

  // node_modules/core-js/internals/is-pure.js
  var require_is_pure = __commonJS({
    "node_modules/core-js/internals/is-pure.js"(exports2, module2) {
      module2.exports = false;
    }
  });

  // node_modules/core-js/internals/set-global.js
  var require_set_global = __commonJS({
    "node_modules/core-js/internals/set-global.js"(exports2, module2) {
      var global2 = require_global();
      var defineProperty = Object.defineProperty;
      module2.exports = function(key2, value2) {
        try {
          defineProperty(global2, key2, { value: value2, configurable: true, writable: true });
        } catch (error) {
          global2[key2] = value2;
        }
        return value2;
      };
    }
  });

  // node_modules/core-js/internals/shared-store.js
  var require_shared_store = __commonJS({
    "node_modules/core-js/internals/shared-store.js"(exports2, module2) {
      var global2 = require_global();
      var setGlobal = require_set_global();
      var SHARED = "__core-js_shared__";
      var store = global2[SHARED] || setGlobal(SHARED, {});
      module2.exports = store;
    }
  });

  // node_modules/core-js/internals/shared.js
  var require_shared = __commonJS({
    "node_modules/core-js/internals/shared.js"(exports2, module2) {
      var IS_PURE = require_is_pure();
      var store = require_shared_store();
      (module2.exports = function(key2, value2) {
        return store[key2] || (store[key2] = value2 !== void 0 ? value2 : {});
      })("versions", []).push({
        version: "3.19.0",
        mode: IS_PURE ? "pure" : "global",
        copyright: "\xA9 2021 Denis Pushkarev (zloirock.ru)"
      });
    }
  });

  // node_modules/core-js/internals/to-object.js
  var require_to_object = __commonJS({
    "node_modules/core-js/internals/to-object.js"(exports2, module2) {
      var global2 = require_global();
      var requireObjectCoercible = require_require_object_coercible();
      var Object2 = global2.Object;
      module2.exports = function(argument) {
        return Object2(requireObjectCoercible(argument));
      };
    }
  });

  // node_modules/core-js/internals/has-own-property.js
  var require_has_own_property = __commonJS({
    "node_modules/core-js/internals/has-own-property.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var toObject = require_to_object();
      var hasOwnProperty9 = uncurryThis({}.hasOwnProperty);
      module2.exports = Object.hasOwn || function hasOwn2(it, key2) {
        return hasOwnProperty9(toObject(it), key2);
      };
    }
  });

  // node_modules/core-js/internals/uid.js
  var require_uid = __commonJS({
    "node_modules/core-js/internals/uid.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var id = 0;
      var postfix = Math.random();
      var toString3 = uncurryThis(1 .toString);
      module2.exports = function(key2) {
        return "Symbol(" + (key2 === void 0 ? "" : key2) + ")_" + toString3(++id + postfix, 36);
      };
    }
  });

  // node_modules/core-js/internals/well-known-symbol.js
  var require_well_known_symbol = __commonJS({
    "node_modules/core-js/internals/well-known-symbol.js"(exports2, module2) {
      var global2 = require_global();
      var shared = require_shared();
      var hasOwn2 = require_has_own_property();
      var uid = require_uid();
      var NATIVE_SYMBOL = require_native_symbol();
      var USE_SYMBOL_AS_UID = require_use_symbol_as_uid();
      var WellKnownSymbolsStore = shared("wks");
      var Symbol2 = global2.Symbol;
      var symbolFor = Symbol2 && Symbol2["for"];
      var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol2 : Symbol2 && Symbol2.withoutSetter || uid;
      module2.exports = function(name2) {
        if (!hasOwn2(WellKnownSymbolsStore, name2) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name2] == "string")) {
          var description = "Symbol." + name2;
          if (NATIVE_SYMBOL && hasOwn2(Symbol2, name2)) {
            WellKnownSymbolsStore[name2] = Symbol2[name2];
          } else if (USE_SYMBOL_AS_UID && symbolFor) {
            WellKnownSymbolsStore[name2] = symbolFor(description);
          } else {
            WellKnownSymbolsStore[name2] = createWellKnownSymbol(description);
          }
        }
        return WellKnownSymbolsStore[name2];
      };
    }
  });

  // node_modules/core-js/internals/to-primitive.js
  var require_to_primitive = __commonJS({
    "node_modules/core-js/internals/to-primitive.js"(exports2, module2) {
      var global2 = require_global();
      var call = require_function_call();
      var isObject2 = require_is_object();
      var isSymbol = require_is_symbol();
      var getMethod2 = require_get_method();
      var ordinaryToPrimitive = require_ordinary_to_primitive();
      var wellKnownSymbol = require_well_known_symbol();
      var TypeError2 = global2.TypeError;
      var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
      module2.exports = function(input, pref) {
        if (!isObject2(input) || isSymbol(input))
          return input;
        var exoticToPrim = getMethod2(input, TO_PRIMITIVE);
        var result2;
        if (exoticToPrim) {
          if (pref === void 0)
            pref = "default";
          result2 = call(exoticToPrim, input, pref);
          if (!isObject2(result2) || isSymbol(result2))
            return result2;
          throw TypeError2("Can't convert object to primitive value");
        }
        if (pref === void 0)
          pref = "number";
        return ordinaryToPrimitive(input, pref);
      };
    }
  });

  // node_modules/core-js/internals/to-property-key.js
  var require_to_property_key = __commonJS({
    "node_modules/core-js/internals/to-property-key.js"(exports2, module2) {
      var toPrimitive = require_to_primitive();
      var isSymbol = require_is_symbol();
      module2.exports = function(argument) {
        var key2 = toPrimitive(argument, "string");
        return isSymbol(key2) ? key2 : key2 + "";
      };
    }
  });

  // node_modules/core-js/internals/document-create-element.js
  var require_document_create_element = __commonJS({
    "node_modules/core-js/internals/document-create-element.js"(exports2, module2) {
      var global2 = require_global();
      var isObject2 = require_is_object();
      var document2 = global2.document;
      var EXISTS = isObject2(document2) && isObject2(document2.createElement);
      module2.exports = function(it) {
        return EXISTS ? document2.createElement(it) : {};
      };
    }
  });

  // node_modules/core-js/internals/ie8-dom-define.js
  var require_ie8_dom_define = __commonJS({
    "node_modules/core-js/internals/ie8-dom-define.js"(exports2, module2) {
      var DESCRIPTORS = require_descriptors();
      var fails = require_fails();
      var createElement = require_document_create_element();
      module2.exports = !DESCRIPTORS && !fails(function() {
        return Object.defineProperty(createElement("div"), "a", {
          get: function() {
            return 7;
          }
        }).a != 7;
      });
    }
  });

  // node_modules/core-js/internals/object-get-own-property-descriptor.js
  var require_object_get_own_property_descriptor = __commonJS({
    "node_modules/core-js/internals/object-get-own-property-descriptor.js"(exports2) {
      var DESCRIPTORS = require_descriptors();
      var call = require_function_call();
      var propertyIsEnumerableModule = require_object_property_is_enumerable();
      var createPropertyDescriptor = require_create_property_descriptor();
      var toIndexedObject = require_to_indexed_object();
      var toPropertyKey = require_to_property_key();
      var hasOwn2 = require_has_own_property();
      var IE8_DOM_DEFINE = require_ie8_dom_define();
      var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      exports2.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
        O = toIndexedObject(O);
        P = toPropertyKey(P);
        if (IE8_DOM_DEFINE)
          try {
            return $getOwnPropertyDescriptor(O, P);
          } catch (error) {
          }
        if (hasOwn2(O, P))
          return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
      };
    }
  });

  // node_modules/core-js/internals/an-object.js
  var require_an_object = __commonJS({
    "node_modules/core-js/internals/an-object.js"(exports2, module2) {
      var global2 = require_global();
      var isObject2 = require_is_object();
      var String2 = global2.String;
      var TypeError2 = global2.TypeError;
      module2.exports = function(argument) {
        if (isObject2(argument))
          return argument;
        throw TypeError2(String2(argument) + " is not an object");
      };
    }
  });

  // node_modules/core-js/internals/object-define-property.js
  var require_object_define_property = __commonJS({
    "node_modules/core-js/internals/object-define-property.js"(exports2) {
      var global2 = require_global();
      var DESCRIPTORS = require_descriptors();
      var IE8_DOM_DEFINE = require_ie8_dom_define();
      var anObject = require_an_object();
      var toPropertyKey = require_to_property_key();
      var TypeError2 = global2.TypeError;
      var $defineProperty = Object.defineProperty;
      exports2.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {
        anObject(O);
        P = toPropertyKey(P);
        anObject(Attributes);
        if (IE8_DOM_DEFINE)
          try {
            return $defineProperty(O, P, Attributes);
          } catch (error) {
          }
        if ("get" in Attributes || "set" in Attributes)
          throw TypeError2("Accessors not supported");
        if ("value" in Attributes)
          O[P] = Attributes.value;
        return O;
      };
    }
  });

  // node_modules/core-js/internals/create-non-enumerable-property.js
  var require_create_non_enumerable_property = __commonJS({
    "node_modules/core-js/internals/create-non-enumerable-property.js"(exports2, module2) {
      var DESCRIPTORS = require_descriptors();
      var definePropertyModule = require_object_define_property();
      var createPropertyDescriptor = require_create_property_descriptor();
      module2.exports = DESCRIPTORS ? function(object, key2, value2) {
        return definePropertyModule.f(object, key2, createPropertyDescriptor(1, value2));
      } : function(object, key2, value2) {
        object[key2] = value2;
        return object;
      };
    }
  });

  // node_modules/core-js/internals/inspect-source.js
  var require_inspect_source = __commonJS({
    "node_modules/core-js/internals/inspect-source.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var isCallable = require_is_callable();
      var store = require_shared_store();
      var functionToString = uncurryThis(Function.toString);
      if (!isCallable(store.inspectSource)) {
        store.inspectSource = function(it) {
          return functionToString(it);
        };
      }
      module2.exports = store.inspectSource;
    }
  });

  // node_modules/core-js/internals/native-weak-map.js
  var require_native_weak_map = __commonJS({
    "node_modules/core-js/internals/native-weak-map.js"(exports2, module2) {
      var global2 = require_global();
      var isCallable = require_is_callable();
      var inspectSource = require_inspect_source();
      var WeakMap2 = global2.WeakMap;
      module2.exports = isCallable(WeakMap2) && /native code/.test(inspectSource(WeakMap2));
    }
  });

  // node_modules/core-js/internals/shared-key.js
  var require_shared_key = __commonJS({
    "node_modules/core-js/internals/shared-key.js"(exports2, module2) {
      var shared = require_shared();
      var uid = require_uid();
      var keys = shared("keys");
      module2.exports = function(key2) {
        return keys[key2] || (keys[key2] = uid(key2));
      };
    }
  });

  // node_modules/core-js/internals/hidden-keys.js
  var require_hidden_keys = __commonJS({
    "node_modules/core-js/internals/hidden-keys.js"(exports2, module2) {
      module2.exports = {};
    }
  });

  // node_modules/core-js/internals/internal-state.js
  var require_internal_state = __commonJS({
    "node_modules/core-js/internals/internal-state.js"(exports2, module2) {
      var NATIVE_WEAK_MAP = require_native_weak_map();
      var global2 = require_global();
      var uncurryThis = require_function_uncurry_this();
      var isObject2 = require_is_object();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var hasOwn2 = require_has_own_property();
      var shared = require_shared_store();
      var sharedKey = require_shared_key();
      var hiddenKeys = require_hidden_keys();
      var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
      var TypeError2 = global2.TypeError;
      var WeakMap2 = global2.WeakMap;
      var set3;
      var get8;
      var has;
      var enforce = function(it) {
        return has(it) ? get8(it) : set3(it, {});
      };
      var getterFor = function(TYPE) {
        return function(it) {
          var state;
          if (!isObject2(it) || (state = get8(it)).type !== TYPE) {
            throw TypeError2("Incompatible receiver, " + TYPE + " required");
          }
          return state;
        };
      };
      if (NATIVE_WEAK_MAP || shared.state) {
        store = shared.state || (shared.state = new WeakMap2());
        wmget = uncurryThis(store.get);
        wmhas = uncurryThis(store.has);
        wmset = uncurryThis(store.set);
        set3 = function(it, metadata) {
          if (wmhas(store, it))
            throw new TypeError2(OBJECT_ALREADY_INITIALIZED);
          metadata.facade = it;
          wmset(store, it, metadata);
          return metadata;
        };
        get8 = function(it) {
          return wmget(store, it) || {};
        };
        has = function(it) {
          return wmhas(store, it);
        };
      } else {
        STATE = sharedKey("state");
        hiddenKeys[STATE] = true;
        set3 = function(it, metadata) {
          if (hasOwn2(it, STATE))
            throw new TypeError2(OBJECT_ALREADY_INITIALIZED);
          metadata.facade = it;
          createNonEnumerableProperty(it, STATE, metadata);
          return metadata;
        };
        get8 = function(it) {
          return hasOwn2(it, STATE) ? it[STATE] : {};
        };
        has = function(it) {
          return hasOwn2(it, STATE);
        };
      }
      var store;
      var wmget;
      var wmhas;
      var wmset;
      var STATE;
      module2.exports = {
        set: set3,
        get: get8,
        has,
        enforce,
        getterFor
      };
    }
  });

  // node_modules/core-js/internals/function-name.js
  var require_function_name = __commonJS({
    "node_modules/core-js/internals/function-name.js"(exports2, module2) {
      var DESCRIPTORS = require_descriptors();
      var hasOwn2 = require_has_own_property();
      var FunctionPrototype = Function.prototype;
      var getDescriptor2 = DESCRIPTORS && Object.getOwnPropertyDescriptor;
      var EXISTS = hasOwn2(FunctionPrototype, "name");
      var PROPER = EXISTS && function something() {
      }.name === "something";
      var CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor2(FunctionPrototype, "name").configurable);
      module2.exports = {
        EXISTS,
        PROPER,
        CONFIGURABLE
      };
    }
  });

  // node_modules/core-js/internals/redefine.js
  var require_redefine = __commonJS({
    "node_modules/core-js/internals/redefine.js"(exports2, module2) {
      var global2 = require_global();
      var isCallable = require_is_callable();
      var hasOwn2 = require_has_own_property();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var setGlobal = require_set_global();
      var inspectSource = require_inspect_source();
      var InternalStateModule = require_internal_state();
      var CONFIGURABLE_FUNCTION_NAME = require_function_name().CONFIGURABLE;
      var getInternalState = InternalStateModule.get;
      var enforceInternalState = InternalStateModule.enforce;
      var TEMPLATE = String(String).split("String");
      (module2.exports = function(O, key2, value2, options) {
        var unsafe = options ? !!options.unsafe : false;
        var simple = options ? !!options.enumerable : false;
        var noTargetGet = options ? !!options.noTargetGet : false;
        var name2 = options && options.name !== void 0 ? options.name : key2;
        var state;
        if (isCallable(value2)) {
          if (String(name2).slice(0, 7) === "Symbol(") {
            name2 = "[" + String(name2).replace(/^Symbol\(([^)]*)\)/, "$1") + "]";
          }
          if (!hasOwn2(value2, "name") || CONFIGURABLE_FUNCTION_NAME && value2.name !== name2) {
            createNonEnumerableProperty(value2, "name", name2);
          }
          state = enforceInternalState(value2);
          if (!state.source) {
            state.source = TEMPLATE.join(typeof name2 == "string" ? name2 : "");
          }
        }
        if (O === global2) {
          if (simple)
            O[key2] = value2;
          else
            setGlobal(key2, value2);
          return;
        } else if (!unsafe) {
          delete O[key2];
        } else if (!noTargetGet && O[key2]) {
          simple = true;
        }
        if (simple)
          O[key2] = value2;
        else
          createNonEnumerableProperty(O, key2, value2);
      })(Function.prototype, "toString", function toString3() {
        return isCallable(this) && getInternalState(this).source || inspectSource(this);
      });
    }
  });

  // node_modules/core-js/internals/to-integer-or-infinity.js
  var require_to_integer_or_infinity = __commonJS({
    "node_modules/core-js/internals/to-integer-or-infinity.js"(exports2, module2) {
      var ceil = Math.ceil;
      var floor = Math.floor;
      module2.exports = function(argument) {
        var number = +argument;
        return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);
      };
    }
  });

  // node_modules/core-js/internals/to-absolute-index.js
  var require_to_absolute_index = __commonJS({
    "node_modules/core-js/internals/to-absolute-index.js"(exports2, module2) {
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var max = Math.max;
      var min = Math.min;
      module2.exports = function(index2, length2) {
        var integer = toIntegerOrInfinity(index2);
        return integer < 0 ? max(integer + length2, 0) : min(integer, length2);
      };
    }
  });

  // node_modules/core-js/internals/to-length.js
  var require_to_length = __commonJS({
    "node_modules/core-js/internals/to-length.js"(exports2, module2) {
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var min = Math.min;
      module2.exports = function(argument) {
        return argument > 0 ? min(toIntegerOrInfinity(argument), 9007199254740991) : 0;
      };
    }
  });

  // node_modules/core-js/internals/length-of-array-like.js
  var require_length_of_array_like = __commonJS({
    "node_modules/core-js/internals/length-of-array-like.js"(exports2, module2) {
      var toLength = require_to_length();
      module2.exports = function(obj) {
        return toLength(obj.length);
      };
    }
  });

  // node_modules/core-js/internals/array-includes.js
  var require_array_includes = __commonJS({
    "node_modules/core-js/internals/array-includes.js"(exports2, module2) {
      var toIndexedObject = require_to_indexed_object();
      var toAbsoluteIndex = require_to_absolute_index();
      var lengthOfArrayLike = require_length_of_array_like();
      var createMethod = function(IS_INCLUDES) {
        return function($this, el, fromIndex) {
          var O = toIndexedObject($this);
          var length2 = lengthOfArrayLike(O);
          var index2 = toAbsoluteIndex(fromIndex, length2);
          var value2;
          if (IS_INCLUDES && el != el)
            while (length2 > index2) {
              value2 = O[index2++];
              if (value2 != value2)
                return true;
            }
          else
            for (; length2 > index2; index2++) {
              if ((IS_INCLUDES || index2 in O) && O[index2] === el)
                return IS_INCLUDES || index2 || 0;
            }
          return !IS_INCLUDES && -1;
        };
      };
      module2.exports = {
        // `Array.prototype.includes` method
        // https://tc39.es/ecma262/#sec-array.prototype.includes
        includes: createMethod(true),
        // `Array.prototype.indexOf` method
        // https://tc39.es/ecma262/#sec-array.prototype.indexof
        indexOf: createMethod(false)
      };
    }
  });

  // node_modules/core-js/internals/object-keys-internal.js
  var require_object_keys_internal = __commonJS({
    "node_modules/core-js/internals/object-keys-internal.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var hasOwn2 = require_has_own_property();
      var toIndexedObject = require_to_indexed_object();
      var indexOf = require_array_includes().indexOf;
      var hiddenKeys = require_hidden_keys();
      var push = uncurryThis([].push);
      module2.exports = function(object, names) {
        var O = toIndexedObject(object);
        var i = 0;
        var result2 = [];
        var key2;
        for (key2 in O)
          !hasOwn2(hiddenKeys, key2) && hasOwn2(O, key2) && push(result2, key2);
        while (names.length > i)
          if (hasOwn2(O, key2 = names[i++])) {
            ~indexOf(result2, key2) || push(result2, key2);
          }
        return result2;
      };
    }
  });

  // node_modules/core-js/internals/enum-bug-keys.js
  var require_enum_bug_keys = __commonJS({
    "node_modules/core-js/internals/enum-bug-keys.js"(exports2, module2) {
      module2.exports = [
        "constructor",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "toLocaleString",
        "toString",
        "valueOf"
      ];
    }
  });

  // node_modules/core-js/internals/object-get-own-property-names.js
  var require_object_get_own_property_names = __commonJS({
    "node_modules/core-js/internals/object-get-own-property-names.js"(exports2) {
      var internalObjectKeys = require_object_keys_internal();
      var enumBugKeys = require_enum_bug_keys();
      var hiddenKeys = enumBugKeys.concat("length", "prototype");
      exports2.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
        return internalObjectKeys(O, hiddenKeys);
      };
    }
  });

  // node_modules/core-js/internals/object-get-own-property-symbols.js
  var require_object_get_own_property_symbols = __commonJS({
    "node_modules/core-js/internals/object-get-own-property-symbols.js"(exports2) {
      exports2.f = Object.getOwnPropertySymbols;
    }
  });

  // node_modules/core-js/internals/own-keys.js
  var require_own_keys = __commonJS({
    "node_modules/core-js/internals/own-keys.js"(exports2, module2) {
      var getBuiltIn = require_get_built_in();
      var uncurryThis = require_function_uncurry_this();
      var getOwnPropertyNamesModule = require_object_get_own_property_names();
      var getOwnPropertySymbolsModule = require_object_get_own_property_symbols();
      var anObject = require_an_object();
      var concat2 = uncurryThis([].concat);
      module2.exports = getBuiltIn("Reflect", "ownKeys") || function ownKeys(it) {
        var keys = getOwnPropertyNamesModule.f(anObject(it));
        var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
        return getOwnPropertySymbols ? concat2(keys, getOwnPropertySymbols(it)) : keys;
      };
    }
  });

  // node_modules/core-js/internals/copy-constructor-properties.js
  var require_copy_constructor_properties = __commonJS({
    "node_modules/core-js/internals/copy-constructor-properties.js"(exports2, module2) {
      var hasOwn2 = require_has_own_property();
      var ownKeys = require_own_keys();
      var getOwnPropertyDescriptorModule = require_object_get_own_property_descriptor();
      var definePropertyModule = require_object_define_property();
      module2.exports = function(target, source) {
        var keys = ownKeys(source);
        var defineProperty = definePropertyModule.f;
        var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
        for (var i = 0; i < keys.length; i++) {
          var key2 = keys[i];
          if (!hasOwn2(target, key2))
            defineProperty(target, key2, getOwnPropertyDescriptor(source, key2));
        }
      };
    }
  });

  // node_modules/core-js/internals/is-forced.js
  var require_is_forced = __commonJS({
    "node_modules/core-js/internals/is-forced.js"(exports2, module2) {
      var fails = require_fails();
      var isCallable = require_is_callable();
      var replacement = /#|\.prototype\./;
      var isForced = function(feature, detection) {
        var value2 = data2[normalize4(feature)];
        return value2 == POLYFILL ? true : value2 == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
      };
      var normalize4 = isForced.normalize = function(string) {
        return String(string).replace(replacement, ".").toLowerCase();
      };
      var data2 = isForced.data = {};
      var NATIVE = isForced.NATIVE = "N";
      var POLYFILL = isForced.POLYFILL = "P";
      module2.exports = isForced;
    }
  });

  // node_modules/core-js/internals/export.js
  var require_export = __commonJS({
    "node_modules/core-js/internals/export.js"(exports2, module2) {
      var global2 = require_global();
      var getOwnPropertyDescriptor = require_object_get_own_property_descriptor().f;
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var redefine = require_redefine();
      var setGlobal = require_set_global();
      var copyConstructorProperties = require_copy_constructor_properties();
      var isForced = require_is_forced();
      module2.exports = function(options, source) {
        var TARGET = options.target;
        var GLOBAL = options.global;
        var STATIC = options.stat;
        var FORCED, target, key2, targetProperty, sourceProperty, descriptor;
        if (GLOBAL) {
          target = global2;
        } else if (STATIC) {
          target = global2[TARGET] || setGlobal(TARGET, {});
        } else {
          target = (global2[TARGET] || {}).prototype;
        }
        if (target)
          for (key2 in source) {
            sourceProperty = source[key2];
            if (options.noTargetGet) {
              descriptor = getOwnPropertyDescriptor(target, key2);
              targetProperty = descriptor && descriptor.value;
            } else
              targetProperty = target[key2];
            FORCED = isForced(GLOBAL ? key2 : TARGET + (STATIC ? "." : "#") + key2, options.forced);
            if (!FORCED && targetProperty !== void 0) {
              if (typeof sourceProperty == typeof targetProperty)
                continue;
              copyConstructorProperties(sourceProperty, targetProperty);
            }
            if (options.sham || targetProperty && targetProperty.sham) {
              createNonEnumerableProperty(sourceProperty, "sham", true);
            }
            redefine(target, key2, sourceProperty, options);
          }
      };
    }
  });

  // node_modules/core-js/internals/function-bind-context.js
  var require_function_bind_context = __commonJS({
    "node_modules/core-js/internals/function-bind-context.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var aCallable = require_a_callable();
      var bind3 = uncurryThis(uncurryThis.bind);
      module2.exports = function(fn, that) {
        aCallable(fn);
        return that === void 0 ? fn : bind3 ? bind3(fn, that) : function() {
          return fn.apply(that, arguments);
        };
      };
    }
  });

  // node_modules/core-js/internals/iterator-close.js
  var require_iterator_close = __commonJS({
    "node_modules/core-js/internals/iterator-close.js"(exports2, module2) {
      var call = require_function_call();
      var anObject = require_an_object();
      var getMethod2 = require_get_method();
      module2.exports = function(iterator, kind, value2) {
        var innerResult, innerError;
        anObject(iterator);
        try {
          innerResult = getMethod2(iterator, "return");
          if (!innerResult) {
            if (kind === "throw")
              throw value2;
            return value2;
          }
          innerResult = call(innerResult, iterator);
        } catch (error) {
          innerError = true;
          innerResult = error;
        }
        if (kind === "throw")
          throw value2;
        if (innerError)
          throw innerResult;
        anObject(innerResult);
        return value2;
      };
    }
  });

  // node_modules/core-js/internals/call-with-safe-iteration-closing.js
  var require_call_with_safe_iteration_closing = __commonJS({
    "node_modules/core-js/internals/call-with-safe-iteration-closing.js"(exports2, module2) {
      var anObject = require_an_object();
      var iteratorClose = require_iterator_close();
      module2.exports = function(iterator, fn, value2, ENTRIES) {
        try {
          return ENTRIES ? fn(anObject(value2)[0], value2[1]) : fn(value2);
        } catch (error) {
          iteratorClose(iterator, "throw", error);
        }
      };
    }
  });

  // node_modules/core-js/internals/iterators.js
  var require_iterators = __commonJS({
    "node_modules/core-js/internals/iterators.js"(exports2, module2) {
      module2.exports = {};
    }
  });

  // node_modules/core-js/internals/is-array-iterator-method.js
  var require_is_array_iterator_method = __commonJS({
    "node_modules/core-js/internals/is-array-iterator-method.js"(exports2, module2) {
      var wellKnownSymbol = require_well_known_symbol();
      var Iterators = require_iterators();
      var ITERATOR = wellKnownSymbol("iterator");
      var ArrayPrototype = Array.prototype;
      module2.exports = function(it) {
        return it !== void 0 && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
      };
    }
  });

  // node_modules/core-js/internals/to-string-tag-support.js
  var require_to_string_tag_support = __commonJS({
    "node_modules/core-js/internals/to-string-tag-support.js"(exports2, module2) {
      var wellKnownSymbol = require_well_known_symbol();
      var TO_STRING_TAG = wellKnownSymbol("toStringTag");
      var test2 = {};
      test2[TO_STRING_TAG] = "z";
      module2.exports = String(test2) === "[object z]";
    }
  });

  // node_modules/core-js/internals/classof.js
  var require_classof = __commonJS({
    "node_modules/core-js/internals/classof.js"(exports2, module2) {
      var global2 = require_global();
      var TO_STRING_TAG_SUPPORT = require_to_string_tag_support();
      var isCallable = require_is_callable();
      var classofRaw = require_classof_raw();
      var wellKnownSymbol = require_well_known_symbol();
      var TO_STRING_TAG = wellKnownSymbol("toStringTag");
      var Object2 = global2.Object;
      var CORRECT_ARGUMENTS = classofRaw(function() {
        return arguments;
      }()) == "Arguments";
      var tryGet = function(it, key2) {
        try {
          return it[key2];
        } catch (error) {
        }
      };
      module2.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function(it) {
        var O, tag, result2;
        return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = Object2(it), TO_STRING_TAG)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result2 = classofRaw(O)) == "Object" && isCallable(O.callee) ? "Arguments" : result2;
      };
    }
  });

  // node_modules/core-js/internals/is-constructor.js
  var require_is_constructor = __commonJS({
    "node_modules/core-js/internals/is-constructor.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var fails = require_fails();
      var isCallable = require_is_callable();
      var classof = require_classof();
      var getBuiltIn = require_get_built_in();
      var inspectSource = require_inspect_source();
      var noop2 = function() {
      };
      var empty = [];
      var construct = getBuiltIn("Reflect", "construct");
      var constructorRegExp = /^\s*(?:class|function)\b/;
      var exec = uncurryThis(constructorRegExp.exec);
      var INCORRECT_TO_STRING = !constructorRegExp.exec(noop2);
      var isConstructorModern = function(argument) {
        if (!isCallable(argument))
          return false;
        try {
          construct(noop2, empty, argument);
          return true;
        } catch (error) {
          return false;
        }
      };
      var isConstructorLegacy = function(argument) {
        if (!isCallable(argument))
          return false;
        switch (classof(argument)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return false;
        }
        return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
      };
      module2.exports = !construct || fails(function() {
        var called;
        return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function() {
          called = true;
        }) || called;
      }) ? isConstructorLegacy : isConstructorModern;
    }
  });

  // node_modules/core-js/internals/create-property.js
  var require_create_property = __commonJS({
    "node_modules/core-js/internals/create-property.js"(exports2, module2) {
      "use strict";
      var toPropertyKey = require_to_property_key();
      var definePropertyModule = require_object_define_property();
      var createPropertyDescriptor = require_create_property_descriptor();
      module2.exports = function(object, key2, value2) {
        var propertyKey = toPropertyKey(key2);
        if (propertyKey in object)
          definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value2));
        else
          object[propertyKey] = value2;
      };
    }
  });

  // node_modules/core-js/internals/get-iterator-method.js
  var require_get_iterator_method = __commonJS({
    "node_modules/core-js/internals/get-iterator-method.js"(exports2, module2) {
      var classof = require_classof();
      var getMethod2 = require_get_method();
      var Iterators = require_iterators();
      var wellKnownSymbol = require_well_known_symbol();
      var ITERATOR = wellKnownSymbol("iterator");
      module2.exports = function(it) {
        if (it != void 0)
          return getMethod2(it, ITERATOR) || getMethod2(it, "@@iterator") || Iterators[classof(it)];
      };
    }
  });

  // node_modules/core-js/internals/get-iterator.js
  var require_get_iterator = __commonJS({
    "node_modules/core-js/internals/get-iterator.js"(exports2, module2) {
      var global2 = require_global();
      var call = require_function_call();
      var aCallable = require_a_callable();
      var anObject = require_an_object();
      var tryToString = require_try_to_string();
      var getIteratorMethod = require_get_iterator_method();
      var TypeError2 = global2.TypeError;
      module2.exports = function(argument, usingIterator) {
        var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
        if (aCallable(iteratorMethod))
          return anObject(call(iteratorMethod, argument));
        throw TypeError2(tryToString(argument) + " is not iterable");
      };
    }
  });

  // node_modules/core-js/internals/array-from.js
  var require_array_from = __commonJS({
    "node_modules/core-js/internals/array-from.js"(exports2, module2) {
      "use strict";
      var global2 = require_global();
      var bind3 = require_function_bind_context();
      var call = require_function_call();
      var toObject = require_to_object();
      var callWithSafeIterationClosing = require_call_with_safe_iteration_closing();
      var isArrayIteratorMethod = require_is_array_iterator_method();
      var isConstructor = require_is_constructor();
      var lengthOfArrayLike = require_length_of_array_like();
      var createProperty = require_create_property();
      var getIterator = require_get_iterator();
      var getIteratorMethod = require_get_iterator_method();
      var Array2 = global2.Array;
      module2.exports = function from(arrayLike) {
        var O = toObject(arrayLike);
        var IS_CONSTRUCTOR = isConstructor(this);
        var argumentsLength = arguments.length;
        var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
        var mapping = mapfn !== void 0;
        if (mapping)
          mapfn = bind3(mapfn, argumentsLength > 2 ? arguments[2] : void 0);
        var iteratorMethod = getIteratorMethod(O);
        var index2 = 0;
        var length2, result2, step, iterator, next, value2;
        if (iteratorMethod && !(this == Array2 && isArrayIteratorMethod(iteratorMethod))) {
          iterator = getIterator(O, iteratorMethod);
          next = iterator.next;
          result2 = IS_CONSTRUCTOR ? new this() : [];
          for (; !(step = call(next, iterator)).done; index2++) {
            value2 = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index2], true) : step.value;
            createProperty(result2, index2, value2);
          }
        } else {
          length2 = lengthOfArrayLike(O);
          result2 = IS_CONSTRUCTOR ? new this(length2) : Array2(length2);
          for (; length2 > index2; index2++) {
            value2 = mapping ? mapfn(O[index2], index2) : O[index2];
            createProperty(result2, index2, value2);
          }
        }
        result2.length = index2;
        return result2;
      };
    }
  });

  // node_modules/core-js/internals/check-correctness-of-iteration.js
  var require_check_correctness_of_iteration = __commonJS({
    "node_modules/core-js/internals/check-correctness-of-iteration.js"(exports2, module2) {
      var wellKnownSymbol = require_well_known_symbol();
      var ITERATOR = wellKnownSymbol("iterator");
      var SAFE_CLOSING = false;
      try {
        called = 0;
        iteratorWithReturn = {
          next: function() {
            return { done: !!called++ };
          },
          "return": function() {
            SAFE_CLOSING = true;
          }
        };
        iteratorWithReturn[ITERATOR] = function() {
          return this;
        };
        Array.from(iteratorWithReturn, function() {
          throw 2;
        });
      } catch (error) {
      }
      var called;
      var iteratorWithReturn;
      module2.exports = function(exec, SKIP_CLOSING) {
        if (!SKIP_CLOSING && !SAFE_CLOSING)
          return false;
        var ITERATION_SUPPORT = false;
        try {
          var object = {};
          object[ITERATOR] = function() {
            return {
              next: function() {
                return { done: ITERATION_SUPPORT = true };
              }
            };
          };
          exec(object);
        } catch (error) {
        }
        return ITERATION_SUPPORT;
      };
    }
  });

  // node_modules/core-js/modules/es.array.from.js
  var require_es_array_from = __commonJS({
    "node_modules/core-js/modules/es.array.from.js"() {
      var $2 = require_export();
      var from = require_array_from();
      var checkCorrectnessOfIteration = require_check_correctness_of_iteration();
      var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function(iterable) {
        Array.from(iterable);
      });
      $2({ target: "Array", stat: true, forced: INCORRECT_ITERATION }, {
        from
      });
    }
  });

  // node_modules/core-js/internals/is-array.js
  var require_is_array = __commonJS({
    "node_modules/core-js/internals/is-array.js"(exports2, module2) {
      var classof = require_classof_raw();
      module2.exports = Array.isArray || function isArray2(argument) {
        return classof(argument) == "Array";
      };
    }
  });

  // node_modules/core-js/modules/es.array.is-array.js
  var require_es_array_is_array = __commonJS({
    "node_modules/core-js/modules/es.array.is-array.js"() {
      var $2 = require_export();
      var isArray2 = require_is_array();
      $2({ target: "Array", stat: true }, {
        isArray: isArray2
      });
    }
  });

  // node_modules/core-js/modules/es.array.of.js
  var require_es_array_of = __commonJS({
    "node_modules/core-js/modules/es.array.of.js"() {
      "use strict";
      var $2 = require_export();
      var global2 = require_global();
      var fails = require_fails();
      var isConstructor = require_is_constructor();
      var createProperty = require_create_property();
      var Array2 = global2.Array;
      var ISNT_GENERIC = fails(function() {
        function F() {
        }
        return !(Array2.of.call(F) instanceof F);
      });
      $2({ target: "Array", stat: true, forced: ISNT_GENERIC }, {
        of: function of() {
          var index2 = 0;
          var argumentsLength = arguments.length;
          var result2 = new (isConstructor(this) ? this : Array2)(argumentsLength);
          while (argumentsLength > index2)
            createProperty(result2, index2, arguments[index2++]);
          result2.length = argumentsLength;
          return result2;
        }
      });
    }
  });

  // node_modules/core-js/internals/object-keys.js
  var require_object_keys = __commonJS({
    "node_modules/core-js/internals/object-keys.js"(exports2, module2) {
      var internalObjectKeys = require_object_keys_internal();
      var enumBugKeys = require_enum_bug_keys();
      module2.exports = Object.keys || function keys(O) {
        return internalObjectKeys(O, enumBugKeys);
      };
    }
  });

  // node_modules/core-js/internals/object-define-properties.js
  var require_object_define_properties = __commonJS({
    "node_modules/core-js/internals/object-define-properties.js"(exports2, module2) {
      var DESCRIPTORS = require_descriptors();
      var definePropertyModule = require_object_define_property();
      var anObject = require_an_object();
      var toIndexedObject = require_to_indexed_object();
      var objectKeys = require_object_keys();
      module2.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
        anObject(O);
        var props = toIndexedObject(Properties);
        var keys = objectKeys(Properties);
        var length2 = keys.length;
        var index2 = 0;
        var key2;
        while (length2 > index2)
          definePropertyModule.f(O, key2 = keys[index2++], props[key2]);
        return O;
      };
    }
  });

  // node_modules/core-js/internals/html.js
  var require_html = __commonJS({
    "node_modules/core-js/internals/html.js"(exports2, module2) {
      var getBuiltIn = require_get_built_in();
      module2.exports = getBuiltIn("document", "documentElement");
    }
  });

  // node_modules/core-js/internals/object-create.js
  var require_object_create = __commonJS({
    "node_modules/core-js/internals/object-create.js"(exports2, module2) {
      var anObject = require_an_object();
      var defineProperties = require_object_define_properties();
      var enumBugKeys = require_enum_bug_keys();
      var hiddenKeys = require_hidden_keys();
      var html = require_html();
      var documentCreateElement = require_document_create_element();
      var sharedKey = require_shared_key();
      var GT = ">";
      var LT = "<";
      var PROTOTYPE = "prototype";
      var SCRIPT = "script";
      var IE_PROTO = sharedKey("IE_PROTO");
      var EmptyConstructor = function() {
      };
      var scriptTag = function(content2) {
        return LT + SCRIPT + GT + content2 + LT + "/" + SCRIPT + GT;
      };
      var NullProtoObjectViaActiveX = function(activeXDocument2) {
        activeXDocument2.write(scriptTag(""));
        activeXDocument2.close();
        var temp = activeXDocument2.parentWindow.Object;
        activeXDocument2 = null;
        return temp;
      };
      var NullProtoObjectViaIFrame = function() {
        var iframe = documentCreateElement("iframe");
        var JS = "java" + SCRIPT + ":";
        var iframeDocument;
        iframe.style.display = "none";
        html.appendChild(iframe);
        iframe.src = String(JS);
        iframeDocument = iframe.contentWindow.document;
        iframeDocument.open();
        iframeDocument.write(scriptTag("document.F=Object"));
        iframeDocument.close();
        return iframeDocument.F;
      };
      var activeXDocument;
      var NullProtoObject = function() {
        try {
          activeXDocument = new ActiveXObject("htmlfile");
        } catch (error) {
        }
        NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
        var length2 = enumBugKeys.length;
        while (length2--)
          delete NullProtoObject[PROTOTYPE][enumBugKeys[length2]];
        return NullProtoObject();
      };
      hiddenKeys[IE_PROTO] = true;
      module2.exports = Object.create || function create5(O, Properties) {
        var result2;
        if (O !== null) {
          EmptyConstructor[PROTOTYPE] = anObject(O);
          result2 = new EmptyConstructor();
          EmptyConstructor[PROTOTYPE] = null;
          result2[IE_PROTO] = O;
        } else
          result2 = NullProtoObject();
        return Properties === void 0 ? result2 : defineProperties(result2, Properties);
      };
    }
  });

  // node_modules/core-js/internals/add-to-unscopables.js
  var require_add_to_unscopables = __commonJS({
    "node_modules/core-js/internals/add-to-unscopables.js"(exports2, module2) {
      var wellKnownSymbol = require_well_known_symbol();
      var create5 = require_object_create();
      var definePropertyModule = require_object_define_property();
      var UNSCOPABLES = wellKnownSymbol("unscopables");
      var ArrayPrototype = Array.prototype;
      if (ArrayPrototype[UNSCOPABLES] == void 0) {
        definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
          configurable: true,
          value: create5(null)
        });
      }
      module2.exports = function(key2) {
        ArrayPrototype[UNSCOPABLES][key2] = true;
      };
    }
  });

  // node_modules/core-js/modules/es.array.at.js
  var require_es_array_at = __commonJS({
    "node_modules/core-js/modules/es.array.at.js"() {
      "use strict";
      var $2 = require_export();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        at: function at(index2) {
          var O = toObject(this);
          var len = lengthOfArrayLike(O);
          var relativeIndex = toIntegerOrInfinity(index2);
          var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
          return k < 0 || k >= len ? void 0 : O[k];
        }
      });
      addToUnscopables("at");
    }
  });

  // node_modules/core-js/internals/array-species-constructor.js
  var require_array_species_constructor = __commonJS({
    "node_modules/core-js/internals/array-species-constructor.js"(exports2, module2) {
      var global2 = require_global();
      var isArray2 = require_is_array();
      var isConstructor = require_is_constructor();
      var isObject2 = require_is_object();
      var wellKnownSymbol = require_well_known_symbol();
      var SPECIES = wellKnownSymbol("species");
      var Array2 = global2.Array;
      module2.exports = function(originalArray) {
        var C;
        if (isArray2(originalArray)) {
          C = originalArray.constructor;
          if (isConstructor(C) && (C === Array2 || isArray2(C.prototype)))
            C = void 0;
          else if (isObject2(C)) {
            C = C[SPECIES];
            if (C === null)
              C = void 0;
          }
        }
        return C === void 0 ? Array2 : C;
      };
    }
  });

  // node_modules/core-js/internals/array-species-create.js
  var require_array_species_create = __commonJS({
    "node_modules/core-js/internals/array-species-create.js"(exports2, module2) {
      var arraySpeciesConstructor = require_array_species_constructor();
      module2.exports = function(originalArray, length2) {
        return new (arraySpeciesConstructor(originalArray))(length2 === 0 ? 0 : length2);
      };
    }
  });

  // node_modules/core-js/internals/array-method-has-species-support.js
  var require_array_method_has_species_support = __commonJS({
    "node_modules/core-js/internals/array-method-has-species-support.js"(exports2, module2) {
      var fails = require_fails();
      var wellKnownSymbol = require_well_known_symbol();
      var V8_VERSION = require_engine_v8_version();
      var SPECIES = wellKnownSymbol("species");
      module2.exports = function(METHOD_NAME) {
        return V8_VERSION >= 51 || !fails(function() {
          var array = [];
          var constructor = array.constructor = {};
          constructor[SPECIES] = function() {
            return { foo: 1 };
          };
          return array[METHOD_NAME](Boolean).foo !== 1;
        });
      };
    }
  });

  // node_modules/core-js/modules/es.array.concat.js
  var require_es_array_concat = __commonJS({
    "node_modules/core-js/modules/es.array.concat.js"() {
      "use strict";
      var $2 = require_export();
      var global2 = require_global();
      var fails = require_fails();
      var isArray2 = require_is_array();
      var isObject2 = require_is_object();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var createProperty = require_create_property();
      var arraySpeciesCreate = require_array_species_create();
      var arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
      var wellKnownSymbol = require_well_known_symbol();
      var V8_VERSION = require_engine_v8_version();
      var IS_CONCAT_SPREADABLE = wellKnownSymbol("isConcatSpreadable");
      var MAX_SAFE_INTEGER = 9007199254740991;
      var MAXIMUM_ALLOWED_INDEX_EXCEEDED = "Maximum allowed index exceeded";
      var TypeError2 = global2.TypeError;
      var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function() {
        var array = [];
        array[IS_CONCAT_SPREADABLE] = false;
        return array.concat()[0] !== array;
      });
      var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("concat");
      var isConcatSpreadable = function(O) {
        if (!isObject2(O))
          return false;
        var spreadable = O[IS_CONCAT_SPREADABLE];
        return spreadable !== void 0 ? !!spreadable : isArray2(O);
      };
      var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;
      $2({ target: "Array", proto: true, forced: FORCED }, {
        // eslint-disable-next-line no-unused-vars -- required for `.length`
        concat: function concat2(arg) {
          var O = toObject(this);
          var A = arraySpeciesCreate(O, 0);
          var n = 0;
          var i, k, length2, len, E;
          for (i = -1, length2 = arguments.length; i < length2; i++) {
            E = i === -1 ? O : arguments[i];
            if (isConcatSpreadable(E)) {
              len = lengthOfArrayLike(E);
              if (n + len > MAX_SAFE_INTEGER)
                throw TypeError2(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
              for (k = 0; k < len; k++, n++)
                if (k in E)
                  createProperty(A, n, E[k]);
            } else {
              if (n >= MAX_SAFE_INTEGER)
                throw TypeError2(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
              createProperty(A, n++, E);
            }
          }
          A.length = n;
          return A;
        }
      });
    }
  });

  // node_modules/core-js/internals/array-copy-within.js
  var require_array_copy_within = __commonJS({
    "node_modules/core-js/internals/array-copy-within.js"(exports2, module2) {
      "use strict";
      var toObject = require_to_object();
      var toAbsoluteIndex = require_to_absolute_index();
      var lengthOfArrayLike = require_length_of_array_like();
      var min = Math.min;
      module2.exports = [].copyWithin || function copyWithin(target, start) {
        var O = toObject(this);
        var len = lengthOfArrayLike(O);
        var to = toAbsoluteIndex(target, len);
        var from = toAbsoluteIndex(start, len);
        var end = arguments.length > 2 ? arguments[2] : void 0;
        var count = min((end === void 0 ? len : toAbsoluteIndex(end, len)) - from, len - to);
        var inc = 1;
        if (from < to && to < from + count) {
          inc = -1;
          from += count - 1;
          to += count - 1;
        }
        while (count-- > 0) {
          if (from in O)
            O[to] = O[from];
          else
            delete O[to];
          to += inc;
          from += inc;
        }
        return O;
      };
    }
  });

  // node_modules/core-js/modules/es.array.copy-within.js
  var require_es_array_copy_within = __commonJS({
    "node_modules/core-js/modules/es.array.copy-within.js"() {
      var $2 = require_export();
      var copyWithin = require_array_copy_within();
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        copyWithin
      });
      addToUnscopables("copyWithin");
    }
  });

  // node_modules/core-js/internals/array-iteration.js
  var require_array_iteration = __commonJS({
    "node_modules/core-js/internals/array-iteration.js"(exports2, module2) {
      var bind3 = require_function_bind_context();
      var uncurryThis = require_function_uncurry_this();
      var IndexedObject = require_indexed_object();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var arraySpeciesCreate = require_array_species_create();
      var push = uncurryThis([].push);
      var createMethod = function(TYPE) {
        var IS_MAP = TYPE == 1;
        var IS_FILTER = TYPE == 2;
        var IS_SOME = TYPE == 3;
        var IS_EVERY = TYPE == 4;
        var IS_FIND_INDEX = TYPE == 6;
        var IS_FILTER_REJECT = TYPE == 7;
        var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
        return function($this, callbackfn, that, specificCreate) {
          var O = toObject($this);
          var self2 = IndexedObject(O);
          var boundFunction = bind3(callbackfn, that);
          var length2 = lengthOfArrayLike(self2);
          var index2 = 0;
          var create5 = specificCreate || arraySpeciesCreate;
          var target = IS_MAP ? create5($this, length2) : IS_FILTER || IS_FILTER_REJECT ? create5($this, 0) : void 0;
          var value2, result2;
          for (; length2 > index2; index2++)
            if (NO_HOLES || index2 in self2) {
              value2 = self2[index2];
              result2 = boundFunction(value2, index2, O);
              if (TYPE) {
                if (IS_MAP)
                  target[index2] = result2;
                else if (result2)
                  switch (TYPE) {
                    case 3:
                      return true;
                    case 5:
                      return value2;
                    case 6:
                      return index2;
                    case 2:
                      push(target, value2);
                  }
                else
                  switch (TYPE) {
                    case 4:
                      return false;
                    case 7:
                      push(target, value2);
                  }
              }
            }
          return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
        };
      };
      module2.exports = {
        // `Array.prototype.forEach` method
        // https://tc39.es/ecma262/#sec-array.prototype.foreach
        forEach: createMethod(0),
        // `Array.prototype.map` method
        // https://tc39.es/ecma262/#sec-array.prototype.map
        map: createMethod(1),
        // `Array.prototype.filter` method
        // https://tc39.es/ecma262/#sec-array.prototype.filter
        filter: createMethod(2),
        // `Array.prototype.some` method
        // https://tc39.es/ecma262/#sec-array.prototype.some
        some: createMethod(3),
        // `Array.prototype.every` method
        // https://tc39.es/ecma262/#sec-array.prototype.every
        every: createMethod(4),
        // `Array.prototype.find` method
        // https://tc39.es/ecma262/#sec-array.prototype.find
        find: createMethod(5),
        // `Array.prototype.findIndex` method
        // https://tc39.es/ecma262/#sec-array.prototype.findIndex
        findIndex: createMethod(6),
        // `Array.prototype.filterReject` method
        // https://github.com/tc39/proposal-array-filtering
        filterReject: createMethod(7)
      };
    }
  });

  // node_modules/core-js/internals/array-method-is-strict.js
  var require_array_method_is_strict = __commonJS({
    "node_modules/core-js/internals/array-method-is-strict.js"(exports2, module2) {
      "use strict";
      var fails = require_fails();
      module2.exports = function(METHOD_NAME, argument) {
        var method = [][METHOD_NAME];
        return !!method && fails(function() {
          method.call(null, argument || function() {
            throw 1;
          }, 1);
        });
      };
    }
  });

  // node_modules/core-js/modules/es.array.every.js
  var require_es_array_every = __commonJS({
    "node_modules/core-js/modules/es.array.every.js"() {
      "use strict";
      var $2 = require_export();
      var $every = require_array_iteration().every;
      var arrayMethodIsStrict = require_array_method_is_strict();
      var STRICT_METHOD = arrayMethodIsStrict("every");
      $2({ target: "Array", proto: true, forced: !STRICT_METHOD }, {
        every: function every(callbackfn) {
          return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
    }
  });

  // node_modules/core-js/internals/array-fill.js
  var require_array_fill = __commonJS({
    "node_modules/core-js/internals/array-fill.js"(exports2, module2) {
      "use strict";
      var toObject = require_to_object();
      var toAbsoluteIndex = require_to_absolute_index();
      var lengthOfArrayLike = require_length_of_array_like();
      module2.exports = function fill(value2) {
        var O = toObject(this);
        var length2 = lengthOfArrayLike(O);
        var argumentsLength = arguments.length;
        var index2 = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : void 0, length2);
        var end = argumentsLength > 2 ? arguments[2] : void 0;
        var endPos = end === void 0 ? length2 : toAbsoluteIndex(end, length2);
        while (endPos > index2)
          O[index2++] = value2;
        return O;
      };
    }
  });

  // node_modules/core-js/modules/es.array.fill.js
  var require_es_array_fill = __commonJS({
    "node_modules/core-js/modules/es.array.fill.js"() {
      var $2 = require_export();
      var fill = require_array_fill();
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        fill
      });
      addToUnscopables("fill");
    }
  });

  // node_modules/core-js/modules/es.array.filter.js
  var require_es_array_filter = __commonJS({
    "node_modules/core-js/modules/es.array.filter.js"() {
      "use strict";
      var $2 = require_export();
      var $filter = require_array_iteration().filter;
      var arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
      var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("filter");
      $2({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
        filter: function filter(callbackfn) {
          return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
    }
  });

  // node_modules/core-js/modules/es.array.find.js
  var require_es_array_find = __commonJS({
    "node_modules/core-js/modules/es.array.find.js"() {
      "use strict";
      var $2 = require_export();
      var $find = require_array_iteration().find;
      var addToUnscopables = require_add_to_unscopables();
      var FIND = "find";
      var SKIPS_HOLES = true;
      if (FIND in [])
        Array(1)[FIND](function() {
          SKIPS_HOLES = false;
        });
      $2({ target: "Array", proto: true, forced: SKIPS_HOLES }, {
        find: function find4(callbackfn) {
          return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      addToUnscopables(FIND);
    }
  });

  // node_modules/core-js/modules/es.array.find-index.js
  var require_es_array_find_index = __commonJS({
    "node_modules/core-js/modules/es.array.find-index.js"() {
      "use strict";
      var $2 = require_export();
      var $findIndex = require_array_iteration().findIndex;
      var addToUnscopables = require_add_to_unscopables();
      var FIND_INDEX = "findIndex";
      var SKIPS_HOLES = true;
      if (FIND_INDEX in [])
        Array(1)[FIND_INDEX](function() {
          SKIPS_HOLES = false;
        });
      $2({ target: "Array", proto: true, forced: SKIPS_HOLES }, {
        findIndex: function findIndex2(callbackfn) {
          return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      addToUnscopables(FIND_INDEX);
    }
  });

  // node_modules/core-js/internals/flatten-into-array.js
  var require_flatten_into_array = __commonJS({
    "node_modules/core-js/internals/flatten-into-array.js"(exports2, module2) {
      "use strict";
      var global2 = require_global();
      var isArray2 = require_is_array();
      var lengthOfArrayLike = require_length_of_array_like();
      var bind3 = require_function_bind_context();
      var TypeError2 = global2.TypeError;
      var flattenIntoArray = function(target, original, source, sourceLen, start, depth, mapper, thisArg) {
        var targetIndex = start;
        var sourceIndex = 0;
        var mapFn = mapper ? bind3(mapper, thisArg) : false;
        var element, elementLen;
        while (sourceIndex < sourceLen) {
          if (sourceIndex in source) {
            element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
            if (depth > 0 && isArray2(element)) {
              elementLen = lengthOfArrayLike(element);
              targetIndex = flattenIntoArray(target, original, element, elementLen, targetIndex, depth - 1) - 1;
            } else {
              if (targetIndex >= 9007199254740991)
                throw TypeError2("Exceed the acceptable array length");
              target[targetIndex] = element;
            }
            targetIndex++;
          }
          sourceIndex++;
        }
        return targetIndex;
      };
      module2.exports = flattenIntoArray;
    }
  });

  // node_modules/core-js/modules/es.array.flat.js
  var require_es_array_flat = __commonJS({
    "node_modules/core-js/modules/es.array.flat.js"() {
      "use strict";
      var $2 = require_export();
      var flattenIntoArray = require_flatten_into_array();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var arraySpeciesCreate = require_array_species_create();
      $2({ target: "Array", proto: true }, {
        flat: function flat2() {
          var depthArg = arguments.length ? arguments[0] : void 0;
          var O = toObject(this);
          var sourceLen = lengthOfArrayLike(O);
          var A = arraySpeciesCreate(O, 0);
          A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === void 0 ? 1 : toIntegerOrInfinity(depthArg));
          return A;
        }
      });
    }
  });

  // node_modules/core-js/modules/es.array.flat-map.js
  var require_es_array_flat_map = __commonJS({
    "node_modules/core-js/modules/es.array.flat-map.js"() {
      "use strict";
      var $2 = require_export();
      var flattenIntoArray = require_flatten_into_array();
      var aCallable = require_a_callable();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var arraySpeciesCreate = require_array_species_create();
      $2({ target: "Array", proto: true }, {
        flatMap: function flatMap2(callbackfn) {
          var O = toObject(this);
          var sourceLen = lengthOfArrayLike(O);
          var A;
          aCallable(callbackfn);
          A = arraySpeciesCreate(O, 0);
          A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
          return A;
        }
      });
    }
  });

  // node_modules/core-js/internals/array-for-each.js
  var require_array_for_each = __commonJS({
    "node_modules/core-js/internals/array-for-each.js"(exports2, module2) {
      "use strict";
      var $forEach = require_array_iteration().forEach;
      var arrayMethodIsStrict = require_array_method_is_strict();
      var STRICT_METHOD = arrayMethodIsStrict("forEach");
      module2.exports = !STRICT_METHOD ? function forEach6(callbackfn) {
        return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
      } : [].forEach;
    }
  });

  // node_modules/core-js/modules/es.array.for-each.js
  var require_es_array_for_each = __commonJS({
    "node_modules/core-js/modules/es.array.for-each.js"() {
      "use strict";
      var $2 = require_export();
      var forEach6 = require_array_for_each();
      $2({ target: "Array", proto: true, forced: [].forEach != forEach6 }, {
        forEach: forEach6
      });
    }
  });

  // node_modules/core-js/modules/es.array.includes.js
  var require_es_array_includes = __commonJS({
    "node_modules/core-js/modules/es.array.includes.js"() {
      "use strict";
      var $2 = require_export();
      var $includes = require_array_includes().includes;
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        includes: function includes(el) {
          return $includes(this, el, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      addToUnscopables("includes");
    }
  });

  // node_modules/core-js/modules/es.array.index-of.js
  var require_es_array_index_of = __commonJS({
    "node_modules/core-js/modules/es.array.index-of.js"() {
      "use strict";
      var $2 = require_export();
      var uncurryThis = require_function_uncurry_this();
      var $IndexOf = require_array_includes().indexOf;
      var arrayMethodIsStrict = require_array_method_is_strict();
      var un$IndexOf = uncurryThis([].indexOf);
      var NEGATIVE_ZERO = !!un$IndexOf && 1 / un$IndexOf([1], 1, -0) < 0;
      var STRICT_METHOD = arrayMethodIsStrict("indexOf");
      $2({ target: "Array", proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD }, {
        indexOf: function indexOf(searchElement) {
          var fromIndex = arguments.length > 1 ? arguments[1] : void 0;
          return NEGATIVE_ZERO ? un$IndexOf(this, searchElement, fromIndex) || 0 : $IndexOf(this, searchElement, fromIndex);
        }
      });
    }
  });

  // node_modules/core-js/internals/correct-prototype-getter.js
  var require_correct_prototype_getter = __commonJS({
    "node_modules/core-js/internals/correct-prototype-getter.js"(exports2, module2) {
      var fails = require_fails();
      module2.exports = !fails(function() {
        function F() {
        }
        F.prototype.constructor = null;
        return Object.getPrototypeOf(new F()) !== F.prototype;
      });
    }
  });

  // node_modules/core-js/internals/object-get-prototype-of.js
  var require_object_get_prototype_of = __commonJS({
    "node_modules/core-js/internals/object-get-prototype-of.js"(exports2, module2) {
      var global2 = require_global();
      var hasOwn2 = require_has_own_property();
      var isCallable = require_is_callable();
      var toObject = require_to_object();
      var sharedKey = require_shared_key();
      var CORRECT_PROTOTYPE_GETTER = require_correct_prototype_getter();
      var IE_PROTO = sharedKey("IE_PROTO");
      var Object2 = global2.Object;
      var ObjectPrototype = Object2.prototype;
      module2.exports = CORRECT_PROTOTYPE_GETTER ? Object2.getPrototypeOf : function(O) {
        var object = toObject(O);
        if (hasOwn2(object, IE_PROTO))
          return object[IE_PROTO];
        var constructor = object.constructor;
        if (isCallable(constructor) && object instanceof constructor) {
          return constructor.prototype;
        }
        return object instanceof Object2 ? ObjectPrototype : null;
      };
    }
  });

  // node_modules/core-js/internals/iterators-core.js
  var require_iterators_core = __commonJS({
    "node_modules/core-js/internals/iterators-core.js"(exports2, module2) {
      "use strict";
      var fails = require_fails();
      var isCallable = require_is_callable();
      var create5 = require_object_create();
      var getPrototypeOf = require_object_get_prototype_of();
      var redefine = require_redefine();
      var wellKnownSymbol = require_well_known_symbol();
      var IS_PURE = require_is_pure();
      var ITERATOR = wellKnownSymbol("iterator");
      var BUGGY_SAFARI_ITERATORS = false;
      var IteratorPrototype;
      var PrototypeOfArrayIteratorPrototype;
      var arrayIterator;
      if ([].keys) {
        arrayIterator = [].keys();
        if (!("next" in arrayIterator))
          BUGGY_SAFARI_ITERATORS = true;
        else {
          PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
          if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
            IteratorPrototype = PrototypeOfArrayIteratorPrototype;
        }
      }
      var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == void 0 || fails(function() {
        var test2 = {};
        return IteratorPrototype[ITERATOR].call(test2) !== test2;
      });
      if (NEW_ITERATOR_PROTOTYPE)
        IteratorPrototype = {};
      else if (IS_PURE)
        IteratorPrototype = create5(IteratorPrototype);
      if (!isCallable(IteratorPrototype[ITERATOR])) {
        redefine(IteratorPrototype, ITERATOR, function() {
          return this;
        });
      }
      module2.exports = {
        IteratorPrototype,
        BUGGY_SAFARI_ITERATORS
      };
    }
  });

  // node_modules/core-js/internals/set-to-string-tag.js
  var require_set_to_string_tag = __commonJS({
    "node_modules/core-js/internals/set-to-string-tag.js"(exports2, module2) {
      var defineProperty = require_object_define_property().f;
      var hasOwn2 = require_has_own_property();
      var wellKnownSymbol = require_well_known_symbol();
      var TO_STRING_TAG = wellKnownSymbol("toStringTag");
      module2.exports = function(it, TAG, STATIC) {
        if (it && !hasOwn2(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
          defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
        }
      };
    }
  });

  // node_modules/core-js/internals/create-iterator-constructor.js
  var require_create_iterator_constructor = __commonJS({
    "node_modules/core-js/internals/create-iterator-constructor.js"(exports2, module2) {
      "use strict";
      var IteratorPrototype = require_iterators_core().IteratorPrototype;
      var create5 = require_object_create();
      var createPropertyDescriptor = require_create_property_descriptor();
      var setToStringTag = require_set_to_string_tag();
      var Iterators = require_iterators();
      var returnThis3 = function() {
        return this;
      };
      module2.exports = function(IteratorConstructor, NAME, next) {
        var TO_STRING_TAG = NAME + " Iterator";
        IteratorConstructor.prototype = create5(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
        setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
        Iterators[TO_STRING_TAG] = returnThis3;
        return IteratorConstructor;
      };
    }
  });

  // node_modules/core-js/internals/a-possible-prototype.js
  var require_a_possible_prototype = __commonJS({
    "node_modules/core-js/internals/a-possible-prototype.js"(exports2, module2) {
      var global2 = require_global();
      var isCallable = require_is_callable();
      var String2 = global2.String;
      var TypeError2 = global2.TypeError;
      module2.exports = function(argument) {
        if (typeof argument == "object" || isCallable(argument))
          return argument;
        throw TypeError2("Can't set " + String2(argument) + " as a prototype");
      };
    }
  });

  // node_modules/core-js/internals/object-set-prototype-of.js
  var require_object_set_prototype_of = __commonJS({
    "node_modules/core-js/internals/object-set-prototype-of.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var anObject = require_an_object();
      var aPossiblePrototype = require_a_possible_prototype();
      module2.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var CORRECT_SETTER = false;
        var test2 = {};
        var setter;
        try {
          setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set);
          setter(test2, []);
          CORRECT_SETTER = test2 instanceof Array;
        } catch (error) {
        }
        return function setPrototypeOf2(O, proto) {
          anObject(O);
          aPossiblePrototype(proto);
          if (CORRECT_SETTER)
            setter(O, proto);
          else
            O.__proto__ = proto;
          return O;
        };
      }() : void 0);
    }
  });

  // node_modules/core-js/internals/define-iterator.js
  var require_define_iterator = __commonJS({
    "node_modules/core-js/internals/define-iterator.js"(exports2, module2) {
      "use strict";
      var $2 = require_export();
      var call = require_function_call();
      var IS_PURE = require_is_pure();
      var FunctionName = require_function_name();
      var isCallable = require_is_callable();
      var createIteratorConstructor = require_create_iterator_constructor();
      var getPrototypeOf = require_object_get_prototype_of();
      var setPrototypeOf2 = require_object_set_prototype_of();
      var setToStringTag = require_set_to_string_tag();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var redefine = require_redefine();
      var wellKnownSymbol = require_well_known_symbol();
      var Iterators = require_iterators();
      var IteratorsCore = require_iterators_core();
      var PROPER_FUNCTION_NAME = FunctionName.PROPER;
      var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
      var IteratorPrototype = IteratorsCore.IteratorPrototype;
      var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
      var ITERATOR = wellKnownSymbol("iterator");
      var KEYS = "keys";
      var VALUES = "values";
      var ENTRIES = "entries";
      var returnThis3 = function() {
        return this;
      };
      module2.exports = function(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
        createIteratorConstructor(IteratorConstructor, NAME, next);
        var getIterationMethod = function(KIND) {
          if (KIND === DEFAULT && defaultIterator)
            return defaultIterator;
          if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)
            return IterablePrototype[KIND];
          switch (KIND) {
            case KEYS:
              return function keys() {
                return new IteratorConstructor(this, KIND);
              };
            case VALUES:
              return function values2() {
                return new IteratorConstructor(this, KIND);
              };
            case ENTRIES:
              return function entries() {
                return new IteratorConstructor(this, KIND);
              };
          }
          return function() {
            return new IteratorConstructor(this);
          };
        };
        var TO_STRING_TAG = NAME + " Iterator";
        var INCORRECT_VALUES_NAME = false;
        var IterablePrototype = Iterable.prototype;
        var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
        var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
        var anyNativeIterator = NAME == "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
        var CurrentIteratorPrototype, methods, KEY;
        if (anyNativeIterator) {
          CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
          if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
            if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
              if (setPrototypeOf2) {
                setPrototypeOf2(CurrentIteratorPrototype, IteratorPrototype);
              } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
                redefine(CurrentIteratorPrototype, ITERATOR, returnThis3);
              }
            }
            setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
            if (IS_PURE)
              Iterators[TO_STRING_TAG] = returnThis3;
          }
        }
        if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
          if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
            createNonEnumerableProperty(IterablePrototype, "name", VALUES);
          } else {
            INCORRECT_VALUES_NAME = true;
            defaultIterator = function values2() {
              return call(nativeIterator, this);
            };
          }
        }
        if (DEFAULT) {
          methods = {
            values: getIterationMethod(VALUES),
            keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
            entries: getIterationMethod(ENTRIES)
          };
          if (FORCED)
            for (KEY in methods) {
              if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                redefine(IterablePrototype, KEY, methods[KEY]);
              }
            }
          else
            $2({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
        }
        if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
          redefine(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
        }
        Iterators[NAME] = defaultIterator;
        return methods;
      };
    }
  });

  // node_modules/core-js/modules/es.array.iterator.js
  var require_es_array_iterator = __commonJS({
    "node_modules/core-js/modules/es.array.iterator.js"(exports2, module2) {
      "use strict";
      var toIndexedObject = require_to_indexed_object();
      var addToUnscopables = require_add_to_unscopables();
      var Iterators = require_iterators();
      var InternalStateModule = require_internal_state();
      var defineIterator = require_define_iterator();
      var ARRAY_ITERATOR = "Array Iterator";
      var setInternalState = InternalStateModule.set;
      var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);
      module2.exports = defineIterator(Array, "Array", function(iterated, kind) {
        setInternalState(this, {
          type: ARRAY_ITERATOR,
          target: toIndexedObject(iterated),
          // target
          index: 0,
          // next index
          kind
          // kind
        });
      }, function() {
        var state = getInternalState(this);
        var target = state.target;
        var kind = state.kind;
        var index2 = state.index++;
        if (!target || index2 >= target.length) {
          state.target = void 0;
          return { value: void 0, done: true };
        }
        if (kind == "keys")
          return { value: index2, done: false };
        if (kind == "values")
          return { value: target[index2], done: false };
        return { value: [index2, target[index2]], done: false };
      }, "values");
      Iterators.Arguments = Iterators.Array;
      addToUnscopables("keys");
      addToUnscopables("values");
      addToUnscopables("entries");
    }
  });

  // node_modules/core-js/modules/es.array.join.js
  var require_es_array_join = __commonJS({
    "node_modules/core-js/modules/es.array.join.js"() {
      "use strict";
      var $2 = require_export();
      var uncurryThis = require_function_uncurry_this();
      var IndexedObject = require_indexed_object();
      var toIndexedObject = require_to_indexed_object();
      var arrayMethodIsStrict = require_array_method_is_strict();
      var un$Join = uncurryThis([].join);
      var ES3_STRINGS = IndexedObject != Object;
      var STRICT_METHOD = arrayMethodIsStrict("join", ",");
      $2({ target: "Array", proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {
        join: function join2(separator) {
          return un$Join(toIndexedObject(this), separator === void 0 ? "," : separator);
        }
      });
    }
  });

  // node_modules/core-js/internals/function-apply.js
  var require_function_apply = __commonJS({
    "node_modules/core-js/internals/function-apply.js"(exports2, module2) {
      var FunctionPrototype = Function.prototype;
      var apply = FunctionPrototype.apply;
      var bind3 = FunctionPrototype.bind;
      var call = FunctionPrototype.call;
      module2.exports = typeof Reflect == "object" && Reflect.apply || (bind3 ? call.bind(apply) : function() {
        return call.apply(apply, arguments);
      });
    }
  });

  // node_modules/core-js/internals/array-last-index-of.js
  var require_array_last_index_of = __commonJS({
    "node_modules/core-js/internals/array-last-index-of.js"(exports2, module2) {
      "use strict";
      var apply = require_function_apply();
      var toIndexedObject = require_to_indexed_object();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var lengthOfArrayLike = require_length_of_array_like();
      var arrayMethodIsStrict = require_array_method_is_strict();
      var min = Math.min;
      var $lastIndexOf = [].lastIndexOf;
      var NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
      var STRICT_METHOD = arrayMethodIsStrict("lastIndexOf");
      var FORCED = NEGATIVE_ZERO || !STRICT_METHOD;
      module2.exports = FORCED ? function lastIndexOf(searchElement) {
        if (NEGATIVE_ZERO)
          return apply($lastIndexOf, this, arguments) || 0;
        var O = toIndexedObject(this);
        var length2 = lengthOfArrayLike(O);
        var index2 = length2 - 1;
        if (arguments.length > 1)
          index2 = min(index2, toIntegerOrInfinity(arguments[1]));
        if (index2 < 0)
          index2 = length2 + index2;
        for (; index2 >= 0; index2--)
          if (index2 in O && O[index2] === searchElement)
            return index2 || 0;
        return -1;
      } : $lastIndexOf;
    }
  });

  // node_modules/core-js/modules/es.array.last-index-of.js
  var require_es_array_last_index_of = __commonJS({
    "node_modules/core-js/modules/es.array.last-index-of.js"() {
      var $2 = require_export();
      var lastIndexOf = require_array_last_index_of();
      $2({ target: "Array", proto: true, forced: lastIndexOf !== [].lastIndexOf }, {
        lastIndexOf
      });
    }
  });

  // node_modules/core-js/modules/es.array.map.js
  var require_es_array_map = __commonJS({
    "node_modules/core-js/modules/es.array.map.js"() {
      "use strict";
      var $2 = require_export();
      var $map = require_array_iteration().map;
      var arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
      var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("map");
      $2({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
        map: function map(callbackfn) {
          return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
    }
  });

  // node_modules/core-js/internals/array-reduce.js
  var require_array_reduce = __commonJS({
    "node_modules/core-js/internals/array-reduce.js"(exports2, module2) {
      var global2 = require_global();
      var aCallable = require_a_callable();
      var toObject = require_to_object();
      var IndexedObject = require_indexed_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var TypeError2 = global2.TypeError;
      var createMethod = function(IS_RIGHT) {
        return function(that, callbackfn, argumentsLength, memo) {
          aCallable(callbackfn);
          var O = toObject(that);
          var self2 = IndexedObject(O);
          var length2 = lengthOfArrayLike(O);
          var index2 = IS_RIGHT ? length2 - 1 : 0;
          var i = IS_RIGHT ? -1 : 1;
          if (argumentsLength < 2)
            while (true) {
              if (index2 in self2) {
                memo = self2[index2];
                index2 += i;
                break;
              }
              index2 += i;
              if (IS_RIGHT ? index2 < 0 : length2 <= index2) {
                throw TypeError2("Reduce of empty array with no initial value");
              }
            }
          for (; IS_RIGHT ? index2 >= 0 : length2 > index2; index2 += i)
            if (index2 in self2) {
              memo = callbackfn(memo, self2[index2], index2, O);
            }
          return memo;
        };
      };
      module2.exports = {
        // `Array.prototype.reduce` method
        // https://tc39.es/ecma262/#sec-array.prototype.reduce
        left: createMethod(false),
        // `Array.prototype.reduceRight` method
        // https://tc39.es/ecma262/#sec-array.prototype.reduceright
        right: createMethod(true)
      };
    }
  });

  // node_modules/core-js/internals/engine-is-node.js
  var require_engine_is_node = __commonJS({
    "node_modules/core-js/internals/engine-is-node.js"(exports2, module2) {
      var classof = require_classof_raw();
      var global2 = require_global();
      module2.exports = classof(global2.process) == "process";
    }
  });

  // node_modules/core-js/modules/es.array.reduce.js
  var require_es_array_reduce = __commonJS({
    "node_modules/core-js/modules/es.array.reduce.js"() {
      "use strict";
      var $2 = require_export();
      var $reduce = require_array_reduce().left;
      var arrayMethodIsStrict = require_array_method_is_strict();
      var CHROME_VERSION = require_engine_v8_version();
      var IS_NODE = require_engine_is_node();
      var STRICT_METHOD = arrayMethodIsStrict("reduce");
      var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;
      $2({ target: "Array", proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
        reduce: function reduce3(callbackfn) {
          var length2 = arguments.length;
          return $reduce(this, callbackfn, length2, length2 > 1 ? arguments[1] : void 0);
        }
      });
    }
  });

  // node_modules/core-js/modules/es.array.reduce-right.js
  var require_es_array_reduce_right = __commonJS({
    "node_modules/core-js/modules/es.array.reduce-right.js"() {
      "use strict";
      var $2 = require_export();
      var $reduceRight = require_array_reduce().right;
      var arrayMethodIsStrict = require_array_method_is_strict();
      var CHROME_VERSION = require_engine_v8_version();
      var IS_NODE = require_engine_is_node();
      var STRICT_METHOD = arrayMethodIsStrict("reduceRight");
      var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;
      $2({ target: "Array", proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
        reduceRight: function reduceRight(callbackfn) {
          return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
    }
  });

  // node_modules/core-js/modules/es.array.reverse.js
  var require_es_array_reverse = __commonJS({
    "node_modules/core-js/modules/es.array.reverse.js"() {
      "use strict";
      var $2 = require_export();
      var uncurryThis = require_function_uncurry_this();
      var isArray2 = require_is_array();
      var un$Reverse = uncurryThis([].reverse);
      var test2 = [1, 2];
      $2({ target: "Array", proto: true, forced: String(test2) === String(test2.reverse()) }, {
        reverse: function reverse() {
          if (isArray2(this))
            this.length = this.length;
          return un$Reverse(this);
        }
      });
    }
  });

  // node_modules/core-js/internals/array-slice.js
  var require_array_slice = __commonJS({
    "node_modules/core-js/internals/array-slice.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      module2.exports = uncurryThis([].slice);
    }
  });

  // node_modules/core-js/modules/es.array.slice.js
  var require_es_array_slice = __commonJS({
    "node_modules/core-js/modules/es.array.slice.js"() {
      "use strict";
      var $2 = require_export();
      var global2 = require_global();
      var isArray2 = require_is_array();
      var isConstructor = require_is_constructor();
      var isObject2 = require_is_object();
      var toAbsoluteIndex = require_to_absolute_index();
      var lengthOfArrayLike = require_length_of_array_like();
      var toIndexedObject = require_to_indexed_object();
      var createProperty = require_create_property();
      var wellKnownSymbol = require_well_known_symbol();
      var arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
      var un$Slice = require_array_slice();
      var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("slice");
      var SPECIES = wellKnownSymbol("species");
      var Array2 = global2.Array;
      var max = Math.max;
      $2({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
        slice: function slice3(start, end) {
          var O = toIndexedObject(this);
          var length2 = lengthOfArrayLike(O);
          var k = toAbsoluteIndex(start, length2);
          var fin = toAbsoluteIndex(end === void 0 ? length2 : end, length2);
          var Constructor, result2, n;
          if (isArray2(O)) {
            Constructor = O.constructor;
            if (isConstructor(Constructor) && (Constructor === Array2 || isArray2(Constructor.prototype))) {
              Constructor = void 0;
            } else if (isObject2(Constructor)) {
              Constructor = Constructor[SPECIES];
              if (Constructor === null)
                Constructor = void 0;
            }
            if (Constructor === Array2 || Constructor === void 0) {
              return un$Slice(O, k, fin);
            }
          }
          result2 = new (Constructor === void 0 ? Array2 : Constructor)(max(fin - k, 0));
          for (n = 0; k < fin; k++, n++)
            if (k in O)
              createProperty(result2, n, O[k]);
          result2.length = n;
          return result2;
        }
      });
    }
  });

  // node_modules/core-js/modules/es.array.some.js
  var require_es_array_some = __commonJS({
    "node_modules/core-js/modules/es.array.some.js"() {
      "use strict";
      var $2 = require_export();
      var $some = require_array_iteration().some;
      var arrayMethodIsStrict = require_array_method_is_strict();
      var STRICT_METHOD = arrayMethodIsStrict("some");
      $2({ target: "Array", proto: true, forced: !STRICT_METHOD }, {
        some: function some(callbackfn) {
          return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
    }
  });

  // node_modules/core-js/internals/to-string.js
  var require_to_string = __commonJS({
    "node_modules/core-js/internals/to-string.js"(exports2, module2) {
      var global2 = require_global();
      var classof = require_classof();
      var String2 = global2.String;
      module2.exports = function(argument) {
        if (classof(argument) === "Symbol")
          throw TypeError("Cannot convert a Symbol value to a string");
        return String2(argument);
      };
    }
  });

  // node_modules/core-js/internals/array-sort.js
  var require_array_sort = __commonJS({
    "node_modules/core-js/internals/array-sort.js"(exports2, module2) {
      var arraySlice = require_array_slice();
      var floor = Math.floor;
      var mergeSort = function(array, comparefn) {
        var length2 = array.length;
        var middle = floor(length2 / 2);
        return length2 < 8 ? insertionSort(array, comparefn) : merge4(
          array,
          mergeSort(arraySlice(array, 0, middle), comparefn),
          mergeSort(arraySlice(array, middle), comparefn),
          comparefn
        );
      };
      var insertionSort = function(array, comparefn) {
        var length2 = array.length;
        var i = 1;
        var element, j;
        while (i < length2) {
          j = i;
          element = array[i];
          while (j && comparefn(array[j - 1], element) > 0) {
            array[j] = array[--j];
          }
          if (j !== i++)
            array[j] = element;
        }
        return array;
      };
      var merge4 = function(array, left, right, comparefn) {
        var llength = left.length;
        var rlength = right.length;
        var lindex = 0;
        var rindex = 0;
        while (lindex < llength || rindex < rlength) {
          array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
        }
        return array;
      };
      module2.exports = mergeSort;
    }
  });

  // node_modules/core-js/internals/engine-ff-version.js
  var require_engine_ff_version = __commonJS({
    "node_modules/core-js/internals/engine-ff-version.js"(exports2, module2) {
      var userAgent = require_engine_user_agent();
      var firefox = userAgent.match(/firefox\/(\d+)/i);
      module2.exports = !!firefox && +firefox[1];
    }
  });

  // node_modules/core-js/internals/engine-is-ie-or-edge.js
  var require_engine_is_ie_or_edge = __commonJS({
    "node_modules/core-js/internals/engine-is-ie-or-edge.js"(exports2, module2) {
      var UA = require_engine_user_agent();
      module2.exports = /MSIE|Trident/.test(UA);
    }
  });

  // node_modules/core-js/internals/engine-webkit-version.js
  var require_engine_webkit_version = __commonJS({
    "node_modules/core-js/internals/engine-webkit-version.js"(exports2, module2) {
      var userAgent = require_engine_user_agent();
      var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
      module2.exports = !!webkit && +webkit[1];
    }
  });

  // node_modules/core-js/modules/es.array.sort.js
  var require_es_array_sort = __commonJS({
    "node_modules/core-js/modules/es.array.sort.js"() {
      "use strict";
      var $2 = require_export();
      var uncurryThis = require_function_uncurry_this();
      var aCallable = require_a_callable();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var toString3 = require_to_string();
      var fails = require_fails();
      var internalSort = require_array_sort();
      var arrayMethodIsStrict = require_array_method_is_strict();
      var FF = require_engine_ff_version();
      var IE_OR_EDGE = require_engine_is_ie_or_edge();
      var V8 = require_engine_v8_version();
      var WEBKIT = require_engine_webkit_version();
      var test2 = [];
      var un$Sort = uncurryThis(test2.sort);
      var push = uncurryThis(test2.push);
      var FAILS_ON_UNDEFINED = fails(function() {
        test2.sort(void 0);
      });
      var FAILS_ON_NULL = fails(function() {
        test2.sort(null);
      });
      var STRICT_METHOD = arrayMethodIsStrict("sort");
      var STABLE_SORT = !fails(function() {
        if (V8)
          return V8 < 70;
        if (FF && FF > 3)
          return;
        if (IE_OR_EDGE)
          return true;
        if (WEBKIT)
          return WEBKIT < 603;
        var result2 = "";
        var code, chr, value2, index2;
        for (code = 65; code < 76; code++) {
          chr = String.fromCharCode(code);
          switch (code) {
            case 66:
            case 69:
            case 70:
            case 72:
              value2 = 3;
              break;
            case 68:
            case 71:
              value2 = 4;
              break;
            default:
              value2 = 2;
          }
          for (index2 = 0; index2 < 47; index2++) {
            test2.push({ k: chr + index2, v: value2 });
          }
        }
        test2.sort(function(a, b) {
          return b.v - a.v;
        });
        for (index2 = 0; index2 < test2.length; index2++) {
          chr = test2[index2].k.charAt(0);
          if (result2.charAt(result2.length - 1) !== chr)
            result2 += chr;
        }
        return result2 !== "DGBEFHACIJK";
      });
      var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;
      var getSortCompare = function(comparefn) {
        return function(x, y) {
          if (y === void 0)
            return -1;
          if (x === void 0)
            return 1;
          if (comparefn !== void 0)
            return +comparefn(x, y) || 0;
          return toString3(x) > toString3(y) ? 1 : -1;
        };
      };
      $2({ target: "Array", proto: true, forced: FORCED }, {
        sort: function sort(comparefn) {
          if (comparefn !== void 0)
            aCallable(comparefn);
          var array = toObject(this);
          if (STABLE_SORT)
            return comparefn === void 0 ? un$Sort(array) : un$Sort(array, comparefn);
          var items = [];
          var arrayLength = lengthOfArrayLike(array);
          var itemsLength, index2;
          for (index2 = 0; index2 < arrayLength; index2++) {
            if (index2 in array)
              push(items, array[index2]);
          }
          internalSort(items, getSortCompare(comparefn));
          itemsLength = items.length;
          index2 = 0;
          while (index2 < itemsLength)
            array[index2] = items[index2++];
          while (index2 < arrayLength)
            delete array[index2++];
          return array;
        }
      });
    }
  });

  // node_modules/core-js/internals/set-species.js
  var require_set_species = __commonJS({
    "node_modules/core-js/internals/set-species.js"(exports2, module2) {
      "use strict";
      var getBuiltIn = require_get_built_in();
      var definePropertyModule = require_object_define_property();
      var wellKnownSymbol = require_well_known_symbol();
      var DESCRIPTORS = require_descriptors();
      var SPECIES = wellKnownSymbol("species");
      module2.exports = function(CONSTRUCTOR_NAME) {
        var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
        var defineProperty = definePropertyModule.f;
        if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
          defineProperty(Constructor, SPECIES, {
            configurable: true,
            get: function() {
              return this;
            }
          });
        }
      };
    }
  });

  // node_modules/core-js/modules/es.array.species.js
  var require_es_array_species = __commonJS({
    "node_modules/core-js/modules/es.array.species.js"() {
      var setSpecies = require_set_species();
      setSpecies("Array");
    }
  });

  // node_modules/core-js/modules/es.array.splice.js
  var require_es_array_splice = __commonJS({
    "node_modules/core-js/modules/es.array.splice.js"() {
      "use strict";
      var $2 = require_export();
      var global2 = require_global();
      var toAbsoluteIndex = require_to_absolute_index();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var lengthOfArrayLike = require_length_of_array_like();
      var toObject = require_to_object();
      var arraySpeciesCreate = require_array_species_create();
      var createProperty = require_create_property();
      var arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
      var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("splice");
      var TypeError2 = global2.TypeError;
      var max = Math.max;
      var min = Math.min;
      var MAX_SAFE_INTEGER = 9007199254740991;
      var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = "Maximum allowed length exceeded";
      $2({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
        splice: function splice(start, deleteCount) {
          var O = toObject(this);
          var len = lengthOfArrayLike(O);
          var actualStart = toAbsoluteIndex(start, len);
          var argumentsLength = arguments.length;
          var insertCount, actualDeleteCount, A, k, from, to;
          if (argumentsLength === 0) {
            insertCount = actualDeleteCount = 0;
          } else if (argumentsLength === 1) {
            insertCount = 0;
            actualDeleteCount = len - actualStart;
          } else {
            insertCount = argumentsLength - 2;
            actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
          }
          if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
            throw TypeError2(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
          }
          A = arraySpeciesCreate(O, actualDeleteCount);
          for (k = 0; k < actualDeleteCount; k++) {
            from = actualStart + k;
            if (from in O)
              createProperty(A, k, O[from]);
          }
          A.length = actualDeleteCount;
          if (insertCount < actualDeleteCount) {
            for (k = actualStart; k < len - actualDeleteCount; k++) {
              from = k + actualDeleteCount;
              to = k + insertCount;
              if (from in O)
                O[to] = O[from];
              else
                delete O[to];
            }
            for (k = len; k > len - actualDeleteCount + insertCount; k--)
              delete O[k - 1];
          } else if (insertCount > actualDeleteCount) {
            for (k = len - actualDeleteCount; k > actualStart; k--) {
              from = k + actualDeleteCount - 1;
              to = k + insertCount - 1;
              if (from in O)
                O[to] = O[from];
              else
                delete O[to];
            }
          }
          for (k = 0; k < insertCount; k++) {
            O[k + actualStart] = arguments[k + 2];
          }
          O.length = len - actualDeleteCount + insertCount;
          return A;
        }
      });
    }
  });

  // node_modules/core-js/modules/es.array.unscopables.flat.js
  var require_es_array_unscopables_flat = __commonJS({
    "node_modules/core-js/modules/es.array.unscopables.flat.js"() {
      var addToUnscopables = require_add_to_unscopables();
      addToUnscopables("flat");
    }
  });

  // node_modules/core-js/modules/es.array.unscopables.flat-map.js
  var require_es_array_unscopables_flat_map = __commonJS({
    "node_modules/core-js/modules/es.array.unscopables.flat-map.js"() {
      var addToUnscopables = require_add_to_unscopables();
      addToUnscopables("flatMap");
    }
  });

  // node_modules/core-js/internals/object-to-string.js
  var require_object_to_string = __commonJS({
    "node_modules/core-js/internals/object-to-string.js"(exports2, module2) {
      "use strict";
      var TO_STRING_TAG_SUPPORT = require_to_string_tag_support();
      var classof = require_classof();
      module2.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString3() {
        return "[object " + classof(this) + "]";
      };
    }
  });

  // node_modules/core-js/modules/es.object.to-string.js
  var require_es_object_to_string = __commonJS({
    "node_modules/core-js/modules/es.object.to-string.js"() {
      var TO_STRING_TAG_SUPPORT = require_to_string_tag_support();
      var redefine = require_redefine();
      var toString3 = require_object_to_string();
      if (!TO_STRING_TAG_SUPPORT) {
        redefine(Object.prototype, "toString", toString3, { unsafe: true });
      }
    }
  });

  // node_modules/core-js/internals/string-multibyte.js
  var require_string_multibyte = __commonJS({
    "node_modules/core-js/internals/string-multibyte.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var toString3 = require_to_string();
      var requireObjectCoercible = require_require_object_coercible();
      var charAt = uncurryThis("".charAt);
      var charCodeAt = uncurryThis("".charCodeAt);
      var stringSlice = uncurryThis("".slice);
      var createMethod = function(CONVERT_TO_STRING) {
        return function($this, pos) {
          var S = toString3(requireObjectCoercible($this));
          var position2 = toIntegerOrInfinity(pos);
          var size2 = S.length;
          var first, second;
          if (position2 < 0 || position2 >= size2)
            return CONVERT_TO_STRING ? "" : void 0;
          first = charCodeAt(S, position2);
          return first < 55296 || first > 56319 || position2 + 1 === size2 || (second = charCodeAt(S, position2 + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? charAt(S, position2) : first : CONVERT_TO_STRING ? stringSlice(S, position2, position2 + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
        };
      };
      module2.exports = {
        // `String.prototype.codePointAt` method
        // https://tc39.es/ecma262/#sec-string.prototype.codepointat
        codeAt: createMethod(false),
        // `String.prototype.at` method
        // https://github.com/mathiasbynens/String.prototype.at
        charAt: createMethod(true)
      };
    }
  });

  // node_modules/core-js/modules/es.string.iterator.js
  var require_es_string_iterator = __commonJS({
    "node_modules/core-js/modules/es.string.iterator.js"() {
      "use strict";
      var charAt = require_string_multibyte().charAt;
      var toString3 = require_to_string();
      var InternalStateModule = require_internal_state();
      var defineIterator = require_define_iterator();
      var STRING_ITERATOR = "String Iterator";
      var setInternalState = InternalStateModule.set;
      var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);
      defineIterator(String, "String", function(iterated) {
        setInternalState(this, {
          type: STRING_ITERATOR,
          string: toString3(iterated),
          index: 0
        });
      }, function next() {
        var state = getInternalState(this);
        var string = state.string;
        var index2 = state.index;
        var point;
        if (index2 >= string.length)
          return { value: void 0, done: true };
        point = charAt(string, index2);
        state.index += point.length;
        return { value: point, done: false };
      });
    }
  });

  // node_modules/core-js/internals/path.js
  var require_path = __commonJS({
    "node_modules/core-js/internals/path.js"(exports2, module2) {
      var global2 = require_global();
      module2.exports = global2;
    }
  });

  // node_modules/core-js/es/array/index.js
  var require_array = __commonJS({
    "node_modules/core-js/es/array/index.js"(exports2, module2) {
      require_es_array_from();
      require_es_array_is_array();
      require_es_array_of();
      require_es_array_at();
      require_es_array_concat();
      require_es_array_copy_within();
      require_es_array_every();
      require_es_array_fill();
      require_es_array_filter();
      require_es_array_find();
      require_es_array_find_index();
      require_es_array_flat();
      require_es_array_flat_map();
      require_es_array_for_each();
      require_es_array_includes();
      require_es_array_index_of();
      require_es_array_iterator();
      require_es_array_join();
      require_es_array_last_index_of();
      require_es_array_map();
      require_es_array_reduce();
      require_es_array_reduce_right();
      require_es_array_reverse();
      require_es_array_slice();
      require_es_array_some();
      require_es_array_sort();
      require_es_array_species();
      require_es_array_splice();
      require_es_array_unscopables_flat();
      require_es_array_unscopables_flat_map();
      require_es_object_to_string();
      require_es_string_iterator();
      var path = require_path();
      module2.exports = path.Array;
    }
  });

  // node_modules/core-js/stable/array/index.js
  var require_array2 = __commonJS({
    "node_modules/core-js/stable/array/index.js"(exports2, module2) {
      var parent2 = require_array();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/internals/object-get-own-property-names-external.js
  var require_object_get_own_property_names_external = __commonJS({
    "node_modules/core-js/internals/object-get-own-property-names-external.js"(exports2, module2) {
      var classof = require_classof_raw();
      var toIndexedObject = require_to_indexed_object();
      var $getOwnPropertyNames = require_object_get_own_property_names().f;
      var arraySlice = require_array_slice();
      var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      var getWindowNames = function(it) {
        try {
          return $getOwnPropertyNames(it);
        } catch (error) {
          return arraySlice(windowNames);
        }
      };
      module2.exports.f = function getOwnPropertyNames(it) {
        return windowNames && classof(it) == "Window" ? getWindowNames(it) : $getOwnPropertyNames(toIndexedObject(it));
      };
    }
  });

  // node_modules/core-js/internals/freezing.js
  var require_freezing = __commonJS({
    "node_modules/core-js/internals/freezing.js"(exports2, module2) {
      var fails = require_fails();
      module2.exports = !fails(function() {
        return Object.isExtensible(Object.preventExtensions({}));
      });
    }
  });

  // node_modules/core-js/internals/internal-metadata.js
  var require_internal_metadata = __commonJS({
    "node_modules/core-js/internals/internal-metadata.js"(exports2, module2) {
      var $2 = require_export();
      var uncurryThis = require_function_uncurry_this();
      var hiddenKeys = require_hidden_keys();
      var isObject2 = require_is_object();
      var hasOwn2 = require_has_own_property();
      var defineProperty = require_object_define_property().f;
      var getOwnPropertyNamesModule = require_object_get_own_property_names();
      var getOwnPropertyNamesExternalModule = require_object_get_own_property_names_external();
      var uid = require_uid();
      var FREEZING = require_freezing();
      var REQUIRED = false;
      var METADATA = uid("meta");
      var id = 0;
      var isExtensible = Object.isExtensible || function() {
        return true;
      };
      var setMetadata = function(it) {
        defineProperty(it, METADATA, { value: {
          objectID: "O" + id++,
          // object ID
          weakData: {}
          // weak collections IDs
        } });
      };
      var fastKey = function(it, create5) {
        if (!isObject2(it))
          return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
        if (!hasOwn2(it, METADATA)) {
          if (!isExtensible(it))
            return "F";
          if (!create5)
            return "E";
          setMetadata(it);
        }
        return it[METADATA].objectID;
      };
      var getWeakData = function(it, create5) {
        if (!hasOwn2(it, METADATA)) {
          if (!isExtensible(it))
            return true;
          if (!create5)
            return false;
          setMetadata(it);
        }
        return it[METADATA].weakData;
      };
      var onFreeze = function(it) {
        if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn2(it, METADATA))
          setMetadata(it);
        return it;
      };
      var enable = function() {
        meta.enable = function() {
        };
        REQUIRED = true;
        var getOwnPropertyNames = getOwnPropertyNamesModule.f;
        var splice = uncurryThis([].splice);
        var test2 = {};
        test2[METADATA] = 1;
        if (getOwnPropertyNames(test2).length) {
          getOwnPropertyNamesModule.f = function(it) {
            var result2 = getOwnPropertyNames(it);
            for (var i = 0, length2 = result2.length; i < length2; i++) {
              if (result2[i] === METADATA) {
                splice(result2, i, 1);
                break;
              }
            }
            return result2;
          };
          $2({ target: "Object", stat: true, forced: true }, {
            getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
          });
        }
      };
      var meta = module2.exports = {
        enable,
        fastKey,
        getWeakData,
        onFreeze
      };
      hiddenKeys[METADATA] = true;
    }
  });

  // node_modules/core-js/internals/iterate.js
  var require_iterate = __commonJS({
    "node_modules/core-js/internals/iterate.js"(exports2, module2) {
      var global2 = require_global();
      var bind3 = require_function_bind_context();
      var call = require_function_call();
      var anObject = require_an_object();
      var tryToString = require_try_to_string();
      var isArrayIteratorMethod = require_is_array_iterator_method();
      var lengthOfArrayLike = require_length_of_array_like();
      var isPrototypeOf = require_object_is_prototype_of();
      var getIterator = require_get_iterator();
      var getIteratorMethod = require_get_iterator_method();
      var iteratorClose = require_iterator_close();
      var TypeError2 = global2.TypeError;
      var Result = function(stopped, result2) {
        this.stopped = stopped;
        this.result = result2;
      };
      var ResultPrototype = Result.prototype;
      module2.exports = function(iterable, unboundFunction, options) {
        var that = options && options.that;
        var AS_ENTRIES = !!(options && options.AS_ENTRIES);
        var IS_ITERATOR = !!(options && options.IS_ITERATOR);
        var INTERRUPTED = !!(options && options.INTERRUPTED);
        var fn = bind3(unboundFunction, that);
        var iterator, iterFn, index2, length2, result2, next, step;
        var stop = function(condition) {
          if (iterator)
            iteratorClose(iterator, "normal", condition);
          return new Result(true, condition);
        };
        var callFn = function(value2) {
          if (AS_ENTRIES) {
            anObject(value2);
            return INTERRUPTED ? fn(value2[0], value2[1], stop) : fn(value2[0], value2[1]);
          }
          return INTERRUPTED ? fn(value2, stop) : fn(value2);
        };
        if (IS_ITERATOR) {
          iterator = iterable;
        } else {
          iterFn = getIteratorMethod(iterable);
          if (!iterFn)
            throw TypeError2(tryToString(iterable) + " is not iterable");
          if (isArrayIteratorMethod(iterFn)) {
            for (index2 = 0, length2 = lengthOfArrayLike(iterable); length2 > index2; index2++) {
              result2 = callFn(iterable[index2]);
              if (result2 && isPrototypeOf(ResultPrototype, result2))
                return result2;
            }
            return new Result(false);
          }
          iterator = getIterator(iterable, iterFn);
        }
        next = iterator.next;
        while (!(step = call(next, iterator)).done) {
          try {
            result2 = callFn(step.value);
          } catch (error) {
            iteratorClose(iterator, "throw", error);
          }
          if (typeof result2 == "object" && result2 && isPrototypeOf(ResultPrototype, result2))
            return result2;
        }
        return new Result(false);
      };
    }
  });

  // node_modules/core-js/internals/an-instance.js
  var require_an_instance = __commonJS({
    "node_modules/core-js/internals/an-instance.js"(exports2, module2) {
      var global2 = require_global();
      var isPrototypeOf = require_object_is_prototype_of();
      var TypeError2 = global2.TypeError;
      module2.exports = function(it, Prototype) {
        if (isPrototypeOf(Prototype, it))
          return it;
        throw TypeError2("Incorrect invocation");
      };
    }
  });

  // node_modules/core-js/internals/inherit-if-required.js
  var require_inherit_if_required = __commonJS({
    "node_modules/core-js/internals/inherit-if-required.js"(exports2, module2) {
      var isCallable = require_is_callable();
      var isObject2 = require_is_object();
      var setPrototypeOf2 = require_object_set_prototype_of();
      module2.exports = function($this, dummy, Wrapper) {
        var NewTarget, NewTargetPrototype;
        if (
          // it can work only with native `setPrototypeOf`
          setPrototypeOf2 && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
          isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject2(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype
        )
          setPrototypeOf2($this, NewTargetPrototype);
        return $this;
      };
    }
  });

  // node_modules/core-js/internals/collection.js
  var require_collection = __commonJS({
    "node_modules/core-js/internals/collection.js"(exports2, module2) {
      "use strict";
      var $2 = require_export();
      var global2 = require_global();
      var uncurryThis = require_function_uncurry_this();
      var isForced = require_is_forced();
      var redefine = require_redefine();
      var InternalMetadataModule = require_internal_metadata();
      var iterate = require_iterate();
      var anInstance = require_an_instance();
      var isCallable = require_is_callable();
      var isObject2 = require_is_object();
      var fails = require_fails();
      var checkCorrectnessOfIteration = require_check_correctness_of_iteration();
      var setToStringTag = require_set_to_string_tag();
      var inheritIfRequired = require_inherit_if_required();
      module2.exports = function(CONSTRUCTOR_NAME, wrapper, common) {
        var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
        var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
        var ADDER = IS_MAP ? "set" : "add";
        var NativeConstructor = global2[CONSTRUCTOR_NAME];
        var NativePrototype = NativeConstructor && NativeConstructor.prototype;
        var Constructor = NativeConstructor;
        var exported = {};
        var fixMethod = function(KEY) {
          var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);
          redefine(
            NativePrototype,
            KEY,
            KEY == "add" ? function add2(value2) {
              uncurriedNativeMethod(this, value2 === 0 ? 0 : value2);
              return this;
            } : KEY == "delete" ? function(key2) {
              return IS_WEAK && !isObject2(key2) ? false : uncurriedNativeMethod(this, key2 === 0 ? 0 : key2);
            } : KEY == "get" ? function get8(key2) {
              return IS_WEAK && !isObject2(key2) ? void 0 : uncurriedNativeMethod(this, key2 === 0 ? 0 : key2);
            } : KEY == "has" ? function has(key2) {
              return IS_WEAK && !isObject2(key2) ? false : uncurriedNativeMethod(this, key2 === 0 ? 0 : key2);
            } : function set3(key2, value2) {
              uncurriedNativeMethod(this, key2 === 0 ? 0 : key2, value2);
              return this;
            }
          );
        };
        var REPLACE = isForced(
          CONSTRUCTOR_NAME,
          !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function() {
            new NativeConstructor().entries().next();
          }))
        );
        if (REPLACE) {
          Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
          InternalMetadataModule.enable();
        } else if (isForced(CONSTRUCTOR_NAME, true)) {
          var instance = new Constructor();
          var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
          var THROWS_ON_PRIMITIVES = fails(function() {
            instance.has(1);
          });
          var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function(iterable) {
            new NativeConstructor(iterable);
          });
          var BUGGY_ZERO = !IS_WEAK && fails(function() {
            var $instance = new NativeConstructor();
            var index2 = 5;
            while (index2--)
              $instance[ADDER](index2, index2);
            return !$instance.has(-0);
          });
          if (!ACCEPT_ITERABLES) {
            Constructor = wrapper(function(dummy, iterable) {
              anInstance(dummy, NativePrototype);
              var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
              if (iterable != void 0)
                iterate(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
              return that;
            });
            Constructor.prototype = NativePrototype;
            NativePrototype.constructor = Constructor;
          }
          if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
            fixMethod("delete");
            fixMethod("has");
            IS_MAP && fixMethod("get");
          }
          if (BUGGY_ZERO || HASNT_CHAINING)
            fixMethod(ADDER);
          if (IS_WEAK && NativePrototype.clear)
            delete NativePrototype.clear;
        }
        exported[CONSTRUCTOR_NAME] = Constructor;
        $2({ global: true, forced: Constructor != NativeConstructor }, exported);
        setToStringTag(Constructor, CONSTRUCTOR_NAME);
        if (!IS_WEAK)
          common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
        return Constructor;
      };
    }
  });

  // node_modules/core-js/internals/redefine-all.js
  var require_redefine_all = __commonJS({
    "node_modules/core-js/internals/redefine-all.js"(exports2, module2) {
      var redefine = require_redefine();
      module2.exports = function(target, src, options) {
        for (var key2 in src)
          redefine(target, key2, src[key2], options);
        return target;
      };
    }
  });

  // node_modules/core-js/internals/collection-strong.js
  var require_collection_strong = __commonJS({
    "node_modules/core-js/internals/collection-strong.js"(exports2, module2) {
      "use strict";
      var defineProperty = require_object_define_property().f;
      var create5 = require_object_create();
      var redefineAll = require_redefine_all();
      var bind3 = require_function_bind_context();
      var anInstance = require_an_instance();
      var iterate = require_iterate();
      var defineIterator = require_define_iterator();
      var setSpecies = require_set_species();
      var DESCRIPTORS = require_descriptors();
      var fastKey = require_internal_metadata().fastKey;
      var InternalStateModule = require_internal_state();
      var setInternalState = InternalStateModule.set;
      var internalStateGetterFor = InternalStateModule.getterFor;
      module2.exports = {
        getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
          var Constructor = wrapper(function(that, iterable) {
            anInstance(that, Prototype);
            setInternalState(that, {
              type: CONSTRUCTOR_NAME,
              index: create5(null),
              first: void 0,
              last: void 0,
              size: 0
            });
            if (!DESCRIPTORS)
              that.size = 0;
            if (iterable != void 0)
              iterate(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
          });
          var Prototype = Constructor.prototype;
          var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);
          var define2 = function(that, key2, value2) {
            var state = getInternalState(that);
            var entry = getEntry(that, key2);
            var previous, index2;
            if (entry) {
              entry.value = value2;
            } else {
              state.last = entry = {
                index: index2 = fastKey(key2, true),
                key: key2,
                value: value2,
                previous: previous = state.last,
                next: void 0,
                removed: false
              };
              if (!state.first)
                state.first = entry;
              if (previous)
                previous.next = entry;
              if (DESCRIPTORS)
                state.size++;
              else
                that.size++;
              if (index2 !== "F")
                state.index[index2] = entry;
            }
            return that;
          };
          var getEntry = function(that, key2) {
            var state = getInternalState(that);
            var index2 = fastKey(key2);
            var entry;
            if (index2 !== "F")
              return state.index[index2];
            for (entry = state.first; entry; entry = entry.next) {
              if (entry.key == key2)
                return entry;
            }
          };
          redefineAll(Prototype, {
            // `{ Map, Set }.prototype.clear()` methods
            // https://tc39.es/ecma262/#sec-map.prototype.clear
            // https://tc39.es/ecma262/#sec-set.prototype.clear
            clear: function clear() {
              var that = this;
              var state = getInternalState(that);
              var data2 = state.index;
              var entry = state.first;
              while (entry) {
                entry.removed = true;
                if (entry.previous)
                  entry.previous = entry.previous.next = void 0;
                delete data2[entry.index];
                entry = entry.next;
              }
              state.first = state.last = void 0;
              if (DESCRIPTORS)
                state.size = 0;
              else
                that.size = 0;
            },
            // `{ Map, Set }.prototype.delete(key)` methods
            // https://tc39.es/ecma262/#sec-map.prototype.delete
            // https://tc39.es/ecma262/#sec-set.prototype.delete
            "delete": function(key2) {
              var that = this;
              var state = getInternalState(that);
              var entry = getEntry(that, key2);
              if (entry) {
                var next = entry.next;
                var prev = entry.previous;
                delete state.index[entry.index];
                entry.removed = true;
                if (prev)
                  prev.next = next;
                if (next)
                  next.previous = prev;
                if (state.first == entry)
                  state.first = next;
                if (state.last == entry)
                  state.last = prev;
                if (DESCRIPTORS)
                  state.size--;
                else
                  that.size--;
              }
              return !!entry;
            },
            // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
            // https://tc39.es/ecma262/#sec-map.prototype.foreach
            // https://tc39.es/ecma262/#sec-set.prototype.foreach
            forEach: function forEach6(callbackfn) {
              var state = getInternalState(this);
              var boundFunction = bind3(callbackfn, arguments.length > 1 ? arguments[1] : void 0);
              var entry;
              while (entry = entry ? entry.next : state.first) {
                boundFunction(entry.value, entry.key, this);
                while (entry && entry.removed)
                  entry = entry.previous;
              }
            },
            // `{ Map, Set}.prototype.has(key)` methods
            // https://tc39.es/ecma262/#sec-map.prototype.has
            // https://tc39.es/ecma262/#sec-set.prototype.has
            has: function has(key2) {
              return !!getEntry(this, key2);
            }
          });
          redefineAll(Prototype, IS_MAP ? {
            // `Map.prototype.get(key)` method
            // https://tc39.es/ecma262/#sec-map.prototype.get
            get: function get8(key2) {
              var entry = getEntry(this, key2);
              return entry && entry.value;
            },
            // `Map.prototype.set(key, value)` method
            // https://tc39.es/ecma262/#sec-map.prototype.set
            set: function set3(key2, value2) {
              return define2(this, key2 === 0 ? 0 : key2, value2);
            }
          } : {
            // `Set.prototype.add(value)` method
            // https://tc39.es/ecma262/#sec-set.prototype.add
            add: function add2(value2) {
              return define2(this, value2 = value2 === 0 ? 0 : value2, value2);
            }
          });
          if (DESCRIPTORS)
            defineProperty(Prototype, "size", {
              get: function() {
                return getInternalState(this).size;
              }
            });
          return Constructor;
        },
        setStrong: function(Constructor, CONSTRUCTOR_NAME, IS_MAP) {
          var ITERATOR_NAME = CONSTRUCTOR_NAME + " Iterator";
          var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
          var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
          defineIterator(Constructor, CONSTRUCTOR_NAME, function(iterated, kind) {
            setInternalState(this, {
              type: ITERATOR_NAME,
              target: iterated,
              state: getInternalCollectionState(iterated),
              kind,
              last: void 0
            });
          }, function() {
            var state = getInternalIteratorState(this);
            var kind = state.kind;
            var entry = state.last;
            while (entry && entry.removed)
              entry = entry.previous;
            if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
              state.target = void 0;
              return { value: void 0, done: true };
            }
            if (kind == "keys")
              return { value: entry.key, done: false };
            if (kind == "values")
              return { value: entry.value, done: false };
            return { value: [entry.key, entry.value], done: false };
          }, IS_MAP ? "entries" : "values", !IS_MAP, true);
          setSpecies(CONSTRUCTOR_NAME);
        }
      };
    }
  });

  // node_modules/core-js/modules/es.map.js
  var require_es_map = __commonJS({
    "node_modules/core-js/modules/es.map.js"() {
      "use strict";
      var collection = require_collection();
      var collectionStrong = require_collection_strong();
      collection("Map", function(init3) {
        return function Map2() {
          return init3(this, arguments.length ? arguments[0] : void 0);
        };
      }, collectionStrong);
    }
  });

  // node_modules/core-js/internals/native-promise-constructor.js
  var require_native_promise_constructor = __commonJS({
    "node_modules/core-js/internals/native-promise-constructor.js"(exports2, module2) {
      var global2 = require_global();
      module2.exports = global2.Promise;
    }
  });

  // node_modules/core-js/internals/a-constructor.js
  var require_a_constructor = __commonJS({
    "node_modules/core-js/internals/a-constructor.js"(exports2, module2) {
      var global2 = require_global();
      var isConstructor = require_is_constructor();
      var tryToString = require_try_to_string();
      var TypeError2 = global2.TypeError;
      module2.exports = function(argument) {
        if (isConstructor(argument))
          return argument;
        throw TypeError2(tryToString(argument) + " is not a constructor");
      };
    }
  });

  // node_modules/core-js/internals/species-constructor.js
  var require_species_constructor = __commonJS({
    "node_modules/core-js/internals/species-constructor.js"(exports2, module2) {
      var anObject = require_an_object();
      var aConstructor = require_a_constructor();
      var wellKnownSymbol = require_well_known_symbol();
      var SPECIES = wellKnownSymbol("species");
      module2.exports = function(O, defaultConstructor) {
        var C = anObject(O).constructor;
        var S;
        return C === void 0 || (S = anObject(C)[SPECIES]) == void 0 ? defaultConstructor : aConstructor(S);
      };
    }
  });

  // node_modules/core-js/internals/engine-is-ios.js
  var require_engine_is_ios = __commonJS({
    "node_modules/core-js/internals/engine-is-ios.js"(exports2, module2) {
      var userAgent = require_engine_user_agent();
      module2.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);
    }
  });

  // node_modules/core-js/internals/task.js
  var require_task = __commonJS({
    "node_modules/core-js/internals/task.js"(exports2, module2) {
      var global2 = require_global();
      var apply = require_function_apply();
      var bind3 = require_function_bind_context();
      var isCallable = require_is_callable();
      var hasOwn2 = require_has_own_property();
      var fails = require_fails();
      var html = require_html();
      var arraySlice = require_array_slice();
      var createElement = require_document_create_element();
      var IS_IOS = require_engine_is_ios();
      var IS_NODE = require_engine_is_node();
      var set3 = global2.setImmediate;
      var clear = global2.clearImmediate;
      var process2 = global2.process;
      var Dispatch = global2.Dispatch;
      var Function2 = global2.Function;
      var MessageChannel = global2.MessageChannel;
      var String2 = global2.String;
      var counter = 0;
      var queue = {};
      var ONREADYSTATECHANGE = "onreadystatechange";
      var location;
      var defer;
      var channel;
      var port;
      try {
        location = global2.location;
      } catch (error) {
      }
      var run = function(id) {
        if (hasOwn2(queue, id)) {
          var fn = queue[id];
          delete queue[id];
          fn();
        }
      };
      var runner = function(id) {
        return function() {
          run(id);
        };
      };
      var listener = function(event) {
        run(event.data);
      };
      var post = function(id) {
        global2.postMessage(String2(id), location.protocol + "//" + location.host);
      };
      if (!set3 || !clear) {
        set3 = function setImmediate2(fn) {
          var args = arraySlice(arguments, 1);
          queue[++counter] = function() {
            apply(isCallable(fn) ? fn : Function2(fn), void 0, args);
          };
          defer(counter);
          return counter;
        };
        clear = function clearImmediate(id) {
          delete queue[id];
        };
        if (IS_NODE) {
          defer = function(id) {
            process2.nextTick(runner(id));
          };
        } else if (Dispatch && Dispatch.now) {
          defer = function(id) {
            Dispatch.now(runner(id));
          };
        } else if (MessageChannel && !IS_IOS) {
          channel = new MessageChannel();
          port = channel.port2;
          channel.port1.onmessage = listener;
          defer = bind3(port.postMessage, port);
        } else if (global2.addEventListener && isCallable(global2.postMessage) && !global2.importScripts && location && location.protocol !== "file:" && !fails(post)) {
          defer = post;
          global2.addEventListener("message", listener, false);
        } else if (ONREADYSTATECHANGE in createElement("script")) {
          defer = function(id) {
            html.appendChild(createElement("script"))[ONREADYSTATECHANGE] = function() {
              html.removeChild(this);
              run(id);
            };
          };
        } else {
          defer = function(id) {
            setTimeout(runner(id), 0);
          };
        }
      }
      module2.exports = {
        set: set3,
        clear
      };
    }
  });

  // node_modules/core-js/internals/engine-is-ios-pebble.js
  var require_engine_is_ios_pebble = __commonJS({
    "node_modules/core-js/internals/engine-is-ios-pebble.js"(exports2, module2) {
      var userAgent = require_engine_user_agent();
      var global2 = require_global();
      module2.exports = /ipad|iphone|ipod/i.test(userAgent) && global2.Pebble !== void 0;
    }
  });

  // node_modules/core-js/internals/engine-is-webos-webkit.js
  var require_engine_is_webos_webkit = __commonJS({
    "node_modules/core-js/internals/engine-is-webos-webkit.js"(exports2, module2) {
      var userAgent = require_engine_user_agent();
      module2.exports = /web0s(?!.*chrome)/i.test(userAgent);
    }
  });

  // node_modules/core-js/internals/microtask.js
  var require_microtask = __commonJS({
    "node_modules/core-js/internals/microtask.js"(exports2, module2) {
      var global2 = require_global();
      var bind3 = require_function_bind_context();
      var getOwnPropertyDescriptor = require_object_get_own_property_descriptor().f;
      var macrotask = require_task().set;
      var IS_IOS = require_engine_is_ios();
      var IS_IOS_PEBBLE = require_engine_is_ios_pebble();
      var IS_WEBOS_WEBKIT = require_engine_is_webos_webkit();
      var IS_NODE = require_engine_is_node();
      var MutationObserver = global2.MutationObserver || global2.WebKitMutationObserver;
      var document2 = global2.document;
      var process2 = global2.process;
      var Promise3 = global2.Promise;
      var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global2, "queueMicrotask");
      var queueMicrotask2 = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
      var flush;
      var head;
      var last;
      var notify;
      var toggle;
      var node;
      var promise;
      var then;
      if (!queueMicrotask2) {
        flush = function() {
          var parent2, fn;
          if (IS_NODE && (parent2 = process2.domain))
            parent2.exit();
          while (head) {
            fn = head.fn;
            head = head.next;
            try {
              fn();
            } catch (error) {
              if (head)
                notify();
              else
                last = void 0;
              throw error;
            }
          }
          last = void 0;
          if (parent2)
            parent2.enter();
        };
        if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document2) {
          toggle = true;
          node = document2.createTextNode("");
          new MutationObserver(flush).observe(node, { characterData: true });
          notify = function() {
            node.data = toggle = !toggle;
          };
        } else if (!IS_IOS_PEBBLE && Promise3 && Promise3.resolve) {
          promise = Promise3.resolve(void 0);
          promise.constructor = Promise3;
          then = bind3(promise.then, promise);
          notify = function() {
            then(flush);
          };
        } else if (IS_NODE) {
          notify = function() {
            process2.nextTick(flush);
          };
        } else {
          macrotask = bind3(macrotask, global2);
          notify = function() {
            macrotask(flush);
          };
        }
      }
      module2.exports = queueMicrotask2 || function(fn) {
        var task = { fn, next: void 0 };
        if (last)
          last.next = task;
        if (!head) {
          head = task;
          notify();
        }
        last = task;
      };
    }
  });

  // node_modules/core-js/internals/new-promise-capability.js
  var require_new_promise_capability = __commonJS({
    "node_modules/core-js/internals/new-promise-capability.js"(exports2, module2) {
      "use strict";
      var aCallable = require_a_callable();
      var PromiseCapability = function(C) {
        var resolve2, reject2;
        this.promise = new C(function($$resolve, $$reject) {
          if (resolve2 !== void 0 || reject2 !== void 0)
            throw TypeError("Bad Promise constructor");
          resolve2 = $$resolve;
          reject2 = $$reject;
        });
        this.resolve = aCallable(resolve2);
        this.reject = aCallable(reject2);
      };
      module2.exports.f = function(C) {
        return new PromiseCapability(C);
      };
    }
  });

  // node_modules/core-js/internals/promise-resolve.js
  var require_promise_resolve = __commonJS({
    "node_modules/core-js/internals/promise-resolve.js"(exports2, module2) {
      var anObject = require_an_object();
      var isObject2 = require_is_object();
      var newPromiseCapability = require_new_promise_capability();
      module2.exports = function(C, x) {
        anObject(C);
        if (isObject2(x) && x.constructor === C)
          return x;
        var promiseCapability = newPromiseCapability.f(C);
        var resolve2 = promiseCapability.resolve;
        resolve2(x);
        return promiseCapability.promise;
      };
    }
  });

  // node_modules/core-js/internals/host-report-errors.js
  var require_host_report_errors = __commonJS({
    "node_modules/core-js/internals/host-report-errors.js"(exports2, module2) {
      var global2 = require_global();
      module2.exports = function(a, b) {
        var console2 = global2.console;
        if (console2 && console2.error) {
          arguments.length == 1 ? console2.error(a) : console2.error(a, b);
        }
      };
    }
  });

  // node_modules/core-js/internals/perform.js
  var require_perform = __commonJS({
    "node_modules/core-js/internals/perform.js"(exports2, module2) {
      module2.exports = function(exec) {
        try {
          return { error: false, value: exec() };
        } catch (error) {
          return { error: true, value: error };
        }
      };
    }
  });

  // node_modules/core-js/internals/engine-is-browser.js
  var require_engine_is_browser = __commonJS({
    "node_modules/core-js/internals/engine-is-browser.js"(exports2, module2) {
      module2.exports = typeof window == "object";
    }
  });

  // node_modules/core-js/modules/es.promise.js
  var require_es_promise = __commonJS({
    "node_modules/core-js/modules/es.promise.js"() {
      "use strict";
      var $2 = require_export();
      var IS_PURE = require_is_pure();
      var global2 = require_global();
      var getBuiltIn = require_get_built_in();
      var call = require_function_call();
      var NativePromise = require_native_promise_constructor();
      var redefine = require_redefine();
      var redefineAll = require_redefine_all();
      var setPrototypeOf2 = require_object_set_prototype_of();
      var setToStringTag = require_set_to_string_tag();
      var setSpecies = require_set_species();
      var aCallable = require_a_callable();
      var isCallable = require_is_callable();
      var isObject2 = require_is_object();
      var anInstance = require_an_instance();
      var inspectSource = require_inspect_source();
      var iterate = require_iterate();
      var checkCorrectnessOfIteration = require_check_correctness_of_iteration();
      var speciesConstructor = require_species_constructor();
      var task = require_task().set;
      var microtask = require_microtask();
      var promiseResolve = require_promise_resolve();
      var hostReportErrors = require_host_report_errors();
      var newPromiseCapabilityModule = require_new_promise_capability();
      var perform = require_perform();
      var InternalStateModule = require_internal_state();
      var isForced = require_is_forced();
      var wellKnownSymbol = require_well_known_symbol();
      var IS_BROWSER = require_engine_is_browser();
      var IS_NODE = require_engine_is_node();
      var V8_VERSION = require_engine_v8_version();
      var SPECIES = wellKnownSymbol("species");
      var PROMISE = "Promise";
      var getInternalState = InternalStateModule.get;
      var setInternalState = InternalStateModule.set;
      var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
      var NativePromisePrototype = NativePromise && NativePromise.prototype;
      var PromiseConstructor = NativePromise;
      var PromisePrototype = NativePromisePrototype;
      var TypeError2 = global2.TypeError;
      var document2 = global2.document;
      var process2 = global2.process;
      var newPromiseCapability = newPromiseCapabilityModule.f;
      var newGenericPromiseCapability = newPromiseCapability;
      var DISPATCH_EVENT = !!(document2 && document2.createEvent && global2.dispatchEvent);
      var NATIVE_REJECTION_EVENT = isCallable(global2.PromiseRejectionEvent);
      var UNHANDLED_REJECTION = "unhandledrejection";
      var REJECTION_HANDLED = "rejectionhandled";
      var PENDING = 0;
      var FULFILLED = 1;
      var REJECTED = 2;
      var HANDLED = 1;
      var UNHANDLED = 2;
      var SUBCLASSING = false;
      var Internal;
      var OwnPromiseCapability;
      var PromiseWrapper;
      var nativeThen;
      var FORCED = isForced(PROMISE, function() {
        var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);
        var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);
        if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66)
          return true;
        if (IS_PURE && !PromisePrototype["finally"])
          return true;
        if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE))
          return false;
        var promise = new PromiseConstructor(function(resolve2) {
          resolve2(1);
        });
        var FakePromise = function(exec) {
          exec(function() {
          }, function() {
          });
        };
        var constructor = promise.constructor = {};
        constructor[SPECIES] = FakePromise;
        SUBCLASSING = promise.then(function() {
        }) instanceof FakePromise;
        if (!SUBCLASSING)
          return true;
        return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;
      });
      var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function(iterable) {
        PromiseConstructor.all(iterable)["catch"](function() {
        });
      });
      var isThenable = function(it) {
        var then;
        return isObject2(it) && isCallable(then = it.then) ? then : false;
      };
      var notify = function(state, isReject) {
        if (state.notified)
          return;
        state.notified = true;
        var chain = state.reactions;
        microtask(function() {
          var value2 = state.value;
          var ok = state.state == FULFILLED;
          var index2 = 0;
          while (chain.length > index2) {
            var reaction = chain[index2++];
            var handler = ok ? reaction.ok : reaction.fail;
            var resolve2 = reaction.resolve;
            var reject2 = reaction.reject;
            var domain = reaction.domain;
            var result2, then, exited;
            try {
              if (handler) {
                if (!ok) {
                  if (state.rejection === UNHANDLED)
                    onHandleUnhandled(state);
                  state.rejection = HANDLED;
                }
                if (handler === true)
                  result2 = value2;
                else {
                  if (domain)
                    domain.enter();
                  result2 = handler(value2);
                  if (domain) {
                    domain.exit();
                    exited = true;
                  }
                }
                if (result2 === reaction.promise) {
                  reject2(TypeError2("Promise-chain cycle"));
                } else if (then = isThenable(result2)) {
                  call(then, result2, resolve2, reject2);
                } else
                  resolve2(result2);
              } else
                reject2(value2);
            } catch (error) {
              if (domain && !exited)
                domain.exit();
              reject2(error);
            }
          }
          state.reactions = [];
          state.notified = false;
          if (isReject && !state.rejection)
            onUnhandled(state);
        });
      };
      var dispatchEvent = function(name2, promise, reason) {
        var event, handler;
        if (DISPATCH_EVENT) {
          event = document2.createEvent("Event");
          event.promise = promise;
          event.reason = reason;
          event.initEvent(name2, false, true);
          global2.dispatchEvent(event);
        } else
          event = { promise, reason };
        if (!NATIVE_REJECTION_EVENT && (handler = global2["on" + name2]))
          handler(event);
        else if (name2 === UNHANDLED_REJECTION)
          hostReportErrors("Unhandled promise rejection", reason);
      };
      var onUnhandled = function(state) {
        call(task, global2, function() {
          var promise = state.facade;
          var value2 = state.value;
          var IS_UNHANDLED = isUnhandled(state);
          var result2;
          if (IS_UNHANDLED) {
            result2 = perform(function() {
              if (IS_NODE) {
                process2.emit("unhandledRejection", value2, promise);
              } else
                dispatchEvent(UNHANDLED_REJECTION, promise, value2);
            });
            state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
            if (result2.error)
              throw result2.value;
          }
        });
      };
      var isUnhandled = function(state) {
        return state.rejection !== HANDLED && !state.parent;
      };
      var onHandleUnhandled = function(state) {
        call(task, global2, function() {
          var promise = state.facade;
          if (IS_NODE) {
            process2.emit("rejectionHandled", promise);
          } else
            dispatchEvent(REJECTION_HANDLED, promise, state.value);
        });
      };
      var bind3 = function(fn, state, unwrap) {
        return function(value2) {
          fn(state, value2, unwrap);
        };
      };
      var internalReject = function(state, value2, unwrap) {
        if (state.done)
          return;
        state.done = true;
        if (unwrap)
          state = unwrap;
        state.value = value2;
        state.state = REJECTED;
        notify(state, true);
      };
      var internalResolve = function(state, value2, unwrap) {
        if (state.done)
          return;
        state.done = true;
        if (unwrap)
          state = unwrap;
        try {
          if (state.facade === value2)
            throw TypeError2("Promise can't be resolved itself");
          var then = isThenable(value2);
          if (then) {
            microtask(function() {
              var wrapper = { done: false };
              try {
                call(
                  then,
                  value2,
                  bind3(internalResolve, wrapper, state),
                  bind3(internalReject, wrapper, state)
                );
              } catch (error) {
                internalReject(wrapper, error, state);
              }
            });
          } else {
            state.value = value2;
            state.state = FULFILLED;
            notify(state, false);
          }
        } catch (error) {
          internalReject({ done: false }, error, state);
        }
      };
      if (FORCED) {
        PromiseConstructor = function Promise3(executor) {
          anInstance(this, PromisePrototype);
          aCallable(executor);
          call(Internal, this);
          var state = getInternalState(this);
          try {
            executor(bind3(internalResolve, state), bind3(internalReject, state));
          } catch (error) {
            internalReject(state, error);
          }
        };
        PromisePrototype = PromiseConstructor.prototype;
        Internal = function Promise3(executor) {
          setInternalState(this, {
            type: PROMISE,
            done: false,
            notified: false,
            parent: false,
            reactions: [],
            rejection: false,
            state: PENDING,
            value: void 0
          });
        };
        Internal.prototype = redefineAll(PromisePrototype, {
          // `Promise.prototype.then` method
          // https://tc39.es/ecma262/#sec-promise.prototype.then
          then: function then(onFulfilled, onRejected) {
            var state = getInternalPromiseState(this);
            var reactions = state.reactions;
            var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
            reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
            reaction.fail = isCallable(onRejected) && onRejected;
            reaction.domain = IS_NODE ? process2.domain : void 0;
            state.parent = true;
            reactions[reactions.length] = reaction;
            if (state.state != PENDING)
              notify(state, false);
            return reaction.promise;
          },
          // `Promise.prototype.catch` method
          // https://tc39.es/ecma262/#sec-promise.prototype.catch
          "catch": function(onRejected) {
            return this.then(void 0, onRejected);
          }
        });
        OwnPromiseCapability = function() {
          var promise = new Internal();
          var state = getInternalState(promise);
          this.promise = promise;
          this.resolve = bind3(internalResolve, state);
          this.reject = bind3(internalReject, state);
        };
        newPromiseCapabilityModule.f = newPromiseCapability = function(C) {
          return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
        };
        if (!IS_PURE && isCallable(NativePromise) && NativePromisePrototype !== Object.prototype) {
          nativeThen = NativePromisePrototype.then;
          if (!SUBCLASSING) {
            redefine(NativePromisePrototype, "then", function then(onFulfilled, onRejected) {
              var that = this;
              return new PromiseConstructor(function(resolve2, reject2) {
                call(nativeThen, that, resolve2, reject2);
              }).then(onFulfilled, onRejected);
            }, { unsafe: true });
            redefine(NativePromisePrototype, "catch", PromisePrototype["catch"], { unsafe: true });
          }
          try {
            delete NativePromisePrototype.constructor;
          } catch (error) {
          }
          if (setPrototypeOf2) {
            setPrototypeOf2(NativePromisePrototype, PromisePrototype);
          }
        }
      }
      $2({ global: true, wrap: true, forced: FORCED }, {
        Promise: PromiseConstructor
      });
      setToStringTag(PromiseConstructor, PROMISE, false, true);
      setSpecies(PROMISE);
      PromiseWrapper = getBuiltIn(PROMISE);
      $2({ target: PROMISE, stat: true, forced: FORCED }, {
        // `Promise.reject` method
        // https://tc39.es/ecma262/#sec-promise.reject
        reject: function reject2(r) {
          var capability = newPromiseCapability(this);
          call(capability.reject, void 0, r);
          return capability.promise;
        }
      });
      $2({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
        // `Promise.resolve` method
        // https://tc39.es/ecma262/#sec-promise.resolve
        resolve: function resolve2(x) {
          return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
        }
      });
      $2({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
        // `Promise.all` method
        // https://tc39.es/ecma262/#sec-promise.all
        all: function all(iterable) {
          var C = this;
          var capability = newPromiseCapability(C);
          var resolve2 = capability.resolve;
          var reject2 = capability.reject;
          var result2 = perform(function() {
            var $promiseResolve = aCallable(C.resolve);
            var values2 = [];
            var counter = 0;
            var remaining = 1;
            iterate(iterable, function(promise) {
              var index2 = counter++;
              var alreadyCalled = false;
              remaining++;
              call($promiseResolve, C, promise).then(function(value2) {
                if (alreadyCalled)
                  return;
                alreadyCalled = true;
                values2[index2] = value2;
                --remaining || resolve2(values2);
              }, reject2);
            });
            --remaining || resolve2(values2);
          });
          if (result2.error)
            reject2(result2.value);
          return capability.promise;
        },
        // `Promise.race` method
        // https://tc39.es/ecma262/#sec-promise.race
        race: function race(iterable) {
          var C = this;
          var capability = newPromiseCapability(C);
          var reject2 = capability.reject;
          var result2 = perform(function() {
            var $promiseResolve = aCallable(C.resolve);
            iterate(iterable, function(promise) {
              call($promiseResolve, C, promise).then(capability.resolve, reject2);
            });
          });
          if (result2.error)
            reject2(result2.value);
          return capability.promise;
        }
      });
    }
  });

  // node_modules/core-js/internals/async-iterator-prototype.js
  var require_async_iterator_prototype = __commonJS({
    "node_modules/core-js/internals/async-iterator-prototype.js"(exports2, module2) {
      var global2 = require_global();
      var shared = require_shared_store();
      var isCallable = require_is_callable();
      var create5 = require_object_create();
      var getPrototypeOf = require_object_get_prototype_of();
      var redefine = require_redefine();
      var wellKnownSymbol = require_well_known_symbol();
      var IS_PURE = require_is_pure();
      var USE_FUNCTION_CONSTRUCTOR = "USE_FUNCTION_CONSTRUCTOR";
      var ASYNC_ITERATOR = wellKnownSymbol("asyncIterator");
      var AsyncIterator = global2.AsyncIterator;
      var PassedAsyncIteratorPrototype = shared.AsyncIteratorPrototype;
      var AsyncIteratorPrototype;
      var prototype3;
      if (PassedAsyncIteratorPrototype) {
        AsyncIteratorPrototype = PassedAsyncIteratorPrototype;
      } else if (isCallable(AsyncIterator)) {
        AsyncIteratorPrototype = AsyncIterator.prototype;
      } else if (shared[USE_FUNCTION_CONSTRUCTOR] || global2[USE_FUNCTION_CONSTRUCTOR]) {
        try {
          prototype3 = getPrototypeOf(getPrototypeOf(getPrototypeOf(Function("return async function*(){}()")())));
          if (getPrototypeOf(prototype3) === Object.prototype)
            AsyncIteratorPrototype = prototype3;
        } catch (error) {
        }
      }
      if (!AsyncIteratorPrototype)
        AsyncIteratorPrototype = {};
      else if (IS_PURE)
        AsyncIteratorPrototype = create5(AsyncIteratorPrototype);
      if (!isCallable(AsyncIteratorPrototype[ASYNC_ITERATOR])) {
        redefine(AsyncIteratorPrototype, ASYNC_ITERATOR, function() {
          return this;
        });
      }
      module2.exports = AsyncIteratorPrototype;
    }
  });

  // node_modules/core-js/internals/async-from-sync-iterator.js
  var require_async_from_sync_iterator = __commonJS({
    "node_modules/core-js/internals/async-from-sync-iterator.js"(exports2, module2) {
      "use strict";
      var apply = require_function_apply();
      var anObject = require_an_object();
      var create5 = require_object_create();
      var getMethod2 = require_get_method();
      var redefineAll = require_redefine_all();
      var InternalStateModule = require_internal_state();
      var getBuiltIn = require_get_built_in();
      var AsyncIteratorPrototype = require_async_iterator_prototype();
      var Promise3 = getBuiltIn("Promise");
      var setInternalState = InternalStateModule.set;
      var getInternalState = InternalStateModule.get;
      var asyncFromSyncIteratorContinuation = function(result2, resolve2, reject2) {
        var done = result2.done;
        Promise3.resolve(result2.value).then(function(value2) {
          resolve2({ done, value: value2 });
        }, reject2);
      };
      var AsyncFromSyncIterator = function AsyncIterator(iterator) {
        setInternalState(this, {
          iterator: anObject(iterator),
          next: iterator.next
        });
      };
      AsyncFromSyncIterator.prototype = redefineAll(create5(AsyncIteratorPrototype), {
        next: function next(arg) {
          var state = getInternalState(this);
          var hasArg = !!arguments.length;
          return new Promise3(function(resolve2, reject2) {
            var result2 = anObject(apply(state.next, state.iterator, hasArg ? [arg] : []));
            asyncFromSyncIteratorContinuation(result2, resolve2, reject2);
          });
        },
        "return": function(arg) {
          var iterator = getInternalState(this).iterator;
          var hasArg = !!arguments.length;
          return new Promise3(function(resolve2, reject2) {
            var $return = getMethod2(iterator, "return");
            if ($return === void 0)
              return resolve2({ done: true, value: arg });
            var result2 = anObject(apply($return, iterator, hasArg ? [arg] : []));
            asyncFromSyncIteratorContinuation(result2, resolve2, reject2);
          });
        },
        "throw": function(arg) {
          var iterator = getInternalState(this).iterator;
          var hasArg = !!arguments.length;
          return new Promise3(function(resolve2, reject2) {
            var $throw = getMethod2(iterator, "throw");
            if ($throw === void 0)
              return reject2(arg);
            var result2 = anObject(apply($throw, iterator, hasArg ? [arg] : []));
            asyncFromSyncIteratorContinuation(result2, resolve2, reject2);
          });
        }
      });
      module2.exports = AsyncFromSyncIterator;
    }
  });

  // node_modules/core-js/internals/get-async-iterator.js
  var require_get_async_iterator = __commonJS({
    "node_modules/core-js/internals/get-async-iterator.js"(exports2, module2) {
      var call = require_function_call();
      var AsyncFromSyncIterator = require_async_from_sync_iterator();
      var anObject = require_an_object();
      var getIterator = require_get_iterator();
      var getMethod2 = require_get_method();
      var wellKnownSymbol = require_well_known_symbol();
      var ASYNC_ITERATOR = wellKnownSymbol("asyncIterator");
      module2.exports = function(it, usingIterator) {
        var method = arguments.length < 2 ? getMethod2(it, ASYNC_ITERATOR) : usingIterator;
        return method ? anObject(call(method, it)) : new AsyncFromSyncIterator(getIterator(it));
      };
    }
  });

  // node_modules/core-js/internals/entry-virtual.js
  var require_entry_virtual = __commonJS({
    "node_modules/core-js/internals/entry-virtual.js"(exports2, module2) {
      var global2 = require_global();
      module2.exports = function(CONSTRUCTOR) {
        return global2[CONSTRUCTOR].prototype;
      };
    }
  });

  // node_modules/core-js/internals/async-iterator-iteration.js
  var require_async_iterator_iteration = __commonJS({
    "node_modules/core-js/internals/async-iterator-iteration.js"(exports2, module2) {
      "use strict";
      var global2 = require_global();
      var call = require_function_call();
      var aCallable = require_a_callable();
      var anObject = require_an_object();
      var getBuiltIn = require_get_built_in();
      var getMethod2 = require_get_method();
      var MAX_SAFE_INTEGER = 9007199254740991;
      var TypeError2 = global2.TypeError;
      var createMethod = function(TYPE) {
        var IS_TO_ARRAY = TYPE == 0;
        var IS_FOR_EACH = TYPE == 1;
        var IS_EVERY = TYPE == 2;
        var IS_SOME = TYPE == 3;
        return function(iterator, fn, target) {
          anObject(iterator);
          var Promise3 = getBuiltIn("Promise");
          var next = aCallable(iterator.next);
          var index2 = 0;
          var MAPPING = fn !== void 0;
          if (MAPPING || !IS_TO_ARRAY)
            aCallable(fn);
          return new Promise3(function(resolve2, reject2) {
            var closeIteration = function(method, argument) {
              try {
                var returnMethod = getMethod2(iterator, "return");
                if (returnMethod) {
                  return Promise3.resolve(call(returnMethod, iterator)).then(function() {
                    method(argument);
                  }, function(error) {
                    reject2(error);
                  });
                }
              } catch (error2) {
                return reject2(error2);
              }
              method(argument);
            };
            var onError2 = function(error) {
              closeIteration(reject2, error);
            };
            var loop = function() {
              try {
                if (IS_TO_ARRAY && index2 > MAX_SAFE_INTEGER && MAPPING) {
                  throw TypeError2("The allowed number of iterations has been exceeded");
                }
                Promise3.resolve(anObject(call(next, iterator))).then(function(step) {
                  try {
                    if (anObject(step).done) {
                      if (IS_TO_ARRAY) {
                        target.length = index2;
                        resolve2(target);
                      } else
                        resolve2(IS_SOME ? false : IS_EVERY || void 0);
                    } else {
                      var value2 = step.value;
                      if (MAPPING) {
                        Promise3.resolve(IS_TO_ARRAY ? fn(value2, index2) : fn(value2)).then(function(result2) {
                          if (IS_FOR_EACH) {
                            loop();
                          } else if (IS_EVERY) {
                            result2 ? loop() : closeIteration(resolve2, false);
                          } else if (IS_TO_ARRAY) {
                            target[index2++] = result2;
                            loop();
                          } else {
                            result2 ? closeIteration(resolve2, IS_SOME || value2) : loop();
                          }
                        }, onError2);
                      } else {
                        target[index2++] = value2;
                        loop();
                      }
                    }
                  } catch (error) {
                    onError2(error);
                  }
                }, onError2);
              } catch (error2) {
                onError2(error2);
              }
            };
            loop();
          });
        };
      };
      module2.exports = {
        toArray: createMethod(0),
        forEach: createMethod(1),
        every: createMethod(2),
        some: createMethod(3),
        find: createMethod(4)
      };
    }
  });

  // node_modules/core-js/internals/array-from-async.js
  var require_array_from_async = __commonJS({
    "node_modules/core-js/internals/array-from-async.js"(exports2, module2) {
      "use strict";
      var bind3 = require_function_bind_context();
      var toObject = require_to_object();
      var isConstructor = require_is_constructor();
      var getAsyncIterator = require_get_async_iterator();
      var getIterator = require_get_iterator();
      var getIteratorMethod = require_get_iterator_method();
      var getMethod2 = require_get_method();
      var getVirtual = require_entry_virtual();
      var getBuiltIn = require_get_built_in();
      var wellKnownSymbol = require_well_known_symbol();
      var AsyncFromSyncIterator = require_async_from_sync_iterator();
      var toArray = require_async_iterator_iteration().toArray;
      var ASYNC_ITERATOR = wellKnownSymbol("asyncIterator");
      var arrayIterator = getVirtual("Array").values;
      module2.exports = function fromAsync(asyncItems) {
        var C = this;
        var argumentsLength = arguments.length;
        var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
        var thisArg = argumentsLength > 2 ? arguments[2] : void 0;
        return new (getBuiltIn("Promise"))(function(resolve2) {
          var O = toObject(asyncItems);
          if (mapfn !== void 0)
            mapfn = bind3(mapfn, thisArg);
          var usingAsyncIterator = getMethod2(O, ASYNC_ITERATOR);
          var usingSyncIterator = usingAsyncIterator ? void 0 : getIteratorMethod(O) || arrayIterator;
          var A = isConstructor(C) ? new C() : [];
          var iterator = usingAsyncIterator ? getAsyncIterator(O, usingAsyncIterator) : new AsyncFromSyncIterator(getIterator(O, usingSyncIterator));
          resolve2(toArray(iterator, mapfn, A));
        });
      };
    }
  });

  // node_modules/core-js/modules/esnext.array.from-async.js
  var require_esnext_array_from_async = __commonJS({
    "node_modules/core-js/modules/esnext.array.from-async.js"() {
      var $2 = require_export();
      var fromAsync = require_array_from_async();
      $2({ target: "Array", stat: true }, {
        fromAsync
      });
    }
  });

  // node_modules/core-js/modules/esnext.array.at.js
  var require_esnext_array_at = __commonJS({
    "node_modules/core-js/modules/esnext.array.at.js"() {
      require_es_array_at();
    }
  });

  // node_modules/core-js/modules/esnext.array.filter-out.js
  var require_esnext_array_filter_out = __commonJS({
    "node_modules/core-js/modules/esnext.array.filter-out.js"() {
      "use strict";
      var $2 = require_export();
      var $filterReject = require_array_iteration().filterReject;
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        filterOut: function filterOut(callbackfn) {
          return $filterReject(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      addToUnscopables("filterOut");
    }
  });

  // node_modules/core-js/modules/esnext.array.filter-reject.js
  var require_esnext_array_filter_reject = __commonJS({
    "node_modules/core-js/modules/esnext.array.filter-reject.js"() {
      "use strict";
      var $2 = require_export();
      var $filterReject = require_array_iteration().filterReject;
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        filterReject: function filterReject(callbackfn) {
          return $filterReject(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      addToUnscopables("filterReject");
    }
  });

  // node_modules/core-js/internals/array-iteration-from-last.js
  var require_array_iteration_from_last = __commonJS({
    "node_modules/core-js/internals/array-iteration-from-last.js"(exports2, module2) {
      var bind3 = require_function_bind_context();
      var IndexedObject = require_indexed_object();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var createMethod = function(TYPE) {
        var IS_FIND_LAST_INDEX = TYPE == 1;
        return function($this, callbackfn, that) {
          var O = toObject($this);
          var self2 = IndexedObject(O);
          var boundFunction = bind3(callbackfn, that);
          var index2 = lengthOfArrayLike(self2);
          var value2, result2;
          while (index2-- > 0) {
            value2 = self2[index2];
            result2 = boundFunction(value2, index2, O);
            if (result2)
              switch (TYPE) {
                case 0:
                  return value2;
                case 1:
                  return index2;
              }
          }
          return IS_FIND_LAST_INDEX ? -1 : void 0;
        };
      };
      module2.exports = {
        // `Array.prototype.findLast` method
        // https://github.com/tc39/proposal-array-find-from-last
        findLast: createMethod(0),
        // `Array.prototype.findLastIndex` method
        // https://github.com/tc39/proposal-array-find-from-last
        findLastIndex: createMethod(1)
      };
    }
  });

  // node_modules/core-js/modules/esnext.array.find-last.js
  var require_esnext_array_find_last = __commonJS({
    "node_modules/core-js/modules/esnext.array.find-last.js"() {
      "use strict";
      var $2 = require_export();
      var $findLast = require_array_iteration_from_last().findLast;
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        findLast: function findLast2(callbackfn) {
          return $findLast(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      addToUnscopables("findLast");
    }
  });

  // node_modules/core-js/modules/esnext.array.find-last-index.js
  var require_esnext_array_find_last_index = __commonJS({
    "node_modules/core-js/modules/esnext.array.find-last-index.js"() {
      "use strict";
      var $2 = require_export();
      var $findLastIndex = require_array_iteration_from_last().findLastIndex;
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        findLastIndex: function findLastIndex(callbackfn) {
          return $findLastIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      addToUnscopables("findLastIndex");
    }
  });

  // node_modules/core-js/internals/array-from-constructor-and-list.js
  var require_array_from_constructor_and_list = __commonJS({
    "node_modules/core-js/internals/array-from-constructor-and-list.js"(exports2, module2) {
      module2.exports = function(Constructor, list) {
        var index2 = 0;
        var length2 = list.length;
        var result2 = new Constructor(length2);
        while (length2 > index2)
          result2[index2] = list[index2++];
        return result2;
      };
    }
  });

  // node_modules/core-js/internals/array-group-by.js
  var require_array_group_by = __commonJS({
    "node_modules/core-js/internals/array-group-by.js"(exports2, module2) {
      var global2 = require_global();
      var bind3 = require_function_bind_context();
      var uncurryThis = require_function_uncurry_this();
      var IndexedObject = require_indexed_object();
      var toObject = require_to_object();
      var toPropertyKey = require_to_property_key();
      var lengthOfArrayLike = require_length_of_array_like();
      var objectCreate = require_object_create();
      var arrayFromConstructorAndList = require_array_from_constructor_and_list();
      var Array2 = global2.Array;
      var push = uncurryThis([].push);
      module2.exports = function($this, callbackfn, that, specificConstructor) {
        var O = toObject($this);
        var self2 = IndexedObject(O);
        var boundFunction = bind3(callbackfn, that);
        var target = objectCreate(null);
        var length2 = lengthOfArrayLike(self2);
        var index2 = 0;
        var Constructor, key2, value2;
        for (; length2 > index2; index2++) {
          value2 = self2[index2];
          key2 = toPropertyKey(boundFunction(value2, index2, O));
          if (key2 in target)
            push(target[key2], value2);
          else
            target[key2] = [value2];
        }
        if (specificConstructor) {
          Constructor = specificConstructor(O);
          if (Constructor !== Array2) {
            for (key2 in target)
              target[key2] = arrayFromConstructorAndList(Constructor, target[key2]);
          }
        }
        return target;
      };
    }
  });

  // node_modules/core-js/modules/esnext.array.group-by.js
  var require_esnext_array_group_by = __commonJS({
    "node_modules/core-js/modules/esnext.array.group-by.js"() {
      "use strict";
      var $2 = require_export();
      var $groupBy = require_array_group_by();
      var arraySpeciesConstructor = require_array_species_constructor();
      var addToUnscopables = require_add_to_unscopables();
      $2({ target: "Array", proto: true }, {
        groupBy: function groupBy(callbackfn) {
          var thisArg = arguments.length > 1 ? arguments[1] : void 0;
          return $groupBy(this, callbackfn, thisArg, arraySpeciesConstructor);
        }
      });
      addToUnscopables("groupBy");
    }
  });

  // node_modules/core-js/modules/esnext.array.is-template-object.js
  var require_esnext_array_is_template_object = __commonJS({
    "node_modules/core-js/modules/esnext.array.is-template-object.js"() {
      var $2 = require_export();
      var isArray2 = require_is_array();
      var isFrozen = Object.isFrozen;
      var isFrozenStringArray = function(array, allowUndefined) {
        if (!isFrozen || !isArray2(array) || !isFrozen(array))
          return false;
        var index2 = 0;
        var length2 = array.length;
        var element;
        while (index2 < length2) {
          element = array[index2++];
          if (!(typeof element == "string" || allowUndefined && typeof element == "undefined")) {
            return false;
          }
        }
        return length2 !== 0;
      };
      $2({ target: "Array", stat: true }, {
        isTemplateObject: function isTemplateObject(value2) {
          if (!isFrozenStringArray(value2, true))
            return false;
          var raw = value2.raw;
          if (raw.length !== value2.length || !isFrozenStringArray(raw, false))
            return false;
          return true;
        }
      });
    }
  });

  // node_modules/core-js/modules/esnext.array.last-item.js
  var require_esnext_array_last_item = __commonJS({
    "node_modules/core-js/modules/esnext.array.last-item.js"() {
      "use strict";
      var DESCRIPTORS = require_descriptors();
      var addToUnscopables = require_add_to_unscopables();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var defineProperty = require_object_define_property().f;
      if (DESCRIPTORS && !("lastItem" in [])) {
        defineProperty(Array.prototype, "lastItem", {
          configurable: true,
          get: function lastItem() {
            var O = toObject(this);
            var len = lengthOfArrayLike(O);
            return len == 0 ? void 0 : O[len - 1];
          },
          set: function lastItem(value2) {
            var O = toObject(this);
            var len = lengthOfArrayLike(O);
            return O[len == 0 ? 0 : len - 1] = value2;
          }
        });
        addToUnscopables("lastItem");
      }
    }
  });

  // node_modules/core-js/modules/esnext.array.last-index.js
  var require_esnext_array_last_index = __commonJS({
    "node_modules/core-js/modules/esnext.array.last-index.js"() {
      "use strict";
      var DESCRIPTORS = require_descriptors();
      var addToUnscopables = require_add_to_unscopables();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var defineProperty = require_object_define_property().f;
      if (DESCRIPTORS && !("lastIndex" in [])) {
        defineProperty(Array.prototype, "lastIndex", {
          configurable: true,
          get: function lastIndex() {
            var O = toObject(this);
            var len = lengthOfArrayLike(O);
            return len == 0 ? 0 : len - 1;
          }
        });
        addToUnscopables("lastIndex");
      }
    }
  });

  // node_modules/core-js/internals/array-unique-by.js
  var require_array_unique_by = __commonJS({
    "node_modules/core-js/internals/array-unique-by.js"(exports2, module2) {
      "use strict";
      var getBuiltIn = require_get_built_in();
      var uncurryThis = require_function_uncurry_this();
      var aCallable = require_a_callable();
      var lengthOfArrayLike = require_length_of_array_like();
      var toObject = require_to_object();
      var arraySpeciesCreate = require_array_species_create();
      var Map2 = getBuiltIn("Map");
      var MapPrototype = Map2.prototype;
      var mapForEach = uncurryThis(MapPrototype.forEach);
      var mapHas = uncurryThis(MapPrototype.has);
      var mapSet = uncurryThis(MapPrototype.set);
      var push = uncurryThis([].push);
      module2.exports = function uniqueBy(resolver) {
        var that = toObject(this);
        var length2 = lengthOfArrayLike(that);
        var result2 = arraySpeciesCreate(that, 0);
        var map = new Map2();
        var resolverFunction = resolver != null ? aCallable(resolver) : function(value2) {
          return value2;
        };
        var index2, item, key2;
        for (index2 = 0; index2 < length2; index2++) {
          item = that[index2];
          key2 = resolverFunction(item);
          if (!mapHas(map, key2))
            mapSet(map, key2, item);
        }
        mapForEach(map, function(value2) {
          push(result2, value2);
        });
        return result2;
      };
    }
  });

  // node_modules/core-js/modules/esnext.array.unique-by.js
  var require_esnext_array_unique_by = __commonJS({
    "node_modules/core-js/modules/esnext.array.unique-by.js"() {
      "use strict";
      var $2 = require_export();
      var addToUnscopables = require_add_to_unscopables();
      var uniqueBy = require_array_unique_by();
      $2({ target: "Array", proto: true }, {
        uniqueBy
      });
      addToUnscopables("uniqueBy");
    }
  });

  // node_modules/core-js/features/array/index.js
  var require_array3 = __commonJS({
    "node_modules/core-js/features/array/index.js"(exports2, module2) {
      var parent2 = require_array2();
      require_es_map();
      require_es_promise();
      require_esnext_array_from_async();
      require_esnext_array_at();
      require_esnext_array_filter_out();
      require_esnext_array_filter_reject();
      require_esnext_array_find_last();
      require_esnext_array_find_last_index();
      require_esnext_array_group_by();
      require_esnext_array_is_template_object();
      require_esnext_array_last_item();
      require_esnext_array_last_index();
      require_esnext_array_unique_by();
      module2.exports = parent2;
    }
  });

  // packages/systems/core/utils/LottieFetchUtils/fflate.min.js
  var require_fflate_min = __commonJS({
    "packages/systems/core/utils/LottieFetchUtils/fflate.min.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.strFromU8 = strFromU82;
      exports2.unzip = unzip2;
      var ch2 = {};
      var wk = function(c, id, msg, transfer, cb) {
        const w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([c + ';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'], {
          type: "text/javascript"
        }))));
        return w.onmessage = function(e) {
          const d = e.data, ed = d.$e$;
          if (ed) {
            const err2 = new Error(ed[0]);
            err2.code = ed[1], err2.stack = ed[2], cb(err2, null);
          } else
            cb(null, d);
        }, w.postMessage(msg, transfer), w;
      };
      var u8 = Uint8Array;
      var u16 = Uint16Array;
      var u32 = Uint32Array;
      var fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0]);
      var fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0]);
      var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
      var freb = function(eb, start) {
        const b = new u16(31);
        for (var i2 = 0; i2 < 31; ++i2)
          b[i2] = start += 1 << eb[i2 - 1];
        const r = new u32(b[30]);
        for (i2 = 1; i2 < 30; ++i2)
          for (let j = b[i2]; j < b[i2 + 1]; ++j)
            r[j] = j - b[i2] << 5 | i2;
        return [b, r];
      };
      var _a2 = freb(fleb, 2);
      var fl = _a2[0];
      var revfl = _a2[1];
      fl[28] = 258, revfl[258] = 28;
      var _b = freb(fdeb, 0);
      var fd = _b[0];
      var rev = new u16(32768);
      for (i = 0; i < 32768; ++i) {
        let x = (43690 & i) >>> 1 | (21845 & i) << 1;
        x = (52428 & x) >>> 2 | (13107 & x) << 2, x = (61680 & x) >>> 4 | (3855 & x) << 4, rev[i] = ((65280 & x) >>> 8 | (255 & x) << 8) >>> 1;
      }
      var i;
      var hMap = function(cd, mb, r) {
        const s = cd.length;
        let i2 = 0;
        const l = new u16(mb);
        for (; i2 < s; ++i2)
          cd[i2] && ++l[cd[i2] - 1];
        const le = new u16(mb);
        for (i2 = 0; i2 < mb; ++i2)
          le[i2] = le[i2 - 1] + l[i2 - 1] << 1;
        let co;
        if (r) {
          co = new u16(1 << mb);
          const rvb = 15 - mb;
          for (i2 = 0; i2 < s; ++i2)
            if (cd[i2]) {
              const sv = i2 << 4 | cd[i2], r_1 = mb - cd[i2];
              let v = le[cd[i2] - 1]++ << r_1;
              for (let m = v | (1 << r_1) - 1; v <= m; ++v)
                co[rev[v] >>> rvb] = sv;
            }
        } else
          for (co = new u16(s), i2 = 0; i2 < s; ++i2)
            cd[i2] && (co[i2] = rev[le[cd[i2] - 1]++] >>> 15 - cd[i2]);
        return co;
      };
      var flt = new u8(288);
      for (i = 0; i < 144; ++i)
        flt[i] = 8;
      for (i = 144; i < 256; ++i)
        flt[i] = 9;
      for (i = 256; i < 280; ++i)
        flt[i] = 7;
      for (i = 280; i < 288; ++i)
        flt[i] = 8;
      var fdt = new u8(32);
      for (i = 0; i < 32; ++i)
        fdt[i] = 5;
      var flrm = hMap(flt, 9, 1);
      var fdrm = hMap(fdt, 5, 1);
      var max = function(a) {
        let m = a[0];
        for (let i2 = 1; i2 < a.length; ++i2)
          a[i2] > m && (m = a[i2]);
        return m;
      };
      var bits = function(d, p, m) {
        const o = p / 8 | 0;
        return (d[o] | d[o + 1] << 8) >> (7 & p) & m;
      };
      var bits16 = function(d, p) {
        const o = p / 8 | 0;
        return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (7 & p);
      };
      var shft = function(p) {
        return (p + 7) / 8 | 0;
      };
      var slc = function(v, s, e) {
        (null == s || s < 0) && (s = 0), (null == e || e > v.length) && (e = v.length);
        const n = new (2 === v.BYTES_PER_ELEMENT ? u16 : 4 === v.BYTES_PER_ELEMENT ? u32 : u8)(e - s);
        return n.set(v.subarray(s, e)), n;
      };
      var ec = ["unexpected EOF", "invalid block type", "invalid length/literal", "invalid distance", "stream finished", "no stream handler", , "no callback", "invalid UTF-8 data", "extra field too long", "date not in range 1980-2099", "filename too long", "stream finishing", "invalid zip data"];
      var err = function(ind, msg, nt) {
        const e = new Error(msg || ec[ind]);
        if (e.code = ind, Error.captureStackTrace && Error.captureStackTrace(e, err), !nt)
          throw e;
        return e;
      };
      var inflt = function(dat, buf, st) {
        const sl = dat.length;
        if (!sl || st && st.f && !st.l)
          return buf || new u8(0);
        const noBuf = !buf || st, noSt = !st || st.i;
        st || (st = {}), buf || (buf = new u8(3 * sl));
        const cbuf = function(l) {
          const bl = buf.length;
          if (l > bl) {
            const nbuf = new u8(Math.max(2 * bl, l));
            nbuf.set(buf), buf = nbuf;
          }
        };
        let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
        const tbts = 8 * sl;
        do {
          if (!lm) {
            final = bits(dat, pos, 1);
            const type = bits(dat, pos + 1, 3);
            if (pos += 3, !type) {
              const l = dat[(s = shft(pos) + 4) - 4] | dat[s - 3] << 8, t = s + l;
              if (t > sl) {
                noSt && err(0);
                break;
              }
              noBuf && cbuf(bt + l), buf.set(dat.subarray(s, t), bt), st.b = bt += l, st.p = pos = 8 * t, st.f = final;
              continue;
            }
            if (1 === type)
              lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
            else if (2 === type) {
              const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4, tl = hLit + bits(dat, pos + 5, 31) + 1;
              pos += 14;
              const ldt = new u8(tl), clt = new u8(19);
              for (var i2 = 0; i2 < hcLen; ++i2)
                clt[clim[i2]] = bits(dat, pos + 3 * i2, 7);
              pos += 3 * hcLen;
              const clb = max(clt), clbmsk = (1 << clb) - 1, clm = hMap(clt, clb, 1);
              for (i2 = 0; i2 < tl; ) {
                const r = clm[bits(dat, pos, clbmsk)];
                var s;
                if (pos += 15 & r, (s = r >>> 4) < 16)
                  ldt[i2++] = s;
                else {
                  var c = 0;
                  let n = 0;
                  for (16 === s ? (n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i2 - 1]) : 17 === s ? (n = 3 + bits(dat, pos, 7), pos += 3) : 18 === s && (n = 11 + bits(dat, pos, 127), pos += 7); n--; )
                    ldt[i2++] = c;
                }
              }
              const lt = ldt.subarray(0, hLit);
              var dt = ldt.subarray(hLit);
              lbt = max(lt), dbt = max(dt), lm = hMap(lt, lbt, 1), dm = hMap(dt, dbt, 1);
            } else
              err(1);
            if (pos > tbts) {
              noSt && err(0);
              break;
            }
          }
          noBuf && cbuf(bt + 131072);
          const lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
          let lpos = pos;
          for (; ; lpos = pos) {
            const sym = (c = lm[bits16(dat, pos) & lms]) >>> 4;
            if (pos += 15 & c, pos > tbts) {
              noSt && err(0);
              break;
            }
            if (c || err(2), sym < 256)
              buf[bt++] = sym;
            else {
              if (256 === sym) {
                lpos = pos, lm = null;
                break;
              }
              {
                let add2 = sym - 254;
                if (sym > 264) {
                  var b = fleb[i2 = sym - 257];
                  add2 = bits(dat, pos, (1 << b) - 1) + fl[i2], pos += b;
                }
                const d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;
                d || err(3), pos += 15 & d;
                dt = fd[dsym];
                if (dsym > 3) {
                  b = fdeb[dsym];
                  dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
                }
                if (pos > tbts) {
                  noSt && err(0);
                  break;
                }
                noBuf && cbuf(bt + 131072);
                const end = bt + add2;
                for (; bt < end; bt += 4)
                  buf[bt] = buf[bt - dt], buf[bt + 1] = buf[bt + 1 - dt], buf[bt + 2] = buf[bt + 2 - dt], buf[bt + 3] = buf[bt + 3 - dt];
                bt = end;
              }
            }
          }
          st.l = lm, st.p = lpos, st.b = bt, st.f = final, lm && (final = 1, st.m = lbt, st.d = dm, st.n = dbt);
        } while (!final);
        return bt === buf.length ? buf : slc(buf, 0, bt);
      };
      var mrg = function(a, b) {
        const o = {};
        for (var k in a)
          o[k] = a[k];
        for (var k in b)
          o[k] = b[k];
        return o;
      };
      var wcln = function(fn, fnStr, td2) {
        const dt = fn(), st = fn.toString(), ks = st.slice(st.indexOf("[") + 1, st.lastIndexOf("]")).replace(/\s+/g, "").split(",");
        for (let i2 = 0; i2 < dt.length; ++i2) {
          const v = dt[i2], k = ks[i2];
          if ("function" == typeof v) {
            fnStr += ";" + k + "=";
            const st_1 = v.toString();
            if (v.prototype) {
              if (-1 !== st_1.indexOf("[native code]")) {
                const spInd = st_1.indexOf(" ", 8) + 1;
                fnStr += st_1.slice(spInd, st_1.indexOf("(", spInd));
              } else {
                fnStr += st_1;
                for (const t in v.prototype)
                  fnStr += ";" + k + ".prototype." + t + "=" + v.prototype[t].toString();
              }
            } else
              fnStr += st_1;
          } else
            td2[k] = v;
        }
        return [fnStr, td2];
      };
      var ch = [];
      var cbfs = function(v) {
        const tl = [];
        for (const k in v)
          v[k].buffer && tl.push((v[k] = new v[k].constructor(v[k])).buffer);
        return tl;
      };
      var wrkr = function(fns, init3, id, cb) {
        let _a3;
        if (!ch[id]) {
          let fnStr = "", td_1 = {};
          const m = fns.length - 1;
          for (let i2 = 0; i2 < m; ++i2)
            _a3 = wcln(fns[i2], fnStr, td_1), fnStr = _a3[0], td_1 = _a3[1];
          ch[id] = wcln(fns[m], fnStr, td_1);
        }
        const td2 = mrg({}, ch[id][1]);
        return wk(ch[id][0] + ";onmessage=function(e){for(var kz in e.data)self[kz]=e.data[kz];onmessage=" + init3.toString() + "}", id, td2, cbfs(td2), cb);
      };
      var bInflt = function() {
        return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8];
      };
      var pbf = function(msg) {
        return postMessage(msg, [msg.buffer]);
      };
      var gu8 = function(o) {
        return o && o.size && new u8(o.size);
      };
      var cbify = function(dat, opts, fns, init3, id, cb) {
        var w = wrkr(fns, init3, id, function(err2, dat2) {
          w.terminate(), cb(err2, dat2);
        });
        return w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []), function() {
          w.terminate();
        };
      };
      var b2 = function(d, b) {
        return d[b] | d[b + 1] << 8;
      };
      var b4 = function(d, b) {
        return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;
      };
      function inflate(data2, opts, cb) {
        return cb || (cb = opts, opts = {}), "function" != typeof cb && err(7), cbify(data2, opts, [bInflt], function(ev) {
          return pbf(inflateSync(ev.data[0], gu8(ev.data[1])));
        }, 1, cb);
      }
      function inflateSync(data2, out) {
        return inflt(data2, out);
      }
      var td = "undefined" != typeof TextDecoder && new TextDecoder();
      var dutf8 = function(d) {
        for (let r = "", i2 = 0; ; ) {
          let c = d[i2++];
          const eb = (c > 127) + (c > 223) + (c > 239);
          if (i2 + eb > d.length)
            return [r, slc(d, i2 - 1)];
          eb ? 3 === eb ? (c = ((15 & c) << 18 | (63 & d[i2++]) << 12 | (63 & d[i2++]) << 6 | 63 & d[i2++]) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | 1023 & c)) : r += 1 & eb ? String.fromCharCode((31 & c) << 6 | 63 & d[i2++]) : String.fromCharCode((15 & c) << 12 | (63 & d[i2++]) << 6 | 63 & d[i2++]) : r += String.fromCharCode(c);
        }
      };
      function strFromU82(dat, latin1) {
        if (latin1) {
          let r = "";
          for (let i2 = 0; i2 < dat.length; i2 += 16384)
            r += String.fromCharCode.apply(null, dat.subarray(i2, i2 + 16384));
          return r;
        }
        if (td)
          return td.decode(dat);
        {
          const _a3 = dutf8(dat), out = _a3[0];
          return _a3[1].length && err(8), out;
        }
      }
      var slzh = function(d, b) {
        return b + 30 + b2(d, b + 26) + b2(d, b + 28);
      };
      var zh = function(d, b, z) {
        const fnl = b2(d, b + 28), fn = strFromU82(d.subarray(b + 46, b + 46 + fnl), !(2048 & b2(d, b + 8))), es = b + 46 + fnl, bs = b4(d, b + 20), _a3 = z && 4294967295 === bs ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a3[0], su = _a3[1], off = _a3[2];
        return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];
      };
      var mt = "function" == typeof queueMicrotask ? queueMicrotask : "function" == typeof setTimeout ? setTimeout : function(fn) {
        fn();
      };
      function unzip2(data2, opts, cb) {
        cb || (cb = opts, opts = {}), "function" != typeof cb && err(7);
        const term = [], tAll = function() {
          for (let i2 = 0; i2 < term.length; ++i2)
            term[i2]();
        }, files = {};
        let cbd = function(a, b) {
          mt(function() {
            cb(a, b);
          });
        };
        mt(function() {
          cbd = cb;
        });
        let e = data2.length - 22;
        for (; 101010256 !== b4(data2, e); --e)
          if (!e || data2.length - e > 65558)
            return cbd(err(13, 0, 1), null), tAll;
        let lft = b2(data2, e + 8);
        if (lft) {
          let c = lft, o = b4(data2, e + 16), z = 4294967295 === o || 65535 === c;
          if (z) {
            const ze = b4(data2, e - 12);
            z = 101075792 === b4(data2, ze), z && (c = lft = b4(data2, ze + 32), o = b4(data2, ze + 48));
          }
          const fltr = opts && opts.filter, _loop_3 = function() {
            const _a3 = zh(data2, o, z), c_1 = _a3[0], sc = _a3[1], su = _a3[2], fn = _a3[3], no = _a3[4], off = _a3[5], b = slzh(data2, off);
            o = no;
            const cbl = function(e2, d) {
              e2 ? (tAll(), cbd(e2, null)) : (d && (files[fn] = d), --lft || cbd(null, files));
            };
            if (!fltr || fltr({
              name: fn,
              size: sc,
              originalSize: su,
              compression: c_1
            })) {
              if (c_1) {
                if (8 === c_1) {
                  const infl = data2.subarray(b, b + sc);
                  if (sc < 32e4)
                    try {
                      cbl(null, inflateSync(infl, new u8(su)));
                    } catch (e2) {
                      cbl(e2, null);
                    }
                  else
                    term.push(inflate(infl, {
                      size: su
                    }, cbl));
                } else
                  cbl(err(14, "unknown compression type " + c_1, 1), null);
              } else
                cbl(null, slc(data2, b, b + sc));
            } else
              cbl(null, null);
          };
          for (let i2 = 0; i2 < c; ++i2)
            _loop_3(i2);
        } else
          cbd(null, {});
        return tAll;
      }
    }
  });

  // packages/systems/core/utils/LottieFetchUtils/index.ts
  function parseManifest(data2) {
    const manifest = JSON.parse(data2);
    if (!("animations" in manifest)) {
      throw new Error("Manifest not found");
    }
    if (manifest.animations.length === 0) {
      throw new Error("No animations listed in the manifest");
    }
    return manifest;
  }
  function isBytesZip(bytes) {
    const b = new Uint8Array(bytes, 0, 32);
    return b[0] === 80 && b[1] === 75 && b[2] === 3 && b[3] === 4;
  }
  async function fetchRequest(url) {
    return await fetch(new URL(url).href).then((r) => r.arrayBuffer());
  }
  async function base64fromU8(data2) {
    const base64url = await new Promise(
      (resolve2) => {
        const reader = new FileReader();
        reader.readAsDataURL(new Blob([data2]));
        reader.onload = () => resolve2(reader.result);
      }
    );
    return base64url.split(",", 2)[1];
  }
  async function unZip(buffer) {
    const file = new Uint8Array(buffer);
    const lottieFile = await new Promise(
      (resolve2, reject2) => {
        (0, import_fflate.unzip)(
          file,
          (err, unzipped) => err ? reject2(err) : resolve2(unzipped)
        );
      }
    );
    return {
      // @ts-expect-error - TS2322 - Type 'string | Uint8Array | Uint16Array | Uint32Array' is not assignable to type 'string'.
      read: (path) => (0, import_fflate.strFromU8)(lottieFile[path]),
      readB64: async (path) => await base64fromU8(lottieFile[path])
    };
  }
  async function prepareLottieAssets(lottieJson, dotLottie) {
    if (!("assets" in lottieJson)) {
      return lottieJson;
    }
    async function parseAsset(asset) {
      const { p } = asset;
      if (p == null)
        return asset;
      if (dotLottie.read(`images/${p}`) == null)
        return asset;
      const ext = p.split(".").pop();
      const assetB64 = await dotLottie.readB64(`images/${p}`);
      if (ext?.startsWith("data:")) {
        asset.p = ext;
        asset.e = 1;
        return asset;
      }
      switch (ext) {
        case "svg":
        case "svg+xml":
          asset.p = `data:image/svg+xml;base64,${assetB64}`;
          break;
        case "png":
        case "jpg":
        case "jpeg":
        case "gif":
        case "webp":
          asset.p = `data:image/${ext};base64,${assetB64}`;
          break;
        default:
          asset.p = `data:;base64,${assetB64}`;
      }
      asset.e = 1;
      return asset;
    }
    const result2 = await Promise.all(lottieJson.assets.map(parseAsset));
    result2.map((asset, i) => {
      lottieJson.assets[i] = asset;
    });
    return lottieJson;
  }
  async function unZipDotLottie(response) {
    const dotLottie = await unZip(response);
    const manifest = parseManifest(dotLottie.read("manifest.json"));
    const animations = await Promise.all(
      manifest.animations.map((a) => {
        const lottieJson = JSON.parse(dotLottie.read(`animations/${a.id}.json`));
        return prepareLottieAssets(lottieJson, dotLottie);
      })
    );
    return animations[0];
  }
  async function fetchLottie(url) {
    const response = await fetchRequest(url);
    if (isBytesZip(response)) {
      return await unZipDotLottie(response);
    }
    const lottieJson = JSON.parse(
      new TextDecoder().decode(response)
    );
    return lottieJson;
  }
  var import_fflate;
  var init_LottieFetchUtils = __esm({
    "packages/systems/core/utils/LottieFetchUtils/index.ts"() {
      "use strict";
      import_fflate = __toESM(require_fflate_min());
    }
  });

  // packages/shared/render/plugins/Animation/modules/LottieSiteModule.ts
  var LottieSiteModule_exports = {};
  __export(LottieSiteModule_exports, {
    cleanupElement: () => cleanupElement,
    createInstance: () => createInstance,
    destroy: () => destroy,
    init: () => init,
    ready: () => ready
  });
  var import_findIndex, import_array, getLottieLibrary, isInDesigner, PlayerState, Cache, cache, emptyObject, LottieInstance, getLottieElements, createInstance, cleanupElement, init, destroy, ready;
  var init_LottieSiteModule = __esm({
    "packages/shared/render/plugins/Animation/modules/LottieSiteModule.ts"() {
      "use strict";
      import_findIndex = __toESM(require_findIndex());
      import_array = __toESM(require_array3());
      init_LottieFetchUtils();
      getLottieLibrary = () => window.Webflow.require("lottie").lottie;
      isInDesigner = () => (
        // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'. | TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
        Boolean(window.Webflow.env("design") || window.Webflow.env("preview"))
      );
      PlayerState = {
        Playing: "playing",
        Stopped: "stopped"
      };
      Cache = class {
        _cache = [];
        set(container, instance) {
          const index2 = (0, import_findIndex.default)(this._cache, ({ wrapper }) => wrapper === container);
          if (index2 !== -1)
            this._cache.splice(index2, 1);
          this._cache.push({ wrapper: container, instance });
        }
        delete(container) {
          const index2 = (0, import_findIndex.default)(this._cache, ({ wrapper }) => wrapper === container);
          if (index2 !== -1)
            this._cache.splice(index2, 1);
        }
        get(container) {
          const index2 = (0, import_findIndex.default)(this._cache, ({ wrapper }) => wrapper === container);
          return index2 !== -1 ? this._cache[index2].instance : null;
        }
      };
      cache = new Cache();
      emptyObject = {};
      LottieInstance = class {
        config = null;
        currentState = PlayerState.Stopped;
        animationItem;
        handlers = {
          enterFrame: [],
          complete: [],
          loop: [],
          dataReady: [],
          destroy: [],
          error: []
        };
        load(container) {
          const dataset = container.dataset || emptyObject;
          const src = dataset.src || "";
          if (src.endsWith(".lottie")) {
            fetchLottie(src).then((animationData2) => {
              this._loadAnimation(container, animationData2);
            });
          } else {
            this._loadAnimation(container, void 0);
          }
          cache.set(container, this);
          this.container = container;
        }
        _loadAnimation(container, animationData2) {
          const dataset = container.dataset || emptyObject;
          const src = dataset.src || "";
          const preserveAspectRatio = dataset.preserveAspectRatio || "xMidYMid meet";
          const renderer2 = dataset.renderer || "svg";
          const loop = parseFloat(dataset.loop) === 1;
          const direction = parseFloat(dataset.direction) || 1;
          const autoplay = parseFloat(dataset.autoplay) === 1;
          const duration = parseFloat(dataset.duration) || 0;
          const hasIx2 = parseFloat(dataset.isIx2Target) === 1;
          let ix2InitialValue = parseFloat(dataset.ix2InitialState);
          if (isNaN(ix2InitialValue)) {
            ix2InitialValue = null;
          }
          const config = {
            src,
            loop,
            autoplay,
            renderer: renderer2,
            direction,
            duration,
            hasIx2,
            ix2InitialValue,
            preserveAspectRatio
          };
          if (this.animationItem && this.config && this.config.src === src && renderer2 === this.config.renderer && preserveAspectRatio === this.config.preserveAspectRatio) {
            if (loop !== this.config.loop) {
              this.setLooping(loop);
            }
            if (!hasIx2) {
              if (direction !== this.config.direction) {
                this.setDirection(direction);
              }
              if (duration !== this.config.duration) {
                if (duration > 0 && duration !== this.duration) {
                  this.setSpeed(this.duration / duration);
                } else {
                  this.setSpeed(1);
                }
              }
            }
            if (autoplay) {
              this.play();
            }
            if (ix2InitialValue && ix2InitialValue !== this.config.ix2InitialValue) {
              const percent = ix2InitialValue / 100;
              this.goToFrame(this.frames * percent);
            }
            this.config = config;
            return;
          }
          const options = {
            container,
            loop,
            autoplay,
            renderer: renderer2,
            rendererSettings: {
              preserveAspectRatio,
              progressiveLoad: true,
              hideOnTransparent: true
            }
          };
          try {
            if (this.animationItem) {
              this.destroy();
            }
            this.animationItem = getLottieLibrary().loadAnimation({
              ...options,
              ...animationData2 ? { animationData: animationData2 } : { path: src }
            });
          } catch (err) {
            this.handlers.error.forEach((cb) => cb(err));
            return;
          }
          if (!this.animationItem)
            return;
          if (isInDesigner()) {
            this.animationItem.addEventListener("enterFrame", () => {
              if (!this.isPlaying)
                return;
              const { currentFrame, totalFrames, playDirection } = this.animationItem;
              const toPercent = currentFrame / totalFrames * 100;
              const percentage = Math.round(
                playDirection === 1 ? toPercent : 100 - toPercent
              );
              this.handlers.enterFrame.forEach((cb) => cb(percentage, currentFrame));
            });
            this.animationItem.addEventListener("complete", () => {
              if (this.currentState !== PlayerState.Playing) {
                this.handlers.complete.forEach((cb) => cb());
                return;
              }
              if (!this.animationItem.loop) {
                this.handlers.complete.forEach((cb) => cb());
                return;
              }
              this.currentState = PlayerState.Stopped;
            });
            this.animationItem.addEventListener(
              "loopComplete",
              (loopComplete) => {
                this.handlers.loop.forEach((cb) => cb(loopComplete));
              }
            );
            this.animationItem.addEventListener("data_failed", (err) => {
              this.handlers.error.forEach((cb) => cb(err));
            });
            this.animationItem.addEventListener("error", (err) => {
              this.handlers.error.forEach((cb) => cb(err));
            });
          }
          if (this.isLoaded) {
            this.handlers.dataReady.forEach((cb) => cb());
            if (autoplay) {
              this.play();
            }
          } else {
            this.animationItem.addEventListener("data_ready", () => {
              this.handlers.dataReady.forEach((cb) => cb());
              if (!hasIx2) {
                this.setDirection(direction);
                if (duration > 0 && duration !== this.duration) {
                  this.setSpeed(this.duration / duration);
                }
                if (autoplay) {
                  this.play();
                }
              }
              if (ix2InitialValue) {
                const percent = ix2InitialValue / 100;
                this.goToFrame(this.frames * percent);
              }
            });
          }
          this.config = config;
        }
        onFrameChange(cb) {
          if (this.handlers.enterFrame.indexOf(cb) === -1) {
            this.handlers.enterFrame.push(cb);
          }
        }
        onPlaybackComplete(cb) {
          if (this.handlers.complete.indexOf(cb) === -1) {
            this.handlers.complete.push(cb);
          }
        }
        onLoopComplete(cb) {
          if (this.handlers.loop.indexOf(cb) === -1) {
            this.handlers.loop.push(cb);
          }
        }
        onDestroy(cb) {
          if (this.handlers.destroy.indexOf(cb) === -1) {
            this.handlers.destroy.push(cb);
          }
        }
        onDataReady(cb) {
          if (this.handlers.dataReady.indexOf(cb) === -1) {
            this.handlers.dataReady.push(cb);
          }
        }
        onError(cb) {
          if (this.handlers.error.indexOf(cb) === -1) {
            this.handlers.error.push(cb);
          }
        }
        play() {
          if (!this.animationItem)
            return;
          const frame = this.animationItem.playDirection === 1 ? 0 : this.frames;
          this.animationItem.goToAndPlay(frame, true);
          this.currentState = PlayerState.Playing;
        }
        stop() {
          if (!this.animationItem)
            return;
          if (this.isPlaying) {
            const { playDirection } = this.animationItem;
            const frame = playDirection === 1 ? 0 : this.frames;
            this.animationItem.goToAndStop(frame, true);
          }
          this.currentState = PlayerState.Stopped;
        }
        destroy() {
          if (!this.animationItem)
            return;
          if (this.isPlaying)
            this.stop();
          this.handlers.destroy.forEach((cb) => cb());
          if (this.container) {
            cache.delete(this.container);
          }
          this.animationItem.destroy();
          Object.keys(this.handlers).forEach(
            // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ enterFrame: OnFrameChangeCallback[]; complete: (() => void)[]; loop: OnLoopCompleteCallback[]; dataReady: (() => void)[]; destroy: (() => void)[]; error: ((arg1: Error) => void)[]; }'.
            (key2) => this.handlers[key2].length = 0
          );
          this.animationItem = null;
          this.container = null;
          this.config = null;
        }
        // @ts-expect-error - TS2416 - Property 'isPlaying' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
        get isPlaying() {
          if (!this.animationItem)
            return false;
          return !this.animationItem.isPaused;
        }
        // @ts-expect-error - TS2416 - Property 'isPaused' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
        get isPaused() {
          if (!this.animationItem)
            return false;
          return this.animationItem.isPaused;
        }
        // @ts-expect-error - TS2416 - Property 'duration' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
        get duration() {
          if (!this.animationItem)
            return 0;
          return this.animationItem.getDuration();
        }
        // @ts-expect-error - TS2416 - Property 'frames' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
        get frames() {
          if (!this.animationItem)
            return 0;
          return this.animationItem.totalFrames;
        }
        // @ts-expect-error - TS2416 - Property 'direction' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
        get direction() {
          if (!this.animationItem)
            return 1;
          return this.animationItem.playDirection;
        }
        // @ts-expect-error - TS2416 - Property 'isLoaded' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
        get isLoaded() {
          if (!this.animationItem)
            false;
          return this.animationItem.isLoaded;
        }
        get ix2InitialValue() {
          return this.config ? this.config.ix2InitialValue : null;
        }
        goToFrame(value2) {
          if (!this.animationItem)
            return;
          this.animationItem.setCurrentRawFrameValue(value2);
        }
        setSubframe(value2) {
          if (!this.animationItem)
            return;
          this.animationItem.setSubframe(value2);
        }
        setSpeed(value2 = 1) {
          if (!this.animationItem)
            return;
          if (this.isPlaying)
            this.stop();
          this.animationItem.setSpeed(value2);
        }
        setLooping(value2) {
          if (!this.animationItem)
            return;
          if (this.isPlaying)
            this.stop();
          this.animationItem.loop = value2;
        }
        setDirection(value2) {
          if (!this.animationItem)
            return;
          if (this.isPlaying)
            this.stop();
          this.animationItem.setDirection(value2);
          this.goToFrame(value2 === 1 ? 0 : this.frames);
        }
      };
      getLottieElements = () => Array.from(document.querySelectorAll('[data-animation-type="lottie"]'));
      createInstance = (container) => {
        let lottieInstance = cache.get(container);
        if (lottieInstance == null) {
          lottieInstance = new LottieInstance();
        }
        lottieInstance.load(container);
        return lottieInstance;
      };
      cleanupElement = (element) => {
        const lottieInstance = cache.get(element);
        if (lottieInstance) {
          lottieInstance.destroy();
        }
      };
      init = () => {
        getLottieElements().forEach((element) => {
          const hasIx2 = parseFloat(element.getAttribute("data-is-ix2-target")) === 1;
          if (!hasIx2) {
            cleanupElement(element);
          }
          createInstance(element);
        });
      };
      destroy = () => {
        getLottieElements().forEach(cleanupElement);
      };
      ready = init;
    }
  });

  // node_modules/lottie-web/build/player/lottie.min.js
  var require_lottie_min = __commonJS({
    "node_modules/lottie-web/build/player/lottie.min.js"(exports, module) {
      "undefined" != typeof navigator && function(t, e) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).lottie = e();
      }(exports, function() {
        "use strict";
        var svgNS = "http://www.w3.org/2000/svg", locationHref = "", _useWebWorker = false, initialDefaultFrame = -999999, setWebWorker = function(t) {
          _useWebWorker = !!t;
        }, getWebWorker = function() {
          return _useWebWorker;
        }, setLocationHref = function(t) {
          locationHref = t;
        }, getLocationHref = function() {
          return locationHref;
        };
        function createTag(t) {
          return document.createElement(t);
        }
        function extendPrototype(t, e) {
          var i, r, s = t.length;
          for (i = 0; i < s; i += 1)
            for (var a in r = t[i].prototype)
              Object.prototype.hasOwnProperty.call(r, a) && (e.prototype[a] = r[a]);
        }
        function getDescriptor(t, e) {
          return Object.getOwnPropertyDescriptor(t, e);
        }
        function createProxyFunction(t) {
          function e() {
          }
          return e.prototype = t, e;
        }
        var audioControllerFactory = function() {
          function t(t2) {
            this.audios = [], this.audioFactory = t2, this._volume = 1, this._isMuted = false;
          }
          return t.prototype = { addAudio: function(t2) {
            this.audios.push(t2);
          }, pause: function() {
            var t2, e = this.audios.length;
            for (t2 = 0; t2 < e; t2 += 1)
              this.audios[t2].pause();
          }, resume: function() {
            var t2, e = this.audios.length;
            for (t2 = 0; t2 < e; t2 += 1)
              this.audios[t2].resume();
          }, setRate: function(t2) {
            var e, i = this.audios.length;
            for (e = 0; e < i; e += 1)
              this.audios[e].setRate(t2);
          }, createAudio: function(t2) {
            return this.audioFactory ? this.audioFactory(t2) : window.Howl ? new window.Howl({ src: [t2] }) : { isPlaying: false, play: function() {
              this.isPlaying = true;
            }, seek: function() {
              this.isPlaying = false;
            }, playing: function() {
            }, rate: function() {
            }, setVolume: function() {
            } };
          }, setAudioFactory: function(t2) {
            this.audioFactory = t2;
          }, setVolume: function(t2) {
            this._volume = t2, this._updateVolume();
          }, mute: function() {
            this._isMuted = true, this._updateVolume();
          }, unmute: function() {
            this._isMuted = false, this._updateVolume();
          }, getVolume: function() {
            return this._volume;
          }, _updateVolume: function() {
            var t2, e = this.audios.length;
            for (t2 = 0; t2 < e; t2 += 1)
              this.audios[t2].volume(this._volume * (this._isMuted ? 0 : 1));
          } }, function() {
            return new t();
          };
        }(), createTypedArray = function() {
          function t(t2, e) {
            var i, r = 0, s = [];
            switch (t2) {
              case "int16":
              case "uint8c":
                i = 1;
                break;
              default:
                i = 1.1;
            }
            for (r = 0; r < e; r += 1)
              s.push(i);
            return s;
          }
          return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array ? function(e, i) {
            return "float32" === e ? new Float32Array(i) : "int16" === e ? new Int16Array(i) : "uint8c" === e ? new Uint8ClampedArray(i) : t(e, i);
          } : t;
        }();
        function createSizedArray(t) {
          return Array.apply(null, { length: t });
        }
        function _typeof$6(t) {
          return _typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
            return typeof t2;
          } : function(t2) {
            return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
          }, _typeof$6(t);
        }
        var subframeEnabled = true, expressionsPlugin = null, expressionsInterfaces = null, idPrefix$1 = "", isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent), _shouldRoundValues = false, bmPow = Math.pow, bmSqrt = Math.sqrt, bmFloor = Math.floor, bmMax = Math.max, bmMin = Math.min, BMMath = {};
        function ProjectInterface$1() {
          return {};
        }
        !function() {
          var t, e = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"], i = e.length;
          for (t = 0; t < i; t += 1)
            BMMath[e[t]] = Math[e[t]];
        }(), BMMath.random = Math.random, BMMath.abs = function(t) {
          if ("object" === _typeof$6(t) && t.length) {
            var e, i = createSizedArray(t.length), r = t.length;
            for (e = 0; e < r; e += 1)
              i[e] = Math.abs(t[e]);
            return i;
          }
          return Math.abs(t);
        };
        var defaultCurveSegments = 150, degToRads = Math.PI / 180, roundCorner = 0.5519;
        function roundValues(t) {
          _shouldRoundValues = !!t;
        }
        function bmRnd(t) {
          return _shouldRoundValues ? Math.round(t) : t;
        }
        function styleDiv(t) {
          t.style.position = "absolute", t.style.top = 0, t.style.left = 0, t.style.display = "block", t.style.transformOrigin = "0 0", t.style.webkitTransformOrigin = "0 0", t.style.backfaceVisibility = "visible", t.style.webkitBackfaceVisibility = "visible", t.style.transformStyle = "preserve-3d", t.style.webkitTransformStyle = "preserve-3d", t.style.mozTransformStyle = "preserve-3d";
        }
        function BMEnterFrameEvent(t, e, i, r) {
          this.type = t, this.currentTime = e, this.totalTime = i, this.direction = r < 0 ? -1 : 1;
        }
        function BMCompleteEvent(t, e) {
          this.type = t, this.direction = e < 0 ? -1 : 1;
        }
        function BMCompleteLoopEvent(t, e, i, r) {
          this.type = t, this.currentLoop = i, this.totalLoops = e, this.direction = r < 0 ? -1 : 1;
        }
        function BMSegmentStartEvent(t, e, i) {
          this.type = t, this.firstFrame = e, this.totalFrames = i;
        }
        function BMDestroyEvent(t, e) {
          this.type = t, this.target = e;
        }
        function BMRenderFrameErrorEvent(t, e) {
          this.type = "renderFrameError", this.nativeError = t, this.currentTime = e;
        }
        function BMConfigErrorEvent(t) {
          this.type = "configError", this.nativeError = t;
        }
        function BMAnimationConfigErrorEvent(t, e) {
          this.type = t, this.nativeError = e;
        }
        var createElementID = (_count = 0, function() {
          return idPrefix$1 + "__lottie_element_" + (_count += 1);
        }), _count;
        function HSVtoRGB(t, e, i) {
          var r, s, a, n, o, h, l, p;
          switch (h = i * (1 - e), l = i * (1 - (o = 6 * t - (n = Math.floor(6 * t))) * e), p = i * (1 - (1 - o) * e), n % 6) {
            case 0:
              r = i, s = p, a = h;
              break;
            case 1:
              r = l, s = i, a = h;
              break;
            case 2:
              r = h, s = i, a = p;
              break;
            case 3:
              r = h, s = l, a = i;
              break;
            case 4:
              r = p, s = h, a = i;
              break;
            case 5:
              r = i, s = h, a = l;
          }
          return [r, s, a];
        }
        function RGBtoHSV(t, e, i) {
          var r, s = Math.max(t, e, i), a = Math.min(t, e, i), n = s - a, o = 0 === s ? 0 : n / s, h = s / 255;
          switch (s) {
            case a:
              r = 0;
              break;
            case t:
              r = e - i + n * (e < i ? 6 : 0), r /= 6 * n;
              break;
            case e:
              r = i - t + 2 * n, r /= 6 * n;
              break;
            case i:
              r = t - e + 4 * n, r /= 6 * n;
          }
          return [r, o, h];
        }
        function addSaturationToRGB(t, e) {
          var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
          return i[1] += e, i[1] > 1 ? i[1] = 1 : i[1] <= 0 && (i[1] = 0), HSVtoRGB(i[0], i[1], i[2]);
        }
        function addBrightnessToRGB(t, e) {
          var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
          return i[2] += e, i[2] > 1 ? i[2] = 1 : i[2] < 0 && (i[2] = 0), HSVtoRGB(i[0], i[1], i[2]);
        }
        function addHueToRGB(t, e) {
          var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
          return i[0] += e / 360, i[0] > 1 ? i[0] -= 1 : i[0] < 0 && (i[0] += 1), HSVtoRGB(i[0], i[1], i[2]);
        }
        var rgbToHex = function() {
          var t, e, i = [];
          for (t = 0; t < 256; t += 1)
            e = t.toString(16), i[t] = 1 === e.length ? "0" + e : e;
          return function(t2, e2, r) {
            return t2 < 0 && (t2 = 0), e2 < 0 && (e2 = 0), r < 0 && (r = 0), "#" + i[t2] + i[e2] + i[r];
          };
        }(), setSubframeEnabled = function(t) {
          subframeEnabled = !!t;
        }, getSubframeEnabled = function() {
          return subframeEnabled;
        }, setExpressionsPlugin = function(t) {
          expressionsPlugin = t;
        }, getExpressionsPlugin = function() {
          return expressionsPlugin;
        }, setExpressionInterfaces = function(t) {
          expressionsInterfaces = t;
        }, getExpressionInterfaces = function() {
          return expressionsInterfaces;
        }, setDefaultCurveSegments = function(t) {
          defaultCurveSegments = t;
        }, getDefaultCurveSegments = function() {
          return defaultCurveSegments;
        }, setIdPrefix = function(t) {
          idPrefix$1 = t;
        }, getIdPrefix = function() {
          return idPrefix$1;
        };
        function createNS(t) {
          return document.createElementNS(svgNS, t);
        }
        function _typeof$5(t) {
          return _typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
            return typeof t2;
          } : function(t2) {
            return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
          }, _typeof$5(t);
        }
        var dataManager = function() {
          var t, e, i = 1, r = [], s = { onmessage: function() {
          }, postMessage: function(e2) {
            t({ data: e2 });
          } }, a = { postMessage: function(t2) {
            s.onmessage({ data: t2 });
          } };
          function n() {
            e || (e = function(e2) {
              if (window.Worker && window.Blob && getWebWorker()) {
                var i2 = new Blob(["var _workerSelf = self; self.onmessage = ", e2.toString()], { type: "text/javascript" }), r2 = URL.createObjectURL(i2);
                return new Worker(r2);
              }
              return t = e2, s;
            }(function(t2) {
              if (a.dataManager || (a.dataManager = function() {
                function t3(s3, a3) {
                  var n3, o3, h2, l2, p2, m2, c = s3.length;
                  for (o3 = 0; o3 < c; o3 += 1)
                    if ("ks" in (n3 = s3[o3]) && !n3.completed) {
                      if (n3.completed = true, n3.hasMask) {
                        var d = n3.masksProperties;
                        for (l2 = d.length, h2 = 0; h2 < l2; h2 += 1)
                          if (d[h2].pt.k.i)
                            r2(d[h2].pt.k);
                          else
                            for (m2 = d[h2].pt.k.length, p2 = 0; p2 < m2; p2 += 1)
                              d[h2].pt.k[p2].s && r2(d[h2].pt.k[p2].s[0]), d[h2].pt.k[p2].e && r2(d[h2].pt.k[p2].e[0]);
                      }
                      0 === n3.ty ? (n3.layers = e3(n3.refId, a3), t3(n3.layers, a3)) : 4 === n3.ty ? i2(n3.shapes) : 5 === n3.ty && f(n3);
                    }
                }
                function e3(t4, e4) {
                  var i3 = function(t5, e5) {
                    for (var i4 = 0, r3 = e5.length; i4 < r3; ) {
                      if (e5[i4].id === t5)
                        return e5[i4];
                      i4 += 1;
                    }
                    return null;
                  }(t4, e4);
                  return i3 ? i3.layers.__used ? JSON.parse(JSON.stringify(i3.layers)) : (i3.layers.__used = true, i3.layers) : null;
                }
                function i2(t4) {
                  var e4, s3, a3;
                  for (e4 = t4.length - 1; e4 >= 0; e4 -= 1)
                    if ("sh" === t4[e4].ty)
                      if (t4[e4].ks.k.i)
                        r2(t4[e4].ks.k);
                      else
                        for (a3 = t4[e4].ks.k.length, s3 = 0; s3 < a3; s3 += 1)
                          t4[e4].ks.k[s3].s && r2(t4[e4].ks.k[s3].s[0]), t4[e4].ks.k[s3].e && r2(t4[e4].ks.k[s3].e[0]);
                    else
                      "gr" === t4[e4].ty && i2(t4[e4].it);
                }
                function r2(t4) {
                  var e4, i3 = t4.i.length;
                  for (e4 = 0; e4 < i3; e4 += 1)
                    t4.i[e4][0] += t4.v[e4][0], t4.i[e4][1] += t4.v[e4][1], t4.o[e4][0] += t4.v[e4][0], t4.o[e4][1] += t4.v[e4][1];
                }
                function s2(t4, e4) {
                  var i3 = e4 ? e4.split(".") : [100, 100, 100];
                  return t4[0] > i3[0] || !(i3[0] > t4[0]) && (t4[1] > i3[1] || !(i3[1] > t4[1]) && (t4[2] > i3[2] || !(i3[2] > t4[2]) && null));
                }
                var a2, n2 = function() {
                  var t4 = [4, 4, 14];
                  function e4(t5) {
                    var e5, i3, r3, s3 = t5.length;
                    for (e5 = 0; e5 < s3; e5 += 1)
                      5 === t5[e5].ty && (r3 = void 0, r3 = (i3 = t5[e5]).t.d, i3.t.d = { k: [{ s: r3, t: 0 }] });
                  }
                  return function(i3) {
                    if (s2(t4, i3.v) && (e4(i3.layers), i3.assets)) {
                      var r3, a3 = i3.assets.length;
                      for (r3 = 0; r3 < a3; r3 += 1)
                        i3.assets[r3].layers && e4(i3.assets[r3].layers);
                    }
                  };
                }(), o2 = (a2 = [4, 7, 99], function(t4) {
                  if (t4.chars && !s2(a2, t4.v)) {
                    var e4, r3 = t4.chars.length;
                    for (e4 = 0; e4 < r3; e4 += 1) {
                      var n3 = t4.chars[e4];
                      n3.data && n3.data.shapes && (i2(n3.data.shapes), n3.data.ip = 0, n3.data.op = 99999, n3.data.st = 0, n3.data.sr = 1, n3.data.ks = { p: { k: [0, 0], a: 0 }, s: { k: [100, 100], a: 0 }, a: { k: [0, 0], a: 0 }, r: { k: 0, a: 0 }, o: { k: 100, a: 0 } }, t4.chars[e4].t || (n3.data.shapes.push({ ty: "no" }), n3.data.shapes[0].it.push({ p: { k: [0, 0], a: 0 }, s: { k: [100, 100], a: 0 }, a: { k: [0, 0], a: 0 }, r: { k: 0, a: 0 }, o: { k: 100, a: 0 }, sk: { k: 0, a: 0 }, sa: { k: 0, a: 0 }, ty: "tr" })));
                    }
                  }
                }), h = function() {
                  var t4 = [5, 7, 15];
                  function e4(t5) {
                    var e5, i3, r3 = t5.length;
                    for (e5 = 0; e5 < r3; e5 += 1)
                      5 === t5[e5].ty && (i3 = void 0, "number" == typeof (i3 = t5[e5].t.p).a && (i3.a = { a: 0, k: i3.a }), "number" == typeof i3.p && (i3.p = { a: 0, k: i3.p }), "number" == typeof i3.r && (i3.r = { a: 0, k: i3.r }));
                  }
                  return function(i3) {
                    if (s2(t4, i3.v) && (e4(i3.layers), i3.assets)) {
                      var r3, a3 = i3.assets.length;
                      for (r3 = 0; r3 < a3; r3 += 1)
                        i3.assets[r3].layers && e4(i3.assets[r3].layers);
                    }
                  };
                }(), l = function() {
                  var t4 = [4, 1, 9];
                  function e4(t5) {
                    var i4, r3, s3, a3 = t5.length;
                    for (i4 = 0; i4 < a3; i4 += 1)
                      if ("gr" === t5[i4].ty)
                        e4(t5[i4].it);
                      else if ("fl" === t5[i4].ty || "st" === t5[i4].ty)
                        if (t5[i4].c.k && t5[i4].c.k[0].i)
                          for (s3 = t5[i4].c.k.length, r3 = 0; r3 < s3; r3 += 1)
                            t5[i4].c.k[r3].s && (t5[i4].c.k[r3].s[0] /= 255, t5[i4].c.k[r3].s[1] /= 255, t5[i4].c.k[r3].s[2] /= 255, t5[i4].c.k[r3].s[3] /= 255), t5[i4].c.k[r3].e && (t5[i4].c.k[r3].e[0] /= 255, t5[i4].c.k[r3].e[1] /= 255, t5[i4].c.k[r3].e[2] /= 255, t5[i4].c.k[r3].e[3] /= 255);
                        else
                          t5[i4].c.k[0] /= 255, t5[i4].c.k[1] /= 255, t5[i4].c.k[2] /= 255, t5[i4].c.k[3] /= 255;
                  }
                  function i3(t5) {
                    var i4, r3 = t5.length;
                    for (i4 = 0; i4 < r3; i4 += 1)
                      4 === t5[i4].ty && e4(t5[i4].shapes);
                  }
                  return function(e5) {
                    if (s2(t4, e5.v) && (i3(e5.layers), e5.assets)) {
                      var r3, a3 = e5.assets.length;
                      for (r3 = 0; r3 < a3; r3 += 1)
                        e5.assets[r3].layers && i3(e5.assets[r3].layers);
                    }
                  };
                }(), p = function() {
                  var t4 = [4, 4, 18];
                  function e4(t5) {
                    var i4, r3, s3;
                    for (i4 = t5.length - 1; i4 >= 0; i4 -= 1)
                      if ("sh" === t5[i4].ty)
                        if (t5[i4].ks.k.i)
                          t5[i4].ks.k.c = t5[i4].closed;
                        else
                          for (s3 = t5[i4].ks.k.length, r3 = 0; r3 < s3; r3 += 1)
                            t5[i4].ks.k[r3].s && (t5[i4].ks.k[r3].s[0].c = t5[i4].closed), t5[i4].ks.k[r3].e && (t5[i4].ks.k[r3].e[0].c = t5[i4].closed);
                      else
                        "gr" === t5[i4].ty && e4(t5[i4].it);
                  }
                  function i3(t5) {
                    var i4, r3, s3, a3, n3, o3, h2 = t5.length;
                    for (r3 = 0; r3 < h2; r3 += 1) {
                      if ((i4 = t5[r3]).hasMask) {
                        var l2 = i4.masksProperties;
                        for (a3 = l2.length, s3 = 0; s3 < a3; s3 += 1)
                          if (l2[s3].pt.k.i)
                            l2[s3].pt.k.c = l2[s3].cl;
                          else
                            for (o3 = l2[s3].pt.k.length, n3 = 0; n3 < o3; n3 += 1)
                              l2[s3].pt.k[n3].s && (l2[s3].pt.k[n3].s[0].c = l2[s3].cl), l2[s3].pt.k[n3].e && (l2[s3].pt.k[n3].e[0].c = l2[s3].cl);
                      }
                      4 === i4.ty && e4(i4.shapes);
                    }
                  }
                  return function(e5) {
                    if (s2(t4, e5.v) && (i3(e5.layers), e5.assets)) {
                      var r3, a3 = e5.assets.length;
                      for (r3 = 0; r3 < a3; r3 += 1)
                        e5.assets[r3].layers && i3(e5.assets[r3].layers);
                    }
                  };
                }();
                function f(t4) {
                  0 === t4.t.a.length && t4.t.p;
                }
                var m = { completeData: function(i3) {
                  i3.__complete || (l(i3), n2(i3), o2(i3), h(i3), p(i3), t3(i3.layers, i3.assets), function(i4, r3) {
                    if (i4) {
                      var s3 = 0, a3 = i4.length;
                      for (s3 = 0; s3 < a3; s3 += 1)
                        1 === i4[s3].t && (i4[s3].data.layers = e3(i4[s3].data.refId, r3), t3(i4[s3].data.layers, r3));
                    }
                  }(i3.chars, i3.assets), i3.__complete = true);
                } };
                return m.checkColors = l, m.checkChars = o2, m.checkPathProperties = h, m.checkShapes = p, m.completeLayers = t3, m;
              }()), a.assetLoader || (a.assetLoader = function() {
                function t3(t4) {
                  var e3 = t4.getResponseHeader("content-type");
                  return e3 && "json" === t4.responseType && -1 !== e3.indexOf("json") || t4.response && "object" === _typeof$5(t4.response) ? t4.response : t4.response && "string" == typeof t4.response ? JSON.parse(t4.response) : t4.responseText ? JSON.parse(t4.responseText) : null;
                }
                return { load: function(e3, i2, r2, s2) {
                  var a2, n2 = new XMLHttpRequest();
                  try {
                    n2.responseType = "json";
                  } catch (t4) {
                  }
                  n2.onreadystatechange = function() {
                    if (4 === n2.readyState)
                      if (200 === n2.status)
                        a2 = t3(n2), r2(a2);
                      else
                        try {
                          a2 = t3(n2), r2(a2);
                        } catch (t4) {
                          s2 && s2(t4);
                        }
                  };
                  try {
                    n2.open(["G", "E", "T"].join(""), e3, true);
                  } catch (t4) {
                    n2.open(["G", "E", "T"].join(""), i2 + "/" + e3, true);
                  }
                  n2.send();
                } };
              }()), "loadAnimation" === t2.data.type)
                a.assetLoader.load(t2.data.path, t2.data.fullPath, function(e3) {
                  a.dataManager.completeData(e3), a.postMessage({ id: t2.data.id, payload: e3, status: "success" });
                }, function() {
                  a.postMessage({ id: t2.data.id, status: "error" });
                });
              else if ("complete" === t2.data.type) {
                var e2 = t2.data.animation;
                a.dataManager.completeData(e2), a.postMessage({ id: t2.data.id, payload: e2, status: "success" });
              } else
                "loadData" === t2.data.type && a.assetLoader.load(t2.data.path, t2.data.fullPath, function(e3) {
                  a.postMessage({ id: t2.data.id, payload: e3, status: "success" });
                }, function() {
                  a.postMessage({ id: t2.data.id, status: "error" });
                });
            }), e.onmessage = function(t2) {
              var e2 = t2.data, i2 = e2.id, s2 = r[i2];
              r[i2] = null, "success" === e2.status ? s2.onComplete(e2.payload) : s2.onError && s2.onError();
            });
          }
          function o(t2, e2) {
            var s2 = "processId_" + (i += 1);
            return r[s2] = { onComplete: t2, onError: e2 }, s2;
          }
          return { loadAnimation: function(t2, i2, r2) {
            n();
            var s2 = o(i2, r2);
            e.postMessage({ type: "loadAnimation", path: t2, fullPath: window.location.origin + window.location.pathname, id: s2 });
          }, loadData: function(t2, i2, r2) {
            n();
            var s2 = o(i2, r2);
            e.postMessage({ type: "loadData", path: t2, fullPath: window.location.origin + window.location.pathname, id: s2 });
          }, completeAnimation: function(t2, i2, r2) {
            n();
            var s2 = o(i2, r2);
            e.postMessage({ type: "complete", animation: t2, id: s2 });
          } };
        }(), ImagePreloader = function() {
          var t = function() {
            var t2 = createTag("canvas");
            t2.width = 1, t2.height = 1;
            var e2 = t2.getContext("2d");
            return e2.fillStyle = "rgba(0,0,0,0)", e2.fillRect(0, 0, 1, 1), t2;
          }();
          function e() {
            this.loadedAssets += 1, this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);
          }
          function i() {
            this.loadedFootagesCount += 1, this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);
          }
          function r(t2, e2, i2) {
            var r2 = "";
            if (t2.e)
              r2 = t2.p;
            else if (e2) {
              var s2 = t2.p;
              -1 !== s2.indexOf("images/") && (s2 = s2.split("/")[1]), r2 = e2 + s2;
            } else
              r2 = i2, r2 += t2.u ? t2.u : "", r2 += t2.p;
            return r2;
          }
          function s(t2) {
            var e2 = 0, i2 = setInterval(function() {
              (t2.getBBox().width || e2 > 500) && (this._imageLoaded(), clearInterval(i2)), e2 += 1;
            }.bind(this), 50);
          }
          function a(t2) {
            var e2 = { assetData: t2 }, i2 = r(t2, this.assetsPath, this.path);
            return dataManager.loadData(i2, function(t3) {
              e2.img = t3, this._footageLoaded();
            }.bind(this), function() {
              e2.img = {}, this._footageLoaded();
            }.bind(this)), e2;
          }
          function n() {
            this._imageLoaded = e.bind(this), this._footageLoaded = i.bind(this), this.testImageLoaded = s.bind(this), this.createFootageData = a.bind(this), this.assetsPath = "", this.path = "", this.totalImages = 0, this.totalFootages = 0, this.loadedAssets = 0, this.loadedFootagesCount = 0, this.imagesLoadedCb = null, this.images = [];
          }
          return n.prototype = { loadAssets: function(t2, e2) {
            var i2;
            this.imagesLoadedCb = e2;
            var r2 = t2.length;
            for (i2 = 0; i2 < r2; i2 += 1)
              t2[i2].layers || (t2[i2].t && "seq" !== t2[i2].t ? 3 === t2[i2].t && (this.totalFootages += 1, this.images.push(this.createFootageData(t2[i2]))) : (this.totalImages += 1, this.images.push(this._createImageData(t2[i2]))));
          }, setAssetsPath: function(t2) {
            this.assetsPath = t2 || "";
          }, setPath: function(t2) {
            this.path = t2 || "";
          }, loadedImages: function() {
            return this.totalImages === this.loadedAssets;
          }, loadedFootages: function() {
            return this.totalFootages === this.loadedFootagesCount;
          }, destroy: function() {
            this.imagesLoadedCb = null, this.images.length = 0;
          }, getAsset: function(t2) {
            for (var e2 = 0, i2 = this.images.length; e2 < i2; ) {
              if (this.images[e2].assetData === t2)
                return this.images[e2].img;
              e2 += 1;
            }
            return null;
          }, createImgData: function(e2) {
            var i2 = r(e2, this.assetsPath, this.path), s2 = createTag("img");
            s2.crossOrigin = "anonymous", s2.addEventListener("load", this._imageLoaded, false), s2.addEventListener("error", function() {
              a2.img = t, this._imageLoaded();
            }.bind(this), false), s2.src = i2;
            var a2 = { img: s2, assetData: e2 };
            return a2;
          }, createImageData: function(e2) {
            var i2 = r(e2, this.assetsPath, this.path), s2 = createNS("image");
            isSafari ? this.testImageLoaded(s2) : s2.addEventListener("load", this._imageLoaded, false), s2.addEventListener("error", function() {
              a2.img = t, this._imageLoaded();
            }.bind(this), false), s2.setAttributeNS("http://www.w3.org/1999/xlink", "href", i2), this._elementHelper.append ? this._elementHelper.append(s2) : this._elementHelper.appendChild(s2);
            var a2 = { img: s2, assetData: e2 };
            return a2;
          }, imageLoaded: e, footageLoaded: i, setCacheType: function(t2, e2) {
            "svg" === t2 ? (this._elementHelper = e2, this._createImageData = this.createImageData.bind(this)) : this._createImageData = this.createImgData.bind(this);
          } }, n;
        }();
        function BaseEvent() {
        }
        BaseEvent.prototype = { triggerEvent: function(t, e) {
          if (this._cbs[t])
            for (var i = this._cbs[t], r = 0; r < i.length; r += 1)
              i[r](e);
        }, addEventListener: function(t, e) {
          return this._cbs[t] || (this._cbs[t] = []), this._cbs[t].push(e), function() {
            this.removeEventListener(t, e);
          }.bind(this);
        }, removeEventListener: function(t, e) {
          if (e) {
            if (this._cbs[t]) {
              for (var i = 0, r = this._cbs[t].length; i < r; )
                this._cbs[t][i] === e && (this._cbs[t].splice(i, 1), i -= 1, r -= 1), i += 1;
              this._cbs[t].length || (this._cbs[t] = null);
            }
          } else
            this._cbs[t] = null;
        } };
        var markerParser = function() {
          function t(t2) {
            for (var e, i = t2.split("\r\n"), r = {}, s = 0, a = 0; a < i.length; a += 1)
              2 === (e = i[a].split(":")).length && (r[e[0]] = e[1].trim(), s += 1);
            if (0 === s)
              throw new Error();
            return r;
          }
          return function(e) {
            for (var i = [], r = 0; r < e.length; r += 1) {
              var s = e[r], a = { time: s.tm, duration: s.dr };
              try {
                a.payload = JSON.parse(e[r].cm);
              } catch (i2) {
                try {
                  a.payload = t(e[r].cm);
                } catch (t2) {
                  a.payload = { name: e[r].cm };
                }
              }
              i.push(a);
            }
            return i;
          };
        }(), ProjectInterface = function() {
          function t(t2) {
            this.compositions.push(t2);
          }
          return function() {
            function e(t2) {
              for (var e2 = 0, i = this.compositions.length; e2 < i; ) {
                if (this.compositions[e2].data && this.compositions[e2].data.nm === t2)
                  return this.compositions[e2].prepareFrame && this.compositions[e2].data.xt && this.compositions[e2].prepareFrame(this.currentFrame), this.compositions[e2].compInterface;
                e2 += 1;
              }
              return null;
            }
            return e.compositions = [], e.currentFrame = 0, e.registerComposition = t, e;
          };
        }(), renderers = {}, registerRenderer = function(t, e) {
          renderers[t] = e;
        };
        function getRenderer(t) {
          return renderers[t];
        }
        function getRegisteredRenderer() {
          if (renderers.canvas)
            return "canvas";
          for (var t in renderers)
            if (renderers[t])
              return t;
          return "";
        }
        function _typeof$4(t) {
          return _typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
            return typeof t2;
          } : function(t2) {
            return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
          }, _typeof$4(t);
        }
        var AnimationItem = function() {
          this._cbs = [], this.name = "", this.path = "", this.isLoaded = false, this.currentFrame = 0, this.currentRawFrame = 0, this.firstFrame = 0, this.totalFrames = 0, this.frameRate = 0, this.frameMult = 0, this.playSpeed = 1, this.playDirection = 1, this.playCount = 0, this.animationData = {}, this.assets = [], this.isPaused = true, this.autoplay = false, this.loop = true, this.renderer = null, this.animationID = createElementID(), this.assetsPath = "", this.timeCompleted = 0, this.segmentPos = 0, this.isSubframeEnabled = getSubframeEnabled(), this.segments = [], this._idle = true, this._completedLoop = false, this.projectInterface = ProjectInterface(), this.imagePreloader = new ImagePreloader(), this.audioController = audioControllerFactory(), this.markers = [], this.configAnimation = this.configAnimation.bind(this), this.onSetupError = this.onSetupError.bind(this), this.onSegmentComplete = this.onSegmentComplete.bind(this), this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame", 0, 0, 0), this.expressionsPlugin = getExpressionsPlugin();
        };
        extendPrototype([BaseEvent], AnimationItem), AnimationItem.prototype.setParams = function(t) {
          (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
          var e = "svg";
          t.animType ? e = t.animType : t.renderer && (e = t.renderer);
          var i = getRenderer(e);
          this.renderer = new i(this, t.rendererSettings), this.imagePreloader.setCacheType(e, this.renderer.globalData.defs), this.renderer.setProjectInterface(this.projectInterface), this.animType = e, "" === t.loop || null === t.loop || void 0 === t.loop || true === t.loop ? this.loop = true : false === t.loop ? this.loop = false : this.loop = parseInt(t.loop, 10), this.autoplay = !("autoplay" in t) || t.autoplay, this.name = t.name ? t.name : "", this.autoloadSegments = !Object.prototype.hasOwnProperty.call(t, "autoloadSegments") || t.autoloadSegments, this.assetsPath = t.assetsPath, this.initialSegment = t.initialSegment, t.audioFactory && this.audioController.setAudioFactory(t.audioFactory), t.animationData ? this.setupAnimation(t.animationData) : t.path && (-1 !== t.path.lastIndexOf("\\") ? this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1) : this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1), this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1), this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json")), dataManager.loadAnimation(t.path, this.configAnimation, this.onSetupError));
        }, AnimationItem.prototype.onSetupError = function() {
          this.trigger("data_failed");
        }, AnimationItem.prototype.setupAnimation = function(t) {
          dataManager.completeAnimation(t, this.configAnimation);
        }, AnimationItem.prototype.setData = function(t, e) {
          e && "object" !== _typeof$4(e) && (e = JSON.parse(e));
          var i = { wrapper: t, animationData: e }, r = t.attributes;
          i.path = r.getNamedItem("data-animation-path") ? r.getNamedItem("data-animation-path").value : r.getNamedItem("data-bm-path") ? r.getNamedItem("data-bm-path").value : r.getNamedItem("bm-path") ? r.getNamedItem("bm-path").value : "", i.animType = r.getNamedItem("data-anim-type") ? r.getNamedItem("data-anim-type").value : r.getNamedItem("data-bm-type") ? r.getNamedItem("data-bm-type").value : r.getNamedItem("bm-type") ? r.getNamedItem("bm-type").value : r.getNamedItem("data-bm-renderer") ? r.getNamedItem("data-bm-renderer").value : r.getNamedItem("bm-renderer") ? r.getNamedItem("bm-renderer").value : getRegisteredRenderer() || "canvas";
          var s = r.getNamedItem("data-anim-loop") ? r.getNamedItem("data-anim-loop").value : r.getNamedItem("data-bm-loop") ? r.getNamedItem("data-bm-loop").value : r.getNamedItem("bm-loop") ? r.getNamedItem("bm-loop").value : "";
          "false" === s ? i.loop = false : "true" === s ? i.loop = true : "" !== s && (i.loop = parseInt(s, 10));
          var a = r.getNamedItem("data-anim-autoplay") ? r.getNamedItem("data-anim-autoplay").value : r.getNamedItem("data-bm-autoplay") ? r.getNamedItem("data-bm-autoplay").value : !r.getNamedItem("bm-autoplay") || r.getNamedItem("bm-autoplay").value;
          i.autoplay = "false" !== a, i.name = r.getNamedItem("data-name") ? r.getNamedItem("data-name").value : r.getNamedItem("data-bm-name") ? r.getNamedItem("data-bm-name").value : r.getNamedItem("bm-name") ? r.getNamedItem("bm-name").value : "", "false" === (r.getNamedItem("data-anim-prerender") ? r.getNamedItem("data-anim-prerender").value : r.getNamedItem("data-bm-prerender") ? r.getNamedItem("data-bm-prerender").value : r.getNamedItem("bm-prerender") ? r.getNamedItem("bm-prerender").value : "") && (i.prerender = false), i.path ? this.setParams(i) : this.trigger("destroy");
        }, AnimationItem.prototype.includeLayers = function(t) {
          t.op > this.animationData.op && (this.animationData.op = t.op, this.totalFrames = Math.floor(t.op - this.animationData.ip));
          var e, i, r = this.animationData.layers, s = r.length, a = t.layers, n = a.length;
          for (i = 0; i < n; i += 1)
            for (e = 0; e < s; ) {
              if (r[e].id === a[i].id) {
                r[e] = a[i];
                break;
              }
              e += 1;
            }
          if ((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars), this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)), t.assets)
            for (s = t.assets.length, e = 0; e < s; e += 1)
              this.animationData.assets.push(t.assets[e]);
          this.animationData.__complete = false, dataManager.completeAnimation(this.animationData, this.onSegmentComplete);
        }, AnimationItem.prototype.onSegmentComplete = function(t) {
          this.animationData = t;
          var e = getExpressionsPlugin();
          e && e.initExpressions(this), this.loadNextSegment();
        }, AnimationItem.prototype.loadNextSegment = function() {
          var t = this.animationData.segments;
          if (!t || 0 === t.length || !this.autoloadSegments)
            return this.trigger("data_ready"), void (this.timeCompleted = this.totalFrames);
          var e = t.shift();
          this.timeCompleted = e.time * this.frameRate;
          var i = this.path + this.fileName + "_" + this.segmentPos + ".json";
          this.segmentPos += 1, dataManager.loadData(i, this.includeLayers.bind(this), function() {
            this.trigger("data_failed");
          }.bind(this));
        }, AnimationItem.prototype.loadSegments = function() {
          this.animationData.segments || (this.timeCompleted = this.totalFrames), this.loadNextSegment();
        }, AnimationItem.prototype.imagesLoaded = function() {
          this.trigger("loaded_images"), this.checkLoaded();
        }, AnimationItem.prototype.preloadImages = function() {
          this.imagePreloader.setAssetsPath(this.assetsPath), this.imagePreloader.setPath(this.path), this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
        }, AnimationItem.prototype.configAnimation = function(t) {
          if (this.renderer)
            try {
              this.animationData = t, this.initialSegment ? (this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]), this.firstFrame = Math.round(this.initialSegment[0])) : (this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip), this.firstFrame = Math.round(this.animationData.ip)), this.renderer.configAnimation(t), t.assets || (t.assets = []), this.assets = this.animationData.assets, this.frameRate = this.animationData.fr, this.frameMult = this.animationData.fr / 1e3, this.renderer.searchExtraCompositions(t.assets), this.markers = markerParser(t.markers || []), this.trigger("config_ready"), this.preloadImages(), this.loadSegments(), this.updaFrameModifier(), this.waitForFontsLoaded(), this.isPaused && this.audioController.pause();
            } catch (t2) {
              this.triggerConfigError(t2);
            }
        }, AnimationItem.prototype.waitForFontsLoaded = function() {
          this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20));
        }, AnimationItem.prototype.checkLoaded = function() {
          if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages()) {
            this.isLoaded = true;
            var t = getExpressionsPlugin();
            t && t.initExpressions(this), this.renderer.initItems(), setTimeout(function() {
              this.trigger("DOMLoaded");
            }.bind(this), 0), this.gotoFrame(), this.autoplay && this.play();
          }
        }, AnimationItem.prototype.resize = function(t, e) {
          var i = "number" == typeof t ? t : void 0, r = "number" == typeof e ? e : void 0;
          this.renderer.updateContainerSize(i, r);
        }, AnimationItem.prototype.setSubframe = function(t) {
          this.isSubframeEnabled = !!t;
        }, AnimationItem.prototype.gotoFrame = function() {
          this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame, this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted), this.trigger("enterFrame"), this.renderFrame(), this.trigger("drawnFrame");
        }, AnimationItem.prototype.renderFrame = function() {
          if (false !== this.isLoaded && this.renderer)
            try {
              this.expressionsPlugin && this.expressionsPlugin.resetFrame(), this.renderer.renderFrame(this.currentFrame + this.firstFrame);
            } catch (t) {
              this.triggerRenderFrameError(t);
            }
        }, AnimationItem.prototype.play = function(t) {
          t && this.name !== t || true === this.isPaused && (this.isPaused = false, this.trigger("_play"), this.audioController.resume(), this._idle && (this._idle = false, this.trigger("_active")));
        }, AnimationItem.prototype.pause = function(t) {
          t && this.name !== t || false === this.isPaused && (this.isPaused = true, this.trigger("_pause"), this._idle = true, this.trigger("_idle"), this.audioController.pause());
        }, AnimationItem.prototype.togglePause = function(t) {
          t && this.name !== t || (true === this.isPaused ? this.play() : this.pause());
        }, AnimationItem.prototype.stop = function(t) {
          t && this.name !== t || (this.pause(), this.playCount = 0, this._completedLoop = false, this.setCurrentRawFrameValue(0));
        }, AnimationItem.prototype.getMarkerData = function(t) {
          for (var e, i = 0; i < this.markers.length; i += 1)
            if ((e = this.markers[i]).payload && e.payload.name === t)
              return e;
          return null;
        }, AnimationItem.prototype.goToAndStop = function(t, e, i) {
          if (!i || this.name === i) {
            var r = Number(t);
            if (isNaN(r)) {
              var s = this.getMarkerData(t);
              s && this.goToAndStop(s.time, true);
            } else
              e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier);
            this.pause();
          }
        }, AnimationItem.prototype.goToAndPlay = function(t, e, i) {
          if (!i || this.name === i) {
            var r = Number(t);
            if (isNaN(r)) {
              var s = this.getMarkerData(t);
              s && (s.duration ? this.playSegments([s.time, s.time + s.duration], true) : this.goToAndStop(s.time, true));
            } else
              this.goToAndStop(r, e, i);
            this.play();
          }
        }, AnimationItem.prototype.advanceTime = function(t) {
          if (true !== this.isPaused && false !== this.isLoaded) {
            var e = this.currentRawFrame + t * this.frameModifier, i = false;
            e >= this.totalFrames - 1 && this.frameModifier > 0 ? this.loop && this.playCount !== this.loop ? e >= this.totalFrames ? (this.playCount += 1, this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames), this._completedLoop = true, this.trigger("loopComplete"))) : this.setCurrentRawFrameValue(e) : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || (i = true, e = this.totalFrames - 1) : e < 0 ? this.checkSegments(e % this.totalFrames) || (!this.loop || this.playCount-- <= 0 && true !== this.loop ? (i = true, e = 0) : (this.setCurrentRawFrameValue(this.totalFrames + e % this.totalFrames), this._completedLoop ? this.trigger("loopComplete") : this._completedLoop = true)) : this.setCurrentRawFrameValue(e), i && (this.setCurrentRawFrameValue(e), this.pause(), this.trigger("complete"));
          }
        }, AnimationItem.prototype.adjustSegment = function(t, e) {
          this.playCount = 0, t[1] < t[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)), this.totalFrames = t[0] - t[1], this.timeCompleted = this.totalFrames, this.firstFrame = t[1], this.setCurrentRawFrameValue(this.totalFrames - 1e-3 - e)) : t[1] > t[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)), this.totalFrames = t[1] - t[0], this.timeCompleted = this.totalFrames, this.firstFrame = t[0], this.setCurrentRawFrameValue(1e-3 + e)), this.trigger("segmentStart");
        }, AnimationItem.prototype.setSegment = function(t, e) {
          var i = -1;
          this.isPaused && (this.currentRawFrame + this.firstFrame < t ? i = t : this.currentRawFrame + this.firstFrame > e && (i = e - t)), this.firstFrame = t, this.totalFrames = e - t, this.timeCompleted = this.totalFrames, -1 !== i && this.goToAndStop(i, true);
        }, AnimationItem.prototype.playSegments = function(t, e) {
          if (e && (this.segments.length = 0), "object" === _typeof$4(t[0])) {
            var i, r = t.length;
            for (i = 0; i < r; i += 1)
              this.segments.push(t[i]);
          } else
            this.segments.push(t);
          this.segments.length && e && this.adjustSegment(this.segments.shift(), 0), this.isPaused && this.play();
        }, AnimationItem.prototype.resetSegments = function(t) {
          this.segments.length = 0, this.segments.push([this.animationData.ip, this.animationData.op]), t && this.checkSegments(0);
        }, AnimationItem.prototype.checkSegments = function(t) {
          return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t), true);
        }, AnimationItem.prototype.destroy = function(t) {
          t && this.name !== t || !this.renderer || (this.renderer.destroy(), this.imagePreloader.destroy(), this.trigger("destroy"), this._cbs = null, this.onEnterFrame = null, this.onLoopComplete = null, this.onComplete = null, this.onSegmentStart = null, this.onDestroy = null, this.renderer = null, this.expressionsPlugin = null, this.imagePreloader = null, this.projectInterface = null);
        }, AnimationItem.prototype.setCurrentRawFrameValue = function(t) {
          this.currentRawFrame = t, this.gotoFrame();
        }, AnimationItem.prototype.setSpeed = function(t) {
          this.playSpeed = t, this.updaFrameModifier();
        }, AnimationItem.prototype.setDirection = function(t) {
          this.playDirection = t < 0 ? -1 : 1, this.updaFrameModifier();
        }, AnimationItem.prototype.setLoop = function(t) {
          this.loop = t;
        }, AnimationItem.prototype.setVolume = function(t, e) {
          e && this.name !== e || this.audioController.setVolume(t);
        }, AnimationItem.prototype.getVolume = function() {
          return this.audioController.getVolume();
        }, AnimationItem.prototype.mute = function(t) {
          t && this.name !== t || this.audioController.mute();
        }, AnimationItem.prototype.unmute = function(t) {
          t && this.name !== t || this.audioController.unmute();
        }, AnimationItem.prototype.updaFrameModifier = function() {
          this.frameModifier = this.frameMult * this.playSpeed * this.playDirection, this.audioController.setRate(this.playSpeed * this.playDirection);
        }, AnimationItem.prototype.getPath = function() {
          return this.path;
        }, AnimationItem.prototype.getAssetsPath = function(t) {
          var e = "";
          if (t.e)
            e = t.p;
          else if (this.assetsPath) {
            var i = t.p;
            -1 !== i.indexOf("images/") && (i = i.split("/")[1]), e = this.assetsPath + i;
          } else
            e = this.path, e += t.u ? t.u : "", e += t.p;
          return e;
        }, AnimationItem.prototype.getAssetData = function(t) {
          for (var e = 0, i = this.assets.length; e < i; ) {
            if (t === this.assets[e].id)
              return this.assets[e];
            e += 1;
          }
          return null;
        }, AnimationItem.prototype.hide = function() {
          this.renderer.hide();
        }, AnimationItem.prototype.show = function() {
          this.renderer.show();
        }, AnimationItem.prototype.getDuration = function(t) {
          return t ? this.totalFrames : this.totalFrames / this.frameRate;
        }, AnimationItem.prototype.updateDocumentData = function(t, e, i) {
          try {
            this.renderer.getElementByPath(t).updateDocumentData(e, i);
          } catch (t2) {
          }
        }, AnimationItem.prototype.trigger = function(t) {
          if (this._cbs && this._cbs[t])
            switch (t) {
              case "enterFrame":
                this.triggerEvent(t, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameModifier));
                break;
              case "drawnFrame":
                this.drawnFrameEvent.currentTime = this.currentFrame, this.drawnFrameEvent.totalTime = this.totalFrames, this.drawnFrameEvent.direction = this.frameModifier, this.triggerEvent(t, this.drawnFrameEvent);
                break;
              case "loopComplete":
                this.triggerEvent(t, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult));
                break;
              case "complete":
                this.triggerEvent(t, new BMCompleteEvent(t, this.frameMult));
                break;
              case "segmentStart":
                this.triggerEvent(t, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames));
                break;
              case "destroy":
                this.triggerEvent(t, new BMDestroyEvent(t, this));
                break;
              default:
                this.triggerEvent(t);
            }
          "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult)), "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult)), "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t, this.frameMult)), "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames)), "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t, this));
        }, AnimationItem.prototype.triggerRenderFrameError = function(t) {
          var e = new BMRenderFrameErrorEvent(t, this.currentFrame);
          this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
        }, AnimationItem.prototype.triggerConfigError = function(t) {
          var e = new BMConfigErrorEvent(t, this.currentFrame);
          this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
        };
        var animationManager = function() {
          var t = {}, e = [], i = 0, r = 0, s = 0, a = true, n = false;
          function o(t2) {
            for (var i2 = 0, s2 = t2.target; i2 < r; )
              e[i2].animation === s2 && (e.splice(i2, 1), i2 -= 1, r -= 1, s2.isPaused || p()), i2 += 1;
          }
          function h(t2, i2) {
            if (!t2)
              return null;
            for (var s2 = 0; s2 < r; ) {
              if (e[s2].elem === t2 && null !== e[s2].elem)
                return e[s2].animation;
              s2 += 1;
            }
            var a2 = new AnimationItem();
            return f(a2, t2), a2.setData(t2, i2), a2;
          }
          function l() {
            s += 1, d();
          }
          function p() {
            s -= 1;
          }
          function f(t2, i2) {
            t2.addEventListener("destroy", o), t2.addEventListener("_active", l), t2.addEventListener("_idle", p), e.push({ elem: i2, animation: t2 }), r += 1;
          }
          function m(t2) {
            var o2, h2 = t2 - i;
            for (o2 = 0; o2 < r; o2 += 1)
              e[o2].animation.advanceTime(h2);
            i = t2, s && !n ? window.requestAnimationFrame(m) : a = true;
          }
          function c(t2) {
            i = t2, window.requestAnimationFrame(m);
          }
          function d() {
            !n && s && a && (window.requestAnimationFrame(c), a = false);
          }
          return t.registerAnimation = h, t.loadAnimation = function(t2) {
            var e2 = new AnimationItem();
            return f(e2, null), e2.setParams(t2), e2;
          }, t.setSpeed = function(t2, i2) {
            var s2;
            for (s2 = 0; s2 < r; s2 += 1)
              e[s2].animation.setSpeed(t2, i2);
          }, t.setDirection = function(t2, i2) {
            var s2;
            for (s2 = 0; s2 < r; s2 += 1)
              e[s2].animation.setDirection(t2, i2);
          }, t.play = function(t2) {
            var i2;
            for (i2 = 0; i2 < r; i2 += 1)
              e[i2].animation.play(t2);
          }, t.pause = function(t2) {
            var i2;
            for (i2 = 0; i2 < r; i2 += 1)
              e[i2].animation.pause(t2);
          }, t.stop = function(t2) {
            var i2;
            for (i2 = 0; i2 < r; i2 += 1)
              e[i2].animation.stop(t2);
          }, t.togglePause = function(t2) {
            var i2;
            for (i2 = 0; i2 < r; i2 += 1)
              e[i2].animation.togglePause(t2);
          }, t.searchAnimations = function(t2, e2, i2) {
            var r2, s2 = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))), a2 = s2.length;
            for (r2 = 0; r2 < a2; r2 += 1)
              i2 && s2[r2].setAttribute("data-bm-type", i2), h(s2[r2], t2);
            if (e2 && 0 === a2) {
              i2 || (i2 = "svg");
              var n2 = document.getElementsByTagName("body")[0];
              n2.innerText = "";
              var o2 = createTag("div");
              o2.style.width = "100%", o2.style.height = "100%", o2.setAttribute("data-bm-type", i2), n2.appendChild(o2), h(o2, t2);
            }
          }, t.resize = function() {
            var t2;
            for (t2 = 0; t2 < r; t2 += 1)
              e[t2].animation.resize();
          }, t.goToAndStop = function(t2, i2, s2) {
            var a2;
            for (a2 = 0; a2 < r; a2 += 1)
              e[a2].animation.goToAndStop(t2, i2, s2);
          }, t.destroy = function(t2) {
            var i2;
            for (i2 = r - 1; i2 >= 0; i2 -= 1)
              e[i2].animation.destroy(t2);
          }, t.freeze = function() {
            n = true;
          }, t.unfreeze = function() {
            n = false, d();
          }, t.setVolume = function(t2, i2) {
            var s2;
            for (s2 = 0; s2 < r; s2 += 1)
              e[s2].animation.setVolume(t2, i2);
          }, t.mute = function(t2) {
            var i2;
            for (i2 = 0; i2 < r; i2 += 1)
              e[i2].animation.mute(t2);
          }, t.unmute = function(t2) {
            var i2;
            for (i2 = 0; i2 < r; i2 += 1)
              e[i2].animation.unmute(t2);
          }, t.getRegisteredAnimations = function() {
            var t2, i2 = e.length, r2 = [];
            for (t2 = 0; t2 < i2; t2 += 1)
              r2.push(e[t2].animation);
            return r2;
          }, t;
        }(), BezierFactory = function() {
          var t = { getBezierEasing: function(t2, i2, r2, s2, a2) {
            var n2 = a2 || ("bez_" + t2 + "_" + i2 + "_" + r2 + "_" + s2).replace(/\./g, "p");
            if (e[n2])
              return e[n2];
            var o2 = new l([t2, i2, r2, s2]);
            return e[n2] = o2, o2;
          } }, e = {};
          var i = 0.1, r = "function" == typeof Float32Array;
          function s(t2, e2) {
            return 1 - 3 * e2 + 3 * t2;
          }
          function a(t2, e2) {
            return 3 * e2 - 6 * t2;
          }
          function n(t2) {
            return 3 * t2;
          }
          function o(t2, e2, i2) {
            return ((s(e2, i2) * t2 + a(e2, i2)) * t2 + n(e2)) * t2;
          }
          function h(t2, e2, i2) {
            return 3 * s(e2, i2) * t2 * t2 + 2 * a(e2, i2) * t2 + n(e2);
          }
          function l(t2) {
            this._p = t2, this._mSampleValues = r ? new Float32Array(11) : new Array(11), this._precomputed = false, this.get = this.get.bind(this);
          }
          return l.prototype = { get: function(t2) {
            var e2 = this._p[0], i2 = this._p[1], r2 = this._p[2], s2 = this._p[3];
            return this._precomputed || this._precompute(), e2 === i2 && r2 === s2 ? t2 : 0 === t2 ? 0 : 1 === t2 ? 1 : o(this._getTForX(t2), i2, s2);
          }, _precompute: function() {
            var t2 = this._p[0], e2 = this._p[1], i2 = this._p[2], r2 = this._p[3];
            this._precomputed = true, t2 === e2 && i2 === r2 || this._calcSampleValues();
          }, _calcSampleValues: function() {
            for (var t2 = this._p[0], e2 = this._p[2], r2 = 0; r2 < 11; ++r2)
              this._mSampleValues[r2] = o(r2 * i, t2, e2);
          }, _getTForX: function(t2) {
            for (var e2 = this._p[0], r2 = this._p[2], s2 = this._mSampleValues, a2 = 0, n2 = 1; 10 !== n2 && s2[n2] <= t2; ++n2)
              a2 += i;
            var l2 = a2 + (t2 - s2[--n2]) / (s2[n2 + 1] - s2[n2]) * i, p = h(l2, e2, r2);
            return p >= 1e-3 ? function(t3, e3, i2, r3) {
              for (var s3 = 0; s3 < 4; ++s3) {
                var a3 = h(e3, i2, r3);
                if (0 === a3)
                  return e3;
                e3 -= (o(e3, i2, r3) - t3) / a3;
              }
              return e3;
            }(t2, l2, e2, r2) : 0 === p ? l2 : function(t3, e3, i2, r3, s3) {
              var a3, n3, h2 = 0;
              do {
                (a3 = o(n3 = e3 + (i2 - e3) / 2, r3, s3) - t3) > 0 ? i2 = n3 : e3 = n3;
              } while (Math.abs(a3) > 1e-7 && ++h2 < 10);
              return n3;
            }(t2, a2, a2 + i, e2, r2);
          } }, t;
        }(), pooling = { double: function(t) {
          return t.concat(createSizedArray(t.length));
        } }, poolFactory = function(t, e, i) {
          var r = 0, s = t, a = createSizedArray(s);
          return { newElement: function() {
            return r ? a[r -= 1] : e();
          }, release: function(t2) {
            r === s && (a = pooling.double(a), s *= 2), i && i(t2), a[r] = t2, r += 1;
          } };
        }, bezierLengthPool = poolFactory(8, function() {
          return { addedLength: 0, percents: createTypedArray("float32", getDefaultCurveSegments()), lengths: createTypedArray("float32", getDefaultCurveSegments()) };
        }), segmentsLengthPool = poolFactory(8, function() {
          return { lengths: [], totalLength: 0 };
        }, function(t) {
          var e, i = t.lengths.length;
          for (e = 0; e < i; e += 1)
            bezierLengthPool.release(t.lengths[e]);
          t.lengths.length = 0;
        });
        function bezFunction() {
          var t = Math;
          function e(t2, e2, i2, r2, s2, a2) {
            var n2 = t2 * r2 + e2 * s2 + i2 * a2 - s2 * r2 - a2 * t2 - i2 * e2;
            return n2 > -1e-3 && n2 < 1e-3;
          }
          var i = function(t2, e2, i2, r2) {
            var s2, a2, n2, o2, h2, l, p = getDefaultCurveSegments(), f = 0, m = [], c = [], d = bezierLengthPool.newElement();
            for (n2 = i2.length, s2 = 0; s2 < p; s2 += 1) {
              for (h2 = s2 / (p - 1), l = 0, a2 = 0; a2 < n2; a2 += 1)
                o2 = bmPow(1 - h2, 3) * t2[a2] + 3 * bmPow(1 - h2, 2) * h2 * i2[a2] + 3 * (1 - h2) * bmPow(h2, 2) * r2[a2] + bmPow(h2, 3) * e2[a2], m[a2] = o2, null !== c[a2] && (l += bmPow(m[a2] - c[a2], 2)), c[a2] = m[a2];
              l && (f += l = bmSqrt(l)), d.percents[s2] = h2, d.lengths[s2] = f;
            }
            return d.addedLength = f, d;
          };
          function r(t2) {
            this.segmentLength = 0, this.points = new Array(t2);
          }
          function s(t2, e2) {
            this.partialLength = t2, this.point = e2;
          }
          var a, n = (a = {}, function(t2, i2, n2, o2) {
            var h2 = (t2[0] + "_" + t2[1] + "_" + i2[0] + "_" + i2[1] + "_" + n2[0] + "_" + n2[1] + "_" + o2[0] + "_" + o2[1]).replace(/\./g, "p");
            if (!a[h2]) {
              var l, p, f, m, c, d, u, y = getDefaultCurveSegments(), g = 0, v = null;
              2 === t2.length && (t2[0] !== i2[0] || t2[1] !== i2[1]) && e(t2[0], t2[1], i2[0], i2[1], t2[0] + n2[0], t2[1] + n2[1]) && e(t2[0], t2[1], i2[0], i2[1], i2[0] + o2[0], i2[1] + o2[1]) && (y = 2);
              var b = new r(y);
              for (f = n2.length, l = 0; l < y; l += 1) {
                for (u = createSizedArray(f), c = l / (y - 1), d = 0, p = 0; p < f; p += 1)
                  m = bmPow(1 - c, 3) * t2[p] + 3 * bmPow(1 - c, 2) * c * (t2[p] + n2[p]) + 3 * (1 - c) * bmPow(c, 2) * (i2[p] + o2[p]) + bmPow(c, 3) * i2[p], u[p] = m, null !== v && (d += bmPow(u[p] - v[p], 2));
                g += d = bmSqrt(d), b.points[l] = new s(d, u), v = u;
              }
              b.segmentLength = g, a[h2] = b;
            }
            return a[h2];
          });
          function o(t2, e2) {
            var i2 = e2.percents, r2 = e2.lengths, s2 = i2.length, a2 = bmFloor((s2 - 1) * t2), n2 = t2 * e2.addedLength, o2 = 0;
            if (a2 === s2 - 1 || 0 === a2 || n2 === r2[a2])
              return i2[a2];
            for (var h2 = r2[a2] > n2 ? -1 : 1, l = true; l; )
              if (r2[a2] <= n2 && r2[a2 + 1] > n2 ? (o2 = (n2 - r2[a2]) / (r2[a2 + 1] - r2[a2]), l = false) : a2 += h2, a2 < 0 || a2 >= s2 - 1) {
                if (a2 === s2 - 1)
                  return i2[a2];
                l = false;
              }
            return i2[a2] + (i2[a2 + 1] - i2[a2]) * o2;
          }
          var h = createTypedArray("float32", 8);
          return { getSegmentsLength: function(t2) {
            var e2, r2 = segmentsLengthPool.newElement(), s2 = t2.c, a2 = t2.v, n2 = t2.o, o2 = t2.i, h2 = t2._length, l = r2.lengths, p = 0;
            for (e2 = 0; e2 < h2 - 1; e2 += 1)
              l[e2] = i(a2[e2], a2[e2 + 1], n2[e2], o2[e2 + 1]), p += l[e2].addedLength;
            return s2 && h2 && (l[e2] = i(a2[e2], a2[0], n2[e2], o2[0]), p += l[e2].addedLength), r2.totalLength = p, r2;
          }, getNewSegment: function(e2, i2, r2, s2, a2, n2, l) {
            a2 < 0 ? a2 = 0 : a2 > 1 && (a2 = 1);
            var p, f = o(a2, l), m = o(n2 = n2 > 1 ? 1 : n2, l), c = e2.length, d = 1 - f, u = 1 - m, y = d * d * d, g = f * d * d * 3, v = f * f * d * 3, b = f * f * f, x = d * d * u, P = f * d * u + d * f * u + d * d * m, E = f * f * u + d * f * m + f * d * m, S = f * f * m, C = d * u * u, _ = f * u * u + d * m * u + d * u * m, A = f * m * u + d * m * m + f * u * m, T = f * m * m, M = u * u * u, k = m * u * u + u * m * u + u * u * m, D = m * m * u + u * m * m + m * u * m, F = m * m * m;
            for (p = 0; p < c; p += 1)
              h[4 * p] = t.round(1e3 * (y * e2[p] + g * r2[p] + v * s2[p] + b * i2[p])) / 1e3, h[4 * p + 1] = t.round(1e3 * (x * e2[p] + P * r2[p] + E * s2[p] + S * i2[p])) / 1e3, h[4 * p + 2] = t.round(1e3 * (C * e2[p] + _ * r2[p] + A * s2[p] + T * i2[p])) / 1e3, h[4 * p + 3] = t.round(1e3 * (M * e2[p] + k * r2[p] + D * s2[p] + F * i2[p])) / 1e3;
            return h;
          }, getPointInSegment: function(e2, i2, r2, s2, a2, n2) {
            var h2 = o(a2, n2), l = 1 - h2;
            return [t.round(1e3 * (l * l * l * e2[0] + (h2 * l * l + l * h2 * l + l * l * h2) * r2[0] + (h2 * h2 * l + l * h2 * h2 + h2 * l * h2) * s2[0] + h2 * h2 * h2 * i2[0])) / 1e3, t.round(1e3 * (l * l * l * e2[1] + (h2 * l * l + l * h2 * l + l * l * h2) * r2[1] + (h2 * h2 * l + l * h2 * h2 + h2 * l * h2) * s2[1] + h2 * h2 * h2 * i2[1])) / 1e3];
          }, buildBezierData: n, pointOnLine2D: e, pointOnLine3D: function(i2, r2, s2, a2, n2, o2, h2, l, p) {
            if (0 === s2 && 0 === o2 && 0 === p)
              return e(i2, r2, a2, n2, h2, l);
            var f, m = t.sqrt(t.pow(a2 - i2, 2) + t.pow(n2 - r2, 2) + t.pow(o2 - s2, 2)), c = t.sqrt(t.pow(h2 - i2, 2) + t.pow(l - r2, 2) + t.pow(p - s2, 2)), d = t.sqrt(t.pow(h2 - a2, 2) + t.pow(l - n2, 2) + t.pow(p - o2, 2));
            return (f = m > c ? m > d ? m - c - d : d - c - m : d > c ? d - c - m : c - m - d) > -1e-4 && f < 1e-4;
          } };
        }
        var bez = bezFunction(), initFrame = initialDefaultFrame, mathAbs = Math.abs;
        function interpolateValue(t, e) {
          var i, r = this.offsetTime;
          "multidimensional" === this.propType && (i = createTypedArray("float32", this.pv.length));
          for (var s, a, n, o, h, l, p, f, m, c = e.lastIndex, d = c, u = this.keyframes.length - 1, y = true; y; ) {
            if (s = this.keyframes[d], a = this.keyframes[d + 1], d === u - 1 && t >= a.t - r) {
              s.h && (s = a), c = 0;
              break;
            }
            if (a.t - r > t) {
              c = d;
              break;
            }
            d < u - 1 ? d += 1 : (c = 0, y = false);
          }
          n = this.keyframesMetadata[d] || {};
          var g, v = a.t - r, b = s.t - r;
          if (s.to) {
            n.bezierData || (n.bezierData = bez.buildBezierData(s.s, a.s || s.e, s.to, s.ti));
            var x = n.bezierData;
            if (t >= v || t < b) {
              var P = t >= v ? x.points.length - 1 : 0;
              for (h = x.points[P].point.length, o = 0; o < h; o += 1)
                i[o] = x.points[P].point[o];
            } else {
              n.__fnct ? m = n.__fnct : (m = BezierFactory.getBezierEasing(s.o.x, s.o.y, s.i.x, s.i.y, s.n).get, n.__fnct = m), l = m((t - b) / (v - b));
              var E, S = x.segmentLength * l, C = e.lastFrame < t && e._lastKeyframeIndex === d ? e._lastAddedLength : 0;
              for (f = e.lastFrame < t && e._lastKeyframeIndex === d ? e._lastPoint : 0, y = true, p = x.points.length; y; ) {
                if (C += x.points[f].partialLength, 0 === S || 0 === l || f === x.points.length - 1) {
                  for (h = x.points[f].point.length, o = 0; o < h; o += 1)
                    i[o] = x.points[f].point[o];
                  break;
                }
                if (S >= C && S < C + x.points[f + 1].partialLength) {
                  for (E = (S - C) / x.points[f + 1].partialLength, h = x.points[f].point.length, o = 0; o < h; o += 1)
                    i[o] = x.points[f].point[o] + (x.points[f + 1].point[o] - x.points[f].point[o]) * E;
                  break;
                }
                f < p - 1 ? f += 1 : y = false;
              }
              e._lastPoint = f, e._lastAddedLength = C - x.points[f].partialLength, e._lastKeyframeIndex = d;
            }
          } else {
            var _, A, T, M, k;
            if (u = s.s.length, g = a.s || s.e, this.sh && 1 !== s.h)
              if (t >= v)
                i[0] = g[0], i[1] = g[1], i[2] = g[2];
              else if (t <= b)
                i[0] = s.s[0], i[1] = s.s[1], i[2] = s.s[2];
              else {
                quaternionToEuler(i, slerp(createQuaternion(s.s), createQuaternion(g), (t - b) / (v - b)));
              }
            else
              for (d = 0; d < u; d += 1)
                1 !== s.h && (t >= v ? l = 1 : t < b ? l = 0 : (s.o.x.constructor === Array ? (n.__fnct || (n.__fnct = []), n.__fnct[d] ? m = n.__fnct[d] : (_ = void 0 === s.o.x[d] ? s.o.x[0] : s.o.x[d], A = void 0 === s.o.y[d] ? s.o.y[0] : s.o.y[d], T = void 0 === s.i.x[d] ? s.i.x[0] : s.i.x[d], M = void 0 === s.i.y[d] ? s.i.y[0] : s.i.y[d], m = BezierFactory.getBezierEasing(_, A, T, M).get, n.__fnct[d] = m)) : n.__fnct ? m = n.__fnct : (_ = s.o.x, A = s.o.y, T = s.i.x, M = s.i.y, m = BezierFactory.getBezierEasing(_, A, T, M).get, s.keyframeMetadata = m), l = m((t - b) / (v - b)))), g = a.s || s.e, k = 1 === s.h ? s.s[d] : s.s[d] + (g[d] - s.s[d]) * l, "multidimensional" === this.propType ? i[d] = k : i = k;
          }
          return e.lastIndex = c, i;
        }
        function slerp(t, e, i) {
          var r, s, a, n, o, h = [], l = t[0], p = t[1], f = t[2], m = t[3], c = e[0], d = e[1], u = e[2], y = e[3];
          return (s = l * c + p * d + f * u + m * y) < 0 && (s = -s, c = -c, d = -d, u = -u, y = -y), 1 - s > 1e-6 ? (r = Math.acos(s), a = Math.sin(r), n = Math.sin((1 - i) * r) / a, o = Math.sin(i * r) / a) : (n = 1 - i, o = i), h[0] = n * l + o * c, h[1] = n * p + o * d, h[2] = n * f + o * u, h[3] = n * m + o * y, h;
        }
        function quaternionToEuler(t, e) {
          var i = e[0], r = e[1], s = e[2], a = e[3], n = Math.atan2(2 * r * a - 2 * i * s, 1 - 2 * r * r - 2 * s * s), o = Math.asin(2 * i * r + 2 * s * a), h = Math.atan2(2 * i * a - 2 * r * s, 1 - 2 * i * i - 2 * s * s);
          t[0] = n / degToRads, t[1] = o / degToRads, t[2] = h / degToRads;
        }
        function createQuaternion(t) {
          var e = t[0] * degToRads, i = t[1] * degToRads, r = t[2] * degToRads, s = Math.cos(e / 2), a = Math.cos(i / 2), n = Math.cos(r / 2), o = Math.sin(e / 2), h = Math.sin(i / 2), l = Math.sin(r / 2);
          return [o * h * n + s * a * l, o * a * n + s * h * l, s * h * n - o * a * l, s * a * n - o * h * l];
        }
        function getValueAtCurrentTime() {
          var t = this.comp.renderedFrame - this.offsetTime, e = this.keyframes[0].t - this.offsetTime, i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
          if (!(t === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= i && t >= i || this._caching.lastFrame < e && t < e))) {
            this._caching.lastFrame >= t && (this._caching._lastKeyframeIndex = -1, this._caching.lastIndex = 0);
            var r = this.interpolateValue(t, this._caching);
            this.pv = r;
          }
          return this._caching.lastFrame = t, this.pv;
        }
        function setVValue(t) {
          var e;
          if ("unidimensional" === this.propType)
            e = t * this.mult, mathAbs(this.v - e) > 1e-5 && (this.v = e, this._mdf = true);
          else
            for (var i = 0, r = this.v.length; i < r; )
              e = t[i] * this.mult, mathAbs(this.v[i] - e) > 1e-5 && (this.v[i] = e, this._mdf = true), i += 1;
        }
        function processEffectsSequence() {
          if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
            if (this.lock)
              this.setVValue(this.pv);
            else {
              var t;
              this.lock = true, this._mdf = this._isFirstFrame;
              var e = this.effectsSequence.length, i = this.kf ? this.pv : this.data.k;
              for (t = 0; t < e; t += 1)
                i = this.effectsSequence[t](i);
              this.setVValue(i), this._isFirstFrame = false, this.lock = false, this.frameId = this.elem.globalData.frameId;
            }
        }
        function addEffect(t) {
          this.effectsSequence.push(t), this.container.addDynamicProperty(this);
        }
        function ValueProperty(t, e, i, r) {
          this.propType = "unidimensional", this.mult = i || 1, this.data = e, this.v = i ? e.k * i : e.k, this.pv = e.k, this._mdf = false, this.elem = t, this.container = r, this.comp = t.comp, this.k = false, this.kf = false, this.vel = 0, this.effectsSequence = [], this._isFirstFrame = true, this.getValue = processEffectsSequence, this.setVValue = setVValue, this.addEffect = addEffect;
        }
        function MultiDimensionalProperty(t, e, i, r) {
          var s;
          this.propType = "multidimensional", this.mult = i || 1, this.data = e, this._mdf = false, this.elem = t, this.container = r, this.comp = t.comp, this.k = false, this.kf = false, this.frameId = -1;
          var a = e.k.length;
          for (this.v = createTypedArray("float32", a), this.pv = createTypedArray("float32", a), this.vel = createTypedArray("float32", a), s = 0; s < a; s += 1)
            this.v[s] = e.k[s] * this.mult, this.pv[s] = e.k[s];
          this._isFirstFrame = true, this.effectsSequence = [], this.getValue = processEffectsSequence, this.setVValue = setVValue, this.addEffect = addEffect;
        }
        function KeyframedValueProperty(t, e, i, r) {
          this.propType = "unidimensional", this.keyframes = e.k, this.keyframesMetadata = [], this.offsetTime = t.data.st, this.frameId = -1, this._caching = { lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1 }, this.k = true, this.kf = true, this.data = e, this.mult = i || 1, this.elem = t, this.container = r, this.comp = t.comp, this.v = initFrame, this.pv = initFrame, this._isFirstFrame = true, this.getValue = processEffectsSequence, this.setVValue = setVValue, this.interpolateValue = interpolateValue, this.effectsSequence = [getValueAtCurrentTime.bind(this)], this.addEffect = addEffect;
        }
        function KeyframedMultidimensionalProperty(t, e, i, r) {
          var s;
          this.propType = "multidimensional";
          var a, n, o, h, l = e.k.length;
          for (s = 0; s < l - 1; s += 1)
            e.k[s].to && e.k[s].s && e.k[s + 1] && e.k[s + 1].s && (a = e.k[s].s, n = e.k[s + 1].s, o = e.k[s].to, h = e.k[s].ti, (2 === a.length && (a[0] !== n[0] || a[1] !== n[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], a[0] + o[0], a[1] + o[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], n[0] + h[0], n[1] + h[1]) || 3 === a.length && (a[0] !== n[0] || a[1] !== n[1] || a[2] !== n[2]) && bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], a[0] + o[0], a[1] + o[1], a[2] + o[2]) && bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], n[0] + h[0], n[1] + h[1], n[2] + h[2])) && (e.k[s].to = null, e.k[s].ti = null), a[0] === n[0] && a[1] === n[1] && 0 === o[0] && 0 === o[1] && 0 === h[0] && 0 === h[1] && (2 === a.length || a[2] === n[2] && 0 === o[2] && 0 === h[2]) && (e.k[s].to = null, e.k[s].ti = null));
          this.effectsSequence = [getValueAtCurrentTime.bind(this)], this.data = e, this.keyframes = e.k, this.keyframesMetadata = [], this.offsetTime = t.data.st, this.k = true, this.kf = true, this._isFirstFrame = true, this.mult = i || 1, this.elem = t, this.container = r, this.comp = t.comp, this.getValue = processEffectsSequence, this.setVValue = setVValue, this.interpolateValue = interpolateValue, this.frameId = -1;
          var p = e.k[0].s.length;
          for (this.v = createTypedArray("float32", p), this.pv = createTypedArray("float32", p), s = 0; s < p; s += 1)
            this.v[s] = initFrame, this.pv[s] = initFrame;
          this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray("float32", p) }, this.addEffect = addEffect;
        }
        var PropertyFactory = { getProp: function(t, e, i, r, s) {
          var a;
          if (e.sid && (e = t.globalData.slotManager.getProp(e)), e.k.length)
            if ("number" == typeof e.k[0])
              a = new MultiDimensionalProperty(t, e, r, s);
            else
              switch (i) {
                case 0:
                  a = new KeyframedValueProperty(t, e, r, s);
                  break;
                case 1:
                  a = new KeyframedMultidimensionalProperty(t, e, r, s);
              }
          else
            a = new ValueProperty(t, e, r, s);
          return a.effectsSequence.length && s.addDynamicProperty(a), a;
        } };
        function DynamicPropertyContainer() {
        }
        DynamicPropertyContainer.prototype = { addDynamicProperty: function(t) {
          -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t), this.container.addDynamicProperty(this), this._isAnimated = true);
        }, iterateDynamicProperties: function() {
          var t;
          this._mdf = false;
          var e = this.dynamicProperties.length;
          for (t = 0; t < e; t += 1)
            this.dynamicProperties[t].getValue(), this.dynamicProperties[t]._mdf && (this._mdf = true);
        }, initDynamicPropertyContainer: function(t) {
          this.container = t, this.dynamicProperties = [], this._mdf = false, this._isAnimated = false;
        } };
        var pointPool = poolFactory(8, function() {
          return createTypedArray("float32", 2);
        });
        function ShapePath() {
          this.c = false, this._length = 0, this._maxLength = 8, this.v = createSizedArray(this._maxLength), this.o = createSizedArray(this._maxLength), this.i = createSizedArray(this._maxLength);
        }
        ShapePath.prototype.setPathData = function(t, e) {
          this.c = t, this.setLength(e);
          for (var i = 0; i < e; )
            this.v[i] = pointPool.newElement(), this.o[i] = pointPool.newElement(), this.i[i] = pointPool.newElement(), i += 1;
        }, ShapePath.prototype.setLength = function(t) {
          for (; this._maxLength < t; )
            this.doubleArrayLength();
          this._length = t;
        }, ShapePath.prototype.doubleArrayLength = function() {
          this.v = this.v.concat(createSizedArray(this._maxLength)), this.i = this.i.concat(createSizedArray(this._maxLength)), this.o = this.o.concat(createSizedArray(this._maxLength)), this._maxLength *= 2;
        }, ShapePath.prototype.setXYAt = function(t, e, i, r, s) {
          var a;
          switch (this._length = Math.max(this._length, r + 1), this._length >= this._maxLength && this.doubleArrayLength(), i) {
            case "v":
              a = this.v;
              break;
            case "i":
              a = this.i;
              break;
            case "o":
              a = this.o;
              break;
            default:
              a = [];
          }
          (!a[r] || a[r] && !s) && (a[r] = pointPool.newElement()), a[r][0] = t, a[r][1] = e;
        }, ShapePath.prototype.setTripleAt = function(t, e, i, r, s, a, n, o) {
          this.setXYAt(t, e, "v", n, o), this.setXYAt(i, r, "o", n, o), this.setXYAt(s, a, "i", n, o);
        }, ShapePath.prototype.reverse = function() {
          var t = new ShapePath();
          t.setPathData(this.c, this._length);
          var e = this.v, i = this.o, r = this.i, s = 0;
          this.c && (t.setTripleAt(e[0][0], e[0][1], r[0][0], r[0][1], i[0][0], i[0][1], 0, false), s = 1);
          var a, n = this._length - 1, o = this._length;
          for (a = s; a < o; a += 1)
            t.setTripleAt(e[n][0], e[n][1], r[n][0], r[n][1], i[n][0], i[n][1], a, false), n -= 1;
          return t;
        }, ShapePath.prototype.length = function() {
          return this._length;
        };
        var shapePool = (factory = poolFactory(4, function() {
          return new ShapePath();
        }, function(t) {
          var e, i = t._length;
          for (e = 0; e < i; e += 1)
            pointPool.release(t.v[e]), pointPool.release(t.i[e]), pointPool.release(t.o[e]), t.v[e] = null, t.i[e] = null, t.o[e] = null;
          t._length = 0, t.c = false;
        }), factory.clone = function(t) {
          var e, i = factory.newElement(), r = void 0 === t._length ? t.v.length : t._length;
          for (i.setLength(r), i.c = t.c, e = 0; e < r; e += 1)
            i.setTripleAt(t.v[e][0], t.v[e][1], t.o[e][0], t.o[e][1], t.i[e][0], t.i[e][1], e);
          return i;
        }, factory), factory;
        function ShapeCollection() {
          this._length = 0, this._maxLength = 4, this.shapes = createSizedArray(this._maxLength);
        }
        ShapeCollection.prototype.addShape = function(t) {
          this._length === this._maxLength && (this.shapes = this.shapes.concat(createSizedArray(this._maxLength)), this._maxLength *= 2), this.shapes[this._length] = t, this._length += 1;
        }, ShapeCollection.prototype.releaseShapes = function() {
          var t;
          for (t = 0; t < this._length; t += 1)
            shapePool.release(this.shapes[t]);
          this._length = 0;
        };
        var shapeCollectionPool = (ob = { newShapeCollection: function() {
          return _length ? pool[_length -= 1] : new ShapeCollection();
        }, release: function(t) {
          var e, i = t._length;
          for (e = 0; e < i; e += 1)
            shapePool.release(t.shapes[e]);
          t._length = 0, _length === _maxLength && (pool = pooling.double(pool), _maxLength *= 2), pool[_length] = t, _length += 1;
        } }, _length = 0, _maxLength = 4, pool = createSizedArray(_maxLength), ob), ob, _length, _maxLength, pool, ShapePropertyFactory = function() {
          var t = -999999;
          function e(t2, e2, i2) {
            var r2, s2, a2, n2, o2, h2, l2, p2, f2, m2 = i2.lastIndex, c = this.keyframes;
            if (t2 < c[0].t - this.offsetTime)
              r2 = c[0].s[0], a2 = true, m2 = 0;
            else if (t2 >= c[c.length - 1].t - this.offsetTime)
              r2 = c[c.length - 1].s ? c[c.length - 1].s[0] : c[c.length - 2].e[0], a2 = true;
            else {
              for (var d, u, y, g = m2, v = c.length - 1, b = true; b && (d = c[g], !((u = c[g + 1]).t - this.offsetTime > t2)); )
                g < v - 1 ? g += 1 : b = false;
              if (y = this.keyframesMetadata[g] || {}, m2 = g, !(a2 = 1 === d.h)) {
                if (t2 >= u.t - this.offsetTime)
                  p2 = 1;
                else if (t2 < d.t - this.offsetTime)
                  p2 = 0;
                else {
                  var x;
                  y.__fnct ? x = y.__fnct : (x = BezierFactory.getBezierEasing(d.o.x, d.o.y, d.i.x, d.i.y).get, y.__fnct = x), p2 = x((t2 - (d.t - this.offsetTime)) / (u.t - this.offsetTime - (d.t - this.offsetTime)));
                }
                s2 = u.s ? u.s[0] : d.e[0];
              }
              r2 = d.s[0];
            }
            for (h2 = e2._length, l2 = r2.i[0].length, i2.lastIndex = m2, n2 = 0; n2 < h2; n2 += 1)
              for (o2 = 0; o2 < l2; o2 += 1)
                f2 = a2 ? r2.i[n2][o2] : r2.i[n2][o2] + (s2.i[n2][o2] - r2.i[n2][o2]) * p2, e2.i[n2][o2] = f2, f2 = a2 ? r2.o[n2][o2] : r2.o[n2][o2] + (s2.o[n2][o2] - r2.o[n2][o2]) * p2, e2.o[n2][o2] = f2, f2 = a2 ? r2.v[n2][o2] : r2.v[n2][o2] + (s2.v[n2][o2] - r2.v[n2][o2]) * p2, e2.v[n2][o2] = f2;
          }
          function i() {
            var e2 = this.comp.renderedFrame - this.offsetTime, i2 = this.keyframes[0].t - this.offsetTime, r2 = this.keyframes[this.keyframes.length - 1].t - this.offsetTime, s2 = this._caching.lastFrame;
            return s2 !== t && (s2 < i2 && e2 < i2 || s2 > r2 && e2 > r2) || (this._caching.lastIndex = s2 < e2 ? this._caching.lastIndex : 0, this.interpolateShape(e2, this.pv, this._caching)), this._caching.lastFrame = e2, this.pv;
          }
          function r() {
            this.paths = this.localShapeCollection;
          }
          function s(t2) {
            (function(t3, e2) {
              if (t3._length !== e2._length || t3.c !== e2.c)
                return false;
              var i2, r2 = t3._length;
              for (i2 = 0; i2 < r2; i2 += 1)
                if (t3.v[i2][0] !== e2.v[i2][0] || t3.v[i2][1] !== e2.v[i2][1] || t3.o[i2][0] !== e2.o[i2][0] || t3.o[i2][1] !== e2.o[i2][1] || t3.i[i2][0] !== e2.i[i2][0] || t3.i[i2][1] !== e2.i[i2][1])
                  return false;
              return true;
            })(this.v, t2) || (this.v = shapePool.clone(t2), this.localShapeCollection.releaseShapes(), this.localShapeCollection.addShape(this.v), this._mdf = true, this.paths = this.localShapeCollection);
          }
          function a() {
            if (this.elem.globalData.frameId !== this.frameId)
              if (this.effectsSequence.length)
                if (this.lock)
                  this.setVValue(this.pv);
                else {
                  var t2, e2;
                  this.lock = true, this._mdf = false, t2 = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
                  var i2 = this.effectsSequence.length;
                  for (e2 = 0; e2 < i2; e2 += 1)
                    t2 = this.effectsSequence[e2](t2);
                  this.setVValue(t2), this.lock = false, this.frameId = this.elem.globalData.frameId;
                }
              else
                this._mdf = false;
          }
          function n(t2, e2, i2) {
            this.propType = "shape", this.comp = t2.comp, this.container = t2, this.elem = t2, this.data = e2, this.k = false, this.kf = false, this._mdf = false;
            var s2 = 3 === i2 ? e2.pt.k : e2.ks.k;
            this.v = shapePool.clone(s2), this.pv = shapePool.clone(this.v), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.paths.addShape(this.v), this.reset = r, this.effectsSequence = [];
          }
          function o(t2) {
            this.effectsSequence.push(t2), this.container.addDynamicProperty(this);
          }
          function h(e2, s2, a2) {
            this.propType = "shape", this.comp = e2.comp, this.elem = e2, this.container = e2, this.offsetTime = e2.data.st, this.keyframes = 3 === a2 ? s2.pt.k : s2.ks.k, this.keyframesMetadata = [], this.k = true, this.kf = true;
            var n2 = this.keyframes[0].s[0].i.length;
            this.v = shapePool.newElement(), this.v.setPathData(this.keyframes[0].s[0].c, n2), this.pv = shapePool.clone(this.v), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.paths.addShape(this.v), this.lastFrame = t, this.reset = r, this._caching = { lastFrame: t, lastIndex: 0 }, this.effectsSequence = [i.bind(this)];
          }
          n.prototype.interpolateShape = e, n.prototype.getValue = a, n.prototype.setVValue = s, n.prototype.addEffect = o, h.prototype.getValue = a, h.prototype.interpolateShape = e, h.prototype.setVValue = s, h.prototype.addEffect = o;
          var l = function() {
            var t2 = roundCorner;
            function e2(t3, e3) {
              this.v = shapePool.newElement(), this.v.setPathData(true, 4), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.localShapeCollection.addShape(this.v), this.d = e3.d, this.elem = t3, this.comp = t3.comp, this.frameId = -1, this.initDynamicPropertyContainer(t3), this.p = PropertyFactory.getProp(t3, e3.p, 1, 0, this), this.s = PropertyFactory.getProp(t3, e3.s, 1, 0, this), this.dynamicProperties.length ? this.k = true : (this.k = false, this.convertEllToPath());
            }
            return e2.prototype = { reset: r, getValue: function() {
              this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertEllToPath());
            }, convertEllToPath: function() {
              var e3 = this.p.v[0], i2 = this.p.v[1], r2 = this.s.v[0] / 2, s2 = this.s.v[1] / 2, a2 = 3 !== this.d, n2 = this.v;
              n2.v[0][0] = e3, n2.v[0][1] = i2 - s2, n2.v[1][0] = a2 ? e3 + r2 : e3 - r2, n2.v[1][1] = i2, n2.v[2][0] = e3, n2.v[2][1] = i2 + s2, n2.v[3][0] = a2 ? e3 - r2 : e3 + r2, n2.v[3][1] = i2, n2.i[0][0] = a2 ? e3 - r2 * t2 : e3 + r2 * t2, n2.i[0][1] = i2 - s2, n2.i[1][0] = a2 ? e3 + r2 : e3 - r2, n2.i[1][1] = i2 - s2 * t2, n2.i[2][0] = a2 ? e3 + r2 * t2 : e3 - r2 * t2, n2.i[2][1] = i2 + s2, n2.i[3][0] = a2 ? e3 - r2 : e3 + r2, n2.i[3][1] = i2 + s2 * t2, n2.o[0][0] = a2 ? e3 + r2 * t2 : e3 - r2 * t2, n2.o[0][1] = i2 - s2, n2.o[1][0] = a2 ? e3 + r2 : e3 - r2, n2.o[1][1] = i2 + s2 * t2, n2.o[2][0] = a2 ? e3 - r2 * t2 : e3 + r2 * t2, n2.o[2][1] = i2 + s2, n2.o[3][0] = a2 ? e3 - r2 : e3 + r2, n2.o[3][1] = i2 - s2 * t2;
            } }, extendPrototype([DynamicPropertyContainer], e2), e2;
          }(), p = function() {
            function t2(t3, e2) {
              this.v = shapePool.newElement(), this.v.setPathData(true, 0), this.elem = t3, this.comp = t3.comp, this.data = e2, this.frameId = -1, this.d = e2.d, this.initDynamicPropertyContainer(t3), 1 === e2.sy ? (this.ir = PropertyFactory.getProp(t3, e2.ir, 0, 0, this), this.is = PropertyFactory.getProp(t3, e2.is, 0, 0.01, this), this.convertToPath = this.convertStarToPath) : this.convertToPath = this.convertPolygonToPath, this.pt = PropertyFactory.getProp(t3, e2.pt, 0, 0, this), this.p = PropertyFactory.getProp(t3, e2.p, 1, 0, this), this.r = PropertyFactory.getProp(t3, e2.r, 0, degToRads, this), this.or = PropertyFactory.getProp(t3, e2.or, 0, 0, this), this.os = PropertyFactory.getProp(t3, e2.os, 0, 0.01, this), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.localShapeCollection.addShape(this.v), this.paths = this.localShapeCollection, this.dynamicProperties.length ? this.k = true : (this.k = false, this.convertToPath());
            }
            return t2.prototype = { reset: r, getValue: function() {
              this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertToPath());
            }, convertStarToPath: function() {
              var t3, e2, i2, r2, s2 = 2 * Math.floor(this.pt.v), a2 = 2 * Math.PI / s2, n2 = true, o2 = this.or.v, h2 = this.ir.v, l2 = this.os.v, p2 = this.is.v, f2 = 2 * Math.PI * o2 / (2 * s2), m2 = 2 * Math.PI * h2 / (2 * s2), c = -Math.PI / 2;
              c += this.r.v;
              var d = 3 === this.data.d ? -1 : 1;
              for (this.v._length = 0, t3 = 0; t3 < s2; t3 += 1) {
                i2 = n2 ? l2 : p2, r2 = n2 ? f2 : m2;
                var u = (e2 = n2 ? o2 : h2) * Math.cos(c), y = e2 * Math.sin(c), g = 0 === u && 0 === y ? 0 : y / Math.sqrt(u * u + y * y), v = 0 === u && 0 === y ? 0 : -u / Math.sqrt(u * u + y * y);
                u += +this.p.v[0], y += +this.p.v[1], this.v.setTripleAt(u, y, u - g * r2 * i2 * d, y - v * r2 * i2 * d, u + g * r2 * i2 * d, y + v * r2 * i2 * d, t3, true), n2 = !n2, c += a2 * d;
              }
            }, convertPolygonToPath: function() {
              var t3, e2 = Math.floor(this.pt.v), i2 = 2 * Math.PI / e2, r2 = this.or.v, s2 = this.os.v, a2 = 2 * Math.PI * r2 / (4 * e2), n2 = 0.5 * -Math.PI, o2 = 3 === this.data.d ? -1 : 1;
              for (n2 += this.r.v, this.v._length = 0, t3 = 0; t3 < e2; t3 += 1) {
                var h2 = r2 * Math.cos(n2), l2 = r2 * Math.sin(n2), p2 = 0 === h2 && 0 === l2 ? 0 : l2 / Math.sqrt(h2 * h2 + l2 * l2), f2 = 0 === h2 && 0 === l2 ? 0 : -h2 / Math.sqrt(h2 * h2 + l2 * l2);
                h2 += +this.p.v[0], l2 += +this.p.v[1], this.v.setTripleAt(h2, l2, h2 - p2 * a2 * s2 * o2, l2 - f2 * a2 * s2 * o2, h2 + p2 * a2 * s2 * o2, l2 + f2 * a2 * s2 * o2, t3, true), n2 += i2 * o2;
              }
              this.paths.length = 0, this.paths[0] = this.v;
            } }, extendPrototype([DynamicPropertyContainer], t2), t2;
          }(), f = function() {
            function t2(t3, e2) {
              this.v = shapePool.newElement(), this.v.c = true, this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.localShapeCollection.addShape(this.v), this.paths = this.localShapeCollection, this.elem = t3, this.comp = t3.comp, this.frameId = -1, this.d = e2.d, this.initDynamicPropertyContainer(t3), this.p = PropertyFactory.getProp(t3, e2.p, 1, 0, this), this.s = PropertyFactory.getProp(t3, e2.s, 1, 0, this), this.r = PropertyFactory.getProp(t3, e2.r, 0, 0, this), this.dynamicProperties.length ? this.k = true : (this.k = false, this.convertRectToPath());
            }
            return t2.prototype = { convertRectToPath: function() {
              var t3 = this.p.v[0], e2 = this.p.v[1], i2 = this.s.v[0] / 2, r2 = this.s.v[1] / 2, s2 = bmMin(i2, r2, this.r.v), a2 = s2 * (1 - roundCorner);
              this.v._length = 0, 2 === this.d || 1 === this.d ? (this.v.setTripleAt(t3 + i2, e2 - r2 + s2, t3 + i2, e2 - r2 + s2, t3 + i2, e2 - r2 + a2, 0, true), this.v.setTripleAt(t3 + i2, e2 + r2 - s2, t3 + i2, e2 + r2 - a2, t3 + i2, e2 + r2 - s2, 1, true), 0 !== s2 ? (this.v.setTripleAt(t3 + i2 - s2, e2 + r2, t3 + i2 - s2, e2 + r2, t3 + i2 - a2, e2 + r2, 2, true), this.v.setTripleAt(t3 - i2 + s2, e2 + r2, t3 - i2 + a2, e2 + r2, t3 - i2 + s2, e2 + r2, 3, true), this.v.setTripleAt(t3 - i2, e2 + r2 - s2, t3 - i2, e2 + r2 - s2, t3 - i2, e2 + r2 - a2, 4, true), this.v.setTripleAt(t3 - i2, e2 - r2 + s2, t3 - i2, e2 - r2 + a2, t3 - i2, e2 - r2 + s2, 5, true), this.v.setTripleAt(t3 - i2 + s2, e2 - r2, t3 - i2 + s2, e2 - r2, t3 - i2 + a2, e2 - r2, 6, true), this.v.setTripleAt(t3 + i2 - s2, e2 - r2, t3 + i2 - a2, e2 - r2, t3 + i2 - s2, e2 - r2, 7, true)) : (this.v.setTripleAt(t3 - i2, e2 + r2, t3 - i2 + a2, e2 + r2, t3 - i2, e2 + r2, 2), this.v.setTripleAt(t3 - i2, e2 - r2, t3 - i2, e2 - r2 + a2, t3 - i2, e2 - r2, 3))) : (this.v.setTripleAt(t3 + i2, e2 - r2 + s2, t3 + i2, e2 - r2 + a2, t3 + i2, e2 - r2 + s2, 0, true), 0 !== s2 ? (this.v.setTripleAt(t3 + i2 - s2, e2 - r2, t3 + i2 - s2, e2 - r2, t3 + i2 - a2, e2 - r2, 1, true), this.v.setTripleAt(t3 - i2 + s2, e2 - r2, t3 - i2 + a2, e2 - r2, t3 - i2 + s2, e2 - r2, 2, true), this.v.setTripleAt(t3 - i2, e2 - r2 + s2, t3 - i2, e2 - r2 + s2, t3 - i2, e2 - r2 + a2, 3, true), this.v.setTripleAt(t3 - i2, e2 + r2 - s2, t3 - i2, e2 + r2 - a2, t3 - i2, e2 + r2 - s2, 4, true), this.v.setTripleAt(t3 - i2 + s2, e2 + r2, t3 - i2 + s2, e2 + r2, t3 - i2 + a2, e2 + r2, 5, true), this.v.setTripleAt(t3 + i2 - s2, e2 + r2, t3 + i2 - a2, e2 + r2, t3 + i2 - s2, e2 + r2, 6, true), this.v.setTripleAt(t3 + i2, e2 + r2 - s2, t3 + i2, e2 + r2 - s2, t3 + i2, e2 + r2 - a2, 7, true)) : (this.v.setTripleAt(t3 - i2, e2 - r2, t3 - i2 + a2, e2 - r2, t3 - i2, e2 - r2, 1, true), this.v.setTripleAt(t3 - i2, e2 + r2, t3 - i2, e2 + r2 - a2, t3 - i2, e2 + r2, 2, true), this.v.setTripleAt(t3 + i2, e2 + r2, t3 + i2 - a2, e2 + r2, t3 + i2, e2 + r2, 3, true)));
            }, getValue: function() {
              this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertRectToPath());
            }, reset: r }, extendPrototype([DynamicPropertyContainer], t2), t2;
          }();
          var m = { getShapeProp: function(t2, e2, i2) {
            var r2;
            return 3 === i2 || 4 === i2 ? r2 = (3 === i2 ? e2.pt : e2.ks).k.length ? new h(t2, e2, i2) : new n(t2, e2, i2) : 5 === i2 ? r2 = new f(t2, e2) : 6 === i2 ? r2 = new l(t2, e2) : 7 === i2 && (r2 = new p(t2, e2)), r2.k && t2.addDynamicProperty(r2), r2;
          }, getConstructorFunction: function() {
            return n;
          }, getKeyframedConstructorFunction: function() {
            return h;
          } };
          return m;
        }(), Matrix = function() {
          var t = Math.cos, e = Math.sin, i = Math.tan, r = Math.round;
          function s() {
            return this.props[0] = 1, this.props[1] = 0, this.props[2] = 0, this.props[3] = 0, this.props[4] = 0, this.props[5] = 1, this.props[6] = 0, this.props[7] = 0, this.props[8] = 0, this.props[9] = 0, this.props[10] = 1, this.props[11] = 0, this.props[12] = 0, this.props[13] = 0, this.props[14] = 0, this.props[15] = 1, this;
          }
          function a(i2) {
            if (0 === i2)
              return this;
            var r2 = t(i2), s2 = e(i2);
            return this._t(r2, -s2, 0, 0, s2, r2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
          }
          function n(i2) {
            if (0 === i2)
              return this;
            var r2 = t(i2), s2 = e(i2);
            return this._t(1, 0, 0, 0, 0, r2, -s2, 0, 0, s2, r2, 0, 0, 0, 0, 1);
          }
          function o(i2) {
            if (0 === i2)
              return this;
            var r2 = t(i2), s2 = e(i2);
            return this._t(r2, 0, s2, 0, 0, 1, 0, 0, -s2, 0, r2, 0, 0, 0, 0, 1);
          }
          function h(i2) {
            if (0 === i2)
              return this;
            var r2 = t(i2), s2 = e(i2);
            return this._t(r2, -s2, 0, 0, s2, r2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
          }
          function l(t2, e2) {
            return this._t(1, e2, t2, 1, 0, 0);
          }
          function p(t2, e2) {
            return this.shear(i(t2), i(e2));
          }
          function f(r2, s2) {
            var a2 = t(s2), n2 = e(s2);
            return this._t(a2, n2, 0, 0, -n2, a2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, i(r2), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(a2, -n2, 0, 0, n2, a2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
          }
          function m(t2, e2, i2) {
            return i2 || 0 === i2 || (i2 = 1), 1 === t2 && 1 === e2 && 1 === i2 ? this : this._t(t2, 0, 0, 0, 0, e2, 0, 0, 0, 0, i2, 0, 0, 0, 0, 1);
          }
          function c(t2, e2, i2, r2, s2, a2, n2, o2, h2, l2, p2, f2, m2, c2, d2, u2) {
            return this.props[0] = t2, this.props[1] = e2, this.props[2] = i2, this.props[3] = r2, this.props[4] = s2, this.props[5] = a2, this.props[6] = n2, this.props[7] = o2, this.props[8] = h2, this.props[9] = l2, this.props[10] = p2, this.props[11] = f2, this.props[12] = m2, this.props[13] = c2, this.props[14] = d2, this.props[15] = u2, this;
          }
          function d(t2, e2, i2) {
            return i2 = i2 || 0, 0 !== t2 || 0 !== e2 || 0 !== i2 ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t2, e2, i2, 1) : this;
          }
          function u(t2, e2, i2, r2, s2, a2, n2, o2, h2, l2, p2, f2, m2, c2, d2, u2) {
            var y2 = this.props;
            if (1 === t2 && 0 === e2 && 0 === i2 && 0 === r2 && 0 === s2 && 1 === a2 && 0 === n2 && 0 === o2 && 0 === h2 && 0 === l2 && 1 === p2 && 0 === f2)
              return y2[12] = y2[12] * t2 + y2[15] * m2, y2[13] = y2[13] * a2 + y2[15] * c2, y2[14] = y2[14] * p2 + y2[15] * d2, y2[15] *= u2, this._identityCalculated = false, this;
            var g2 = y2[0], v2 = y2[1], b2 = y2[2], x2 = y2[3], P2 = y2[4], E2 = y2[5], S2 = y2[6], C2 = y2[7], _2 = y2[8], A2 = y2[9], T2 = y2[10], M2 = y2[11], k2 = y2[12], D2 = y2[13], F2 = y2[14], w2 = y2[15];
            return y2[0] = g2 * t2 + v2 * s2 + b2 * h2 + x2 * m2, y2[1] = g2 * e2 + v2 * a2 + b2 * l2 + x2 * c2, y2[2] = g2 * i2 + v2 * n2 + b2 * p2 + x2 * d2, y2[3] = g2 * r2 + v2 * o2 + b2 * f2 + x2 * u2, y2[4] = P2 * t2 + E2 * s2 + S2 * h2 + C2 * m2, y2[5] = P2 * e2 + E2 * a2 + S2 * l2 + C2 * c2, y2[6] = P2 * i2 + E2 * n2 + S2 * p2 + C2 * d2, y2[7] = P2 * r2 + E2 * o2 + S2 * f2 + C2 * u2, y2[8] = _2 * t2 + A2 * s2 + T2 * h2 + M2 * m2, y2[9] = _2 * e2 + A2 * a2 + T2 * l2 + M2 * c2, y2[10] = _2 * i2 + A2 * n2 + T2 * p2 + M2 * d2, y2[11] = _2 * r2 + A2 * o2 + T2 * f2 + M2 * u2, y2[12] = k2 * t2 + D2 * s2 + F2 * h2 + w2 * m2, y2[13] = k2 * e2 + D2 * a2 + F2 * l2 + w2 * c2, y2[14] = k2 * i2 + D2 * n2 + F2 * p2 + w2 * d2, y2[15] = k2 * r2 + D2 * o2 + F2 * f2 + w2 * u2, this._identityCalculated = false, this;
          }
          function y(t2) {
            var e2 = t2.props;
            return this.transform(e2[0], e2[1], e2[2], e2[3], e2[4], e2[5], e2[6], e2[7], e2[8], e2[9], e2[10], e2[11], e2[12], e2[13], e2[14], e2[15]);
          }
          function g() {
            return this._identityCalculated || (this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15]), this._identityCalculated = true), this._identity;
          }
          function v(t2) {
            for (var e2 = 0; e2 < 16; ) {
              if (t2.props[e2] !== this.props[e2])
                return false;
              e2 += 1;
            }
            return true;
          }
          function b(t2) {
            var e2;
            for (e2 = 0; e2 < 16; e2 += 1)
              t2.props[e2] = this.props[e2];
            return t2;
          }
          function x(t2) {
            var e2;
            for (e2 = 0; e2 < 16; e2 += 1)
              this.props[e2] = t2[e2];
          }
          function P(t2, e2, i2) {
            return { x: t2 * this.props[0] + e2 * this.props[4] + i2 * this.props[8] + this.props[12], y: t2 * this.props[1] + e2 * this.props[5] + i2 * this.props[9] + this.props[13], z: t2 * this.props[2] + e2 * this.props[6] + i2 * this.props[10] + this.props[14] };
          }
          function E(t2, e2, i2) {
            return t2 * this.props[0] + e2 * this.props[4] + i2 * this.props[8] + this.props[12];
          }
          function S(t2, e2, i2) {
            return t2 * this.props[1] + e2 * this.props[5] + i2 * this.props[9] + this.props[13];
          }
          function C(t2, e2, i2) {
            return t2 * this.props[2] + e2 * this.props[6] + i2 * this.props[10] + this.props[14];
          }
          function _() {
            var t2 = this.props[0] * this.props[5] - this.props[1] * this.props[4], e2 = this.props[5] / t2, i2 = -this.props[1] / t2, r2 = -this.props[4] / t2, s2 = this.props[0] / t2, a2 = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t2, n2 = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t2, o2 = new Matrix();
            return o2.props[0] = e2, o2.props[1] = i2, o2.props[4] = r2, o2.props[5] = s2, o2.props[12] = a2, o2.props[13] = n2, o2;
          }
          function A(t2) {
            return this.getInverseMatrix().applyToPointArray(t2[0], t2[1], t2[2] || 0);
          }
          function T(t2) {
            var e2, i2 = t2.length, r2 = [];
            for (e2 = 0; e2 < i2; e2 += 1)
              r2[e2] = A(t2[e2]);
            return r2;
          }
          function M(t2, e2, i2) {
            var r2 = createTypedArray("float32", 6);
            if (this.isIdentity())
              r2[0] = t2[0], r2[1] = t2[1], r2[2] = e2[0], r2[3] = e2[1], r2[4] = i2[0], r2[5] = i2[1];
            else {
              var s2 = this.props[0], a2 = this.props[1], n2 = this.props[4], o2 = this.props[5], h2 = this.props[12], l2 = this.props[13];
              r2[0] = t2[0] * s2 + t2[1] * n2 + h2, r2[1] = t2[0] * a2 + t2[1] * o2 + l2, r2[2] = e2[0] * s2 + e2[1] * n2 + h2, r2[3] = e2[0] * a2 + e2[1] * o2 + l2, r2[4] = i2[0] * s2 + i2[1] * n2 + h2, r2[5] = i2[0] * a2 + i2[1] * o2 + l2;
            }
            return r2;
          }
          function k(t2, e2, i2) {
            return this.isIdentity() ? [t2, e2, i2] : [t2 * this.props[0] + e2 * this.props[4] + i2 * this.props[8] + this.props[12], t2 * this.props[1] + e2 * this.props[5] + i2 * this.props[9] + this.props[13], t2 * this.props[2] + e2 * this.props[6] + i2 * this.props[10] + this.props[14]];
          }
          function D(t2, e2) {
            if (this.isIdentity())
              return t2 + "," + e2;
            var i2 = this.props;
            return Math.round(100 * (t2 * i2[0] + e2 * i2[4] + i2[12])) / 100 + "," + Math.round(100 * (t2 * i2[1] + e2 * i2[5] + i2[13])) / 100;
          }
          function F() {
            for (var t2 = 0, e2 = this.props, i2 = "matrix3d("; t2 < 16; )
              i2 += r(1e4 * e2[t2]) / 1e4, i2 += 15 === t2 ? ")" : ",", t2 += 1;
            return i2;
          }
          function w(t2) {
            return t2 < 1e-6 && t2 > 0 || t2 > -1e-6 && t2 < 0 ? r(1e4 * t2) / 1e4 : t2;
          }
          function I() {
            var t2 = this.props;
            return "matrix(" + w(t2[0]) + "," + w(t2[1]) + "," + w(t2[4]) + "," + w(t2[5]) + "," + w(t2[12]) + "," + w(t2[13]) + ")";
          }
          return function() {
            this.reset = s, this.rotate = a, this.rotateX = n, this.rotateY = o, this.rotateZ = h, this.skew = p, this.skewFromAxis = f, this.shear = l, this.scale = m, this.setTransform = c, this.translate = d, this.transform = u, this.multiply = y, this.applyToPoint = P, this.applyToX = E, this.applyToY = S, this.applyToZ = C, this.applyToPointArray = k, this.applyToTriplePoints = M, this.applyToPointStringified = D, this.toCSS = F, this.to2dCSS = I, this.clone = b, this.cloneFromProps = x, this.equals = v, this.inversePoints = T, this.inversePoint = A, this.getInverseMatrix = _, this._t = this.transform, this.isIdentity = g, this._identity = true, this._identityCalculated = false, this.props = createTypedArray("float32", 16), this.reset();
          };
        }();
        function _typeof$3(t) {
          return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
            return typeof t2;
          } : function(t2) {
            return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
          }, _typeof$3(t);
        }
        var lottie = {}, standalone = "__[STANDALONE]__", animationData = "__[ANIMATIONDATA]__", renderer = "";
        function setLocation(t) {
          setLocationHref(t);
        }
        function searchAnimations() {
          true === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations();
        }
        function setSubframeRendering(t) {
          setSubframeEnabled(t);
        }
        function setPrefix(t) {
          setIdPrefix(t);
        }
        function loadAnimation(t) {
          return true === standalone && (t.animationData = JSON.parse(animationData)), animationManager.loadAnimation(t);
        }
        function setQuality(t) {
          if ("string" == typeof t)
            switch (t) {
              case "high":
                setDefaultCurveSegments(200);
                break;
              default:
              case "medium":
                setDefaultCurveSegments(50);
                break;
              case "low":
                setDefaultCurveSegments(10);
            }
          else
            !isNaN(t) && t > 1 && setDefaultCurveSegments(t);
          getDefaultCurveSegments() >= 50 ? roundValues(false) : roundValues(true);
        }
        function inBrowser() {
          return "undefined" != typeof navigator;
        }
        function installPlugin(t, e) {
          "expressions" === t && setExpressionsPlugin(e);
        }
        function getFactory(t) {
          switch (t) {
            case "propertyFactory":
              return PropertyFactory;
            case "shapePropertyFactory":
              return ShapePropertyFactory;
            case "matrix":
              return Matrix;
            default:
              return null;
          }
        }
        function checkReady() {
          "complete" === document.readyState && (clearInterval(readyStateCheckInterval), searchAnimations());
        }
        function getQueryVariable(t) {
          for (var e = queryString.split("&"), i = 0; i < e.length; i += 1) {
            var r = e[i].split("=");
            if (decodeURIComponent(r[0]) == t)
              return decodeURIComponent(r[1]);
          }
          return null;
        }
        lottie.play = animationManager.play, lottie.pause = animationManager.pause, lottie.setLocationHref = setLocation, lottie.togglePause = animationManager.togglePause, lottie.setSpeed = animationManager.setSpeed, lottie.setDirection = animationManager.setDirection, lottie.stop = animationManager.stop, lottie.searchAnimations = searchAnimations, lottie.registerAnimation = animationManager.registerAnimation, lottie.loadAnimation = loadAnimation, lottie.setSubframeRendering = setSubframeRendering, lottie.resize = animationManager.resize, lottie.goToAndStop = animationManager.goToAndStop, lottie.destroy = animationManager.destroy, lottie.setQuality = setQuality, lottie.inBrowser = inBrowser, lottie.installPlugin = installPlugin, lottie.freeze = animationManager.freeze, lottie.unfreeze = animationManager.unfreeze, lottie.setVolume = animationManager.setVolume, lottie.mute = animationManager.mute, lottie.unmute = animationManager.unmute, lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations, lottie.useWebWorker = setWebWorker, lottie.setIDPrefix = setPrefix, lottie.__getFactory = getFactory, lottie.version = "5.12.2";
        var queryString = "";
        if (standalone) {
          var scripts = document.getElementsByTagName("script"), index = scripts.length - 1, myScript = scripts[index] || { src: "" };
          queryString = myScript.src ? myScript.src.replace(/^[^\?]+\??/, "") : "", renderer = getQueryVariable("renderer");
        }
        var readyStateCheckInterval = setInterval(checkReady, 100);
        try {
          "object" === ("undefined" == typeof exports ? "undefined" : _typeof$3(exports)) && "undefined" != typeof module || "function" == typeof define && define.amd || (window.bodymovin = lottie);
        } catch (t) {
        }
        var ShapeModifiers = function() {
          var t = {}, e = {};
          return t.registerModifier = function(t2, i) {
            e[t2] || (e[t2] = i);
          }, t.getModifier = function(t2, i, r) {
            return new e[t2](i, r);
          }, t;
        }();
        function ShapeModifier() {
        }
        function TrimModifier() {
        }
        function PuckerAndBloatModifier() {
        }
        ShapeModifier.prototype.initModifierProperties = function() {
        }, ShapeModifier.prototype.addShapeToModifier = function() {
        }, ShapeModifier.prototype.addShape = function(t) {
          if (!this.closed) {
            t.sh.container.addDynamicProperty(t.sh);
            var e = { shape: t.sh, data: t, localShapeCollection: shapeCollectionPool.newShapeCollection() };
            this.shapes.push(e), this.addShapeToModifier(e), this._isAnimated && t.setAsAnimated();
          }
        }, ShapeModifier.prototype.init = function(t, e) {
          this.shapes = [], this.elem = t, this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e), this.frameId = initialDefaultFrame, this.closed = false, this.k = false, this.dynamicProperties.length ? this.k = true : this.getValue(true);
        }, ShapeModifier.prototype.processKeys = function() {
          this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties());
        }, extendPrototype([DynamicPropertyContainer], ShapeModifier), extendPrototype([ShapeModifier], TrimModifier), TrimModifier.prototype.initModifierProperties = function(t, e) {
          this.s = PropertyFactory.getProp(t, e.s, 0, 0.01, this), this.e = PropertyFactory.getProp(t, e.e, 0, 0.01, this), this.o = PropertyFactory.getProp(t, e.o, 0, 0, this), this.sValue = 0, this.eValue = 0, this.getValue = this.processKeys, this.m = e.m, this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
        }, TrimModifier.prototype.addShapeToModifier = function(t) {
          t.pathsData = [];
        }, TrimModifier.prototype.calculateShapeEdges = function(t, e, i, r, s) {
          var a = [];
          e <= 1 ? a.push({ s: t, e }) : t >= 1 ? a.push({ s: t - 1, e: e - 1 }) : (a.push({ s: t, e: 1 }), a.push({ s: 0, e: e - 1 }));
          var n, o, h = [], l = a.length;
          for (n = 0; n < l; n += 1) {
            var p, f;
            if (!((o = a[n]).e * s < r || o.s * s > r + i))
              p = o.s * s <= r ? 0 : (o.s * s - r) / i, f = o.e * s >= r + i ? 1 : (o.e * s - r) / i, h.push([p, f]);
          }
          return h.length || h.push([0, 0]), h;
        }, TrimModifier.prototype.releasePathsData = function(t) {
          var e, i = t.length;
          for (e = 0; e < i; e += 1)
            segmentsLengthPool.release(t[e]);
          return t.length = 0, t;
        }, TrimModifier.prototype.processShapes = function(t) {
          var e, i, r, s;
          if (this._mdf || t) {
            var a = this.o.v % 360 / 360;
            if (a < 0 && (a += 1), (e = this.s.v > 1 ? 1 + a : this.s.v < 0 ? 0 + a : this.s.v + a) > (i = this.e.v > 1 ? 1 + a : this.e.v < 0 ? 0 + a : this.e.v + a)) {
              var n = e;
              e = i, i = n;
            }
            e = 1e-4 * Math.round(1e4 * e), i = 1e-4 * Math.round(1e4 * i), this.sValue = e, this.eValue = i;
          } else
            e = this.sValue, i = this.eValue;
          var o, h, l, p, f, m = this.shapes.length, c = 0;
          if (i === e)
            for (s = 0; s < m; s += 1)
              this.shapes[s].localShapeCollection.releaseShapes(), this.shapes[s].shape._mdf = true, this.shapes[s].shape.paths = this.shapes[s].localShapeCollection, this._mdf && (this.shapes[s].pathsData.length = 0);
          else if (1 === i && 0 === e || 0 === i && 1 === e) {
            if (this._mdf)
              for (s = 0; s < m; s += 1)
                this.shapes[s].pathsData.length = 0, this.shapes[s].shape._mdf = true;
          } else {
            var d, u, y = [];
            for (s = 0; s < m; s += 1)
              if ((d = this.shapes[s]).shape._mdf || this._mdf || t || 2 === this.m) {
                if (h = (r = d.shape.paths)._length, f = 0, !d.shape._mdf && d.pathsData.length)
                  f = d.totalShapeLength;
                else {
                  for (l = this.releasePathsData(d.pathsData), o = 0; o < h; o += 1)
                    p = bez.getSegmentsLength(r.shapes[o]), l.push(p), f += p.totalLength;
                  d.totalShapeLength = f, d.pathsData = l;
                }
                c += f, d.shape._mdf = true;
              } else
                d.shape.paths = d.localShapeCollection;
            var g, v = e, b = i, x = 0;
            for (s = m - 1; s >= 0; s -= 1)
              if ((d = this.shapes[s]).shape._mdf) {
                for ((u = d.localShapeCollection).releaseShapes(), 2 === this.m && m > 1 ? (g = this.calculateShapeEdges(e, i, d.totalShapeLength, x, c), x += d.totalShapeLength) : g = [[v, b]], h = g.length, o = 0; o < h; o += 1) {
                  v = g[o][0], b = g[o][1], y.length = 0, b <= 1 ? y.push({ s: d.totalShapeLength * v, e: d.totalShapeLength * b }) : v >= 1 ? y.push({ s: d.totalShapeLength * (v - 1), e: d.totalShapeLength * (b - 1) }) : (y.push({ s: d.totalShapeLength * v, e: d.totalShapeLength }), y.push({ s: 0, e: d.totalShapeLength * (b - 1) }));
                  var P = this.addShapes(d, y[0]);
                  if (y[0].s !== y[0].e) {
                    if (y.length > 1)
                      if (d.shape.paths.shapes[d.shape.paths._length - 1].c) {
                        var E = P.pop();
                        this.addPaths(P, u), P = this.addShapes(d, y[1], E);
                      } else
                        this.addPaths(P, u), P = this.addShapes(d, y[1]);
                    this.addPaths(P, u);
                  }
                }
                d.shape.paths = u;
              }
          }
        }, TrimModifier.prototype.addPaths = function(t, e) {
          var i, r = t.length;
          for (i = 0; i < r; i += 1)
            e.addShape(t[i]);
        }, TrimModifier.prototype.addSegment = function(t, e, i, r, s, a, n) {
          s.setXYAt(e[0], e[1], "o", a), s.setXYAt(i[0], i[1], "i", a + 1), n && s.setXYAt(t[0], t[1], "v", a), s.setXYAt(r[0], r[1], "v", a + 1);
        }, TrimModifier.prototype.addSegmentFromArray = function(t, e, i, r) {
          e.setXYAt(t[1], t[5], "o", i), e.setXYAt(t[2], t[6], "i", i + 1), r && e.setXYAt(t[0], t[4], "v", i), e.setXYAt(t[3], t[7], "v", i + 1);
        }, TrimModifier.prototype.addShapes = function(t, e, i) {
          var r, s, a, n, o, h, l, p, f = t.pathsData, m = t.shape.paths.shapes, c = t.shape.paths._length, d = 0, u = [], y = true;
          for (i ? (o = i._length, p = i._length) : (i = shapePool.newElement(), o = 0, p = 0), u.push(i), r = 0; r < c; r += 1) {
            for (h = f[r].lengths, i.c = m[r].c, a = m[r].c ? h.length : h.length + 1, s = 1; s < a; s += 1)
              if (d + (n = h[s - 1]).addedLength < e.s)
                d += n.addedLength, i.c = false;
              else {
                if (d > e.e) {
                  i.c = false;
                  break;
                }
                e.s <= d && e.e >= d + n.addedLength ? (this.addSegment(m[r].v[s - 1], m[r].o[s - 1], m[r].i[s], m[r].v[s], i, o, y), y = false) : (l = bez.getNewSegment(m[r].v[s - 1], m[r].v[s], m[r].o[s - 1], m[r].i[s], (e.s - d) / n.addedLength, (e.e - d) / n.addedLength, h[s - 1]), this.addSegmentFromArray(l, i, o, y), y = false, i.c = false), d += n.addedLength, o += 1;
              }
            if (m[r].c && h.length) {
              if (n = h[s - 1], d <= e.e) {
                var g = h[s - 1].addedLength;
                e.s <= d && e.e >= d + g ? (this.addSegment(m[r].v[s - 1], m[r].o[s - 1], m[r].i[0], m[r].v[0], i, o, y), y = false) : (l = bez.getNewSegment(m[r].v[s - 1], m[r].v[0], m[r].o[s - 1], m[r].i[0], (e.s - d) / g, (e.e - d) / g, h[s - 1]), this.addSegmentFromArray(l, i, o, y), y = false, i.c = false);
              } else
                i.c = false;
              d += n.addedLength, o += 1;
            }
            if (i._length && (i.setXYAt(i.v[p][0], i.v[p][1], "i", p), i.setXYAt(i.v[i._length - 1][0], i.v[i._length - 1][1], "o", i._length - 1)), d > e.e)
              break;
            r < c - 1 && (i = shapePool.newElement(), y = true, u.push(i), o = 0);
          }
          return u;
        }, extendPrototype([ShapeModifier], PuckerAndBloatModifier), PuckerAndBloatModifier.prototype.initModifierProperties = function(t, e) {
          this.getValue = this.processKeys, this.amount = PropertyFactory.getProp(t, e.a, 0, null, this), this._isAnimated = !!this.amount.effectsSequence.length;
        }, PuckerAndBloatModifier.prototype.processPath = function(t, e) {
          var i = e / 100, r = [0, 0], s = t._length, a = 0;
          for (a = 0; a < s; a += 1)
            r[0] += t.v[a][0], r[1] += t.v[a][1];
          r[0] /= s, r[1] /= s;
          var n, o, h, l, p, f, m = shapePool.newElement();
          for (m.c = t.c, a = 0; a < s; a += 1)
            n = t.v[a][0] + (r[0] - t.v[a][0]) * i, o = t.v[a][1] + (r[1] - t.v[a][1]) * i, h = t.o[a][0] + (r[0] - t.o[a][0]) * -i, l = t.o[a][1] + (r[1] - t.o[a][1]) * -i, p = t.i[a][0] + (r[0] - t.i[a][0]) * -i, f = t.i[a][1] + (r[1] - t.i[a][1]) * -i, m.setTripleAt(n, o, h, l, p, f, a);
          return m;
        }, PuckerAndBloatModifier.prototype.processShapes = function(t) {
          var e, i, r, s, a, n, o = this.shapes.length, h = this.amount.v;
          if (0 !== h)
            for (i = 0; i < o; i += 1) {
              if (n = (a = this.shapes[i]).localShapeCollection, a.shape._mdf || this._mdf || t)
                for (n.releaseShapes(), a.shape._mdf = true, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1)
                  n.addShape(this.processPath(e[r], h));
              a.shape.paths = a.localShapeCollection;
            }
          this.dynamicProperties.length || (this._mdf = false);
        };
        var TransformPropertyFactory = function() {
          var t = [0, 0];
          function e(t2, e2, i) {
            if (this.elem = t2, this.frameId = -1, this.propType = "transform", this.data = e2, this.v = new Matrix(), this.pre = new Matrix(), this.appliedTransformations = 0, this.initDynamicPropertyContainer(i || t2), e2.p && e2.p.s ? (this.px = PropertyFactory.getProp(t2, e2.p.x, 0, 0, this), this.py = PropertyFactory.getProp(t2, e2.p.y, 0, 0, this), e2.p.z && (this.pz = PropertyFactory.getProp(t2, e2.p.z, 0, 0, this))) : this.p = PropertyFactory.getProp(t2, e2.p || { k: [0, 0, 0] }, 1, 0, this), e2.rx) {
              if (this.rx = PropertyFactory.getProp(t2, e2.rx, 0, degToRads, this), this.ry = PropertyFactory.getProp(t2, e2.ry, 0, degToRads, this), this.rz = PropertyFactory.getProp(t2, e2.rz, 0, degToRads, this), e2.or.k[0].ti) {
                var r, s = e2.or.k.length;
                for (r = 0; r < s; r += 1)
                  e2.or.k[r].to = null, e2.or.k[r].ti = null;
              }
              this.or = PropertyFactory.getProp(t2, e2.or, 1, degToRads, this), this.or.sh = true;
            } else
              this.r = PropertyFactory.getProp(t2, e2.r || { k: 0 }, 0, degToRads, this);
            e2.sk && (this.sk = PropertyFactory.getProp(t2, e2.sk, 0, degToRads, this), this.sa = PropertyFactory.getProp(t2, e2.sa, 0, degToRads, this)), this.a = PropertyFactory.getProp(t2, e2.a || { k: [0, 0, 0] }, 1, 0, this), this.s = PropertyFactory.getProp(t2, e2.s || { k: [100, 100, 100] }, 1, 0.01, this), e2.o ? this.o = PropertyFactory.getProp(t2, e2.o, 0, 0.01, t2) : this.o = { _mdf: false, v: 1 }, this._isDirty = true, this.dynamicProperties.length || this.getValue(true);
          }
          return e.prototype = { applyToMatrix: function(t2) {
            var e2 = this._mdf;
            this.iterateDynamicProperties(), this._mdf = this._mdf || e2, this.a && t2.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.s && t2.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && t2.skewFromAxis(-this.sk.v, this.sa.v), this.r ? t2.rotate(-this.r.v) : t2.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.data.p.s ? this.data.p.z ? t2.translate(this.px.v, this.py.v, -this.pz.v) : t2.translate(this.px.v, this.py.v, 0) : t2.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
          }, getValue: function(e2) {
            if (this.elem.globalData.frameId !== this.frameId) {
              if (this._isDirty && (this.precalculateMatrix(), this._isDirty = false), this.iterateDynamicProperties(), this._mdf || e2) {
                var i;
                if (this.v.cloneFromProps(this.pre.props), this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v), this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.autoOriented) {
                  var r, s;
                  if (i = this.elem.globalData.frameRate, this.p && this.p.keyframes && this.p.getValueAtTime)
                    this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? (r = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / i, 0), s = this.p.getValueAtTime(this.p.keyframes[0].t / i, 0)) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? (r = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / i, 0), s = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / i, 0)) : (r = this.p.pv, s = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / i, this.p.offsetTime));
                  else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                    r = [], s = [];
                    var a = this.px, n = this.py;
                    a._caching.lastFrame + a.offsetTime <= a.keyframes[0].t ? (r[0] = a.getValueAtTime((a.keyframes[0].t + 0.01) / i, 0), r[1] = n.getValueAtTime((n.keyframes[0].t + 0.01) / i, 0), s[0] = a.getValueAtTime(a.keyframes[0].t / i, 0), s[1] = n.getValueAtTime(n.keyframes[0].t / i, 0)) : a._caching.lastFrame + a.offsetTime >= a.keyframes[a.keyframes.length - 1].t ? (r[0] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / i, 0), r[1] = n.getValueAtTime(n.keyframes[n.keyframes.length - 1].t / i, 0), s[0] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - 0.01) / i, 0), s[1] = n.getValueAtTime((n.keyframes[n.keyframes.length - 1].t - 0.01) / i, 0)) : (r = [a.pv, n.pv], s[0] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - 0.01) / i, a.offsetTime), s[1] = n.getValueAtTime((n._caching.lastFrame + n.offsetTime - 0.01) / i, n.offsetTime));
                  } else
                    r = s = t;
                  this.v.rotate(-Math.atan2(r[1] - s[1], r[0] - s[0]));
                }
                this.data.p && this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
              }
              this.frameId = this.elem.globalData.frameId;
            }
          }, precalculateMatrix: function() {
            if (this.appliedTransformations = 0, this.pre.reset(), !this.a.effectsSequence.length && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations = 1, !this.s.effectsSequence.length)) {
              if (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.appliedTransformations = 2, this.sk) {
                if (this.sk.effectsSequence.length || this.sa.effectsSequence.length)
                  return;
                this.pre.skewFromAxis(-this.sk.v, this.sa.v), this.appliedTransformations = 3;
              }
              this.r ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v), this.appliedTransformations = 4) : this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.appliedTransformations = 4);
            }
          }, autoOrient: function() {
          } }, extendPrototype([DynamicPropertyContainer], e), e.prototype.addDynamicProperty = function(t2) {
            this._addDynamicProperty(t2), this.elem.addDynamicProperty(t2), this._isDirty = true;
          }, e.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty, { getTransformProperty: function(t2, i, r) {
            return new e(t2, i, r);
          } };
        }();
        function RepeaterModifier() {
        }
        function RoundCornersModifier() {
        }
        function floatEqual(t, e) {
          return 1e5 * Math.abs(t - e) <= Math.min(Math.abs(t), Math.abs(e));
        }
        function floatZero(t) {
          return Math.abs(t) <= 1e-5;
        }
        function lerp(t, e, i) {
          return t * (1 - i) + e * i;
        }
        function lerpPoint(t, e, i) {
          return [lerp(t[0], e[0], i), lerp(t[1], e[1], i)];
        }
        function quadRoots(t, e, i) {
          if (0 === t)
            return [];
          var r = e * e - 4 * t * i;
          if (r < 0)
            return [];
          var s = -e / (2 * t);
          if (0 === r)
            return [s];
          var a = Math.sqrt(r) / (2 * t);
          return [s - a, s + a];
        }
        function polynomialCoefficients(t, e, i, r) {
          return [3 * e - t - 3 * i + r, 3 * t - 6 * e + 3 * i, -3 * t + 3 * e, t];
        }
        function singlePoint(t) {
          return new PolynomialBezier(t, t, t, t, false);
        }
        function PolynomialBezier(t, e, i, r, s) {
          s && pointEqual(t, e) && (e = lerpPoint(t, r, 1 / 3)), s && pointEqual(i, r) && (i = lerpPoint(t, r, 2 / 3));
          var a = polynomialCoefficients(t[0], e[0], i[0], r[0]), n = polynomialCoefficients(t[1], e[1], i[1], r[1]);
          this.a = [a[0], n[0]], this.b = [a[1], n[1]], this.c = [a[2], n[2]], this.d = [a[3], n[3]], this.points = [t, e, i, r];
        }
        function extrema(t, e) {
          var i = t.points[0][e], r = t.points[t.points.length - 1][e];
          if (i > r) {
            var s = r;
            r = i, i = s;
          }
          for (var a = quadRoots(3 * t.a[e], 2 * t.b[e], t.c[e]), n = 0; n < a.length; n += 1)
            if (a[n] > 0 && a[n] < 1) {
              var o = t.point(a[n])[e];
              o < i ? i = o : o > r && (r = o);
            }
          return { min: i, max: r };
        }
        function intersectData(t, e, i) {
          var r = t.boundingBox();
          return { cx: r.cx, cy: r.cy, width: r.width, height: r.height, bez: t, t: (e + i) / 2, t1: e, t2: i };
        }
        function splitData(t) {
          var e = t.bez.split(0.5);
          return [intersectData(e[0], t.t1, t.t), intersectData(e[1], t.t, t.t2)];
        }
        function boxIntersect(t, e) {
          return 2 * Math.abs(t.cx - e.cx) < t.width + e.width && 2 * Math.abs(t.cy - e.cy) < t.height + e.height;
        }
        function intersectsImpl(t, e, i, r, s, a) {
          if (boxIntersect(t, e))
            if (i >= a || t.width <= r && t.height <= r && e.width <= r && e.height <= r)
              s.push([t.t, e.t]);
            else {
              var n = splitData(t), o = splitData(e);
              intersectsImpl(n[0], o[0], i + 1, r, s, a), intersectsImpl(n[0], o[1], i + 1, r, s, a), intersectsImpl(n[1], o[0], i + 1, r, s, a), intersectsImpl(n[1], o[1], i + 1, r, s, a);
            }
        }
        function crossProduct(t, e) {
          return [t[1] * e[2] - t[2] * e[1], t[2] * e[0] - t[0] * e[2], t[0] * e[1] - t[1] * e[0]];
        }
        function lineIntersection(t, e, i, r) {
          var s = [t[0], t[1], 1], a = [e[0], e[1], 1], n = [i[0], i[1], 1], o = [r[0], r[1], 1], h = crossProduct(crossProduct(s, a), crossProduct(n, o));
          return floatZero(h[2]) ? null : [h[0] / h[2], h[1] / h[2]];
        }
        function polarOffset(t, e, i) {
          return [t[0] + Math.cos(e) * i, t[1] - Math.sin(e) * i];
        }
        function pointDistance(t, e) {
          return Math.hypot(t[0] - e[0], t[1] - e[1]);
        }
        function pointEqual(t, e) {
          return floatEqual(t[0], e[0]) && floatEqual(t[1], e[1]);
        }
        function ZigZagModifier() {
        }
        function setPoint(t, e, i, r, s, a, n) {
          var o = i - Math.PI / 2, h = i + Math.PI / 2, l = e[0] + Math.cos(i) * r * s, p = e[1] - Math.sin(i) * r * s;
          t.setTripleAt(l, p, l + Math.cos(o) * a, p - Math.sin(o) * a, l + Math.cos(h) * n, p - Math.sin(h) * n, t.length());
        }
        function getPerpendicularVector(t, e) {
          var i = [e[0] - t[0], e[1] - t[1]], r = 0.5 * -Math.PI;
          return [Math.cos(r) * i[0] - Math.sin(r) * i[1], Math.sin(r) * i[0] + Math.cos(r) * i[1]];
        }
        function getProjectingAngle(t, e) {
          var i = 0 === e ? t.length() - 1 : e - 1, r = (e + 1) % t.length(), s = getPerpendicularVector(t.v[i], t.v[r]);
          return Math.atan2(0, 1) - Math.atan2(s[1], s[0]);
        }
        function zigZagCorner(t, e, i, r, s, a, n) {
          var o = getProjectingAngle(e, i), h = e.v[i % e._length], l = e.v[0 === i ? e._length - 1 : i - 1], p = e.v[(i + 1) % e._length], f = 2 === a ? Math.sqrt(Math.pow(h[0] - l[0], 2) + Math.pow(h[1] - l[1], 2)) : 0, m = 2 === a ? Math.sqrt(Math.pow(h[0] - p[0], 2) + Math.pow(h[1] - p[1], 2)) : 0;
          setPoint(t, e.v[i % e._length], o, n, r, m / (2 * (s + 1)), f / (2 * (s + 1)), a);
        }
        function zigZagSegment(t, e, i, r, s, a) {
          for (var n = 0; n < r; n += 1) {
            var o = (n + 1) / (r + 1), h = 2 === s ? Math.sqrt(Math.pow(e.points[3][0] - e.points[0][0], 2) + Math.pow(e.points[3][1] - e.points[0][1], 2)) : 0, l = e.normalAngle(o);
            setPoint(t, e.point(o), l, a, i, h / (2 * (r + 1)), h / (2 * (r + 1)), s), a = -a;
          }
          return a;
        }
        function linearOffset(t, e, i) {
          var r = Math.atan2(e[0] - t[0], e[1] - t[1]);
          return [polarOffset(t, r, i), polarOffset(e, r, i)];
        }
        function offsetSegment(t, e) {
          var i, r, s, a, n, o, h;
          i = (h = linearOffset(t.points[0], t.points[1], e))[0], r = h[1], s = (h = linearOffset(t.points[1], t.points[2], e))[0], a = h[1], n = (h = linearOffset(t.points[2], t.points[3], e))[0], o = h[1];
          var l = lineIntersection(i, r, s, a);
          null === l && (l = r);
          var p = lineIntersection(n, o, s, a);
          return null === p && (p = n), new PolynomialBezier(i, l, p, o);
        }
        function joinLines(t, e, i, r, s) {
          var a = e.points[3], n = i.points[0];
          if (3 === r)
            return a;
          if (pointEqual(a, n))
            return a;
          if (2 === r) {
            var o = -e.tangentAngle(1), h = -i.tangentAngle(0) + Math.PI, l = lineIntersection(a, polarOffset(a, o + Math.PI / 2, 100), n, polarOffset(n, o + Math.PI / 2, 100)), p = l ? pointDistance(l, a) : pointDistance(a, n) / 2, f = polarOffset(a, o, 2 * p * roundCorner);
            return t.setXYAt(f[0], f[1], "o", t.length() - 1), f = polarOffset(n, h, 2 * p * roundCorner), t.setTripleAt(n[0], n[1], n[0], n[1], f[0], f[1], t.length()), n;
          }
          var m = lineIntersection(pointEqual(a, e.points[2]) ? e.points[0] : e.points[2], a, n, pointEqual(n, i.points[1]) ? i.points[3] : i.points[1]);
          return m && pointDistance(m, a) < s ? (t.setTripleAt(m[0], m[1], m[0], m[1], m[0], m[1], t.length()), m) : a;
        }
        function getIntersection(t, e) {
          var i = t.intersections(e);
          return i.length && floatEqual(i[0][0], 1) && i.shift(), i.length ? i[0] : null;
        }
        function pruneSegmentIntersection(t, e) {
          var i = t.slice(), r = e.slice(), s = getIntersection(t[t.length - 1], e[0]);
          return s && (i[t.length - 1] = t[t.length - 1].split(s[0])[0], r[0] = e[0].split(s[1])[1]), t.length > 1 && e.length > 1 && (s = getIntersection(t[0], e[e.length - 1])) ? [[t[0].split(s[0])[0]], [e[e.length - 1].split(s[1])[1]]] : [i, r];
        }
        function pruneIntersections(t) {
          for (var e, i = 1; i < t.length; i += 1)
            e = pruneSegmentIntersection(t[i - 1], t[i]), t[i - 1] = e[0], t[i] = e[1];
          return t.length > 1 && (e = pruneSegmentIntersection(t[t.length - 1], t[0]), t[t.length - 1] = e[0], t[0] = e[1]), t;
        }
        function offsetSegmentSplit(t, e) {
          var i, r, s, a, n = t.inflectionPoints();
          if (0 === n.length)
            return [offsetSegment(t, e)];
          if (1 === n.length || floatEqual(n[1], 1))
            return i = (s = t.split(n[0]))[0], r = s[1], [offsetSegment(i, e), offsetSegment(r, e)];
          i = (s = t.split(n[0]))[0];
          var o = (n[1] - n[0]) / (1 - n[0]);
          return a = (s = s[1].split(o))[0], r = s[1], [offsetSegment(i, e), offsetSegment(a, e), offsetSegment(r, e)];
        }
        function OffsetPathModifier() {
        }
        function getFontProperties(t) {
          for (var e = t.fStyle ? t.fStyle.split(" ") : [], i = "normal", r = "normal", s = e.length, a = 0; a < s; a += 1)
            switch (e[a].toLowerCase()) {
              case "italic":
                r = "italic";
                break;
              case "bold":
                i = "700";
                break;
              case "black":
                i = "900";
                break;
              case "medium":
                i = "500";
                break;
              case "regular":
              case "normal":
                i = "400";
                break;
              case "light":
              case "thin":
                i = "200";
            }
          return { style: r, weight: t.fWeight || i };
        }
        extendPrototype([ShapeModifier], RepeaterModifier), RepeaterModifier.prototype.initModifierProperties = function(t, e) {
          this.getValue = this.processKeys, this.c = PropertyFactory.getProp(t, e.c, 0, null, this), this.o = PropertyFactory.getProp(t, e.o, 0, null, this), this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this), this.so = PropertyFactory.getProp(t, e.tr.so, 0, 0.01, this), this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, 0.01, this), this.data = e, this.dynamicProperties.length || this.getValue(true), this._isAnimated = !!this.dynamicProperties.length, this.pMatrix = new Matrix(), this.rMatrix = new Matrix(), this.sMatrix = new Matrix(), this.tMatrix = new Matrix(), this.matrix = new Matrix();
        }, RepeaterModifier.prototype.applyTransforms = function(t, e, i, r, s, a) {
          var n = a ? -1 : 1, o = r.s.v[0] + (1 - r.s.v[0]) * (1 - s), h = r.s.v[1] + (1 - r.s.v[1]) * (1 - s);
          t.translate(r.p.v[0] * n * s, r.p.v[1] * n * s, r.p.v[2]), e.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]), e.rotate(-r.r.v * n * s), e.translate(r.a.v[0], r.a.v[1], r.a.v[2]), i.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]), i.scale(a ? 1 / o : o, a ? 1 / h : h), i.translate(r.a.v[0], r.a.v[1], r.a.v[2]);
        }, RepeaterModifier.prototype.init = function(t, e, i, r) {
          for (this.elem = t, this.arr = e, this.pos = i, this.elemsData = r, this._currentCopies = 0, this._elements = [], this._groups = [], this.frameId = -1, this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e[i]); i > 0; )
            i -= 1, this._elements.unshift(e[i]);
          this.dynamicProperties.length ? this.k = true : this.getValue(true);
        }, RepeaterModifier.prototype.resetElements = function(t) {
          var e, i = t.length;
          for (e = 0; e < i; e += 1)
            t[e]._processed = false, "gr" === t[e].ty && this.resetElements(t[e].it);
        }, RepeaterModifier.prototype.cloneElements = function(t) {
          var e = JSON.parse(JSON.stringify(t));
          return this.resetElements(e), e;
        }, RepeaterModifier.prototype.changeGroupRender = function(t, e) {
          var i, r = t.length;
          for (i = 0; i < r; i += 1)
            t[i]._render = e, "gr" === t[i].ty && this.changeGroupRender(t[i].it, e);
        }, RepeaterModifier.prototype.processShapes = function(t) {
          var e, i, r, s, a, n = false;
          if (this._mdf || t) {
            var o, h = Math.ceil(this.c.v);
            if (this._groups.length < h) {
              for (; this._groups.length < h; ) {
                var l = { it: this.cloneElements(this._elements), ty: "gr" };
                l.it.push({ a: { a: 0, ix: 1, k: [0, 0] }, nm: "Transform", o: { a: 0, ix: 7, k: 100 }, p: { a: 0, ix: 2, k: [0, 0] }, r: { a: 1, ix: 6, k: [{ s: 0, e: 0, t: 0 }, { s: 0, e: 0, t: 1 }] }, s: { a: 0, ix: 3, k: [100, 100] }, sa: { a: 0, ix: 5, k: 0 }, sk: { a: 0, ix: 4, k: 0 }, ty: "tr" }), this.arr.splice(0, 0, l), this._groups.splice(0, 0, l), this._currentCopies += 1;
              }
              this.elem.reloadShapes(), n = true;
            }
            for (a = 0, r = 0; r <= this._groups.length - 1; r += 1) {
              if (o = a < h, this._groups[r]._render = o, this.changeGroupRender(this._groups[r].it, o), !o) {
                var p = this.elemsData[r].it, f = p[p.length - 1];
                0 !== f.transform.op.v ? (f.transform.op._mdf = true, f.transform.op.v = 0) : f.transform.op._mdf = false;
              }
              a += 1;
            }
            this._currentCopies = h;
            var m = this.o.v, c = m % 1, d = m > 0 ? Math.floor(m) : Math.ceil(m), u = this.pMatrix.props, y = this.rMatrix.props, g = this.sMatrix.props;
            this.pMatrix.reset(), this.rMatrix.reset(), this.sMatrix.reset(), this.tMatrix.reset(), this.matrix.reset();
            var v, b, x = 0;
            if (m > 0) {
              for (; x < d; )
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false), x += 1;
              c && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, c, false), x += c);
            } else if (m < 0) {
              for (; x > d; )
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true), x -= 1;
              c && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -c, true), x -= c);
            }
            for (r = 1 === this.data.m ? 0 : this._currentCopies - 1, s = 1 === this.data.m ? 1 : -1, a = this._currentCopies; a; ) {
              if (b = (i = (e = this.elemsData[r].it)[e.length - 1].transform.mProps.v.props).length, e[e.length - 1].transform.mProps._mdf = true, e[e.length - 1].transform.op._mdf = true, e[e.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (r / (this._currentCopies - 1)), 0 !== x) {
                for ((0 !== r && 1 === s || r !== this._currentCopies - 1 && -1 === s) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false), this.matrix.transform(y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15]), this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]), this.matrix.transform(u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7], u[8], u[9], u[10], u[11], u[12], u[13], u[14], u[15]), v = 0; v < b; v += 1)
                  i[v] = this.matrix.props[v];
                this.matrix.reset();
              } else
                for (this.matrix.reset(), v = 0; v < b; v += 1)
                  i[v] = this.matrix.props[v];
              x += 1, a -= 1, r += s;
            }
          } else
            for (a = this._currentCopies, r = 0, s = 1; a; )
              i = (e = this.elemsData[r].it)[e.length - 1].transform.mProps.v.props, e[e.length - 1].transform.mProps._mdf = false, e[e.length - 1].transform.op._mdf = false, a -= 1, r += s;
          return n;
        }, RepeaterModifier.prototype.addShape = function() {
        }, extendPrototype([ShapeModifier], RoundCornersModifier), RoundCornersModifier.prototype.initModifierProperties = function(t, e) {
          this.getValue = this.processKeys, this.rd = PropertyFactory.getProp(t, e.r, 0, null, this), this._isAnimated = !!this.rd.effectsSequence.length;
        }, RoundCornersModifier.prototype.processPath = function(t, e) {
          var i, r = shapePool.newElement();
          r.c = t.c;
          var s, a, n, o, h, l, p, f, m, c, d, u, y = t._length, g = 0;
          for (i = 0; i < y; i += 1)
            s = t.v[i], n = t.o[i], a = t.i[i], s[0] === n[0] && s[1] === n[1] && s[0] === a[0] && s[1] === a[1] ? 0 !== i && i !== y - 1 || t.c ? (o = 0 === i ? t.v[y - 1] : t.v[i - 1], l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0, p = d = s[0] + (o[0] - s[0]) * l, f = u = s[1] - (s[1] - o[1]) * l, m = p - (p - s[0]) * roundCorner, c = f - (f - s[1]) * roundCorner, r.setTripleAt(p, f, m, c, d, u, g), g += 1, o = i === y - 1 ? t.v[0] : t.v[i + 1], l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0, p = m = s[0] + (o[0] - s[0]) * l, f = c = s[1] + (o[1] - s[1]) * l, d = p - (p - s[0]) * roundCorner, u = f - (f - s[1]) * roundCorner, r.setTripleAt(p, f, m, c, d, u, g), g += 1) : (r.setTripleAt(s[0], s[1], n[0], n[1], a[0], a[1], g), g += 1) : (r.setTripleAt(t.v[i][0], t.v[i][1], t.o[i][0], t.o[i][1], t.i[i][0], t.i[i][1], g), g += 1);
          return r;
        }, RoundCornersModifier.prototype.processShapes = function(t) {
          var e, i, r, s, a, n, o = this.shapes.length, h = this.rd.v;
          if (0 !== h)
            for (i = 0; i < o; i += 1) {
              if (n = (a = this.shapes[i]).localShapeCollection, a.shape._mdf || this._mdf || t)
                for (n.releaseShapes(), a.shape._mdf = true, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1)
                  n.addShape(this.processPath(e[r], h));
              a.shape.paths = a.localShapeCollection;
            }
          this.dynamicProperties.length || (this._mdf = false);
        }, PolynomialBezier.prototype.point = function(t) {
          return [((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0], ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1]];
        }, PolynomialBezier.prototype.derivative = function(t) {
          return [(3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0], (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1]];
        }, PolynomialBezier.prototype.tangentAngle = function(t) {
          var e = this.derivative(t);
          return Math.atan2(e[1], e[0]);
        }, PolynomialBezier.prototype.normalAngle = function(t) {
          var e = this.derivative(t);
          return Math.atan2(e[0], e[1]);
        }, PolynomialBezier.prototype.inflectionPoints = function() {
          var t = this.a[1] * this.b[0] - this.a[0] * this.b[1];
          if (floatZero(t))
            return [];
          var e = -0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1]) / t, i = e * e - 1 / 3 * (this.b[1] * this.c[0] - this.b[0] * this.c[1]) / t;
          if (i < 0)
            return [];
          var r = Math.sqrt(i);
          return floatZero(r) ? r > 0 && r < 1 ? [e] : [] : [e - r, e + r].filter(function(t2) {
            return t2 > 0 && t2 < 1;
          });
        }, PolynomialBezier.prototype.split = function(t) {
          if (t <= 0)
            return [singlePoint(this.points[0]), this];
          if (t >= 1)
            return [this, singlePoint(this.points[this.points.length - 1])];
          var e = lerpPoint(this.points[0], this.points[1], t), i = lerpPoint(this.points[1], this.points[2], t), r = lerpPoint(this.points[2], this.points[3], t), s = lerpPoint(e, i, t), a = lerpPoint(i, r, t), n = lerpPoint(s, a, t);
          return [new PolynomialBezier(this.points[0], e, s, n, true), new PolynomialBezier(n, a, r, this.points[3], true)];
        }, PolynomialBezier.prototype.bounds = function() {
          return { x: extrema(this, 0), y: extrema(this, 1) };
        }, PolynomialBezier.prototype.boundingBox = function() {
          var t = this.bounds();
          return { left: t.x.min, right: t.x.max, top: t.y.min, bottom: t.y.max, width: t.x.max - t.x.min, height: t.y.max - t.y.min, cx: (t.x.max + t.x.min) / 2, cy: (t.y.max + t.y.min) / 2 };
        }, PolynomialBezier.prototype.intersections = function(t, e, i) {
          void 0 === e && (e = 2), void 0 === i && (i = 7);
          var r = [];
          return intersectsImpl(intersectData(this, 0, 1), intersectData(t, 0, 1), 0, e, r, i), r;
        }, PolynomialBezier.shapeSegment = function(t, e) {
          var i = (e + 1) % t.length();
          return new PolynomialBezier(t.v[e], t.o[e], t.i[i], t.v[i], true);
        }, PolynomialBezier.shapeSegmentInverted = function(t, e) {
          var i = (e + 1) % t.length();
          return new PolynomialBezier(t.v[i], t.i[i], t.o[e], t.v[e], true);
        }, extendPrototype([ShapeModifier], ZigZagModifier), ZigZagModifier.prototype.initModifierProperties = function(t, e) {
          this.getValue = this.processKeys, this.amplitude = PropertyFactory.getProp(t, e.s, 0, null, this), this.frequency = PropertyFactory.getProp(t, e.r, 0, null, this), this.pointsType = PropertyFactory.getProp(t, e.pt, 0, null, this), this._isAnimated = 0 !== this.amplitude.effectsSequence.length || 0 !== this.frequency.effectsSequence.length || 0 !== this.pointsType.effectsSequence.length;
        }, ZigZagModifier.prototype.processPath = function(t, e, i, r) {
          var s = t._length, a = shapePool.newElement();
          if (a.c = t.c, t.c || (s -= 1), 0 === s)
            return a;
          var n = -1, o = PolynomialBezier.shapeSegment(t, 0);
          zigZagCorner(a, t, 0, e, i, r, n);
          for (var h = 0; h < s; h += 1)
            n = zigZagSegment(a, o, e, i, r, -n), o = h !== s - 1 || t.c ? PolynomialBezier.shapeSegment(t, (h + 1) % s) : null, zigZagCorner(a, t, h + 1, e, i, r, n);
          return a;
        }, ZigZagModifier.prototype.processShapes = function(t) {
          var e, i, r, s, a, n, o = this.shapes.length, h = this.amplitude.v, l = Math.max(0, Math.round(this.frequency.v)), p = this.pointsType.v;
          if (0 !== h)
            for (i = 0; i < o; i += 1) {
              if (n = (a = this.shapes[i]).localShapeCollection, a.shape._mdf || this._mdf || t)
                for (n.releaseShapes(), a.shape._mdf = true, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1)
                  n.addShape(this.processPath(e[r], h, l, p));
              a.shape.paths = a.localShapeCollection;
            }
          this.dynamicProperties.length || (this._mdf = false);
        }, extendPrototype([ShapeModifier], OffsetPathModifier), OffsetPathModifier.prototype.initModifierProperties = function(t, e) {
          this.getValue = this.processKeys, this.amount = PropertyFactory.getProp(t, e.a, 0, null, this), this.miterLimit = PropertyFactory.getProp(t, e.ml, 0, null, this), this.lineJoin = e.lj, this._isAnimated = 0 !== this.amount.effectsSequence.length;
        }, OffsetPathModifier.prototype.processPath = function(t, e, i, r) {
          var s = shapePool.newElement();
          s.c = t.c;
          var a, n, o, h = t.length();
          t.c || (h -= 1);
          var l = [];
          for (a = 0; a < h; a += 1)
            o = PolynomialBezier.shapeSegment(t, a), l.push(offsetSegmentSplit(o, e));
          if (!t.c)
            for (a = h - 1; a >= 0; a -= 1)
              o = PolynomialBezier.shapeSegmentInverted(t, a), l.push(offsetSegmentSplit(o, e));
          l = pruneIntersections(l);
          var p = null, f = null;
          for (a = 0; a < l.length; a += 1) {
            var m = l[a];
            for (f && (p = joinLines(s, f, m[0], i, r)), f = m[m.length - 1], n = 0; n < m.length; n += 1)
              o = m[n], p && pointEqual(o.points[0], p) ? s.setXYAt(o.points[1][0], o.points[1][1], "o", s.length() - 1) : s.setTripleAt(o.points[0][0], o.points[0][1], o.points[1][0], o.points[1][1], o.points[0][0], o.points[0][1], s.length()), s.setTripleAt(o.points[3][0], o.points[3][1], o.points[3][0], o.points[3][1], o.points[2][0], o.points[2][1], s.length()), p = o.points[3];
          }
          return l.length && joinLines(s, f, l[0][0], i, r), s;
        }, OffsetPathModifier.prototype.processShapes = function(t) {
          var e, i, r, s, a, n, o = this.shapes.length, h = this.amount.v, l = this.miterLimit.v, p = this.lineJoin;
          if (0 !== h)
            for (i = 0; i < o; i += 1) {
              if (n = (a = this.shapes[i]).localShapeCollection, a.shape._mdf || this._mdf || t)
                for (n.releaseShapes(), a.shape._mdf = true, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1)
                  n.addShape(this.processPath(e[r], h, p, l));
              a.shape.paths = a.localShapeCollection;
            }
          this.dynamicProperties.length || (this._mdf = false);
        };
        var FontManager = function() {
          var t = { w: 0, size: 0, shapes: [], data: { shapes: [] } }, e = [];
          e = e.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
          var i = 127988, r = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
          function s(t2, e2) {
            var i2 = createTag("span");
            i2.setAttribute("aria-hidden", true), i2.style.fontFamily = e2;
            var r2 = createTag("span");
            r2.innerText = "giItT1WQy@!-/#", i2.style.position = "absolute", i2.style.left = "-10000px", i2.style.top = "-10000px", i2.style.fontSize = "300px", i2.style.fontVariant = "normal", i2.style.fontStyle = "normal", i2.style.fontWeight = "normal", i2.style.letterSpacing = "0", i2.appendChild(r2), document.body.appendChild(i2);
            var s2 = r2.offsetWidth;
            return r2.style.fontFamily = function(t3) {
              var e3, i3 = t3.split(","), r3 = i3.length, s3 = [];
              for (e3 = 0; e3 < r3; e3 += 1)
                "sans-serif" !== i3[e3] && "monospace" !== i3[e3] && s3.push(i3[e3]);
              return s3.join(",");
            }(t2) + ", " + e2, { node: r2, w: s2, parent: i2 };
          }
          function a(t2, e2) {
            var i2, r2 = document.body && e2 ? "svg" : "canvas", s2 = getFontProperties(t2);
            if ("svg" === r2) {
              var a2 = createNS("text");
              a2.style.fontSize = "100px", a2.setAttribute("font-family", t2.fFamily), a2.setAttribute("font-style", s2.style), a2.setAttribute("font-weight", s2.weight), a2.textContent = "1", t2.fClass ? (a2.style.fontFamily = "inherit", a2.setAttribute("class", t2.fClass)) : a2.style.fontFamily = t2.fFamily, e2.appendChild(a2), i2 = a2;
            } else {
              var n2 = new OffscreenCanvas(500, 500).getContext("2d");
              n2.font = s2.style + " " + s2.weight + " 100px " + t2.fFamily, i2 = n2;
            }
            return { measureText: function(t3) {
              return "svg" === r2 ? (i2.textContent = t3, i2.getComputedTextLength()) : i2.measureText(t3).width;
            } };
          }
          function n(t2) {
            var e2 = 0, i2 = t2.charCodeAt(0);
            if (i2 >= 55296 && i2 <= 56319) {
              var r2 = t2.charCodeAt(1);
              r2 >= 56320 && r2 <= 57343 && (e2 = 1024 * (i2 - 55296) + r2 - 56320 + 65536);
            }
            return e2;
          }
          function o(t2) {
            var e2 = n(t2);
            return e2 >= 127462 && e2 <= 127487;
          }
          var h = function() {
            this.fonts = [], this.chars = null, this.typekitLoaded = 0, this.isLoaded = false, this._warned = false, this.initTime = Date.now(), this.setIsLoadedBinded = this.setIsLoaded.bind(this), this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);
          };
          h.isModifier = function(t2, e2) {
            var i2 = t2.toString(16) + e2.toString(16);
            return -1 !== r.indexOf(i2);
          }, h.isZeroWidthJoiner = function(t2) {
            return 8205 === t2;
          }, h.isFlagEmoji = function(t2) {
            return o(t2.substr(0, 2)) && o(t2.substr(2, 2));
          }, h.isRegionalCode = o, h.isCombinedCharacter = function(t2) {
            return -1 !== e.indexOf(t2);
          }, h.isRegionalFlag = function(t2, e2) {
            var r2 = n(t2.substr(e2, 2));
            if (r2 !== i)
              return false;
            var s2 = 0;
            for (e2 += 2; s2 < 5; ) {
              if ((r2 = n(t2.substr(e2, 2))) < 917601 || r2 > 917626)
                return false;
              s2 += 1, e2 += 2;
            }
            return 917631 === n(t2.substr(e2, 2));
          }, h.isVariationSelector = function(t2) {
            return 65039 === t2;
          }, h.BLACK_FLAG_CODE_POINT = i;
          var l = { addChars: function(t2) {
            if (t2) {
              var e2;
              this.chars || (this.chars = []);
              var i2, r2, s2 = t2.length, a2 = this.chars.length;
              for (e2 = 0; e2 < s2; e2 += 1) {
                for (i2 = 0, r2 = false; i2 < a2; )
                  this.chars[i2].style === t2[e2].style && this.chars[i2].fFamily === t2[e2].fFamily && this.chars[i2].ch === t2[e2].ch && (r2 = true), i2 += 1;
                r2 || (this.chars.push(t2[e2]), a2 += 1);
              }
            }
          }, addFonts: function(t2, e2) {
            if (t2) {
              if (this.chars)
                return this.isLoaded = true, void (this.fonts = t2.list);
              if (!document.body)
                return this.isLoaded = true, t2.list.forEach(function(t3) {
                  t3.helper = a(t3), t3.cache = {};
                }), void (this.fonts = t2.list);
              var i2, r2 = t2.list, n2 = r2.length, o2 = n2;
              for (i2 = 0; i2 < n2; i2 += 1) {
                var h2, l2, p = true;
                if (r2[i2].loaded = false, r2[i2].monoCase = s(r2[i2].fFamily, "monospace"), r2[i2].sansCase = s(r2[i2].fFamily, "sans-serif"), r2[i2].fPath) {
                  if ("p" === r2[i2].fOrigin || 3 === r2[i2].origin) {
                    if ((h2 = document.querySelectorAll('style[f-forigin="p"][f-family="' + r2[i2].fFamily + '"], style[f-origin="3"][f-family="' + r2[i2].fFamily + '"]')).length > 0 && (p = false), p) {
                      var f = createTag("style");
                      f.setAttribute("f-forigin", r2[i2].fOrigin), f.setAttribute("f-origin", r2[i2].origin), f.setAttribute("f-family", r2[i2].fFamily), f.type = "text/css", f.innerText = "@font-face {font-family: " + r2[i2].fFamily + "; font-style: normal; src: url('" + r2[i2].fPath + "');}", e2.appendChild(f);
                    }
                  } else if ("g" === r2[i2].fOrigin || 1 === r2[i2].origin) {
                    for (h2 = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'), l2 = 0; l2 < h2.length; l2 += 1)
                      -1 !== h2[l2].href.indexOf(r2[i2].fPath) && (p = false);
                    if (p) {
                      var m = createTag("link");
                      m.setAttribute("f-forigin", r2[i2].fOrigin), m.setAttribute("f-origin", r2[i2].origin), m.type = "text/css", m.rel = "stylesheet", m.href = r2[i2].fPath, document.body.appendChild(m);
                    }
                  } else if ("t" === r2[i2].fOrigin || 2 === r2[i2].origin) {
                    for (h2 = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'), l2 = 0; l2 < h2.length; l2 += 1)
                      r2[i2].fPath === h2[l2].src && (p = false);
                    if (p) {
                      var c = createTag("link");
                      c.setAttribute("f-forigin", r2[i2].fOrigin), c.setAttribute("f-origin", r2[i2].origin), c.setAttribute("rel", "stylesheet"), c.setAttribute("href", r2[i2].fPath), e2.appendChild(c);
                    }
                  }
                } else
                  r2[i2].loaded = true, o2 -= 1;
                r2[i2].helper = a(r2[i2], e2), r2[i2].cache = {}, this.fonts.push(r2[i2]);
              }
              0 === o2 ? this.isLoaded = true : setTimeout(this.checkLoadedFonts.bind(this), 100);
            } else
              this.isLoaded = true;
          }, getCharData: function(e2, i2, r2) {
            for (var s2 = 0, a2 = this.chars.length; s2 < a2; ) {
              if (this.chars[s2].ch === e2 && this.chars[s2].style === i2 && this.chars[s2].fFamily === r2)
                return this.chars[s2];
              s2 += 1;
            }
            return ("string" == typeof e2 && 13 !== e2.charCodeAt(0) || !e2) && console && console.warn && !this._warned && (this._warned = true, console.warn("Missing character from exported characters list: ", e2, i2, r2)), t;
          }, getFontByName: function(t2) {
            for (var e2 = 0, i2 = this.fonts.length; e2 < i2; ) {
              if (this.fonts[e2].fName === t2)
                return this.fonts[e2];
              e2 += 1;
            }
            return this.fonts[0];
          }, measureText: function(t2, e2, i2) {
            var r2 = this.getFontByName(e2), s2 = t2;
            if (!r2.cache[s2]) {
              var a2 = r2.helper;
              if (" " === t2) {
                var n2 = a2.measureText("|" + t2 + "|"), o2 = a2.measureText("||");
                r2.cache[s2] = (n2 - o2) / 100;
              } else
                r2.cache[s2] = a2.measureText(t2) / 100;
            }
            return r2.cache[s2] * i2;
          }, checkLoadedFonts: function() {
            var t2, e2, i2, r2 = this.fonts.length, s2 = r2;
            for (t2 = 0; t2 < r2; t2 += 1)
              this.fonts[t2].loaded ? s2 -= 1 : "n" === this.fonts[t2].fOrigin || 0 === this.fonts[t2].origin ? this.fonts[t2].loaded = true : (e2 = this.fonts[t2].monoCase.node, i2 = this.fonts[t2].monoCase.w, e2.offsetWidth !== i2 ? (s2 -= 1, this.fonts[t2].loaded = true) : (e2 = this.fonts[t2].sansCase.node, i2 = this.fonts[t2].sansCase.w, e2.offsetWidth !== i2 && (s2 -= 1, this.fonts[t2].loaded = true)), this.fonts[t2].loaded && (this.fonts[t2].sansCase.parent.parentNode.removeChild(this.fonts[t2].sansCase.parent), this.fonts[t2].monoCase.parent.parentNode.removeChild(this.fonts[t2].monoCase.parent)));
            0 !== s2 && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10);
          }, setIsLoaded: function() {
            this.isLoaded = true;
          } };
          return h.prototype = l, h;
        }();
        function SlotManager(t) {
          this.animationData = t;
        }
        function slotFactory(t) {
          return new SlotManager(t);
        }
        function RenderableElement() {
        }
        SlotManager.prototype.getProp = function(t) {
          return this.animationData.slots && this.animationData.slots[t.sid] ? Object.assign(t, this.animationData.slots[t.sid].p) : t;
        }, RenderableElement.prototype = { initRenderable: function() {
          this.isInRange = false, this.hidden = false, this.isTransparent = false, this.renderableComponents = [];
        }, addRenderableComponent: function(t) {
          -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t);
        }, removeRenderableComponent: function(t) {
          -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1);
        }, prepareRenderableFrame: function(t) {
          this.checkLayerLimits(t);
        }, checkTransparency: function() {
          this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && (this.isTransparent = true, this.hide()) : this.isTransparent && (this.isTransparent = false, this.show());
        }, checkLayerLimits: function(t) {
          this.data.ip - this.data.st <= t && this.data.op - this.data.st > t ? true !== this.isInRange && (this.globalData._mdf = true, this._mdf = true, this.isInRange = true, this.show()) : false !== this.isInRange && (this.globalData._mdf = true, this.isInRange = false, this.hide());
        }, renderRenderable: function() {
          var t, e = this.renderableComponents.length;
          for (t = 0; t < e; t += 1)
            this.renderableComponents[t].renderFrame(this._isFirstFrame);
        }, sourceRectAtTime: function() {
          return { top: 0, left: 0, width: 100, height: 100 };
        }, getLayerSize: function() {
          return 5 === this.data.ty ? { w: this.data.textData.width, h: this.data.textData.height } : { w: this.data.width, h: this.data.height };
        } };
        var getBlendMode = (blendModeEnums = { 0: "source-over", 1: "multiply", 2: "screen", 3: "overlay", 4: "darken", 5: "lighten", 6: "color-dodge", 7: "color-burn", 8: "hard-light", 9: "soft-light", 10: "difference", 11: "exclusion", 12: "hue", 13: "saturation", 14: "color", 15: "luminosity" }, function(t) {
          return blendModeEnums[t] || "";
        }), blendModeEnums;
        function SliderEffect(t, e, i) {
          this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
        }
        function AngleEffect(t, e, i) {
          this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
        }
        function ColorEffect(t, e, i) {
          this.p = PropertyFactory.getProp(e, t.v, 1, 0, i);
        }
        function PointEffect(t, e, i) {
          this.p = PropertyFactory.getProp(e, t.v, 1, 0, i);
        }
        function LayerIndexEffect(t, e, i) {
          this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
        }
        function MaskIndexEffect(t, e, i) {
          this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
        }
        function CheckboxEffect(t, e, i) {
          this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
        }
        function NoValueEffect() {
          this.p = {};
        }
        function EffectsManager(t, e) {
          var i, r = t.ef || [];
          this.effectElements = [];
          var s, a = r.length;
          for (i = 0; i < a; i += 1)
            s = new GroupEffect(r[i], e), this.effectElements.push(s);
        }
        function GroupEffect(t, e) {
          this.init(t, e);
        }
        function BaseElement() {
        }
        function FrameElement() {
        }
        function FootageElement(t, e, i) {
          this.initFrame(), this.initRenderable(), this.assetData = e.getAssetData(t.refId), this.footageData = e.imageLoader.getAsset(this.assetData), this.initBaseData(t, e, i);
        }
        function AudioElement(t, e, i) {
          this.initFrame(), this.initRenderable(), this.assetData = e.getAssetData(t.refId), this.initBaseData(t, e, i), this._isPlaying = false, this._canPlay = false;
          var r = this.globalData.getAssetsPath(this.assetData);
          this.audio = this.globalData.audioController.createAudio(r), this._currentTime = 0, this.globalData.audioController.addAudio(this), this._volumeMultiplier = 1, this._volume = 1, this._previousVolume = null, this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: true }, this.lv = PropertyFactory.getProp(this, t.au && t.au.lv ? t.au.lv : { k: [100] }, 1, 0.01, this);
        }
        function BaseRenderer() {
        }
        extendPrototype([DynamicPropertyContainer], GroupEffect), GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties, GroupEffect.prototype.init = function(t, e) {
          var i;
          this.data = t, this.effectElements = [], this.initDynamicPropertyContainer(e);
          var r, s = this.data.ef.length, a = this.data.ef;
          for (i = 0; i < s; i += 1) {
            switch (r = null, a[i].ty) {
              case 0:
                r = new SliderEffect(a[i], e, this);
                break;
              case 1:
                r = new AngleEffect(a[i], e, this);
                break;
              case 2:
                r = new ColorEffect(a[i], e, this);
                break;
              case 3:
                r = new PointEffect(a[i], e, this);
                break;
              case 4:
              case 7:
                r = new CheckboxEffect(a[i], e, this);
                break;
              case 10:
                r = new LayerIndexEffect(a[i], e, this);
                break;
              case 11:
                r = new MaskIndexEffect(a[i], e, this);
                break;
              case 5:
                r = new EffectsManager(a[i], e, this);
                break;
              default:
                r = new NoValueEffect(a[i], e, this);
            }
            r && this.effectElements.push(r);
          }
        }, BaseElement.prototype = { checkMasks: function() {
          if (!this.data.hasMask)
            return false;
          for (var t = 0, e = this.data.masksProperties.length; t < e; ) {
            if ("n" !== this.data.masksProperties[t].mode && false !== this.data.masksProperties[t].cl)
              return true;
            t += 1;
          }
          return false;
        }, initExpressions: function() {
          var t = getExpressionInterfaces();
          if (t) {
            var e = t("layer"), i = t("effects"), r = t("shape"), s = t("text"), a = t("comp");
            this.layerInterface = e(this), this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
            var n = i.createEffectsInterface(this, this.layerInterface);
            this.layerInterface.registerEffectsInterface(n), 0 === this.data.ty || this.data.xt ? this.compInterface = a(this) : 4 === this.data.ty ? (this.layerInterface.shapeInterface = r(this.shapesData, this.itemsData, this.layerInterface), this.layerInterface.content = this.layerInterface.shapeInterface) : 5 === this.data.ty && (this.layerInterface.textInterface = s(this), this.layerInterface.text = this.layerInterface.textInterface);
          }
        }, setBlendMode: function() {
          var t = getBlendMode(this.data.bm);
          (this.baseElement || this.layerElement).style["mix-blend-mode"] = t;
        }, initBaseData: function(t, e, i) {
          this.globalData = e, this.comp = i, this.data = t, this.layerId = createElementID(), this.data.sr || (this.data.sr = 1), this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);
        }, getType: function() {
          return this.type;
        }, sourceRectAtTime: function() {
        } }, FrameElement.prototype = { initFrame: function() {
          this._isFirstFrame = false, this.dynamicProperties = [], this._mdf = false;
        }, prepareProperties: function(t, e) {
          var i, r = this.dynamicProperties.length;
          for (i = 0; i < r; i += 1)
            (e || this._isParent && "transform" === this.dynamicProperties[i].propType) && (this.dynamicProperties[i].getValue(), this.dynamicProperties[i]._mdf && (this.globalData._mdf = true, this._mdf = true));
        }, addDynamicProperty: function(t) {
          -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t);
        } }, FootageElement.prototype.prepareFrame = function() {
        }, extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement), FootageElement.prototype.getBaseElement = function() {
          return null;
        }, FootageElement.prototype.renderFrame = function() {
        }, FootageElement.prototype.destroy = function() {
        }, FootageElement.prototype.initExpressions = function() {
          var t = getExpressionInterfaces();
          if (t) {
            var e = t("footage");
            this.layerInterface = e(this);
          }
        }, FootageElement.prototype.getFootageData = function() {
          return this.footageData;
        }, AudioElement.prototype.prepareFrame = function(t) {
          if (this.prepareRenderableFrame(t, true), this.prepareProperties(t, true), this.tm._placeholder)
            this._currentTime = t / this.data.sr;
          else {
            var e = this.tm.v;
            this._currentTime = e;
          }
          this._volume = this.lv.v[0];
          var i = this._volume * this._volumeMultiplier;
          this._previousVolume !== i && (this._previousVolume = i, this.audio.volume(i));
        }, extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement), AudioElement.prototype.renderFrame = function() {
          this.isInRange && this._canPlay && (this._isPlaying ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) && this.audio.seek(this._currentTime / this.globalData.frameRate) : (this.audio.play(), this.audio.seek(this._currentTime / this.globalData.frameRate), this._isPlaying = true));
        }, AudioElement.prototype.show = function() {
        }, AudioElement.prototype.hide = function() {
          this.audio.pause(), this._isPlaying = false;
        }, AudioElement.prototype.pause = function() {
          this.audio.pause(), this._isPlaying = false, this._canPlay = false;
        }, AudioElement.prototype.resume = function() {
          this._canPlay = true;
        }, AudioElement.prototype.setRate = function(t) {
          this.audio.rate(t);
        }, AudioElement.prototype.volume = function(t) {
          this._volumeMultiplier = t, this._previousVolume = t * this._volume, this.audio.volume(this._previousVolume);
        }, AudioElement.prototype.getBaseElement = function() {
          return null;
        }, AudioElement.prototype.destroy = function() {
        }, AudioElement.prototype.sourceRectAtTime = function() {
        }, AudioElement.prototype.initExpressions = function() {
        }, BaseRenderer.prototype.checkLayers = function(t) {
          var e, i, r = this.layers.length;
          for (this.completeLayers = true, e = r - 1; e >= 0; e -= 1)
            this.elements[e] || (i = this.layers[e]).ip - i.st <= t - this.layers[e].st && i.op - i.st > t - this.layers[e].st && this.buildItem(e), this.completeLayers = !!this.elements[e] && this.completeLayers;
          this.checkPendingElements();
        }, BaseRenderer.prototype.createItem = function(t) {
          switch (t.ty) {
            case 2:
              return this.createImage(t);
            case 0:
              return this.createComp(t);
            case 1:
              return this.createSolid(t);
            case 3:
            default:
              return this.createNull(t);
            case 4:
              return this.createShape(t);
            case 5:
              return this.createText(t);
            case 6:
              return this.createAudio(t);
            case 13:
              return this.createCamera(t);
            case 15:
              return this.createFootage(t);
          }
        }, BaseRenderer.prototype.createCamera = function() {
          throw new Error("You're using a 3d camera. Try the html renderer.");
        }, BaseRenderer.prototype.createAudio = function(t) {
          return new AudioElement(t, this.globalData, this);
        }, BaseRenderer.prototype.createFootage = function(t) {
          return new FootageElement(t, this.globalData, this);
        }, BaseRenderer.prototype.buildAllItems = function() {
          var t, e = this.layers.length;
          for (t = 0; t < e; t += 1)
            this.buildItem(t);
          this.checkPendingElements();
        }, BaseRenderer.prototype.includeLayers = function(t) {
          var e;
          this.completeLayers = false;
          var i, r = t.length, s = this.layers.length;
          for (e = 0; e < r; e += 1)
            for (i = 0; i < s; ) {
              if (this.layers[i].id === t[e].id) {
                this.layers[i] = t[e];
                break;
              }
              i += 1;
            }
        }, BaseRenderer.prototype.setProjectInterface = function(t) {
          this.globalData.projectInterface = t;
        }, BaseRenderer.prototype.initItems = function() {
          this.globalData.progressiveLoad || this.buildAllItems();
        }, BaseRenderer.prototype.buildElementParenting = function(t, e, i) {
          for (var r = this.elements, s = this.layers, a = 0, n = s.length; a < n; )
            s[a].ind == e && (r[a] && true !== r[a] ? (i.push(r[a]), r[a].setAsParent(), void 0 !== s[a].parent ? this.buildElementParenting(t, s[a].parent, i) : t.setHierarchy(i)) : (this.buildItem(a), this.addPendingElement(t))), a += 1;
        }, BaseRenderer.prototype.addPendingElement = function(t) {
          this.pendingElements.push(t);
        }, BaseRenderer.prototype.searchExtraCompositions = function(t) {
          var e, i = t.length;
          for (e = 0; e < i; e += 1)
            if (t[e].xt) {
              var r = this.createComp(t[e]);
              r.initExpressions(), this.globalData.projectInterface.registerComposition(r);
            }
        }, BaseRenderer.prototype.getElementById = function(t) {
          var e, i = this.elements.length;
          for (e = 0; e < i; e += 1)
            if (this.elements[e].data.ind === t)
              return this.elements[e];
          return null;
        }, BaseRenderer.prototype.getElementByPath = function(t) {
          var e, i = t.shift();
          if ("number" == typeof i)
            e = this.elements[i];
          else {
            var r, s = this.elements.length;
            for (r = 0; r < s; r += 1)
              if (this.elements[r].data.nm === i) {
                e = this.elements[r];
                break;
              }
          }
          return 0 === t.length ? e : e.getElementByPath(t);
        }, BaseRenderer.prototype.setupGlobalData = function(t, e) {
          this.globalData.fontManager = new FontManager(), this.globalData.slotManager = slotFactory(t), this.globalData.fontManager.addChars(t.chars), this.globalData.fontManager.addFonts(t.fonts, e), this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem), this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem), this.globalData.imageLoader = this.animationItem.imagePreloader, this.globalData.audioController = this.animationItem.audioController, this.globalData.frameId = 0, this.globalData.frameRate = t.fr, this.globalData.nm = t.nm, this.globalData.compSize = { w: t.w, h: t.h };
        };
        var effectTypes = { TRANSFORM_EFFECT: "transformEFfect" };
        function TransformElement() {
        }
        function MaskElement(t, e, i) {
          this.data = t, this.element = e, this.globalData = i, this.storedData = [], this.masksProperties = this.data.masksProperties || [], this.maskElement = null;
          var r, s, a = this.globalData.defs, n = this.masksProperties ? this.masksProperties.length : 0;
          this.viewData = createSizedArray(n), this.solidPath = "";
          var o, h, l, p, f, m, c = this.masksProperties, d = 0, u = [], y = createElementID(), g = "clipPath", v = "clip-path";
          for (r = 0; r < n; r += 1)
            if (("a" !== c[r].mode && "n" !== c[r].mode || c[r].inv || 100 !== c[r].o.k || c[r].o.x) && (g = "mask", v = "mask"), "s" !== c[r].mode && "i" !== c[r].mode || 0 !== d ? l = null : ((l = createNS("rect")).setAttribute("fill", "#ffffff"), l.setAttribute("width", this.element.comp.data.w || 0), l.setAttribute("height", this.element.comp.data.h || 0), u.push(l)), s = createNS("path"), "n" === c[r].mode)
              this.viewData[r] = { op: PropertyFactory.getProp(this.element, c[r].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, c[r], 3), elem: s, lastPath: "" }, a.appendChild(s);
            else {
              var b;
              if (d += 1, s.setAttribute("fill", "s" === c[r].mode ? "#000000" : "#ffffff"), s.setAttribute("clip-rule", "nonzero"), 0 !== c[r].x.k ? (g = "mask", v = "mask", m = PropertyFactory.getProp(this.element, c[r].x, 0, null, this.element), b = createElementID(), (p = createNS("filter")).setAttribute("id", b), (f = createNS("feMorphology")).setAttribute("operator", "erode"), f.setAttribute("in", "SourceGraphic"), f.setAttribute("radius", "0"), p.appendChild(f), a.appendChild(p), s.setAttribute("stroke", "s" === c[r].mode ? "#000000" : "#ffffff")) : (f = null, m = null), this.storedData[r] = { elem: s, x: m, expan: f, lastPath: "", lastOperator: "", filterId: b, lastRadius: 0 }, "i" === c[r].mode) {
                h = u.length;
                var x = createNS("g");
                for (o = 0; o < h; o += 1)
                  x.appendChild(u[o]);
                var P = createNS("mask");
                P.setAttribute("mask-type", "alpha"), P.setAttribute("id", y + "_" + d), P.appendChild(s), a.appendChild(P), x.setAttribute("mask", "url(" + getLocationHref() + "#" + y + "_" + d + ")"), u.length = 0, u.push(x);
              } else
                u.push(s);
              c[r].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()), this.viewData[r] = { elem: s, lastPath: "", op: PropertyFactory.getProp(this.element, c[r].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, c[r], 3), invRect: l }, this.viewData[r].prop.k || this.drawPath(c[r], this.viewData[r].prop.v, this.viewData[r]);
            }
          for (this.maskElement = createNS(g), n = u.length, r = 0; r < n; r += 1)
            this.maskElement.appendChild(u[r]);
          d > 0 && (this.maskElement.setAttribute("id", y), this.element.maskedElement.setAttribute(v, "url(" + getLocationHref() + "#" + y + ")"), a.appendChild(this.maskElement)), this.viewData.length && this.element.addRenderableComponent(this);
        }
        TransformElement.prototype = { initTransform: function() {
          var t = new Matrix();
          this.finalTransform = { mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 }, _matMdf: false, _localMatMdf: false, _opMdf: false, mat: t, localMat: t, localOpacity: 1 }, this.data.ao && (this.finalTransform.mProp.autoOriented = true), this.data.ty;
        }, renderTransform: function() {
          if (this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame, this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame, this.hierarchy) {
            var t, e = this.finalTransform.mat, i = 0, r = this.hierarchy.length;
            if (!this.finalTransform._matMdf)
              for (; i < r; ) {
                if (this.hierarchy[i].finalTransform.mProp._mdf) {
                  this.finalTransform._matMdf = true;
                  break;
                }
                i += 1;
              }
            if (this.finalTransform._matMdf)
              for (t = this.finalTransform.mProp.v.props, e.cloneFromProps(t), i = 0; i < r; i += 1)
                e.multiply(this.hierarchy[i].finalTransform.mProp.v);
          }
          this.finalTransform._matMdf && (this.finalTransform._localMatMdf = this.finalTransform._matMdf), this.finalTransform._opMdf && (this.finalTransform.localOpacity = this.finalTransform.mProp.o.v);
        }, renderLocalTransform: function() {
          if (this.localTransforms) {
            var t = 0, e = this.localTransforms.length;
            if (this.finalTransform._localMatMdf = this.finalTransform._matMdf, !this.finalTransform._localMatMdf || !this.finalTransform._opMdf)
              for (; t < e; )
                this.localTransforms[t]._mdf && (this.finalTransform._localMatMdf = true), this.localTransforms[t]._opMdf && !this.finalTransform._opMdf && (this.finalTransform.localOpacity = this.finalTransform.mProp.o.v, this.finalTransform._opMdf = true), t += 1;
            if (this.finalTransform._localMatMdf) {
              var i = this.finalTransform.localMat;
              for (this.localTransforms[0].matrix.clone(i), t = 1; t < e; t += 1) {
                var r = this.localTransforms[t].matrix;
                i.multiply(r);
              }
              i.multiply(this.finalTransform.mat);
            }
            if (this.finalTransform._opMdf) {
              var s = this.finalTransform.localOpacity;
              for (t = 0; t < e; t += 1)
                s *= 0.01 * this.localTransforms[t].opacity;
              this.finalTransform.localOpacity = s;
            }
          }
        }, searchEffectTransforms: function() {
          if (this.renderableEffectsManager) {
            var t = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);
            if (t.length) {
              this.localTransforms = [], this.finalTransform.localMat = new Matrix();
              var e = 0, i = t.length;
              for (e = 0; e < i; e += 1)
                this.localTransforms.push(t[e]);
            }
          }
        }, globalToLocal: function(t) {
          var e = [];
          e.push(this.finalTransform);
          for (var i, r = true, s = this.comp; r; )
            s.finalTransform ? (s.data.hasMask && e.splice(0, 0, s.finalTransform), s = s.comp) : r = false;
          var a, n = e.length;
          for (i = 0; i < n; i += 1)
            a = e[i].mat.applyToPointArray(0, 0, 0), t = [t[0] - a[0], t[1] - a[1], 0];
          return t;
        }, mHelper: new Matrix() }, MaskElement.prototype.getMaskProperty = function(t) {
          return this.viewData[t].prop;
        }, MaskElement.prototype.renderFrame = function(t) {
          var e, i = this.element.finalTransform.mat, r = this.masksProperties.length;
          for (e = 0; e < r; e += 1)
            if ((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]), (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute("fill-opacity", this.viewData[e].op.v), "n" !== this.masksProperties[e].mode && (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute("transform", i.getInverseMatrix().to2dCSS()), this.storedData[e].x && (this.storedData[e].x._mdf || t))) {
              var s = this.storedData[e].expan;
              this.storedData[e].x.v < 0 ? ("erode" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "erode", this.storedData[e].elem.setAttribute("filter", "url(" + getLocationHref() + "#" + this.storedData[e].filterId + ")")), s.setAttribute("radius", -this.storedData[e].x.v)) : ("dilate" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "dilate", this.storedData[e].elem.setAttribute("filter", null)), this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v));
            }
        }, MaskElement.prototype.getMaskelement = function() {
          return this.maskElement;
        }, MaskElement.prototype.createLayerSolidPath = function() {
          var t = "M0,0 ";
          return t += " h" + this.globalData.compSize.w, t += " v" + this.globalData.compSize.h, t += " h-" + this.globalData.compSize.w, t += " v-" + this.globalData.compSize.h + " ";
        }, MaskElement.prototype.drawPath = function(t, e, i) {
          var r, s, a = " M" + e.v[0][0] + "," + e.v[0][1];
          for (s = e._length, r = 1; r < s; r += 1)
            a += " C" + e.o[r - 1][0] + "," + e.o[r - 1][1] + " " + e.i[r][0] + "," + e.i[r][1] + " " + e.v[r][0] + "," + e.v[r][1];
          if (e.c && s > 1 && (a += " C" + e.o[r - 1][0] + "," + e.o[r - 1][1] + " " + e.i[0][0] + "," + e.i[0][1] + " " + e.v[0][0] + "," + e.v[0][1]), i.lastPath !== a) {
            var n = "";
            i.elem && (e.c && (n = t.inv ? this.solidPath + a : a), i.elem.setAttribute("d", n)), i.lastPath = a;
          }
        }, MaskElement.prototype.destroy = function() {
          this.element = null, this.globalData = null, this.maskElement = null, this.data = null, this.masksProperties = null;
        };
        var filtersFactory = function() {
          var t = {};
          return t.createFilter = function(t2, e) {
            var i = createNS("filter");
            i.setAttribute("id", t2), true !== e && (i.setAttribute("filterUnits", "objectBoundingBox"), i.setAttribute("x", "0%"), i.setAttribute("y", "0%"), i.setAttribute("width", "100%"), i.setAttribute("height", "100%"));
            return i;
          }, t.createAlphaToLuminanceFilter = function() {
            var t2 = createNS("feColorMatrix");
            return t2.setAttribute("type", "matrix"), t2.setAttribute("color-interpolation-filters", "sRGB"), t2.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"), t2;
          }, t;
        }(), featureSupport = function() {
          var t = { maskType: true, svgLumaHidden: true, offscreenCanvas: "undefined" != typeof OffscreenCanvas };
          return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (t.maskType = false), /firefox/i.test(navigator.userAgent) && (t.svgLumaHidden = false), t;
        }(), registeredEffects$1 = {}, idPrefix = "filter_result_";
        function SVGEffects(t) {
          var e, i, r = "SourceGraphic", s = t.data.ef ? t.data.ef.length : 0, a = createElementID(), n = filtersFactory.createFilter(a, true), o = 0;
          for (this.filters = [], e = 0; e < s; e += 1) {
            i = null;
            var h = t.data.ef[e].ty;
            if (registeredEffects$1[h])
              i = new (0, registeredEffects$1[h].effect)(n, t.effectsManager.effectElements[e], t, idPrefix + o, r), r = idPrefix + o, registeredEffects$1[h].countsAsEffect && (o += 1);
            i && this.filters.push(i);
          }
          o && (t.globalData.defs.appendChild(n), t.layerElement.setAttribute("filter", "url(" + getLocationHref() + "#" + a + ")")), this.filters.length && t.addRenderableComponent(this);
        }
        function registerEffect$1(t, e, i) {
          registeredEffects$1[t] = { effect: e, countsAsEffect: i };
        }
        function SVGBaseElement() {
        }
        function HierarchyElement() {
        }
        function RenderableDOMElement() {
        }
        function IImageElement(t, e, i) {
          this.assetData = e.getAssetData(t.refId), this.assetData && this.assetData.sid && (this.assetData = e.slotManager.getProp(this.assetData)), this.initElement(t, e, i), this.sourceRect = { top: 0, left: 0, width: this.assetData.w, height: this.assetData.h };
        }
        function ProcessedElement(t, e) {
          this.elem = t, this.pos = e;
        }
        function IShapeElement() {
        }
        SVGEffects.prototype.renderFrame = function(t) {
          var e, i = this.filters.length;
          for (e = 0; e < i; e += 1)
            this.filters[e].renderFrame(t);
        }, SVGEffects.prototype.getEffects = function(t) {
          var e, i = this.filters.length, r = [];
          for (e = 0; e < i; e += 1)
            this.filters[e].type === t && r.push(this.filters[e]);
          return r;
        }, SVGBaseElement.prototype = { initRendererElement: function() {
          this.layerElement = createNS("g");
        }, createContainerElements: function() {
          this.matteElement = createNS("g"), this.transformedElement = this.layerElement, this.maskedElement = this.layerElement, this._sizeChanged = false;
          var t = null;
          if (this.data.td) {
            this.matteMasks = {};
            var e = createNS("g");
            e.setAttribute("id", this.layerId), e.appendChild(this.layerElement), t = e, this.globalData.defs.appendChild(e);
          } else
            this.data.tt ? (this.matteElement.appendChild(this.layerElement), t = this.matteElement, this.baseElement = this.matteElement) : this.baseElement = this.layerElement;
          if (this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 === this.data.ty && !this.data.hd) {
            var i = createNS("clipPath"), r = createNS("path");
            r.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
            var s = createElementID();
            if (i.setAttribute("id", s), i.appendChild(r), this.globalData.defs.appendChild(i), this.checkMasks()) {
              var a = createNS("g");
              a.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")"), a.appendChild(this.layerElement), this.transformedElement = a, t ? t.appendChild(this.transformedElement) : this.baseElement = this.transformedElement;
            } else
              this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")");
          }
          0 !== this.data.bm && this.setBlendMode();
        }, renderElement: function() {
          this.finalTransform._localMatMdf && this.transformedElement.setAttribute("transform", this.finalTransform.localMat.to2dCSS()), this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.localOpacity);
        }, destroyBaseElement: function() {
          this.layerElement = null, this.matteElement = null, this.maskManager.destroy();
        }, getBaseElement: function() {
          return this.data.hd ? null : this.baseElement;
        }, createRenderableComponents: function() {
          this.maskManager = new MaskElement(this.data, this, this.globalData), this.renderableEffectsManager = new SVGEffects(this), this.searchEffectTransforms();
        }, getMatte: function(t) {
          if (this.matteMasks || (this.matteMasks = {}), !this.matteMasks[t]) {
            var e, i, r, s, a = this.layerId + "_" + t;
            if (1 === t || 3 === t) {
              var n = createNS("mask");
              n.setAttribute("id", a), n.setAttribute("mask-type", 3 === t ? "luminance" : "alpha"), (r = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId), n.appendChild(r), this.globalData.defs.appendChild(n), featureSupport.maskType || 1 !== t || (n.setAttribute("mask-type", "luminance"), e = createElementID(), i = filtersFactory.createFilter(e), this.globalData.defs.appendChild(i), i.appendChild(filtersFactory.createAlphaToLuminanceFilter()), (s = createNS("g")).appendChild(r), n.appendChild(s), s.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"));
            } else if (2 === t) {
              var o = createNS("mask");
              o.setAttribute("id", a), o.setAttribute("mask-type", "alpha");
              var h = createNS("g");
              o.appendChild(h), e = createElementID(), i = filtersFactory.createFilter(e);
              var l = createNS("feComponentTransfer");
              l.setAttribute("in", "SourceGraphic"), i.appendChild(l);
              var p = createNS("feFuncA");
              p.setAttribute("type", "table"), p.setAttribute("tableValues", "1.0 0.0"), l.appendChild(p), this.globalData.defs.appendChild(i);
              var f = createNS("rect");
              f.setAttribute("width", this.comp.data.w), f.setAttribute("height", this.comp.data.h), f.setAttribute("x", "0"), f.setAttribute("y", "0"), f.setAttribute("fill", "#ffffff"), f.setAttribute("opacity", "0"), h.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"), h.appendChild(f), (r = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId), h.appendChild(r), featureSupport.maskType || (o.setAttribute("mask-type", "luminance"), i.appendChild(filtersFactory.createAlphaToLuminanceFilter()), s = createNS("g"), h.appendChild(f), s.appendChild(this.layerElement), h.appendChild(s)), this.globalData.defs.appendChild(o);
            }
            this.matteMasks[t] = a;
          }
          return this.matteMasks[t];
        }, setMatte: function(t) {
          this.matteElement && this.matteElement.setAttribute("mask", "url(" + getLocationHref() + "#" + t + ")");
        } }, HierarchyElement.prototype = { initHierarchy: function() {
          this.hierarchy = [], this._isParent = false, this.checkParenting();
        }, setHierarchy: function(t) {
          this.hierarchy = t;
        }, setAsParent: function() {
          this._isParent = true;
        }, checkParenting: function() {
          void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, []);
        } }, extendPrototype([RenderableElement, createProxyFunction({ initElement: function(t, e, i) {
          this.initFrame(), this.initBaseData(t, e, i), this.initTransform(t, e, i), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide();
        }, hide: function() {
          this.hidden || this.isInRange && !this.isTransparent || ((this.baseElement || this.layerElement).style.display = "none", this.hidden = true);
        }, show: function() {
          this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"), this.hidden = false, this._isFirstFrame = true);
        }, renderFrame: function() {
          this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderLocalTransform(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = false));
        }, renderInnerContent: function() {
        }, prepareFrame: function(t) {
          this._mdf = false, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.checkTransparency();
        }, destroy: function() {
          this.innerElem = null, this.destroyBaseElement();
        } })], RenderableDOMElement), extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement), IImageElement.prototype.createContent = function() {
          var t = this.globalData.getAssetsPath(this.assetData);
          this.innerElem = createNS("image"), this.innerElem.setAttribute("width", this.assetData.w + "px"), this.innerElem.setAttribute("height", this.assetData.h + "px"), this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio), this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.layerElement.appendChild(this.innerElem);
        }, IImageElement.prototype.sourceRectAtTime = function() {
          return this.sourceRect;
        }, IShapeElement.prototype = { addShapeToModifiers: function(t) {
          var e, i = this.shapeModifiers.length;
          for (e = 0; e < i; e += 1)
            this.shapeModifiers[e].addShape(t);
        }, isShapeInAnimatedModifiers: function(t) {
          for (var e = this.shapeModifiers.length; 0 < e; )
            if (this.shapeModifiers[0].isAnimatedWithShape(t))
              return true;
          return false;
        }, renderModifiers: function() {
          if (this.shapeModifiers.length) {
            var t, e = this.shapes.length;
            for (t = 0; t < e; t += 1)
              this.shapes[t].sh.reset();
            for (t = (e = this.shapeModifiers.length) - 1; t >= 0 && !this.shapeModifiers[t].processShapes(this._isFirstFrame); t -= 1)
              ;
          }
        }, searchProcessedElement: function(t) {
          for (var e = this.processedElements, i = 0, r = e.length; i < r; ) {
            if (e[i].elem === t)
              return e[i].pos;
            i += 1;
          }
          return 0;
        }, addProcessedElement: function(t, e) {
          for (var i = this.processedElements, r = i.length; r; )
            if (i[r -= 1].elem === t)
              return void (i[r].pos = e);
          i.push(new ProcessedElement(t, e));
        }, prepareFrame: function(t) {
          this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange);
        } };
        var lineCapEnum = { 1: "butt", 2: "round", 3: "square" }, lineJoinEnum = { 1: "miter", 2: "round", 3: "bevel" };
        function SVGShapeData(t, e, i) {
          this.caches = [], this.styles = [], this.transformers = t, this.lStr = "", this.sh = i, this.lvl = e, this._isAnimated = !!i.k;
          for (var r = 0, s = t.length; r < s; ) {
            if (t[r].mProps.dynamicProperties.length) {
              this._isAnimated = true;
              break;
            }
            r += 1;
          }
        }
        function SVGStyleData(t, e) {
          this.data = t, this.type = t.ty, this.d = "", this.lvl = e, this._mdf = false, this.closed = true === t.hd, this.pElem = createNS("path"), this.msElem = null;
        }
        function DashProperty(t, e, i, r) {
          var s;
          this.elem = t, this.frameId = -1, this.dataProps = createSizedArray(e.length), this.renderer = i, this.k = false, this.dashStr = "", this.dashArray = createTypedArray("float32", e.length ? e.length - 1 : 0), this.dashoffset = createTypedArray("float32", 1), this.initDynamicPropertyContainer(r);
          var a, n = e.length || 0;
          for (s = 0; s < n; s += 1)
            a = PropertyFactory.getProp(t, e[s].v, 0, 0, this), this.k = a.k || this.k, this.dataProps[s] = { n: e[s].n, p: a };
          this.k || this.getValue(true), this._isAnimated = this.k;
        }
        function SVGStrokeStyleData(t, e, i) {
          this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this), this.w = PropertyFactory.getProp(t, e.w, 0, null, this), this.d = new DashProperty(t, e.d || {}, "svg", this), this.c = PropertyFactory.getProp(t, e.c, 1, 255, this), this.style = i, this._isAnimated = !!this._isAnimated;
        }
        function SVGFillStyleData(t, e, i) {
          this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this), this.c = PropertyFactory.getProp(t, e.c, 1, 255, this), this.style = i;
        }
        function SVGNoStyleData(t, e, i) {
          this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.style = i;
        }
        function GradientProperty(t, e, i) {
          this.data = e, this.c = createTypedArray("uint8c", 4 * e.p);
          var r = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;
          this.o = createTypedArray("float32", r), this._cmdf = false, this._omdf = false, this._collapsable = this.checkCollapsable(), this._hasOpacity = r, this.initDynamicPropertyContainer(i), this.prop = PropertyFactory.getProp(t, e.k, 1, null, this), this.k = this.prop.k, this.getValue(true);
        }
        function SVGGradientFillStyleData(t, e, i) {
          this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.initGradientData(t, e, i);
        }
        function SVGGradientStrokeStyleData(t, e, i) {
          this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.w = PropertyFactory.getProp(t, e.w, 0, null, this), this.d = new DashProperty(t, e.d || {}, "svg", this), this.initGradientData(t, e, i), this._isAnimated = !!this._isAnimated;
        }
        function ShapeGroupData() {
          this.it = [], this.prevViewData = [], this.gr = createNS("g");
        }
        function SVGTransformData(t, e, i) {
          this.transform = { mProps: t, op: e, container: i }, this.elements = [], this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
        }
        SVGShapeData.prototype.setAsAnimated = function() {
          this._isAnimated = true;
        }, SVGStyleData.prototype.reset = function() {
          this.d = "", this._mdf = false;
        }, DashProperty.prototype.getValue = function(t) {
          if ((this.elem.globalData.frameId !== this.frameId || t) && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf = this._mdf || t, this._mdf)) {
            var e = 0, i = this.dataProps.length;
            for ("svg" === this.renderer && (this.dashStr = ""), e = 0; e < i; e += 1)
              "o" !== this.dataProps[e].n ? "svg" === this.renderer ? this.dashStr += " " + this.dataProps[e].p.v : this.dashArray[e] = this.dataProps[e].p.v : this.dashoffset[0] = this.dataProps[e].p.v;
          }
        }, extendPrototype([DynamicPropertyContainer], DashProperty), extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData), extendPrototype([DynamicPropertyContainer], SVGFillStyleData), extendPrototype([DynamicPropertyContainer], SVGNoStyleData), GradientProperty.prototype.comparePoints = function(t, e) {
          for (var i = 0, r = this.o.length / 2; i < r; ) {
            if (Math.abs(t[4 * i] - t[4 * e + 2 * i]) > 0.01)
              return false;
            i += 1;
          }
          return true;
        }, GradientProperty.prototype.checkCollapsable = function() {
          if (this.o.length / 2 != this.c.length / 4)
            return false;
          if (this.data.k.k[0].s)
            for (var t = 0, e = this.data.k.k.length; t < e; ) {
              if (!this.comparePoints(this.data.k.k[t].s, this.data.p))
                return false;
              t += 1;
            }
          else if (!this.comparePoints(this.data.k.k, this.data.p))
            return false;
          return true;
        }, GradientProperty.prototype.getValue = function(t) {
          if (this.prop.getValue(), this._mdf = false, this._cmdf = false, this._omdf = false, this.prop._mdf || t) {
            var e, i, r, s = 4 * this.data.p;
            for (e = 0; e < s; e += 1)
              i = e % 4 == 0 ? 100 : 255, r = Math.round(this.prop.v[e] * i), this.c[e] !== r && (this.c[e] = r, this._cmdf = !t);
            if (this.o.length)
              for (s = this.prop.v.length, e = 4 * this.data.p; e < s; e += 1)
                i = e % 2 == 0 ? 100 : 1, r = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e], this.o[e - 4 * this.data.p] !== r && (this.o[e - 4 * this.data.p] = r, this._omdf = !t);
            this._mdf = !t;
          }
        }, extendPrototype([DynamicPropertyContainer], GradientProperty), SVGGradientFillStyleData.prototype.initGradientData = function(t, e, i) {
          this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this), this.s = PropertyFactory.getProp(t, e.s, 1, null, this), this.e = PropertyFactory.getProp(t, e.e, 1, null, this), this.h = PropertyFactory.getProp(t, e.h || { k: 0 }, 0, 0.01, this), this.a = PropertyFactory.getProp(t, e.a || { k: 0 }, 0, degToRads, this), this.g = new GradientProperty(t, e.g, this), this.style = i, this.stops = [], this.setGradientData(i.pElem, e), this.setGradientOpacity(e, i), this._isAnimated = !!this._isAnimated;
        }, SVGGradientFillStyleData.prototype.setGradientData = function(t, e) {
          var i = createElementID(), r = createNS(1 === e.t ? "linearGradient" : "radialGradient");
          r.setAttribute("id", i), r.setAttribute("spreadMethod", "pad"), r.setAttribute("gradientUnits", "userSpaceOnUse");
          var s, a, n, o = [];
          for (n = 4 * e.g.p, a = 0; a < n; a += 4)
            s = createNS("stop"), r.appendChild(s), o.push(s);
          t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + i + ")"), this.gf = r, this.cst = o;
        }, SVGGradientFillStyleData.prototype.setGradientOpacity = function(t, e) {
          if (this.g._hasOpacity && !this.g._collapsable) {
            var i, r, s, a = createNS("mask"), n = createNS("path");
            a.appendChild(n);
            var o = createElementID(), h = createElementID();
            a.setAttribute("id", h);
            var l = createNS(1 === t.t ? "linearGradient" : "radialGradient");
            l.setAttribute("id", o), l.setAttribute("spreadMethod", "pad"), l.setAttribute("gradientUnits", "userSpaceOnUse"), s = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length;
            var p = this.stops;
            for (r = 4 * t.g.p; r < s; r += 2)
              (i = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"), l.appendChild(i), p.push(i);
            n.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + o + ")"), "gs" === t.ty && (n.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]), n.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]), 1 === t.lj && n.setAttribute("stroke-miterlimit", t.ml)), this.of = l, this.ms = a, this.ost = p, this.maskId = h, e.msElem = n;
          }
        }, extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData), extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
        var buildShapeString = function(t, e, i, r) {
          if (0 === e)
            return "";
          var s, a = t.o, n = t.i, o = t.v, h = " M" + r.applyToPointStringified(o[0][0], o[0][1]);
          for (s = 1; s < e; s += 1)
            h += " C" + r.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + r.applyToPointStringified(n[s][0], n[s][1]) + " " + r.applyToPointStringified(o[s][0], o[s][1]);
          return i && e && (h += " C" + r.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + r.applyToPointStringified(n[0][0], n[0][1]) + " " + r.applyToPointStringified(o[0][0], o[0][1]), h += "z"), h;
        }, SVGElementsRenderer = function() {
          var t = new Matrix(), e = new Matrix();
          function i(t2, e2, i2) {
            (i2 || e2.transform.op._mdf) && e2.transform.container.setAttribute("opacity", e2.transform.op.v), (i2 || e2.transform.mProps._mdf) && e2.transform.container.setAttribute("transform", e2.transform.mProps.v.to2dCSS());
          }
          function r() {
          }
          function s(i2, r2, s2) {
            var a2, n2, o2, h2, l, p, f, m, c, d, u = r2.styles.length, y = r2.lvl;
            for (p = 0; p < u; p += 1) {
              if (h2 = r2.sh._mdf || s2, r2.styles[p].lvl < y) {
                for (m = e.reset(), c = y - r2.styles[p].lvl, d = r2.transformers.length - 1; !h2 && c > 0; )
                  h2 = r2.transformers[d].mProps._mdf || h2, c -= 1, d -= 1;
                if (h2)
                  for (c = y - r2.styles[p].lvl, d = r2.transformers.length - 1; c > 0; )
                    m.multiply(r2.transformers[d].mProps.v), c -= 1, d -= 1;
              } else
                m = t;
              if (n2 = (f = r2.sh.paths)._length, h2) {
                for (o2 = "", a2 = 0; a2 < n2; a2 += 1)
                  (l = f.shapes[a2]) && l._length && (o2 += buildShapeString(l, l._length, l.c, m));
                r2.caches[p] = o2;
              } else
                o2 = r2.caches[p];
              r2.styles[p].d += true === i2.hd ? "" : o2, r2.styles[p]._mdf = h2 || r2.styles[p]._mdf;
            }
          }
          function a(t2, e2, i2) {
            var r2 = e2.style;
            (e2.c._mdf || i2) && r2.pElem.setAttribute("fill", "rgb(" + bmFloor(e2.c.v[0]) + "," + bmFloor(e2.c.v[1]) + "," + bmFloor(e2.c.v[2]) + ")"), (e2.o._mdf || i2) && r2.pElem.setAttribute("fill-opacity", e2.o.v);
          }
          function n(t2, e2, i2) {
            o(t2, e2, i2), h(t2, e2, i2);
          }
          function o(t2, e2, i2) {
            var r2, s2, a2, n2, o2, h2 = e2.gf, l = e2.g._hasOpacity, p = e2.s.v, f = e2.e.v;
            if (e2.o._mdf || i2) {
              var m = "gf" === t2.ty ? "fill-opacity" : "stroke-opacity";
              e2.style.pElem.setAttribute(m, e2.o.v);
            }
            if (e2.s._mdf || i2) {
              var c = 1 === t2.t ? "x1" : "cx", d = "x1" === c ? "y1" : "cy";
              h2.setAttribute(c, p[0]), h2.setAttribute(d, p[1]), l && !e2.g._collapsable && (e2.of.setAttribute(c, p[0]), e2.of.setAttribute(d, p[1]));
            }
            if (e2.g._cmdf || i2) {
              r2 = e2.cst;
              var u = e2.g.c;
              for (a2 = r2.length, s2 = 0; s2 < a2; s2 += 1)
                (n2 = r2[s2]).setAttribute("offset", u[4 * s2] + "%"), n2.setAttribute("stop-color", "rgb(" + u[4 * s2 + 1] + "," + u[4 * s2 + 2] + "," + u[4 * s2 + 3] + ")");
            }
            if (l && (e2.g._omdf || i2)) {
              var y = e2.g.o;
              for (a2 = (r2 = e2.g._collapsable ? e2.cst : e2.ost).length, s2 = 0; s2 < a2; s2 += 1)
                n2 = r2[s2], e2.g._collapsable || n2.setAttribute("offset", y[2 * s2] + "%"), n2.setAttribute("stop-opacity", y[2 * s2 + 1]);
            }
            if (1 === t2.t)
              (e2.e._mdf || i2) && (h2.setAttribute("x2", f[0]), h2.setAttribute("y2", f[1]), l && !e2.g._collapsable && (e2.of.setAttribute("x2", f[0]), e2.of.setAttribute("y2", f[1])));
            else if ((e2.s._mdf || e2.e._mdf || i2) && (o2 = Math.sqrt(Math.pow(p[0] - f[0], 2) + Math.pow(p[1] - f[1], 2)), h2.setAttribute("r", o2), l && !e2.g._collapsable && e2.of.setAttribute("r", o2)), e2.e._mdf || e2.h._mdf || e2.a._mdf || i2) {
              o2 || (o2 = Math.sqrt(Math.pow(p[0] - f[0], 2) + Math.pow(p[1] - f[1], 2)));
              var g = Math.atan2(f[1] - p[1], f[0] - p[0]), v = e2.h.v;
              v >= 1 ? v = 0.99 : v <= -1 && (v = -0.99);
              var b = o2 * v, x = Math.cos(g + e2.a.v) * b + p[0], P = Math.sin(g + e2.a.v) * b + p[1];
              h2.setAttribute("fx", x), h2.setAttribute("fy", P), l && !e2.g._collapsable && (e2.of.setAttribute("fx", x), e2.of.setAttribute("fy", P));
            }
          }
          function h(t2, e2, i2) {
            var r2 = e2.style, s2 = e2.d;
            s2 && (s2._mdf || i2) && s2.dashStr && (r2.pElem.setAttribute("stroke-dasharray", s2.dashStr), r2.pElem.setAttribute("stroke-dashoffset", s2.dashoffset[0])), e2.c && (e2.c._mdf || i2) && r2.pElem.setAttribute("stroke", "rgb(" + bmFloor(e2.c.v[0]) + "," + bmFloor(e2.c.v[1]) + "," + bmFloor(e2.c.v[2]) + ")"), (e2.o._mdf || i2) && r2.pElem.setAttribute("stroke-opacity", e2.o.v), (e2.w._mdf || i2) && (r2.pElem.setAttribute("stroke-width", e2.w.v), r2.msElem && r2.msElem.setAttribute("stroke-width", e2.w.v));
          }
          return { createRenderFunction: function(t2) {
            switch (t2.ty) {
              case "fl":
                return a;
              case "gf":
                return o;
              case "gs":
                return n;
              case "st":
                return h;
              case "sh":
              case "el":
              case "rc":
              case "sr":
                return s;
              case "tr":
                return i;
              case "no":
                return r;
              default:
                return null;
            }
          } };
        }();
        function SVGShapeElement(t, e, i) {
          this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.shapeModifiers = [], this.itemsData = [], this.processedElements = [], this.animatedContents = [], this.initElement(t, e, i), this.prevViewData = [];
        }
        function LetterProps(t, e, i, r, s, a) {
          this.o = t, this.sw = e, this.sc = i, this.fc = r, this.m = s, this.p = a, this._mdf = { o: true, sw: !!e, sc: !!i, fc: !!r, m: true, p: true };
        }
        function TextProperty(t, e) {
          this._frameId = initialDefaultFrame, this.pv = "", this.v = "", this.kf = false, this._isFirstFrame = true, this._mdf = false, e.d && e.d.sid && (e.d = t.globalData.slotManager.getProp(e.d)), this.data = e, this.elem = t, this.comp = this.elem.comp, this.keysIndex = 0, this.canResize = false, this.minimumFontSize = 1, this.effectsSequence = [], this.currentData = { ascent: 0, boxWidth: this.defaultBoxWidth, f: "", fStyle: "", fWeight: "", fc: "", j: "", justifyOffset: "", l: [], lh: 0, lineWidths: [], ls: "", of: "", s: "", sc: "", sw: 0, t: 0, tr: 0, sz: 0, ps: null, fillColorAnim: false, strokeColorAnim: false, strokeWidthAnim: false, yOffset: 0, finalSize: 0, finalText: [], finalLineHeight: 0, __complete: false }, this.copyData(this.currentData, this.data.d.k[0].s), this.searchProperty() || this.completeTextData(this.currentData);
        }
        extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement), SVGShapeElement.prototype.initSecondaryElement = function() {
        }, SVGShapeElement.prototype.identityMatrix = new Matrix(), SVGShapeElement.prototype.buildExpressionInterface = function() {
        }, SVGShapeElement.prototype.createContent = function() {
          this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true), this.filterUniqueShapes();
        }, SVGShapeElement.prototype.filterUniqueShapes = function() {
          var t, e, i, r, s = this.shapes.length, a = this.stylesList.length, n = [], o = false;
          for (i = 0; i < a; i += 1) {
            for (r = this.stylesList[i], o = false, n.length = 0, t = 0; t < s; t += 1)
              -1 !== (e = this.shapes[t]).styles.indexOf(r) && (n.push(e), o = e._isAnimated || o);
            n.length > 1 && o && this.setShapesAsAnimated(n);
          }
        }, SVGShapeElement.prototype.setShapesAsAnimated = function(t) {
          var e, i = t.length;
          for (e = 0; e < i; e += 1)
            t[e].setAsAnimated();
        }, SVGShapeElement.prototype.createStyleElement = function(t, e) {
          var i, r = new SVGStyleData(t, e), s = r.pElem;
          if ("st" === t.ty)
            i = new SVGStrokeStyleData(this, t, r);
          else if ("fl" === t.ty)
            i = new SVGFillStyleData(this, t, r);
          else if ("gf" === t.ty || "gs" === t.ty) {
            i = new ("gf" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this, t, r), this.globalData.defs.appendChild(i.gf), i.maskId && (this.globalData.defs.appendChild(i.ms), this.globalData.defs.appendChild(i.of), s.setAttribute("mask", "url(" + getLocationHref() + "#" + i.maskId + ")"));
          } else
            "no" === t.ty && (i = new SVGNoStyleData(this, t, r));
          return "st" !== t.ty && "gs" !== t.ty || (s.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]), s.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]), s.setAttribute("fill-opacity", "0"), 1 === t.lj && s.setAttribute("stroke-miterlimit", t.ml)), 2 === t.r && s.setAttribute("fill-rule", "evenodd"), t.ln && s.setAttribute("id", t.ln), t.cl && s.setAttribute("class", t.cl), t.bm && (s.style["mix-blend-mode"] = getBlendMode(t.bm)), this.stylesList.push(r), this.addToAnimatedContents(t, i), i;
        }, SVGShapeElement.prototype.createGroupElement = function(t) {
          var e = new ShapeGroupData();
          return t.ln && e.gr.setAttribute("id", t.ln), t.cl && e.gr.setAttribute("class", t.cl), t.bm && (e.gr.style["mix-blend-mode"] = getBlendMode(t.bm)), e;
        }, SVGShapeElement.prototype.createTransformElement = function(t, e) {
          var i = TransformPropertyFactory.getTransformProperty(this, t, this), r = new SVGTransformData(i, i.o, e);
          return this.addToAnimatedContents(t, r), r;
        }, SVGShapeElement.prototype.createShapeElement = function(t, e, i) {
          var r = 4;
          "rc" === t.ty ? r = 5 : "el" === t.ty ? r = 6 : "sr" === t.ty && (r = 7);
          var s = new SVGShapeData(e, i, ShapePropertyFactory.getShapeProp(this, t, r, this));
          return this.shapes.push(s), this.addShapeToModifiers(s), this.addToAnimatedContents(t, s), s;
        }, SVGShapeElement.prototype.addToAnimatedContents = function(t, e) {
          for (var i = 0, r = this.animatedContents.length; i < r; ) {
            if (this.animatedContents[i].element === e)
              return;
            i += 1;
          }
          this.animatedContents.push({ fn: SVGElementsRenderer.createRenderFunction(t), element: e, data: t });
        }, SVGShapeElement.prototype.setElementStyles = function(t) {
          var e, i = t.styles, r = this.stylesList.length;
          for (e = 0; e < r; e += 1)
            this.stylesList[e].closed || i.push(this.stylesList[e]);
        }, SVGShapeElement.prototype.reloadShapes = function() {
          var t;
          this._isFirstFrame = true;
          var e = this.itemsData.length;
          for (t = 0; t < e; t += 1)
            this.prevViewData[t] = this.itemsData[t];
          for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true), this.filterUniqueShapes(), e = this.dynamicProperties.length, t = 0; t < e; t += 1)
            this.dynamicProperties[t].getValue();
          this.renderModifiers();
        }, SVGShapeElement.prototype.searchShapes = function(t, e, i, r, s, a, n) {
          var o, h, l, p, f, m, c = [].concat(a), d = t.length - 1, u = [], y = [];
          for (o = d; o >= 0; o -= 1) {
            if ((m = this.searchProcessedElement(t[o])) ? e[o] = i[m - 1] : t[o]._render = n, "fl" === t[o].ty || "st" === t[o].ty || "gf" === t[o].ty || "gs" === t[o].ty || "no" === t[o].ty)
              m ? e[o].style.closed = false : e[o] = this.createStyleElement(t[o], s), t[o]._render && e[o].style.pElem.parentNode !== r && r.appendChild(e[o].style.pElem), u.push(e[o].style);
            else if ("gr" === t[o].ty) {
              if (m)
                for (l = e[o].it.length, h = 0; h < l; h += 1)
                  e[o].prevViewData[h] = e[o].it[h];
              else
                e[o] = this.createGroupElement(t[o]);
              this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, s + 1, c, n), t[o]._render && e[o].gr.parentNode !== r && r.appendChild(e[o].gr);
            } else
              "tr" === t[o].ty ? (m || (e[o] = this.createTransformElement(t[o], r)), p = e[o].transform, c.push(p)) : "sh" === t[o].ty || "rc" === t[o].ty || "el" === t[o].ty || "sr" === t[o].ty ? (m || (e[o] = this.createShapeElement(t[o], c, s)), this.setElementStyles(e[o])) : "tm" === t[o].ty || "rd" === t[o].ty || "ms" === t[o].ty || "pb" === t[o].ty || "zz" === t[o].ty || "op" === t[o].ty ? (m ? (f = e[o]).closed = false : ((f = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]), e[o] = f, this.shapeModifiers.push(f)), y.push(f)) : "rp" === t[o].ty && (m ? (f = e[o]).closed = true : (f = ShapeModifiers.getModifier(t[o].ty), e[o] = f, f.init(this, t, o, e), this.shapeModifiers.push(f), n = false), y.push(f));
            this.addProcessedElement(t[o], o + 1);
          }
          for (d = u.length, o = 0; o < d; o += 1)
            u[o].closed = true;
          for (d = y.length, o = 0; o < d; o += 1)
            y[o].closed = true;
        }, SVGShapeElement.prototype.renderInnerContent = function() {
          var t;
          this.renderModifiers();
          var e = this.stylesList.length;
          for (t = 0; t < e; t += 1)
            this.stylesList[t].reset();
          for (this.renderShape(), t = 0; t < e; t += 1)
            (this.stylesList[t]._mdf || this._isFirstFrame) && (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute("d", this.stylesList[t].d), this.stylesList[t].d = "M0 0" + this.stylesList[t].d), this.stylesList[t].pElem.setAttribute("d", this.stylesList[t].d || "M0 0"));
        }, SVGShapeElement.prototype.renderShape = function() {
          var t, e, i = this.animatedContents.length;
          for (t = 0; t < i; t += 1)
            e = this.animatedContents[t], (this._isFirstFrame || e.element._isAnimated) && true !== e.data && e.fn(e.data, e.element, this._isFirstFrame);
        }, SVGShapeElement.prototype.destroy = function() {
          this.destroyBaseElement(), this.shapesData = null, this.itemsData = null;
        }, LetterProps.prototype.update = function(t, e, i, r, s, a) {
          this._mdf.o = false, this._mdf.sw = false, this._mdf.sc = false, this._mdf.fc = false, this._mdf.m = false, this._mdf.p = false;
          var n = false;
          return this.o !== t && (this.o = t, this._mdf.o = true, n = true), this.sw !== e && (this.sw = e, this._mdf.sw = true, n = true), this.sc !== i && (this.sc = i, this._mdf.sc = true, n = true), this.fc !== r && (this.fc = r, this._mdf.fc = true, n = true), this.m !== s && (this.m = s, this._mdf.m = true, n = true), !a.length || this.p[0] === a[0] && this.p[1] === a[1] && this.p[4] === a[4] && this.p[5] === a[5] && this.p[12] === a[12] && this.p[13] === a[13] || (this.p = a, this._mdf.p = true, n = true), n;
        }, TextProperty.prototype.defaultBoxWidth = [0, 0], TextProperty.prototype.copyData = function(t, e) {
          for (var i in e)
            Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
          return t;
        }, TextProperty.prototype.setCurrentData = function(t) {
          t.__complete || this.completeTextData(t), this.currentData = t, this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth, this._mdf = true;
        }, TextProperty.prototype.searchProperty = function() {
          return this.searchKeyframes();
        }, TextProperty.prototype.searchKeyframes = function() {
          return this.kf = this.data.d.k.length > 1, this.kf && this.addEffect(this.getKeyframeValue.bind(this)), this.kf;
        }, TextProperty.prototype.addEffect = function(t) {
          this.effectsSequence.push(t), this.elem.addDynamicProperty(this);
        }, TextProperty.prototype.getValue = function(t) {
          if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length || t) {
            this.currentData.t = this.data.d.k[this.keysIndex].s.t;
            var e = this.currentData, i = this.keysIndex;
            if (this.lock)
              this.setCurrentData(this.currentData);
            else {
              var r;
              this.lock = true, this._mdf = false;
              var s = this.effectsSequence.length, a = t || this.data.d.k[this.keysIndex].s;
              for (r = 0; r < s; r += 1)
                a = i !== this.keysIndex ? this.effectsSequence[r](a, a.t) : this.effectsSequence[r](this.currentData, a.t);
              e !== a && this.setCurrentData(a), this.v = this.currentData, this.pv = this.v, this.lock = false, this.frameId = this.elem.globalData.frameId;
            }
          }
        }, TextProperty.prototype.getKeyframeValue = function() {
          for (var t = this.data.d.k, e = this.elem.comp.renderedFrame, i = 0, r = t.length; i <= r - 1 && !(i === r - 1 || t[i + 1].t > e); )
            i += 1;
          return this.keysIndex !== i && (this.keysIndex = i), this.data.d.k[this.keysIndex].s;
        }, TextProperty.prototype.buildFinalText = function(t) {
          for (var e, i, r = [], s = 0, a = t.length, n = false, o = false, h = ""; s < a; )
            n = o, o = false, e = t.charCodeAt(s), h = t.charAt(s), FontManager.isCombinedCharacter(e) ? n = true : e >= 55296 && e <= 56319 ? FontManager.isRegionalFlag(t, s) ? h = t.substr(s, 14) : (i = t.charCodeAt(s + 1)) >= 56320 && i <= 57343 && (FontManager.isModifier(e, i) ? (h = t.substr(s, 2), n = true) : h = FontManager.isFlagEmoji(t.substr(s, 4)) ? t.substr(s, 4) : t.substr(s, 2)) : e > 56319 ? (i = t.charCodeAt(s + 1), FontManager.isVariationSelector(e) && (n = true)) : FontManager.isZeroWidthJoiner(e) && (n = true, o = true), n ? (r[r.length - 1] += h, n = false) : r.push(h), s += h.length;
          return r;
        }, TextProperty.prototype.completeTextData = function(t) {
          t.__complete = true;
          var e, i, r, s, a, n, o, h = this.elem.globalData.fontManager, l = this.data, p = [], f = 0, m = l.m.g, c = 0, d = 0, u = 0, y = [], g = 0, v = 0, b = h.getFontByName(t.f), x = 0, P = getFontProperties(b);
          t.fWeight = P.weight, t.fStyle = P.style, t.finalSize = t.s, t.finalText = this.buildFinalText(t.t), i = t.finalText.length, t.finalLineHeight = t.lh;
          var E, S = t.tr / 1e3 * t.finalSize;
          if (t.sz)
            for (var C, _, A = true, T = t.sz[0], M = t.sz[1]; A; ) {
              C = 0, g = 0, i = (_ = this.buildFinalText(t.t)).length, S = t.tr / 1e3 * t.finalSize;
              var k = -1;
              for (e = 0; e < i; e += 1)
                E = _[e].charCodeAt(0), r = false, " " === _[e] ? k = e : 13 !== E && 3 !== E || (g = 0, r = true, C += t.finalLineHeight || 1.2 * t.finalSize), h.chars ? (o = h.getCharData(_[e], b.fStyle, b.fFamily), x = r ? 0 : o.w * t.finalSize / 100) : x = h.measureText(_[e], t.f, t.finalSize), g + x > T && " " !== _[e] ? (-1 === k ? i += 1 : e = k, C += t.finalLineHeight || 1.2 * t.finalSize, _.splice(e, k === e ? 1 : 0, "\r"), k = -1, g = 0) : (g += x, g += S);
              C += b.ascent * t.finalSize / 100, this.canResize && t.finalSize > this.minimumFontSize && M < C ? (t.finalSize -= 1, t.finalLineHeight = t.finalSize * t.lh / t.s) : (t.finalText = _, i = t.finalText.length, A = false);
            }
          g = -S, x = 0;
          var D, F = 0;
          for (e = 0; e < i; e += 1)
            if (r = false, 13 === (E = (D = t.finalText[e]).charCodeAt(0)) || 3 === E ? (F = 0, y.push(g), v = g > v ? g : v, g = -2 * S, s = "", r = true, u += 1) : s = D, h.chars ? (o = h.getCharData(D, b.fStyle, h.getFontByName(t.f).fFamily), x = r ? 0 : o.w * t.finalSize / 100) : x = h.measureText(s, t.f, t.finalSize), " " === D ? F += x + S : (g += x + S + F, F = 0), p.push({ l: x, an: x, add: c, n: r, anIndexes: [], val: s, line: u, animatorJustifyOffset: 0 }), 2 == m) {
              if (c += x, "" === s || " " === s || e === i - 1) {
                for ("" !== s && " " !== s || (c -= x); d <= e; )
                  p[d].an = c, p[d].ind = f, p[d].extra = x, d += 1;
                f += 1, c = 0;
              }
            } else if (3 == m) {
              if (c += x, "" === s || e === i - 1) {
                for ("" === s && (c -= x); d <= e; )
                  p[d].an = c, p[d].ind = f, p[d].extra = x, d += 1;
                c = 0, f += 1;
              }
            } else
              p[f].ind = f, p[f].extra = 0, f += 1;
          if (t.l = p, v = g > v ? g : v, y.push(g), t.sz)
            t.boxWidth = t.sz[0], t.justifyOffset = 0;
          else
            switch (t.boxWidth = v, t.j) {
              case 1:
                t.justifyOffset = -t.boxWidth;
                break;
              case 2:
                t.justifyOffset = -t.boxWidth / 2;
                break;
              default:
                t.justifyOffset = 0;
            }
          t.lineWidths = y;
          var w, I, V, B, R = l.a;
          n = R.length;
          var L = [];
          for (a = 0; a < n; a += 1) {
            for ((w = R[a]).a.sc && (t.strokeColorAnim = true), w.a.sw && (t.strokeWidthAnim = true), (w.a.fc || w.a.fh || w.a.fs || w.a.fb) && (t.fillColorAnim = true), B = 0, V = w.s.b, e = 0; e < i; e += 1)
              (I = p[e]).anIndexes[a] = B, (1 == V && "" !== I.val || 2 == V && "" !== I.val && " " !== I.val || 3 == V && (I.n || " " == I.val || e == i - 1) || 4 == V && (I.n || e == i - 1)) && (1 === w.s.rn && L.push(B), B += 1);
            l.a[a].s.totalChars = B;
            var G, z = -1;
            if (1 === w.s.rn)
              for (e = 0; e < i; e += 1)
                z != (I = p[e]).anIndexes[a] && (z = I.anIndexes[a], G = L.splice(Math.floor(Math.random() * L.length), 1)[0]), I.anIndexes[a] = G;
          }
          t.yOffset = t.finalLineHeight || 1.2 * t.finalSize, t.ls = t.ls || 0, t.ascent = b.ascent * t.finalSize / 100;
        }, TextProperty.prototype.updateDocumentData = function(t, e) {
          e = void 0 === e ? this.keysIndex : e;
          var i = this.copyData({}, this.data.d.k[e].s);
          i = this.copyData(i, t), this.data.d.k[e].s = i, this.recalculate(e), this.setCurrentData(i), this.elem.addDynamicProperty(this);
        }, TextProperty.prototype.recalculate = function(t) {
          var e = this.data.d.k[t].s;
          e.__complete = false, this.keysIndex = 0, this._isFirstFrame = true, this.getValue(e);
        }, TextProperty.prototype.canResizeFont = function(t) {
          this.canResize = t, this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
        }, TextProperty.prototype.setMinimumFontSize = function(t) {
          this.minimumFontSize = Math.floor(t) || 1, this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
        };
        var TextSelectorProp = function() {
          var t = Math.max, e = Math.min, i = Math.floor;
          function r(t2, e2) {
            this._currentTextLength = -1, this.k = false, this.data = e2, this.elem = t2, this.comp = t2.comp, this.finalS = 0, this.finalE = 0, this.initDynamicPropertyContainer(t2), this.s = PropertyFactory.getProp(t2, e2.s || { k: 0 }, 0, 0, this), this.e = "e" in e2 ? PropertyFactory.getProp(t2, e2.e, 0, 0, this) : { v: 100 }, this.o = PropertyFactory.getProp(t2, e2.o || { k: 0 }, 0, 0, this), this.xe = PropertyFactory.getProp(t2, e2.xe || { k: 0 }, 0, 0, this), this.ne = PropertyFactory.getProp(t2, e2.ne || { k: 0 }, 0, 0, this), this.sm = PropertyFactory.getProp(t2, e2.sm || { k: 100 }, 0, 0, this), this.a = PropertyFactory.getProp(t2, e2.a, 0, 0.01, this), this.dynamicProperties.length || this.getValue();
          }
          return r.prototype = { getMult: function(r2) {
            this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
            var s = 0, a = 0, n = 1, o = 1;
            this.ne.v > 0 ? s = this.ne.v / 100 : a = -this.ne.v / 100, this.xe.v > 0 ? n = 1 - this.xe.v / 100 : o = 1 + this.xe.v / 100;
            var h = BezierFactory.getBezierEasing(s, a, n, o).get, l = 0, p = this.finalS, f = this.finalE, m = this.data.sh;
            if (2 === m)
              l = h(l = f === p ? r2 >= f ? 1 : 0 : t(0, e(0.5 / (f - p) + (r2 - p) / (f - p), 1)));
            else if (3 === m)
              l = h(l = f === p ? r2 >= f ? 0 : 1 : 1 - t(0, e(0.5 / (f - p) + (r2 - p) / (f - p), 1)));
            else if (4 === m)
              f === p ? l = 0 : (l = t(0, e(0.5 / (f - p) + (r2 - p) / (f - p), 1))) < 0.5 ? l *= 2 : l = 1 - 2 * (l - 0.5), l = h(l);
            else if (5 === m) {
              if (f === p)
                l = 0;
              else {
                var c = f - p, d = -c / 2 + (r2 = e(t(0, r2 + 0.5 - p), f - p)), u = c / 2;
                l = Math.sqrt(1 - d * d / (u * u));
              }
              l = h(l);
            } else
              6 === m ? (f === p ? l = 0 : (r2 = e(t(0, r2 + 0.5 - p), f - p), l = (1 + Math.cos(Math.PI + 2 * Math.PI * r2 / (f - p))) / 2), l = h(l)) : (r2 >= i(p) && (l = t(0, e(r2 - p < 0 ? e(f, 1) - (p - r2) : f - r2, 1))), l = h(l));
            if (100 !== this.sm.v) {
              var y = 0.01 * this.sm.v;
              0 === y && (y = 1e-8);
              var g = 0.5 - 0.5 * y;
              l < g ? l = 0 : (l = (l - g) / y) > 1 && (l = 1);
            }
            return l * this.a.v;
          }, getValue: function(t2) {
            this.iterateDynamicProperties(), this._mdf = t2 || this._mdf, this._currentTextLength = this.elem.textProperty.currentData.l.length || 0, t2 && 2 === this.data.r && (this.e.v = this._currentTextLength);
            var e2 = 2 === this.data.r ? 1 : 100 / this.data.totalChars, i2 = this.o.v / e2, r2 = this.s.v / e2 + i2, s = this.e.v / e2 + i2;
            if (r2 > s) {
              var a = r2;
              r2 = s, s = a;
            }
            this.finalS = r2, this.finalE = s;
          } }, extendPrototype([DynamicPropertyContainer], r), { getTextSelectorProp: function(t2, e2, i2) {
            return new r(t2, e2, i2);
          } };
        }();
        function TextAnimatorDataProperty(t, e, i) {
          var r = { propType: false }, s = PropertyFactory.getProp, a = e.a;
          this.a = { r: a.r ? s(t, a.r, 0, degToRads, i) : r, rx: a.rx ? s(t, a.rx, 0, degToRads, i) : r, ry: a.ry ? s(t, a.ry, 0, degToRads, i) : r, sk: a.sk ? s(t, a.sk, 0, degToRads, i) : r, sa: a.sa ? s(t, a.sa, 0, degToRads, i) : r, s: a.s ? s(t, a.s, 1, 0.01, i) : r, a: a.a ? s(t, a.a, 1, 0, i) : r, o: a.o ? s(t, a.o, 0, 0.01, i) : r, p: a.p ? s(t, a.p, 1, 0, i) : r, sw: a.sw ? s(t, a.sw, 0, 0, i) : r, sc: a.sc ? s(t, a.sc, 1, 0, i) : r, fc: a.fc ? s(t, a.fc, 1, 0, i) : r, fh: a.fh ? s(t, a.fh, 0, 0, i) : r, fs: a.fs ? s(t, a.fs, 0, 0.01, i) : r, fb: a.fb ? s(t, a.fb, 0, 0.01, i) : r, t: a.t ? s(t, a.t, 0, 0, i) : r }, this.s = TextSelectorProp.getTextSelectorProp(t, e.s, i), this.s.t = e.s.t;
        }
        function TextAnimatorProperty(t, e, i) {
          this._isFirstFrame = true, this._hasMaskedPath = false, this._frameId = -1, this._textData = t, this._renderType = e, this._elem = i, this._animatorsData = createSizedArray(this._textData.a.length), this._pathData = {}, this._moreOptions = { alignment: {} }, this.renderedLetters = [], this.lettersChangedFlag = false, this.initDynamicPropertyContainer(i);
        }
        function ITextElement() {
        }
        TextAnimatorProperty.prototype.searchProperties = function() {
          var t, e, i = this._textData.a.length, r = PropertyFactory.getProp;
          for (t = 0; t < i; t += 1)
            e = this._textData.a[t], this._animatorsData[t] = new TextAnimatorDataProperty(this._elem, e, this);
          this._textData.p && "m" in this._textData.p ? (this._pathData = { a: r(this._elem, this._textData.p.a, 0, 0, this), f: r(this._elem, this._textData.p.f, 0, 0, this), l: r(this._elem, this._textData.p.l, 0, 0, this), r: r(this._elem, this._textData.p.r, 0, 0, this), p: r(this._elem, this._textData.p.p, 0, 0, this), m: this._elem.maskManager.getMaskProperty(this._textData.p.m) }, this._hasMaskedPath = true) : this._hasMaskedPath = false, this._moreOptions.alignment = r(this._elem, this._textData.m.a, 1, 0, this);
        }, TextAnimatorProperty.prototype.getMeasures = function(t, e) {
          if (this.lettersChangedFlag = e, this._mdf || this._isFirstFrame || e || this._hasMaskedPath && this._pathData.m._mdf) {
            this._isFirstFrame = false;
            var i, r, s, a, n, o, h, l, p, f, m, c, d, u, y, g, v, b, x, P = this._moreOptions.alignment.v, E = this._animatorsData, S = this._textData, C = this.mHelper, _ = this._renderType, A = this.renderedLetters.length, T = t.l;
            if (this._hasMaskedPath) {
              if (x = this._pathData.m, !this._pathData.n || this._pathData._mdf) {
                var M, k = x.v;
                for (this._pathData.r.v && (k = k.reverse()), n = { tLength: 0, segments: [] }, a = k._length - 1, g = 0, s = 0; s < a; s += 1)
                  M = bez.buildBezierData(k.v[s], k.v[s + 1], [k.o[s][0] - k.v[s][0], k.o[s][1] - k.v[s][1]], [k.i[s + 1][0] - k.v[s + 1][0], k.i[s + 1][1] - k.v[s + 1][1]]), n.tLength += M.segmentLength, n.segments.push(M), g += M.segmentLength;
                s = a, x.v.c && (M = bez.buildBezierData(k.v[s], k.v[0], [k.o[s][0] - k.v[s][0], k.o[s][1] - k.v[s][1]], [k.i[0][0] - k.v[0][0], k.i[0][1] - k.v[0][1]]), n.tLength += M.segmentLength, n.segments.push(M), g += M.segmentLength), this._pathData.pi = n;
              }
              if (n = this._pathData.pi, o = this._pathData.f.v, m = 0, f = 1, l = 0, p = true, u = n.segments, o < 0 && x.v.c)
                for (n.tLength < Math.abs(o) && (o = -Math.abs(o) % n.tLength), f = (d = u[m = u.length - 1].points).length - 1; o < 0; )
                  o += d[f].partialLength, (f -= 1) < 0 && (f = (d = u[m -= 1].points).length - 1);
              c = (d = u[m].points)[f - 1], y = (h = d[f]).partialLength;
            }
            a = T.length, i = 0, r = 0;
            var D, F, w, I, V, B = 1.2 * t.finalSize * 0.714, R = true;
            w = E.length;
            var L, G, z, O, N, H, q, j, W, $2, Y, J, X = -1, Z = o, K = m, U = f, Q = -1, tt = "", et = this.defaultPropsArray;
            if (2 === t.j || 1 === t.j) {
              var it = 0, rt = 0, st = 2 === t.j ? -0.5 : -1, at = 0, nt = true;
              for (s = 0; s < a; s += 1)
                if (T[s].n) {
                  for (it && (it += rt); at < s; )
                    T[at].animatorJustifyOffset = it, at += 1;
                  it = 0, nt = true;
                } else {
                  for (F = 0; F < w; F += 1)
                    (D = E[F].a).t.propType && (nt && 2 === t.j && (rt += D.t.v * st), (V = E[F].s.getMult(T[s].anIndexes[F], S.a[F].s.totalChars)).length ? it += D.t.v * V[0] * st : it += D.t.v * V * st);
                  nt = false;
                }
              for (it && (it += rt); at < s; )
                T[at].animatorJustifyOffset = it, at += 1;
            }
            for (s = 0; s < a; s += 1) {
              if (C.reset(), O = 1, T[s].n)
                i = 0, r += t.yOffset, r += R ? 1 : 0, o = Z, R = false, this._hasMaskedPath && (f = U, c = (d = u[m = K].points)[f - 1], y = (h = d[f]).partialLength, l = 0), tt = "", Y = "", W = "", J = "", et = this.defaultPropsArray;
              else {
                if (this._hasMaskedPath) {
                  if (Q !== T[s].line) {
                    switch (t.j) {
                      case 1:
                        o += g - t.lineWidths[T[s].line];
                        break;
                      case 2:
                        o += (g - t.lineWidths[T[s].line]) / 2;
                    }
                    Q = T[s].line;
                  }
                  X !== T[s].ind && (T[X] && (o += T[X].extra), o += T[s].an / 2, X = T[s].ind), o += P[0] * T[s].an * 5e-3;
                  var ot = 0;
                  for (F = 0; F < w; F += 1)
                    (D = E[F].a).p.propType && ((V = E[F].s.getMult(T[s].anIndexes[F], S.a[F].s.totalChars)).length ? ot += D.p.v[0] * V[0] : ot += D.p.v[0] * V), D.a.propType && ((V = E[F].s.getMult(T[s].anIndexes[F], S.a[F].s.totalChars)).length ? ot += D.a.v[0] * V[0] : ot += D.a.v[0] * V);
                  for (p = true, this._pathData.a.v && (o = 0.5 * T[0].an + (g - this._pathData.f.v - 0.5 * T[0].an - 0.5 * T[T.length - 1].an) * X / (a - 1), o += this._pathData.f.v); p; )
                    l + y >= o + ot || !d ? (v = (o + ot - l) / h.partialLength, G = c.point[0] + (h.point[0] - c.point[0]) * v, z = c.point[1] + (h.point[1] - c.point[1]) * v, C.translate(-P[0] * T[s].an * 5e-3, -P[1] * B * 0.01), p = false) : d && (l += h.partialLength, (f += 1) >= d.length && (f = 0, u[m += 1] ? d = u[m].points : x.v.c ? (f = 0, d = u[m = 0].points) : (l -= h.partialLength, d = null)), d && (c = h, y = (h = d[f]).partialLength));
                  L = T[s].an / 2 - T[s].add, C.translate(-L, 0, 0);
                } else
                  L = T[s].an / 2 - T[s].add, C.translate(-L, 0, 0), C.translate(-P[0] * T[s].an * 5e-3, -P[1] * B * 0.01, 0);
                for (F = 0; F < w; F += 1)
                  (D = E[F].a).t.propType && (V = E[F].s.getMult(T[s].anIndexes[F], S.a[F].s.totalChars), 0 === i && 0 === t.j || (this._hasMaskedPath ? V.length ? o += D.t.v * V[0] : o += D.t.v * V : V.length ? i += D.t.v * V[0] : i += D.t.v * V));
                for (t.strokeWidthAnim && (H = t.sw || 0), t.strokeColorAnim && (N = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]), t.fillColorAnim && t.fc && (q = [t.fc[0], t.fc[1], t.fc[2]]), F = 0; F < w; F += 1)
                  (D = E[F].a).a.propType && ((V = E[F].s.getMult(T[s].anIndexes[F], S.a[F].s.totalChars)).length ? C.translate(-D.a.v[0] * V[0], -D.a.v[1] * V[1], D.a.v[2] * V[2]) : C.translate(-D.a.v[0] * V, -D.a.v[1] * V, D.a.v[2] * V));
                for (F = 0; F < w; F += 1)
                  (D = E[F].a).s.propType && ((V = E[F].s.getMult(T[s].anIndexes[F], S.a[F].s.totalChars)).length ? C.scale(1 + (D.s.v[0] - 1) * V[0], 1 + (D.s.v[1] - 1) * V[1], 1) : C.scale(1 + (D.s.v[0] - 1) * V, 1 + (D.s.v[1] - 1) * V, 1));
                for (F = 0; F < w; F += 1) {
                  if (D = E[F].a, V = E[F].s.getMult(T[s].anIndexes[F], S.a[F].s.totalChars), D.sk.propType && (V.length ? C.skewFromAxis(-D.sk.v * V[0], D.sa.v * V[1]) : C.skewFromAxis(-D.sk.v * V, D.sa.v * V)), D.r.propType && (V.length ? C.rotateZ(-D.r.v * V[2]) : C.rotateZ(-D.r.v * V)), D.ry.propType && (V.length ? C.rotateY(D.ry.v * V[1]) : C.rotateY(D.ry.v * V)), D.rx.propType && (V.length ? C.rotateX(D.rx.v * V[0]) : C.rotateX(D.rx.v * V)), D.o.propType && (V.length ? O += (D.o.v * V[0] - O) * V[0] : O += (D.o.v * V - O) * V), t.strokeWidthAnim && D.sw.propType && (V.length ? H += D.sw.v * V[0] : H += D.sw.v * V), t.strokeColorAnim && D.sc.propType)
                    for (j = 0; j < 3; j += 1)
                      V.length ? N[j] += (D.sc.v[j] - N[j]) * V[0] : N[j] += (D.sc.v[j] - N[j]) * V;
                  if (t.fillColorAnim && t.fc) {
                    if (D.fc.propType)
                      for (j = 0; j < 3; j += 1)
                        V.length ? q[j] += (D.fc.v[j] - q[j]) * V[0] : q[j] += (D.fc.v[j] - q[j]) * V;
                    D.fh.propType && (q = V.length ? addHueToRGB(q, D.fh.v * V[0]) : addHueToRGB(q, D.fh.v * V)), D.fs.propType && (q = V.length ? addSaturationToRGB(q, D.fs.v * V[0]) : addSaturationToRGB(q, D.fs.v * V)), D.fb.propType && (q = V.length ? addBrightnessToRGB(q, D.fb.v * V[0]) : addBrightnessToRGB(q, D.fb.v * V));
                  }
                }
                for (F = 0; F < w; F += 1)
                  (D = E[F].a).p.propType && (V = E[F].s.getMult(T[s].anIndexes[F], S.a[F].s.totalChars), this._hasMaskedPath ? V.length ? C.translate(0, D.p.v[1] * V[0], -D.p.v[2] * V[1]) : C.translate(0, D.p.v[1] * V, -D.p.v[2] * V) : V.length ? C.translate(D.p.v[0] * V[0], D.p.v[1] * V[1], -D.p.v[2] * V[2]) : C.translate(D.p.v[0] * V, D.p.v[1] * V, -D.p.v[2] * V));
                if (t.strokeWidthAnim && (W = H < 0 ? 0 : H), t.strokeColorAnim && ($2 = "rgb(" + Math.round(255 * N[0]) + "," + Math.round(255 * N[1]) + "," + Math.round(255 * N[2]) + ")"), t.fillColorAnim && t.fc && (Y = "rgb(" + Math.round(255 * q[0]) + "," + Math.round(255 * q[1]) + "," + Math.round(255 * q[2]) + ")"), this._hasMaskedPath) {
                  if (C.translate(0, -t.ls), C.translate(0, P[1] * B * 0.01 + r, 0), this._pathData.p.v) {
                    b = (h.point[1] - c.point[1]) / (h.point[0] - c.point[0]);
                    var ht = 180 * Math.atan(b) / Math.PI;
                    h.point[0] < c.point[0] && (ht += 180), C.rotate(-ht * Math.PI / 180);
                  }
                  C.translate(G, z, 0), o -= P[0] * T[s].an * 5e-3, T[s + 1] && X !== T[s + 1].ind && (o += T[s].an / 2, o += 1e-3 * t.tr * t.finalSize);
                } else {
                  switch (C.translate(i, r, 0), t.ps && C.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j) {
                    case 1:
                      C.translate(T[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[T[s].line]), 0, 0);
                      break;
                    case 2:
                      C.translate(T[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[T[s].line]) / 2, 0, 0);
                  }
                  C.translate(0, -t.ls), C.translate(L, 0, 0), C.translate(P[0] * T[s].an * 5e-3, P[1] * B * 0.01, 0), i += T[s].l + 1e-3 * t.tr * t.finalSize;
                }
                "html" === _ ? tt = C.toCSS() : "svg" === _ ? tt = C.to2dCSS() : et = [C.props[0], C.props[1], C.props[2], C.props[3], C.props[4], C.props[5], C.props[6], C.props[7], C.props[8], C.props[9], C.props[10], C.props[11], C.props[12], C.props[13], C.props[14], C.props[15]], J = O;
              }
              A <= s ? (I = new LetterProps(J, W, $2, Y, tt, et), this.renderedLetters.push(I), A += 1, this.lettersChangedFlag = true) : (I = this.renderedLetters[s], this.lettersChangedFlag = I.update(J, W, $2, Y, tt, et) || this.lettersChangedFlag);
            }
          }
        }, TextAnimatorProperty.prototype.getValue = function() {
          this._elem.globalData.frameId !== this._frameId && (this._frameId = this._elem.globalData.frameId, this.iterateDynamicProperties());
        }, TextAnimatorProperty.prototype.mHelper = new Matrix(), TextAnimatorProperty.prototype.defaultPropsArray = [], extendPrototype([DynamicPropertyContainer], TextAnimatorProperty), ITextElement.prototype.initElement = function(t, e, i) {
          this.lettersChangedFlag = true, this.initFrame(), this.initBaseData(t, e, i), this.textProperty = new TextProperty(this, t.t, this.dynamicProperties), this.textAnimator = new TextAnimatorProperty(t.t, this.renderType, this), this.initTransform(t, e, i), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide(), this.textAnimator.searchProperties(this.dynamicProperties);
        }, ITextElement.prototype.prepareFrame = function(t) {
          this._mdf = false, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange);
        }, ITextElement.prototype.createPathShape = function(t, e) {
          var i, r, s = e.length, a = "";
          for (i = 0; i < s; i += 1)
            "sh" === e[i].ty && (r = e[i].ks.k, a += buildShapeString(r, r.i.length, true, t));
          return a;
        }, ITextElement.prototype.updateDocumentData = function(t, e) {
          this.textProperty.updateDocumentData(t, e);
        }, ITextElement.prototype.canResizeFont = function(t) {
          this.textProperty.canResizeFont(t);
        }, ITextElement.prototype.setMinimumFontSize = function(t) {
          this.textProperty.setMinimumFontSize(t);
        }, ITextElement.prototype.applyTextPropertiesToMatrix = function(t, e, i, r, s) {
          switch (t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0), e.translate(0, -t.ls, 0), t.j) {
            case 1:
              e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[i]), 0, 0);
              break;
            case 2:
              e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[i]) / 2, 0, 0);
          }
          e.translate(r, s, 0);
        }, ITextElement.prototype.buildColor = function(t) {
          return "rgb(" + Math.round(255 * t[0]) + "," + Math.round(255 * t[1]) + "," + Math.round(255 * t[2]) + ")";
        }, ITextElement.prototype.emptyProp = new LetterProps(), ITextElement.prototype.destroy = function() {
        }, ITextElement.prototype.validateText = function() {
          (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(), this.textProperty._isFirstFrame = false, this.textProperty._mdf = false);
        };
        var emptyShapeData = { shapes: [] };
        function SVGTextLottieElement(t, e, i) {
          this.textSpans = [], this.renderType = "svg", this.initElement(t, e, i);
        }
        function ISolidElement(t, e, i) {
          this.initElement(t, e, i);
        }
        function NullElement(t, e, i) {
          this.initFrame(), this.initBaseData(t, e, i), this.initFrame(), this.initTransform(t, e, i), this.initHierarchy();
        }
        function SVGRendererBase() {
        }
        function ICompElement() {
        }
        function SVGCompElement(t, e, i) {
          this.layers = t.layers, this.supports3d = true, this.completeLayers = false, this.pendingElements = [], this.elements = this.layers ? createSizedArray(this.layers.length) : [], this.initElement(t, e, i), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: true };
        }
        function SVGRenderer(t, e) {
          this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.svgElement = createNS("svg");
          var i = "";
          if (e && e.title) {
            var r = createNS("title"), s = createElementID();
            r.setAttribute("id", s), r.textContent = e.title, this.svgElement.appendChild(r), i += s;
          }
          if (e && e.description) {
            var a = createNS("desc"), n = createElementID();
            a.setAttribute("id", n), a.textContent = e.description, this.svgElement.appendChild(a), i += " " + n;
          }
          i && this.svgElement.setAttribute("aria-labelledby", i);
          var o = createNS("defs");
          this.svgElement.appendChild(o);
          var h = createNS("g");
          this.svgElement.appendChild(h), this.layerElement = h, this.renderConfig = { preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet", imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice", contentVisibility: e && e.contentVisibility || "visible", progressiveLoad: e && e.progressiveLoad || false, hideOnTransparent: !(e && false === e.hideOnTransparent), viewBoxOnly: e && e.viewBoxOnly || false, viewBoxSize: e && e.viewBoxSize || false, className: e && e.className || "", id: e && e.id || "", focusable: e && e.focusable, filterSize: { width: e && e.filterSize && e.filterSize.width || "100%", height: e && e.filterSize && e.filterSize.height || "100%", x: e && e.filterSize && e.filterSize.x || "0%", y: e && e.filterSize && e.filterSize.y || "0%" }, width: e && e.width, height: e && e.height, runExpressions: !e || void 0 === e.runExpressions || e.runExpressions }, this.globalData = { _mdf: false, frameNum: -1, defs: o, renderConfig: this.renderConfig }, this.elements = [], this.pendingElements = [], this.destroyed = false, this.rendererType = "svg";
        }
        function ShapeTransformManager() {
          this.sequences = {}, this.sequenceList = [], this.transform_key_count = 0;
        }
        extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement), SVGTextLottieElement.prototype.createContent = function() {
          this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"));
        }, SVGTextLottieElement.prototype.buildTextContents = function(t) {
          for (var e = 0, i = t.length, r = [], s = ""; e < i; )
            t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (r.push(s), s = "") : s += t[e], e += 1;
          return r.push(s), r;
        }, SVGTextLottieElement.prototype.buildShapeData = function(t, e) {
          if (t.shapes && t.shapes.length) {
            var i = t.shapes[0];
            if (i.it) {
              var r = i.it[i.it.length - 1];
              r.s && (r.s.k[0] = e, r.s.k[1] = e);
            }
          }
          return t;
        }, SVGTextLottieElement.prototype.buildNewText = function() {
          var t, e;
          this.addDynamicProperty(this);
          var i = this.textProperty.currentData;
          this.renderedLetters = createSizedArray(i ? i.l.length : 0), i.fc ? this.layerElement.setAttribute("fill", this.buildColor(i.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"), i.sc && (this.layerElement.setAttribute("stroke", this.buildColor(i.sc)), this.layerElement.setAttribute("stroke-width", i.sw)), this.layerElement.setAttribute("font-size", i.finalSize);
          var r = this.globalData.fontManager.getFontByName(i.f);
          if (r.fClass)
            this.layerElement.setAttribute("class", r.fClass);
          else {
            this.layerElement.setAttribute("font-family", r.fFamily);
            var s = i.fWeight, a = i.fStyle;
            this.layerElement.setAttribute("font-style", a), this.layerElement.setAttribute("font-weight", s);
          }
          this.layerElement.setAttribute("aria-label", i.t);
          var n, o = i.l || [], h = !!this.globalData.fontManager.chars;
          e = o.length;
          var l = this.mHelper, p = this.data.singleShape, f = 0, m = 0, c = true, d = 1e-3 * i.tr * i.finalSize;
          if (!p || h || i.sz) {
            var u, y = this.textSpans.length;
            for (t = 0; t < e; t += 1) {
              if (this.textSpans[t] || (this.textSpans[t] = { span: null, childSpan: null, glyph: null }), !h || !p || 0 === t) {
                if (n = y > t ? this.textSpans[t].span : createNS(h ? "g" : "text"), y <= t) {
                  if (n.setAttribute("stroke-linecap", "butt"), n.setAttribute("stroke-linejoin", "round"), n.setAttribute("stroke-miterlimit", "4"), this.textSpans[t].span = n, h) {
                    var g = createNS("g");
                    n.appendChild(g), this.textSpans[t].childSpan = g;
                  }
                  this.textSpans[t].span = n, this.layerElement.appendChild(n);
                }
                n.style.display = "inherit";
              }
              if (l.reset(), p && (o[t].n && (f = -d, m += i.yOffset, m += c ? 1 : 0, c = false), this.applyTextPropertiesToMatrix(i, l, o[t].line, f, m), f += o[t].l || 0, f += d), h) {
                var v;
                if (1 === (u = this.globalData.fontManager.getCharData(i.finalText[t], r.fStyle, this.globalData.fontManager.getFontByName(i.f).fFamily)).t)
                  v = new SVGCompElement(u.data, this.globalData, this);
                else {
                  var b = emptyShapeData;
                  u.data && u.data.shapes && (b = this.buildShapeData(u.data, i.finalSize)), v = new SVGShapeElement(b, this.globalData, this);
                }
                if (this.textSpans[t].glyph) {
                  var x = this.textSpans[t].glyph;
                  this.textSpans[t].childSpan.removeChild(x.layerElement), x.destroy();
                }
                this.textSpans[t].glyph = v, v._debug = true, v.prepareFrame(0), v.renderFrame(), this.textSpans[t].childSpan.appendChild(v.layerElement), 1 === u.t && this.textSpans[t].childSpan.setAttribute("transform", "scale(" + i.finalSize / 100 + "," + i.finalSize / 100 + ")");
              } else
                p && n.setAttribute("transform", "translate(" + l.props[12] + "," + l.props[13] + ")"), n.textContent = o[t].val, n.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
            }
            p && n && n.setAttribute("d", "");
          } else {
            var P = this.textContainer, E = "start";
            switch (i.j) {
              case 1:
                E = "end";
                break;
              case 2:
                E = "middle";
                break;
              default:
                E = "start";
            }
            P.setAttribute("text-anchor", E), P.setAttribute("letter-spacing", d);
            var S = this.buildTextContents(i.finalText);
            for (e = S.length, m = i.ps ? i.ps[1] + i.ascent : 0, t = 0; t < e; t += 1)
              (n = this.textSpans[t].span || createNS("tspan")).textContent = S[t], n.setAttribute("x", 0), n.setAttribute("y", m), n.style.display = "inherit", P.appendChild(n), this.textSpans[t] || (this.textSpans[t] = { span: null, glyph: null }), this.textSpans[t].span = n, m += i.finalLineHeight;
            this.layerElement.appendChild(P);
          }
          for (; t < this.textSpans.length; )
            this.textSpans[t].span.style.display = "none", t += 1;
          this._sizeChanged = true;
        }, SVGTextLottieElement.prototype.sourceRectAtTime = function() {
          if (this.prepareFrame(this.comp.renderedFrame - this.data.st), this.renderInnerContent(), this._sizeChanged) {
            this._sizeChanged = false;
            var t = this.layerElement.getBBox();
            this.bbox = { top: t.y, left: t.x, width: t.width, height: t.height };
          }
          return this.bbox;
        }, SVGTextLottieElement.prototype.getValue = function() {
          var t, e, i = this.textSpans.length;
          for (this.renderedFrame = this.comp.renderedFrame, t = 0; t < i; t += 1)
            (e = this.textSpans[t].glyph) && (e.prepareFrame(this.comp.renderedFrame - this.data.st), e._mdf && (this._mdf = true));
        }, SVGTextLottieElement.prototype.renderInnerContent = function() {
          if (this.validateText(), (!this.data.singleShape || this._mdf) && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
            var t, e;
            this._sizeChanged = true;
            var i, r, s, a = this.textAnimator.renderedLetters, n = this.textProperty.currentData.l;
            for (e = n.length, t = 0; t < e; t += 1)
              n[t].n || (i = a[t], r = this.textSpans[t].span, (s = this.textSpans[t].glyph) && s.renderFrame(), i._mdf.m && r.setAttribute("transform", i.m), i._mdf.o && r.setAttribute("opacity", i.o), i._mdf.sw && r.setAttribute("stroke-width", i.sw), i._mdf.sc && r.setAttribute("stroke", i.sc), i._mdf.fc && r.setAttribute("fill", i.fc));
          }
        }, extendPrototype([IImageElement], ISolidElement), ISolidElement.prototype.createContent = function() {
          var t = createNS("rect");
          t.setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.layerElement.appendChild(t);
        }, NullElement.prototype.prepareFrame = function(t) {
          this.prepareProperties(t, true);
        }, NullElement.prototype.renderFrame = function() {
        }, NullElement.prototype.getBaseElement = function() {
          return null;
        }, NullElement.prototype.destroy = function() {
        }, NullElement.prototype.sourceRectAtTime = function() {
        }, NullElement.prototype.hide = function() {
        }, extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement), extendPrototype([BaseRenderer], SVGRendererBase), SVGRendererBase.prototype.createNull = function(t) {
          return new NullElement(t, this.globalData, this);
        }, SVGRendererBase.prototype.createShape = function(t) {
          return new SVGShapeElement(t, this.globalData, this);
        }, SVGRendererBase.prototype.createText = function(t) {
          return new SVGTextLottieElement(t, this.globalData, this);
        }, SVGRendererBase.prototype.createImage = function(t) {
          return new IImageElement(t, this.globalData, this);
        }, SVGRendererBase.prototype.createSolid = function(t) {
          return new ISolidElement(t, this.globalData, this);
        }, SVGRendererBase.prototype.configAnimation = function(t) {
          this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"), this.svgElement.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"), this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h), this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute("width", t.w), this.svgElement.setAttribute("height", t.h), this.svgElement.style.width = "100%", this.svgElement.style.height = "100%", this.svgElement.style.transform = "translate3d(0,0,0)", this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility), this.renderConfig.width && this.svgElement.setAttribute("width", this.renderConfig.width), this.renderConfig.height && this.svgElement.setAttribute("height", this.renderConfig.height), this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className), this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id), void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable), this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio), this.animationItem.wrapper.appendChild(this.svgElement);
          var e = this.globalData.defs;
          this.setupGlobalData(t, e), this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.data = t;
          var i = createNS("clipPath"), r = createNS("rect");
          r.setAttribute("width", t.w), r.setAttribute("height", t.h), r.setAttribute("x", 0), r.setAttribute("y", 0);
          var s = createElementID();
          i.setAttribute("id", s), i.appendChild(r), this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")"), e.appendChild(i), this.layers = t.layers, this.elements = createSizedArray(t.layers.length);
        }, SVGRendererBase.prototype.destroy = function() {
          var t;
          this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), this.layerElement = null, this.globalData.defs = null;
          var e = this.layers ? this.layers.length : 0;
          for (t = 0; t < e; t += 1)
            this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
          this.elements.length = 0, this.destroyed = true, this.animationItem = null;
        }, SVGRendererBase.prototype.updateContainerSize = function() {
        }, SVGRendererBase.prototype.findIndexByInd = function(t) {
          var e = 0, i = this.layers.length;
          for (e = 0; e < i; e += 1)
            if (this.layers[e].ind === t)
              return e;
          return -1;
        }, SVGRendererBase.prototype.buildItem = function(t) {
          var e = this.elements;
          if (!e[t] && 99 !== this.layers[t].ty) {
            e[t] = true;
            var i = this.createItem(this.layers[t]);
            if (e[t] = i, getExpressionsPlugin() && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(i), i.initExpressions()), this.appendElementInPos(i, t), this.layers[t].tt) {
              var r = "tp" in this.layers[t] ? this.findIndexByInd(this.layers[t].tp) : t - 1;
              if (-1 === r)
                return;
              if (this.elements[r] && true !== this.elements[r]) {
                var s = e[r].getMatte(this.layers[t].tt);
                i.setMatte(s);
              } else
                this.buildItem(r), this.addPendingElement(i);
            }
          }
        }, SVGRendererBase.prototype.checkPendingElements = function() {
          for (; this.pendingElements.length; ) {
            var t = this.pendingElements.pop();
            if (t.checkParenting(), t.data.tt)
              for (var e = 0, i = this.elements.length; e < i; ) {
                if (this.elements[e] === t) {
                  var r = "tp" in t.data ? this.findIndexByInd(t.data.tp) : e - 1, s = this.elements[r].getMatte(this.layers[e].tt);
                  t.setMatte(s);
                  break;
                }
                e += 1;
              }
          }
        }, SVGRendererBase.prototype.renderFrame = function(t) {
          if (this.renderedFrame !== t && !this.destroyed) {
            var e;
            null === t ? t = this.renderedFrame : this.renderedFrame = t, this.globalData.frameNum = t, this.globalData.frameId += 1, this.globalData.projectInterface.currentFrame = t, this.globalData._mdf = false;
            var i = this.layers.length;
            for (this.completeLayers || this.checkLayers(t), e = i - 1; e >= 0; e -= 1)
              (this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
            if (this.globalData._mdf)
              for (e = 0; e < i; e += 1)
                (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();
          }
        }, SVGRendererBase.prototype.appendElementInPos = function(t, e) {
          var i = t.getBaseElement();
          if (i) {
            for (var r, s = 0; s < e; )
              this.elements[s] && true !== this.elements[s] && this.elements[s].getBaseElement() && (r = this.elements[s].getBaseElement()), s += 1;
            r ? this.layerElement.insertBefore(i, r) : this.layerElement.appendChild(i);
          }
        }, SVGRendererBase.prototype.hide = function() {
          this.layerElement.style.display = "none";
        }, SVGRendererBase.prototype.show = function() {
          this.layerElement.style.display = "block";
        }, extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement), ICompElement.prototype.initElement = function(t, e, i) {
          this.initFrame(), this.initBaseData(t, e, i), this.initTransform(t, e, i), this.initRenderable(), this.initHierarchy(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), !this.data.xt && e.progressiveLoad || this.buildAllItems(), this.hide();
        }, ICompElement.prototype.prepareFrame = function(t) {
          if (this._mdf = false, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.isInRange || this.data.xt) {
            if (this.tm._placeholder)
              this.renderedFrame = t / this.data.sr;
            else {
              var e = this.tm.v;
              e === this.data.op && (e = this.data.op - 1), this.renderedFrame = e;
            }
            var i, r = this.elements.length;
            for (this.completeLayers || this.checkLayers(this.renderedFrame), i = r - 1; i >= 0; i -= 1)
              (this.completeLayers || this.elements[i]) && (this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st), this.elements[i]._mdf && (this._mdf = true));
          }
        }, ICompElement.prototype.renderInnerContent = function() {
          var t, e = this.layers.length;
          for (t = 0; t < e; t += 1)
            (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
        }, ICompElement.prototype.setElements = function(t) {
          this.elements = t;
        }, ICompElement.prototype.getElements = function() {
          return this.elements;
        }, ICompElement.prototype.destroyElements = function() {
          var t, e = this.layers.length;
          for (t = 0; t < e; t += 1)
            this.elements[t] && this.elements[t].destroy();
        }, ICompElement.prototype.destroy = function() {
          this.destroyElements(), this.destroyBaseElement();
        }, extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement), SVGCompElement.prototype.createComp = function(t) {
          return new SVGCompElement(t, this.globalData, this);
        }, extendPrototype([SVGRendererBase], SVGRenderer), SVGRenderer.prototype.createComp = function(t) {
          return new SVGCompElement(t, this.globalData, this);
        }, ShapeTransformManager.prototype = { addTransformSequence: function(t) {
          var e, i = t.length, r = "_";
          for (e = 0; e < i; e += 1)
            r += t[e].transform.key + "_";
          var s = this.sequences[r];
          return s || (s = { transforms: [].concat(t), finalTransform: new Matrix(), _mdf: false }, this.sequences[r] = s, this.sequenceList.push(s)), s;
        }, processSequence: function(t, e) {
          for (var i = 0, r = t.transforms.length, s = e; i < r && !e; ) {
            if (t.transforms[i].transform.mProps._mdf) {
              s = true;
              break;
            }
            i += 1;
          }
          if (s)
            for (t.finalTransform.reset(), i = r - 1; i >= 0; i -= 1)
              t.finalTransform.multiply(t.transforms[i].transform.mProps.v);
          t._mdf = s;
        }, processSequences: function(t) {
          var e, i = this.sequenceList.length;
          for (e = 0; e < i; e += 1)
            this.processSequence(this.sequenceList[e], t);
        }, getNewKey: function() {
          return this.transform_key_count += 1, "_" + this.transform_key_count;
        } };
        var lumaLoader = function() {
          var t = "__lottie_element_luma_buffer", e = null, i = null, r = null;
          function s() {
            var s2, a, n;
            e || (s2 = createNS("svg"), a = createNS("filter"), n = createNS("feColorMatrix"), a.setAttribute("id", t), n.setAttribute("type", "matrix"), n.setAttribute("color-interpolation-filters", "sRGB"), n.setAttribute("values", "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"), a.appendChild(n), s2.appendChild(a), s2.setAttribute("id", t + "_svg"), featureSupport.svgLumaHidden && (s2.style.display = "none"), r = s2, document.body.appendChild(r), e = createTag("canvas"), (i = e.getContext("2d")).filter = "url(#" + t + ")", i.fillStyle = "rgba(0,0,0,0)", i.fillRect(0, 0, 1, 1));
          }
          return { load: s, get: function(r2) {
            return e || s(), e.width = r2.width, e.height = r2.height, i.filter = "url(#" + t + ")", e;
          } };
        };
        function createCanvas(t, e) {
          if (featureSupport.offscreenCanvas)
            return new OffscreenCanvas(t, e);
          var i = createTag("canvas");
          return i.width = t, i.height = e, i;
        }
        var assetLoader = { loadLumaCanvas: lumaLoader.load, getLumaCanvas: lumaLoader.get, createCanvas }, registeredEffects = {};
        function CVEffects(t) {
          var e, i, r = t.data.ef ? t.data.ef.length : 0;
          for (this.filters = [], e = 0; e < r; e += 1) {
            i = null;
            var s = t.data.ef[e].ty;
            if (registeredEffects[s])
              i = new (0, registeredEffects[s].effect)(t.effectsManager.effectElements[e], t);
            i && this.filters.push(i);
          }
          this.filters.length && t.addRenderableComponent(this);
        }
        function registerEffect(t, e) {
          registeredEffects[t] = { effect: e };
        }
        function CVMaskElement(t, e) {
          var i;
          this.data = t, this.element = e, this.masksProperties = this.data.masksProperties || [], this.viewData = createSizedArray(this.masksProperties.length);
          var r = this.masksProperties.length, s = false;
          for (i = 0; i < r; i += 1)
            "n" !== this.masksProperties[i].mode && (s = true), this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);
          this.hasMasks = s, s && this.element.addRenderableComponent(this);
        }
        function CVBaseElement() {
        }
        CVEffects.prototype.renderFrame = function(t) {
          var e, i = this.filters.length;
          for (e = 0; e < i; e += 1)
            this.filters[e].renderFrame(t);
        }, CVEffects.prototype.getEffects = function(t) {
          var e, i = this.filters.length, r = [];
          for (e = 0; e < i; e += 1)
            this.filters[e].type === t && r.push(this.filters[e]);
          return r;
        }, CVMaskElement.prototype.renderFrame = function() {
          if (this.hasMasks) {
            var t, e, i, r, s = this.element.finalTransform.mat, a = this.element.canvasContext, n = this.masksProperties.length;
            for (a.beginPath(), t = 0; t < n; t += 1)
              if ("n" !== this.masksProperties[t].mode) {
                var o;
                this.masksProperties[t].inv && (a.moveTo(0, 0), a.lineTo(this.element.globalData.compSize.w, 0), a.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h), a.lineTo(0, this.element.globalData.compSize.h), a.lineTo(0, 0)), r = this.viewData[t].v, e = s.applyToPointArray(r.v[0][0], r.v[0][1], 0), a.moveTo(e[0], e[1]);
                var h = r._length;
                for (o = 1; o < h; o += 1)
                  i = s.applyToTriplePoints(r.o[o - 1], r.i[o], r.v[o]), a.bezierCurveTo(i[0], i[1], i[2], i[3], i[4], i[5]);
                i = s.applyToTriplePoints(r.o[o - 1], r.i[0], r.v[0]), a.bezierCurveTo(i[0], i[1], i[2], i[3], i[4], i[5]);
              }
            this.element.globalData.renderer.save(true), a.clip();
          }
        }, CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty, CVMaskElement.prototype.destroy = function() {
          this.element = null;
        };
        var operationsMap = { 1: "source-in", 2: "source-out", 3: "source-in", 4: "source-out" };
        function CVShapeData(t, e, i, r) {
          this.styledShapes = [], this.tr = [0, 0, 0, 0, 0, 0];
          var s, a = 4;
          "rc" === e.ty ? a = 5 : "el" === e.ty ? a = 6 : "sr" === e.ty && (a = 7), this.sh = ShapePropertyFactory.getShapeProp(t, e, a, t);
          var n, o = i.length;
          for (s = 0; s < o; s += 1)
            i[s].closed || (n = { transforms: r.addTransformSequence(i[s].transforms), trNodes: [] }, this.styledShapes.push(n), i[s].elements.push(n));
        }
        function CVShapeElement(t, e, i) {
          this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.itemsData = [], this.prevViewData = [], this.shapeModifiers = [], this.processedElements = [], this.transformsManager = new ShapeTransformManager(), this.initElement(t, e, i);
        }
        function CVTextElement(t, e, i) {
          this.textSpans = [], this.yOffset = 0, this.fillColorAnim = false, this.strokeColorAnim = false, this.strokeWidthAnim = false, this.stroke = false, this.fill = false, this.justifyOffset = 0, this.currentRender = null, this.renderType = "canvas", this.values = { fill: "rgba(0,0,0,0)", stroke: "rgba(0,0,0,0)", sWidth: 0, fValue: "" }, this.initElement(t, e, i);
        }
        function CVImageElement(t, e, i) {
          this.assetData = e.getAssetData(t.refId), this.img = e.imageLoader.getAsset(this.assetData), this.initElement(t, e, i);
        }
        function CVSolidElement(t, e, i) {
          this.initElement(t, e, i);
        }
        function CanvasRendererBase() {
        }
        function CanvasContext() {
          this.opacity = -1, this.transform = createTypedArray("float32", 16), this.fillStyle = "", this.strokeStyle = "", this.lineWidth = "", this.lineCap = "", this.lineJoin = "", this.miterLimit = "", this.id = Math.random();
        }
        function CVContextData() {
          var t;
          this.stack = [], this.cArrPos = 0, this.cTr = new Matrix();
          for (t = 0; t < 15; t += 1) {
            var e = new CanvasContext();
            this.stack[t] = e;
          }
          this._length = 15, this.nativeContext = null, this.transformMat = new Matrix(), this.currentOpacity = 1, this.currentFillStyle = "", this.appliedFillStyle = "", this.currentStrokeStyle = "", this.appliedStrokeStyle = "", this.currentLineWidth = "", this.appliedLineWidth = "", this.currentLineCap = "", this.appliedLineCap = "", this.currentLineJoin = "", this.appliedLineJoin = "", this.appliedMiterLimit = "", this.currentMiterLimit = "";
        }
        function CVCompElement(t, e, i) {
          this.completeLayers = false, this.layers = t.layers, this.pendingElements = [], this.elements = createSizedArray(this.layers.length), this.initElement(t, e, i), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: true };
        }
        function CanvasRenderer(t, e) {
          this.animationItem = t, this.renderConfig = { clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas, context: e && e.context || null, progressiveLoad: e && e.progressiveLoad || false, preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet", imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice", contentVisibility: e && e.contentVisibility || "visible", className: e && e.className || "", id: e && e.id || "", runExpressions: !e || void 0 === e.runExpressions || e.runExpressions }, this.renderConfig.dpr = e && e.dpr || 1, this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1), this.renderedFrame = -1, this.globalData = { frameNum: -1, _mdf: false, renderConfig: this.renderConfig, currentGlobalAlpha: -1 }, this.contextData = new CVContextData(), this.elements = [], this.pendingElements = [], this.transformMat = new Matrix(), this.completeLayers = false, this.rendererType = "canvas", this.renderConfig.clearCanvas && (this.ctxTransform = this.contextData.transform.bind(this.contextData), this.ctxOpacity = this.contextData.opacity.bind(this.contextData), this.ctxFillStyle = this.contextData.fillStyle.bind(this.contextData), this.ctxStrokeStyle = this.contextData.strokeStyle.bind(this.contextData), this.ctxLineWidth = this.contextData.lineWidth.bind(this.contextData), this.ctxLineCap = this.contextData.lineCap.bind(this.contextData), this.ctxLineJoin = this.contextData.lineJoin.bind(this.contextData), this.ctxMiterLimit = this.contextData.miterLimit.bind(this.contextData), this.ctxFill = this.contextData.fill.bind(this.contextData), this.ctxFillRect = this.contextData.fillRect.bind(this.contextData), this.ctxStroke = this.contextData.stroke.bind(this.contextData), this.save = this.contextData.save.bind(this.contextData));
        }
        function HBaseElement() {
        }
        function HSolidElement(t, e, i) {
          this.initElement(t, e, i);
        }
        function HShapeElement(t, e, i) {
          this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.shapeModifiers = [], this.itemsData = [], this.processedElements = [], this.animatedContents = [], this.shapesContainer = createNS("g"), this.initElement(t, e, i), this.prevViewData = [], this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 };
        }
        function HTextElement(t, e, i) {
          this.textSpans = [], this.textPaths = [], this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 }, this.renderType = "svg", this.isMasked = false, this.initElement(t, e, i);
        }
        function HCameraElement(t, e, i) {
          this.initFrame(), this.initBaseData(t, e, i), this.initHierarchy();
          var r = PropertyFactory.getProp;
          if (this.pe = r(this, t.pe, 0, 0, this), t.ks.p.s ? (this.px = r(this, t.ks.p.x, 1, 0, this), this.py = r(this, t.ks.p.y, 1, 0, this), this.pz = r(this, t.ks.p.z, 1, 0, this)) : this.p = r(this, t.ks.p, 1, 0, this), t.ks.a && (this.a = r(this, t.ks.a, 1, 0, this)), t.ks.or.k.length && t.ks.or.k[0].to) {
            var s, a = t.ks.or.k.length;
            for (s = 0; s < a; s += 1)
              t.ks.or.k[s].to = null, t.ks.or.k[s].ti = null;
          }
          this.or = r(this, t.ks.or, 1, degToRads, this), this.or.sh = true, this.rx = r(this, t.ks.rx, 0, degToRads, this), this.ry = r(this, t.ks.ry, 0, degToRads, this), this.rz = r(this, t.ks.rz, 0, degToRads, this), this.mat = new Matrix(), this._prevMat = new Matrix(), this._isFirstFrame = true, this.finalTransform = { mProp: this };
        }
        function HImageElement(t, e, i) {
          this.assetData = e.getAssetData(t.refId), this.initElement(t, e, i);
        }
        function HybridRendererBase(t, e) {
          this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.renderConfig = { className: e && e.className || "", imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice", hideOnTransparent: !(e && false === e.hideOnTransparent), filterSize: { width: e && e.filterSize && e.filterSize.width || "400%", height: e && e.filterSize && e.filterSize.height || "400%", x: e && e.filterSize && e.filterSize.x || "-100%", y: e && e.filterSize && e.filterSize.y || "-100%" } }, this.globalData = { _mdf: false, frameNum: -1, renderConfig: this.renderConfig }, this.pendingElements = [], this.elements = [], this.threeDElements = [], this.destroyed = false, this.camera = null, this.supports3d = true, this.rendererType = "html";
        }
        function HCompElement(t, e, i) {
          this.layers = t.layers, this.supports3d = !t.hasMask, this.completeLayers = false, this.pendingElements = [], this.elements = this.layers ? createSizedArray(this.layers.length) : [], this.initElement(t, e, i), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: true };
        }
        function HybridRenderer(t, e) {
          this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.renderConfig = { className: e && e.className || "", imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice", hideOnTransparent: !(e && false === e.hideOnTransparent), filterSize: { width: e && e.filterSize && e.filterSize.width || "400%", height: e && e.filterSize && e.filterSize.height || "400%", x: e && e.filterSize && e.filterSize.x || "-100%", y: e && e.filterSize && e.filterSize.y || "-100%" }, runExpressions: !e || void 0 === e.runExpressions || e.runExpressions }, this.globalData = { _mdf: false, frameNum: -1, renderConfig: this.renderConfig }, this.pendingElements = [], this.elements = [], this.threeDElements = [], this.destroyed = false, this.camera = null, this.supports3d = true, this.rendererType = "html";
        }
        CVBaseElement.prototype = { createElements: function() {
        }, initRendererElement: function() {
        }, createContainerElements: function() {
          if (this.data.tt >= 1) {
            this.buffers = [];
            var t = this.globalData.canvasContext, e = assetLoader.createCanvas(t.canvas.width, t.canvas.height);
            this.buffers.push(e);
            var i = assetLoader.createCanvas(t.canvas.width, t.canvas.height);
            this.buffers.push(i), this.data.tt >= 3 && !document._isProxy && assetLoader.loadLumaCanvas();
          }
          this.canvasContext = this.globalData.canvasContext, this.transformCanvas = this.globalData.transformCanvas, this.renderableEffectsManager = new CVEffects(this), this.searchEffectTransforms();
        }, createContent: function() {
        }, setBlendMode: function() {
          var t = this.globalData;
          if (t.blendMode !== this.data.bm) {
            t.blendMode = this.data.bm;
            var e = getBlendMode(this.data.bm);
            t.canvasContext.globalCompositeOperation = e;
          }
        }, createRenderableComponents: function() {
          this.maskManager = new CVMaskElement(this.data, this), this.transformEffects = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);
        }, hideElement: function() {
          this.hidden || this.isInRange && !this.isTransparent || (this.hidden = true);
        }, showElement: function() {
          this.isInRange && !this.isTransparent && (this.hidden = false, this._isFirstFrame = true, this.maskManager._isFirstFrame = true);
        }, clearCanvas: function(t) {
          t.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy);
        }, prepareLayer: function() {
          if (this.data.tt >= 1) {
            var t = this.buffers[0].getContext("2d");
            this.clearCanvas(t), t.drawImage(this.canvasContext.canvas, 0, 0), this.currentTransform = this.canvasContext.getTransform(), this.canvasContext.setTransform(1, 0, 0, 1, 0, 0), this.clearCanvas(this.canvasContext), this.canvasContext.setTransform(this.currentTransform);
          }
        }, exitLayer: function() {
          if (this.data.tt >= 1) {
            var t = this.buffers[1], e = t.getContext("2d");
            if (this.clearCanvas(e), e.drawImage(this.canvasContext.canvas, 0, 0), this.canvasContext.setTransform(1, 0, 0, 1, 0, 0), this.clearCanvas(this.canvasContext), this.canvasContext.setTransform(this.currentTransform), this.comp.getElementById("tp" in this.data ? this.data.tp : this.data.ind - 1).renderFrame(true), this.canvasContext.setTransform(1, 0, 0, 1, 0, 0), this.data.tt >= 3 && !document._isProxy) {
              var i = assetLoader.getLumaCanvas(this.canvasContext.canvas);
              i.getContext("2d").drawImage(this.canvasContext.canvas, 0, 0), this.clearCanvas(this.canvasContext), this.canvasContext.drawImage(i, 0, 0);
            }
            this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt], this.canvasContext.drawImage(t, 0, 0), this.canvasContext.globalCompositeOperation = "destination-over", this.canvasContext.drawImage(this.buffers[0], 0, 0), this.canvasContext.setTransform(this.currentTransform), this.canvasContext.globalCompositeOperation = "source-over";
          }
        }, renderFrame: function(t) {
          if (!this.hidden && !this.data.hd && (1 !== this.data.td || t)) {
            this.renderTransform(), this.renderRenderable(), this.renderLocalTransform(), this.setBlendMode();
            var e = 0 === this.data.ty;
            this.prepareLayer(), this.globalData.renderer.save(e), this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props), this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity), this.renderInnerContent(), this.globalData.renderer.restore(e), this.exitLayer(), this.maskManager.hasMasks && this.globalData.renderer.restore(true), this._isFirstFrame && (this._isFirstFrame = false);
          }
        }, destroy: function() {
          this.canvasContext = null, this.data = null, this.globalData = null, this.maskManager.destroy();
        }, mHelper: new Matrix() }, CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement, CVBaseElement.prototype.show = CVBaseElement.prototype.showElement, CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated, extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement), CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement, CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: false }, CVShapeElement.prototype.dashResetter = [], CVShapeElement.prototype.createContent = function() {
          this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);
        }, CVShapeElement.prototype.createStyleElement = function(t, e) {
          var i = { data: t, type: t.ty, preTransforms: this.transformsManager.addTransformSequence(e), transforms: [], elements: [], closed: true === t.hd }, r = {};
          if ("fl" === t.ty || "st" === t.ty ? (r.c = PropertyFactory.getProp(this, t.c, 1, 255, this), r.c.k || (i.co = "rgb(" + bmFloor(r.c.v[0]) + "," + bmFloor(r.c.v[1]) + "," + bmFloor(r.c.v[2]) + ")")) : "gf" !== t.ty && "gs" !== t.ty || (r.s = PropertyFactory.getProp(this, t.s, 1, null, this), r.e = PropertyFactory.getProp(this, t.e, 1, null, this), r.h = PropertyFactory.getProp(this, t.h || { k: 0 }, 0, 0.01, this), r.a = PropertyFactory.getProp(this, t.a || { k: 0 }, 0, degToRads, this), r.g = new GradientProperty(this, t.g, this)), r.o = PropertyFactory.getProp(this, t.o, 0, 0.01, this), "st" === t.ty || "gs" === t.ty) {
            if (i.lc = lineCapEnum[t.lc || 2], i.lj = lineJoinEnum[t.lj || 2], 1 == t.lj && (i.ml = t.ml), r.w = PropertyFactory.getProp(this, t.w, 0, null, this), r.w.k || (i.wi = r.w.v), t.d) {
              var s = new DashProperty(this, t.d, "canvas", this);
              r.d = s, r.d.k || (i.da = r.d.dashArray, i.do = r.d.dashoffset[0]);
            }
          } else
            i.r = 2 === t.r ? "evenodd" : "nonzero";
          return this.stylesList.push(i), r.style = i, r;
        }, CVShapeElement.prototype.createGroupElement = function() {
          return { it: [], prevViewData: [] };
        }, CVShapeElement.prototype.createTransformElement = function(t) {
          return { transform: { opacity: 1, _opMdf: false, key: this.transformsManager.getNewKey(), op: PropertyFactory.getProp(this, t.o, 0, 0.01, this), mProps: TransformPropertyFactory.getTransformProperty(this, t, this) } };
        }, CVShapeElement.prototype.createShapeElement = function(t) {
          var e = new CVShapeData(this, t, this.stylesList, this.transformsManager);
          return this.shapes.push(e), this.addShapeToModifiers(e), e;
        }, CVShapeElement.prototype.reloadShapes = function() {
          var t;
          this._isFirstFrame = true;
          var e = this.itemsData.length;
          for (t = 0; t < e; t += 1)
            this.prevViewData[t] = this.itemsData[t];
          for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []), e = this.dynamicProperties.length, t = 0; t < e; t += 1)
            this.dynamicProperties[t].getValue();
          this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame);
        }, CVShapeElement.prototype.addTransformToStyleList = function(t) {
          var e, i = this.stylesList.length;
          for (e = 0; e < i; e += 1)
            this.stylesList[e].closed || this.stylesList[e].transforms.push(t);
        }, CVShapeElement.prototype.removeTransformFromStyleList = function() {
          var t, e = this.stylesList.length;
          for (t = 0; t < e; t += 1)
            this.stylesList[t].closed || this.stylesList[t].transforms.pop();
        }, CVShapeElement.prototype.closeStyles = function(t) {
          var e, i = t.length;
          for (e = 0; e < i; e += 1)
            t[e].closed = true;
        }, CVShapeElement.prototype.searchShapes = function(t, e, i, r, s) {
          var a, n, o, h, l, p, f = t.length - 1, m = [], c = [], d = [].concat(s);
          for (a = f; a >= 0; a -= 1) {
            if ((h = this.searchProcessedElement(t[a])) ? e[a] = i[h - 1] : t[a]._shouldRender = r, "fl" === t[a].ty || "st" === t[a].ty || "gf" === t[a].ty || "gs" === t[a].ty)
              h ? e[a].style.closed = false : e[a] = this.createStyleElement(t[a], d), m.push(e[a].style);
            else if ("gr" === t[a].ty) {
              if (h)
                for (o = e[a].it.length, n = 0; n < o; n += 1)
                  e[a].prevViewData[n] = e[a].it[n];
              else
                e[a] = this.createGroupElement(t[a]);
              this.searchShapes(t[a].it, e[a].it, e[a].prevViewData, r, d);
            } else
              "tr" === t[a].ty ? (h || (p = this.createTransformElement(t[a]), e[a] = p), d.push(e[a]), this.addTransformToStyleList(e[a])) : "sh" === t[a].ty || "rc" === t[a].ty || "el" === t[a].ty || "sr" === t[a].ty ? h || (e[a] = this.createShapeElement(t[a])) : "tm" === t[a].ty || "rd" === t[a].ty || "pb" === t[a].ty || "zz" === t[a].ty || "op" === t[a].ty ? (h ? (l = e[a]).closed = false : ((l = ShapeModifiers.getModifier(t[a].ty)).init(this, t[a]), e[a] = l, this.shapeModifiers.push(l)), c.push(l)) : "rp" === t[a].ty && (h ? (l = e[a]).closed = true : (l = ShapeModifiers.getModifier(t[a].ty), e[a] = l, l.init(this, t, a, e), this.shapeModifiers.push(l), r = false), c.push(l));
            this.addProcessedElement(t[a], a + 1);
          }
          for (this.removeTransformFromStyleList(), this.closeStyles(m), f = c.length, a = 0; a < f; a += 1)
            c[a].closed = true;
        }, CVShapeElement.prototype.renderInnerContent = function() {
          this.transformHelper.opacity = 1, this.transformHelper._opMdf = false, this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame), this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);
        }, CVShapeElement.prototype.renderShapeTransform = function(t, e) {
          (t._opMdf || e.op._mdf || this._isFirstFrame) && (e.opacity = t.opacity, e.opacity *= e.op.v, e._opMdf = true);
        }, CVShapeElement.prototype.drawLayer = function() {
          var t, e, i, r, s, a, n, o, h, l = this.stylesList.length, p = this.globalData.renderer, f = this.globalData.canvasContext;
          for (t = 0; t < l; t += 1)
            if (("st" !== (o = (h = this.stylesList[t]).type) && "gs" !== o || 0 !== h.wi) && h.data._shouldRender && 0 !== h.coOp && 0 !== this.globalData.currentGlobalAlpha) {
              for (p.save(), a = h.elements, "st" === o || "gs" === o ? (p.ctxStrokeStyle("st" === o ? h.co : h.grd), p.ctxLineWidth(h.wi), p.ctxLineCap(h.lc), p.ctxLineJoin(h.lj), p.ctxMiterLimit(h.ml || 0)) : p.ctxFillStyle("fl" === o ? h.co : h.grd), p.ctxOpacity(h.coOp), "st" !== o && "gs" !== o && f.beginPath(), p.ctxTransform(h.preTransforms.finalTransform.props), i = a.length, e = 0; e < i; e += 1) {
                for ("st" !== o && "gs" !== o || (f.beginPath(), h.da && (f.setLineDash(h.da), f.lineDashOffset = h.do)), s = (n = a[e].trNodes).length, r = 0; r < s; r += 1)
                  "m" === n[r].t ? f.moveTo(n[r].p[0], n[r].p[1]) : "c" === n[r].t ? f.bezierCurveTo(n[r].pts[0], n[r].pts[1], n[r].pts[2], n[r].pts[3], n[r].pts[4], n[r].pts[5]) : f.closePath();
                "st" !== o && "gs" !== o || (p.ctxStroke(), h.da && f.setLineDash(this.dashResetter));
              }
              "st" !== o && "gs" !== o && this.globalData.renderer.ctxFill(h.r), p.restore();
            }
        }, CVShapeElement.prototype.renderShape = function(t, e, i, r) {
          var s, a;
          for (a = t, s = e.length - 1; s >= 0; s -= 1)
            "tr" === e[s].ty ? (a = i[s].transform, this.renderShapeTransform(t, a)) : "sh" === e[s].ty || "el" === e[s].ty || "rc" === e[s].ty || "sr" === e[s].ty ? this.renderPath(e[s], i[s]) : "fl" === e[s].ty ? this.renderFill(e[s], i[s], a) : "st" === e[s].ty ? this.renderStroke(e[s], i[s], a) : "gf" === e[s].ty || "gs" === e[s].ty ? this.renderGradientFill(e[s], i[s], a) : "gr" === e[s].ty ? this.renderShape(a, e[s].it, i[s].it) : e[s].ty;
          r && this.drawLayer();
        }, CVShapeElement.prototype.renderStyledShape = function(t, e) {
          if (this._isFirstFrame || e._mdf || t.transforms._mdf) {
            var i, r, s, a = t.trNodes, n = e.paths, o = n._length;
            a.length = 0;
            var h = t.transforms.finalTransform;
            for (s = 0; s < o; s += 1) {
              var l = n.shapes[s];
              if (l && l.v) {
                for (r = l._length, i = 1; i < r; i += 1)
                  1 === i && a.push({ t: "m", p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0) }), a.push({ t: "c", pts: h.applyToTriplePoints(l.o[i - 1], l.i[i], l.v[i]) });
                1 === r && a.push({ t: "m", p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0) }), l.c && r && (a.push({ t: "c", pts: h.applyToTriplePoints(l.o[i - 1], l.i[0], l.v[0]) }), a.push({ t: "z" }));
              }
            }
            t.trNodes = a;
          }
        }, CVShapeElement.prototype.renderPath = function(t, e) {
          if (true !== t.hd && t._shouldRender) {
            var i, r = e.styledShapes.length;
            for (i = 0; i < r; i += 1)
              this.renderStyledShape(e.styledShapes[i], e.sh);
          }
        }, CVShapeElement.prototype.renderFill = function(t, e, i) {
          var r = e.style;
          (e.c._mdf || this._isFirstFrame) && (r.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || i._opMdf || this._isFirstFrame) && (r.coOp = e.o.v * i.opacity);
        }, CVShapeElement.prototype.renderGradientFill = function(t, e, i) {
          var r, s = e.style;
          if (!s.grd || e.g._mdf || e.s._mdf || e.e._mdf || 1 !== t.t && (e.h._mdf || e.a._mdf)) {
            var a, n = this.globalData.canvasContext, o = e.s.v, h = e.e.v;
            if (1 === t.t)
              r = n.createLinearGradient(o[0], o[1], h[0], h[1]);
            else {
              var l = Math.sqrt(Math.pow(o[0] - h[0], 2) + Math.pow(o[1] - h[1], 2)), p = Math.atan2(h[1] - o[1], h[0] - o[0]), f = e.h.v;
              f >= 1 ? f = 0.99 : f <= -1 && (f = -0.99);
              var m = l * f, c = Math.cos(p + e.a.v) * m + o[0], d = Math.sin(p + e.a.v) * m + o[1];
              r = n.createRadialGradient(c, d, 0, o[0], o[1], l);
            }
            var u = t.g.p, y = e.g.c, g = 1;
            for (a = 0; a < u; a += 1)
              e.g._hasOpacity && e.g._collapsable && (g = e.g.o[2 * a + 1]), r.addColorStop(y[4 * a] / 100, "rgba(" + y[4 * a + 1] + "," + y[4 * a + 2] + "," + y[4 * a + 3] + "," + g + ")");
            s.grd = r;
          }
          s.coOp = e.o.v * i.opacity;
        }, CVShapeElement.prototype.renderStroke = function(t, e, i) {
          var r = e.style, s = e.d;
          s && (s._mdf || this._isFirstFrame) && (r.da = s.dashArray, r.do = s.dashoffset[0]), (e.c._mdf || this._isFirstFrame) && (r.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || i._opMdf || this._isFirstFrame) && (r.coOp = e.o.v * i.opacity), (e.w._mdf || this._isFirstFrame) && (r.wi = e.w.v);
        }, CVShapeElement.prototype.destroy = function() {
          this.shapesData = null, this.globalData = null, this.canvasContext = null, this.stylesList.length = 0, this.itemsData.length = 0;
        }, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement), CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d"), CVTextElement.prototype.buildNewText = function() {
          var t = this.textProperty.currentData;
          this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
          var e = false;
          t.fc ? (e = true, this.values.fill = this.buildColor(t.fc)) : this.values.fill = "rgba(0,0,0,0)", this.fill = e;
          var i = false;
          t.sc && (i = true, this.values.stroke = this.buildColor(t.sc), this.values.sWidth = t.sw);
          var r, s, a, n, o, h, l, p, f, m, c, d, u = this.globalData.fontManager.getFontByName(t.f), y = t.l, g = this.mHelper;
          this.stroke = i, this.values.fValue = t.finalSize + "px " + this.globalData.fontManager.getFontByName(t.f).fFamily, s = t.finalText.length;
          var v = this.data.singleShape, b = 1e-3 * t.tr * t.finalSize, x = 0, P = 0, E = true, S = 0;
          for (r = 0; r < s; r += 1) {
            n = (a = this.globalData.fontManager.getCharData(t.finalText[r], u.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily)) && a.data || {}, g.reset(), v && y[r].n && (x = -b, P += t.yOffset, P += E ? 1 : 0, E = false), f = (l = n.shapes ? n.shapes[0].it : []).length, g.scale(t.finalSize / 100, t.finalSize / 100), v && this.applyTextPropertiesToMatrix(t, g, y[r].line, x, P), c = createSizedArray(f - 1);
            var C = 0;
            for (p = 0; p < f; p += 1)
              if ("sh" === l[p].ty) {
                for (h = l[p].ks.k.i.length, m = l[p].ks.k, d = [], o = 1; o < h; o += 1)
                  1 === o && d.push(g.applyToX(m.v[0][0], m.v[0][1], 0), g.applyToY(m.v[0][0], m.v[0][1], 0)), d.push(g.applyToX(m.o[o - 1][0], m.o[o - 1][1], 0), g.applyToY(m.o[o - 1][0], m.o[o - 1][1], 0), g.applyToX(m.i[o][0], m.i[o][1], 0), g.applyToY(m.i[o][0], m.i[o][1], 0), g.applyToX(m.v[o][0], m.v[o][1], 0), g.applyToY(m.v[o][0], m.v[o][1], 0));
                d.push(g.applyToX(m.o[o - 1][0], m.o[o - 1][1], 0), g.applyToY(m.o[o - 1][0], m.o[o - 1][1], 0), g.applyToX(m.i[0][0], m.i[0][1], 0), g.applyToY(m.i[0][0], m.i[0][1], 0), g.applyToX(m.v[0][0], m.v[0][1], 0), g.applyToY(m.v[0][0], m.v[0][1], 0)), c[C] = d, C += 1;
              }
            v && (x += y[r].l, x += b), this.textSpans[S] ? this.textSpans[S].elem = c : this.textSpans[S] = { elem: c }, S += 1;
          }
        }, CVTextElement.prototype.renderInnerContent = function() {
          var t, e, i, r, s, a;
          this.validateText(), this.canvasContext.font = this.values.fValue, this.globalData.renderer.ctxLineCap("butt"), this.globalData.renderer.ctxLineJoin("miter"), this.globalData.renderer.ctxMiterLimit(4), this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
          var n, o = this.textAnimator.renderedLetters, h = this.textProperty.currentData.l;
          e = h.length;
          var l, p, f = null, m = null, c = null, d = this.globalData.renderer;
          for (t = 0; t < e; t += 1)
            if (!h[t].n) {
              if ((n = o[t]) && (d.save(), d.ctxTransform(n.p), d.ctxOpacity(n.o)), this.fill) {
                for (n && n.fc ? f !== n.fc && (d.ctxFillStyle(n.fc), f = n.fc) : f !== this.values.fill && (f = this.values.fill, d.ctxFillStyle(this.values.fill)), r = (l = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), i = 0; i < r; i += 1)
                  for (a = (p = l[i]).length, this.globalData.canvasContext.moveTo(p[0], p[1]), s = 2; s < a; s += 6)
                    this.globalData.canvasContext.bezierCurveTo(p[s], p[s + 1], p[s + 2], p[s + 3], p[s + 4], p[s + 5]);
                this.globalData.canvasContext.closePath(), d.ctxFill();
              }
              if (this.stroke) {
                for (n && n.sw ? c !== n.sw && (c = n.sw, d.ctxLineWidth(n.sw)) : c !== this.values.sWidth && (c = this.values.sWidth, d.ctxLineWidth(this.values.sWidth)), n && n.sc ? m !== n.sc && (m = n.sc, d.ctxStrokeStyle(n.sc)) : m !== this.values.stroke && (m = this.values.stroke, d.ctxStrokeStyle(this.values.stroke)), r = (l = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), i = 0; i < r; i += 1)
                  for (a = (p = l[i]).length, this.globalData.canvasContext.moveTo(p[0], p[1]), s = 2; s < a; s += 6)
                    this.globalData.canvasContext.bezierCurveTo(p[s], p[s + 1], p[s + 2], p[s + 3], p[s + 4], p[s + 5]);
                this.globalData.canvasContext.closePath(), d.ctxStroke();
              }
              n && this.globalData.renderer.restore();
            }
        }, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement), CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement, CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame, CVImageElement.prototype.createContent = function() {
          if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
            var t = createTag("canvas");
            t.width = this.assetData.w, t.height = this.assetData.h;
            var e, i, r = t.getContext("2d"), s = this.img.width, a = this.img.height, n = s / a, o = this.assetData.w / this.assetData.h, h = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
            n > o && "xMidYMid slice" === h || n < o && "xMidYMid slice" !== h ? e = (i = a) * o : i = (e = s) / o, r.drawImage(this.img, (s - e) / 2, (a - i) / 2, e, i, 0, 0, this.assetData.w, this.assetData.h), this.img = t;
          }
        }, CVImageElement.prototype.renderInnerContent = function() {
          this.canvasContext.drawImage(this.img, 0, 0);
        }, CVImageElement.prototype.destroy = function() {
          this.img = null;
        }, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement), CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement, CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame, CVSolidElement.prototype.renderInnerContent = function() {
          this.globalData.renderer.ctxFillStyle(this.data.sc), this.globalData.renderer.ctxFillRect(0, 0, this.data.sw, this.data.sh);
        }, extendPrototype([BaseRenderer], CanvasRendererBase), CanvasRendererBase.prototype.createShape = function(t) {
          return new CVShapeElement(t, this.globalData, this);
        }, CanvasRendererBase.prototype.createText = function(t) {
          return new CVTextElement(t, this.globalData, this);
        }, CanvasRendererBase.prototype.createImage = function(t) {
          return new CVImageElement(t, this.globalData, this);
        }, CanvasRendererBase.prototype.createSolid = function(t) {
          return new CVSolidElement(t, this.globalData, this);
        }, CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull, CanvasRendererBase.prototype.ctxTransform = function(t) {
          1 === t[0] && 0 === t[1] && 0 === t[4] && 1 === t[5] && 0 === t[12] && 0 === t[13] || this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13]);
        }, CanvasRendererBase.prototype.ctxOpacity = function(t) {
          this.canvasContext.globalAlpha *= t < 0 ? 0 : t;
        }, CanvasRendererBase.prototype.ctxFillStyle = function(t) {
          this.canvasContext.fillStyle = t;
        }, CanvasRendererBase.prototype.ctxStrokeStyle = function(t) {
          this.canvasContext.strokeStyle = t;
        }, CanvasRendererBase.prototype.ctxLineWidth = function(t) {
          this.canvasContext.lineWidth = t;
        }, CanvasRendererBase.prototype.ctxLineCap = function(t) {
          this.canvasContext.lineCap = t;
        }, CanvasRendererBase.prototype.ctxLineJoin = function(t) {
          this.canvasContext.lineJoin = t;
        }, CanvasRendererBase.prototype.ctxMiterLimit = function(t) {
          this.canvasContext.miterLimit = t;
        }, CanvasRendererBase.prototype.ctxFill = function(t) {
          this.canvasContext.fill(t);
        }, CanvasRendererBase.prototype.ctxFillRect = function(t, e, i, r) {
          this.canvasContext.fillRect(t, e, i, r);
        }, CanvasRendererBase.prototype.ctxStroke = function() {
          this.canvasContext.stroke();
        }, CanvasRendererBase.prototype.reset = function() {
          this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore();
        }, CanvasRendererBase.prototype.save = function() {
          this.canvasContext.save();
        }, CanvasRendererBase.prototype.restore = function(t) {
          this.renderConfig.clearCanvas ? (t && (this.globalData.blendMode = "source-over"), this.contextData.restore(t)) : this.canvasContext.restore();
        }, CanvasRendererBase.prototype.configAnimation = function(t) {
          if (this.animationItem.wrapper) {
            this.animationItem.container = createTag("canvas");
            var e = this.animationItem.container.style;
            e.width = "100%", e.height = "100%";
            var i = "0px 0px 0px";
            e.transformOrigin = i, e.mozTransformOrigin = i, e.webkitTransformOrigin = i, e["-webkit-transform"] = i, e.contentVisibility = this.renderConfig.contentVisibility, this.animationItem.wrapper.appendChild(this.animationItem.container), this.canvasContext = this.animationItem.container.getContext("2d"), this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className), this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id);
          } else
            this.canvasContext = this.renderConfig.context;
          this.contextData.setContext(this.canvasContext), this.data = t, this.layers = t.layers, this.transformCanvas = { w: t.w, h: t.h, sx: 0, sy: 0, tx: 0, ty: 0 }, this.setupGlobalData(t, document.body), this.globalData.canvasContext = this.canvasContext, this.globalData.renderer = this, this.globalData.isDashed = false, this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.globalData.transformCanvas = this.transformCanvas, this.elements = createSizedArray(t.layers.length), this.updateContainerSize();
        }, CanvasRendererBase.prototype.updateContainerSize = function(t, e) {
          var i, r, s, a;
          if (this.reset(), t ? (i = t, r = e, this.canvasContext.canvas.width = i, this.canvasContext.canvas.height = r) : (this.animationItem.wrapper && this.animationItem.container ? (i = this.animationItem.wrapper.offsetWidth, r = this.animationItem.wrapper.offsetHeight) : (i = this.canvasContext.canvas.width, r = this.canvasContext.canvas.height), this.canvasContext.canvas.width = i * this.renderConfig.dpr, this.canvasContext.canvas.height = r * this.renderConfig.dpr), -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice")) {
            var n = this.renderConfig.preserveAspectRatio.split(" "), o = n[1] || "meet", h = n[0] || "xMidYMid", l = h.substr(0, 4), p = h.substr(4);
            s = i / r, (a = this.transformCanvas.w / this.transformCanvas.h) > s && "meet" === o || a < s && "slice" === o ? (this.transformCanvas.sx = i / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = i / (this.transformCanvas.w / this.renderConfig.dpr)) : (this.transformCanvas.sx = r / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.sy = r / (this.transformCanvas.h / this.renderConfig.dpr)), this.transformCanvas.tx = "xMid" === l && (a < s && "meet" === o || a > s && "slice" === o) ? (i - this.transformCanvas.w * (r / this.transformCanvas.h)) / 2 * this.renderConfig.dpr : "xMax" === l && (a < s && "meet" === o || a > s && "slice" === o) ? (i - this.transformCanvas.w * (r / this.transformCanvas.h)) * this.renderConfig.dpr : 0, this.transformCanvas.ty = "YMid" === p && (a > s && "meet" === o || a < s && "slice" === o) ? (r - this.transformCanvas.h * (i / this.transformCanvas.w)) / 2 * this.renderConfig.dpr : "YMax" === p && (a > s && "meet" === o || a < s && "slice" === o) ? (r - this.transformCanvas.h * (i / this.transformCanvas.w)) * this.renderConfig.dpr : 0;
          } else
            "none" === this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = i / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = r / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.tx = 0, this.transformCanvas.ty = 0) : (this.transformCanvas.sx = this.renderConfig.dpr, this.transformCanvas.sy = this.renderConfig.dpr, this.transformCanvas.tx = 0, this.transformCanvas.ty = 0);
          this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1], this.ctxTransform(this.transformCanvas.props), this.canvasContext.beginPath(), this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h), this.canvasContext.closePath(), this.canvasContext.clip(), this.renderFrame(this.renderedFrame, true);
        }, CanvasRendererBase.prototype.destroy = function() {
          var t;
          for (this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), t = (this.layers ? this.layers.length : 0) - 1; t >= 0; t -= 1)
            this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
          this.elements.length = 0, this.globalData.canvasContext = null, this.animationItem.container = null, this.destroyed = true;
        }, CanvasRendererBase.prototype.renderFrame = function(t, e) {
          if ((this.renderedFrame !== t || true !== this.renderConfig.clearCanvas || e) && !this.destroyed && -1 !== t) {
            var i;
            this.renderedFrame = t, this.globalData.frameNum = t - this.animationItem._isFirstFrame, this.globalData.frameId += 1, this.globalData._mdf = !this.renderConfig.clearCanvas || e, this.globalData.projectInterface.currentFrame = t;
            var r = this.layers.length;
            for (this.completeLayers || this.checkLayers(t), i = r - 1; i >= 0; i -= 1)
              (this.completeLayers || this.elements[i]) && this.elements[i].prepareFrame(t - this.layers[i].st);
            if (this.globalData._mdf) {
              for (true === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(), i = r - 1; i >= 0; i -= 1)
                (this.completeLayers || this.elements[i]) && this.elements[i].renderFrame();
              true !== this.renderConfig.clearCanvas && this.restore();
            }
          }
        }, CanvasRendererBase.prototype.buildItem = function(t) {
          var e = this.elements;
          if (!e[t] && 99 !== this.layers[t].ty) {
            var i = this.createItem(this.layers[t], this, this.globalData);
            e[t] = i, i.initExpressions();
          }
        }, CanvasRendererBase.prototype.checkPendingElements = function() {
          for (; this.pendingElements.length; ) {
            this.pendingElements.pop().checkParenting();
          }
        }, CanvasRendererBase.prototype.hide = function() {
          this.animationItem.container.style.display = "none";
        }, CanvasRendererBase.prototype.show = function() {
          this.animationItem.container.style.display = "block";
        }, CVContextData.prototype.duplicate = function() {
          var t = 2 * this._length, e = 0;
          for (e = this._length; e < t; e += 1)
            this.stack[e] = new CanvasContext();
          this._length = t;
        }, CVContextData.prototype.reset = function() {
          this.cArrPos = 0, this.cTr.reset(), this.stack[this.cArrPos].opacity = 1;
        }, CVContextData.prototype.restore = function(t) {
          this.cArrPos -= 1;
          var e, i = this.stack[this.cArrPos], r = i.transform, s = this.cTr.props;
          for (e = 0; e < 16; e += 1)
            s[e] = r[e];
          if (t) {
            this.nativeContext.restore();
            var a = this.stack[this.cArrPos + 1];
            this.appliedFillStyle = a.fillStyle, this.appliedStrokeStyle = a.strokeStyle, this.appliedLineWidth = a.lineWidth, this.appliedLineCap = a.lineCap, this.appliedLineJoin = a.lineJoin, this.appliedMiterLimit = a.miterLimit;
          }
          this.nativeContext.setTransform(r[0], r[1], r[4], r[5], r[12], r[13]), (t || -1 !== i.opacity && this.currentOpacity !== i.opacity) && (this.nativeContext.globalAlpha = i.opacity, this.currentOpacity = i.opacity), this.currentFillStyle = i.fillStyle, this.currentStrokeStyle = i.strokeStyle, this.currentLineWidth = i.lineWidth, this.currentLineCap = i.lineCap, this.currentLineJoin = i.lineJoin, this.currentMiterLimit = i.miterLimit;
        }, CVContextData.prototype.save = function(t) {
          t && this.nativeContext.save();
          var e = this.cTr.props;
          this._length <= this.cArrPos && this.duplicate();
          var i, r = this.stack[this.cArrPos];
          for (i = 0; i < 16; i += 1)
            r.transform[i] = e[i];
          this.cArrPos += 1;
          var s = this.stack[this.cArrPos];
          s.opacity = r.opacity, s.fillStyle = r.fillStyle, s.strokeStyle = r.strokeStyle, s.lineWidth = r.lineWidth, s.lineCap = r.lineCap, s.lineJoin = r.lineJoin, s.miterLimit = r.miterLimit;
        }, CVContextData.prototype.setOpacity = function(t) {
          this.stack[this.cArrPos].opacity = t;
        }, CVContextData.prototype.setContext = function(t) {
          this.nativeContext = t;
        }, CVContextData.prototype.fillStyle = function(t) {
          this.stack[this.cArrPos].fillStyle !== t && (this.currentFillStyle = t, this.stack[this.cArrPos].fillStyle = t);
        }, CVContextData.prototype.strokeStyle = function(t) {
          this.stack[this.cArrPos].strokeStyle !== t && (this.currentStrokeStyle = t, this.stack[this.cArrPos].strokeStyle = t);
        }, CVContextData.prototype.lineWidth = function(t) {
          this.stack[this.cArrPos].lineWidth !== t && (this.currentLineWidth = t, this.stack[this.cArrPos].lineWidth = t);
        }, CVContextData.prototype.lineCap = function(t) {
          this.stack[this.cArrPos].lineCap !== t && (this.currentLineCap = t, this.stack[this.cArrPos].lineCap = t);
        }, CVContextData.prototype.lineJoin = function(t) {
          this.stack[this.cArrPos].lineJoin !== t && (this.currentLineJoin = t, this.stack[this.cArrPos].lineJoin = t);
        }, CVContextData.prototype.miterLimit = function(t) {
          this.stack[this.cArrPos].miterLimit !== t && (this.currentMiterLimit = t, this.stack[this.cArrPos].miterLimit = t);
        }, CVContextData.prototype.transform = function(t) {
          this.transformMat.cloneFromProps(t);
          var e = this.cTr;
          this.transformMat.multiply(e), e.cloneFromProps(this.transformMat.props);
          var i = e.props;
          this.nativeContext.setTransform(i[0], i[1], i[4], i[5], i[12], i[13]);
        }, CVContextData.prototype.opacity = function(t) {
          var e = this.stack[this.cArrPos].opacity;
          e *= t < 0 ? 0 : t, this.stack[this.cArrPos].opacity !== e && (this.currentOpacity !== t && (this.nativeContext.globalAlpha = t, this.currentOpacity = t), this.stack[this.cArrPos].opacity = e);
        }, CVContextData.prototype.fill = function(t) {
          this.appliedFillStyle !== this.currentFillStyle && (this.appliedFillStyle = this.currentFillStyle, this.nativeContext.fillStyle = this.appliedFillStyle), this.nativeContext.fill(t);
        }, CVContextData.prototype.fillRect = function(t, e, i, r) {
          this.appliedFillStyle !== this.currentFillStyle && (this.appliedFillStyle = this.currentFillStyle, this.nativeContext.fillStyle = this.appliedFillStyle), this.nativeContext.fillRect(t, e, i, r);
        }, CVContextData.prototype.stroke = function() {
          this.appliedStrokeStyle !== this.currentStrokeStyle && (this.appliedStrokeStyle = this.currentStrokeStyle, this.nativeContext.strokeStyle = this.appliedStrokeStyle), this.appliedLineWidth !== this.currentLineWidth && (this.appliedLineWidth = this.currentLineWidth, this.nativeContext.lineWidth = this.appliedLineWidth), this.appliedLineCap !== this.currentLineCap && (this.appliedLineCap = this.currentLineCap, this.nativeContext.lineCap = this.appliedLineCap), this.appliedLineJoin !== this.currentLineJoin && (this.appliedLineJoin = this.currentLineJoin, this.nativeContext.lineJoin = this.appliedLineJoin), this.appliedMiterLimit !== this.currentMiterLimit && (this.appliedMiterLimit = this.currentMiterLimit, this.nativeContext.miterLimit = this.appliedMiterLimit), this.nativeContext.stroke();
        }, extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement), CVCompElement.prototype.renderInnerContent = function() {
          var t, e = this.canvasContext;
          for (e.beginPath(), e.moveTo(0, 0), e.lineTo(this.data.w, 0), e.lineTo(this.data.w, this.data.h), e.lineTo(0, this.data.h), e.lineTo(0, 0), e.clip(), t = this.layers.length - 1; t >= 0; t -= 1)
            (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
        }, CVCompElement.prototype.destroy = function() {
          var t;
          for (t = this.layers.length - 1; t >= 0; t -= 1)
            this.elements[t] && this.elements[t].destroy();
          this.layers = null, this.elements = null;
        }, CVCompElement.prototype.createComp = function(t) {
          return new CVCompElement(t, this.globalData, this);
        }, extendPrototype([CanvasRendererBase], CanvasRenderer), CanvasRenderer.prototype.createComp = function(t) {
          return new CVCompElement(t, this.globalData, this);
        }, HBaseElement.prototype = { checkBlendMode: function() {
        }, initRendererElement: function() {
          this.baseElement = createTag(this.data.tg || "div"), this.data.hasMask ? (this.svgElement = createNS("svg"), this.layerElement = createNS("g"), this.maskedElement = this.layerElement, this.svgElement.appendChild(this.layerElement), this.baseElement.appendChild(this.svgElement)) : this.layerElement = this.baseElement, styleDiv(this.baseElement);
        }, createContainerElements: function() {
          this.renderableEffectsManager = new CVEffects(this), this.transformedElement = this.baseElement, this.maskedElement = this.layerElement, this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 !== this.data.bm && this.setBlendMode();
        }, renderElement: function() {
          var t = this.transformedElement ? this.transformedElement.style : {};
          if (this.finalTransform._matMdf) {
            var e = this.finalTransform.mat.toCSS();
            t.transform = e, t.webkitTransform = e;
          }
          this.finalTransform._opMdf && (t.opacity = this.finalTransform.mProp.o.v);
        }, renderFrame: function() {
          this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = false));
        }, destroy: function() {
          this.layerElement = null, this.transformedElement = null, this.matteElement && (this.matteElement = null), this.maskManager && (this.maskManager.destroy(), this.maskManager = null);
        }, createRenderableComponents: function() {
          this.maskManager = new MaskElement(this.data, this, this.globalData);
        }, addEffects: function() {
        }, setMatte: function() {
        } }, HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement, HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy, HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting, extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement), HSolidElement.prototype.createContent = function() {
          var t;
          this.data.hasMask ? ((t = createNS("rect")).setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.svgElement.setAttribute("width", this.data.sw), this.svgElement.setAttribute("height", this.data.sh)) : ((t = createTag("div")).style.width = this.data.sw + "px", t.style.height = this.data.sh + "px", t.style.backgroundColor = this.data.sc), this.layerElement.appendChild(t);
        }, extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement), HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent, HShapeElement.prototype.createContent = function() {
          var t;
          if (this.baseElement.style.fontSize = 0, this.data.hasMask)
            this.layerElement.appendChild(this.shapesContainer), t = this.svgElement;
          else {
            t = createNS("svg");
            var e = this.comp.data ? this.comp.data : this.globalData.compSize;
            t.setAttribute("width", e.w), t.setAttribute("height", e.h), t.appendChild(this.shapesContainer), this.layerElement.appendChild(t);
          }
          this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true), this.filterUniqueShapes(), this.shapeCont = t;
        }, HShapeElement.prototype.getTransformedPoint = function(t, e) {
          var i, r = t.length;
          for (i = 0; i < r; i += 1)
            e = t[i].mProps.v.applyToPointArray(e[0], e[1], 0);
          return e;
        }, HShapeElement.prototype.calculateShapeBoundingBox = function(t, e) {
          var i, r, s, a, n, o = t.sh.v, h = t.transformers, l = o._length;
          if (!(l <= 1)) {
            for (i = 0; i < l - 1; i += 1)
              r = this.getTransformedPoint(h, o.v[i]), s = this.getTransformedPoint(h, o.o[i]), a = this.getTransformedPoint(h, o.i[i + 1]), n = this.getTransformedPoint(h, o.v[i + 1]), this.checkBounds(r, s, a, n, e);
            o.c && (r = this.getTransformedPoint(h, o.v[i]), s = this.getTransformedPoint(h, o.o[i]), a = this.getTransformedPoint(h, o.i[0]), n = this.getTransformedPoint(h, o.v[0]), this.checkBounds(r, s, a, n, e));
          }
        }, HShapeElement.prototype.checkBounds = function(t, e, i, r, s) {
          this.getBoundsOfCurve(t, e, i, r);
          var a = this.shapeBoundingBox;
          s.x = bmMin(a.left, s.x), s.xMax = bmMax(a.right, s.xMax), s.y = bmMin(a.top, s.y), s.yMax = bmMax(a.bottom, s.yMax);
        }, HShapeElement.prototype.shapeBoundingBox = { left: 0, right: 0, top: 0, bottom: 0 }, HShapeElement.prototype.tempBoundingBox = { x: 0, xMax: 0, y: 0, yMax: 0, width: 0, height: 0 }, HShapeElement.prototype.getBoundsOfCurve = function(t, e, i, r) {
          for (var s, a, n, o, h, l, p, f = [[t[0], r[0]], [t[1], r[1]]], m = 0; m < 2; ++m)
            a = 6 * t[m] - 12 * e[m] + 6 * i[m], s = -3 * t[m] + 9 * e[m] - 9 * i[m] + 3 * r[m], n = 3 * e[m] - 3 * t[m], a |= 0, n |= 0, 0 === (s |= 0) && 0 === a || (0 === s ? (o = -n / a) > 0 && o < 1 && f[m].push(this.calculateF(o, t, e, i, r, m)) : (h = a * a - 4 * n * s) >= 0 && ((l = (-a + bmSqrt(h)) / (2 * s)) > 0 && l < 1 && f[m].push(this.calculateF(l, t, e, i, r, m)), (p = (-a - bmSqrt(h)) / (2 * s)) > 0 && p < 1 && f[m].push(this.calculateF(p, t, e, i, r, m))));
          this.shapeBoundingBox.left = bmMin.apply(null, f[0]), this.shapeBoundingBox.top = bmMin.apply(null, f[1]), this.shapeBoundingBox.right = bmMax.apply(null, f[0]), this.shapeBoundingBox.bottom = bmMax.apply(null, f[1]);
        }, HShapeElement.prototype.calculateF = function(t, e, i, r, s, a) {
          return bmPow(1 - t, 3) * e[a] + 3 * bmPow(1 - t, 2) * t * i[a] + 3 * (1 - t) * bmPow(t, 2) * r[a] + bmPow(t, 3) * s[a];
        }, HShapeElement.prototype.calculateBoundingBox = function(t, e) {
          var i, r = t.length;
          for (i = 0; i < r; i += 1)
            t[i] && t[i].sh ? this.calculateShapeBoundingBox(t[i], e) : t[i] && t[i].it ? this.calculateBoundingBox(t[i].it, e) : t[i] && t[i].style && t[i].w && this.expandStrokeBoundingBox(t[i].w, e);
        }, HShapeElement.prototype.expandStrokeBoundingBox = function(t, e) {
          var i = 0;
          if (t.keyframes) {
            for (var r = 0; r < t.keyframes.length; r += 1) {
              var s = t.keyframes[r].s;
              s > i && (i = s);
            }
            i *= t.mult;
          } else
            i = t.v * t.mult;
          e.x -= i, e.xMax += i, e.y -= i, e.yMax += i;
        }, HShapeElement.prototype.currentBoxContains = function(t) {
          return this.currentBBox.x <= t.x && this.currentBBox.y <= t.y && this.currentBBox.width + this.currentBBox.x >= t.x + t.width && this.currentBBox.height + this.currentBBox.y >= t.y + t.height;
        }, HShapeElement.prototype.renderInnerContent = function() {
          if (this._renderShapeFrame(), !this.hidden && (this._isFirstFrame || this._mdf)) {
            var t = this.tempBoundingBox, e = 999999;
            if (t.x = e, t.xMax = -e, t.y = e, t.yMax = -e, this.calculateBoundingBox(this.itemsData, t), t.width = t.xMax < t.x ? 0 : t.xMax - t.x, t.height = t.yMax < t.y ? 0 : t.yMax - t.y, this.currentBoxContains(t))
              return;
            var i = false;
            if (this.currentBBox.w !== t.width && (this.currentBBox.w = t.width, this.shapeCont.setAttribute("width", t.width), i = true), this.currentBBox.h !== t.height && (this.currentBBox.h = t.height, this.shapeCont.setAttribute("height", t.height), i = true), i || this.currentBBox.x !== t.x || this.currentBBox.y !== t.y) {
              this.currentBBox.w = t.width, this.currentBBox.h = t.height, this.currentBBox.x = t.x, this.currentBBox.y = t.y, this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
              var r = this.shapeCont.style, s = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
              r.transform = s, r.webkitTransform = s;
            }
          }
        }, extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement), HTextElement.prototype.createContent = function() {
          if (this.isMasked = this.checkMasks(), this.isMasked) {
            this.renderType = "svg", this.compW = this.comp.data.w, this.compH = this.comp.data.h, this.svgElement.setAttribute("width", this.compW), this.svgElement.setAttribute("height", this.compH);
            var t = createNS("g");
            this.maskedElement.appendChild(t), this.innerElem = t;
          } else
            this.renderType = "html", this.innerElem = this.layerElement;
          this.checkParenting();
        }, HTextElement.prototype.buildNewText = function() {
          var t = this.textProperty.currentData;
          this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
          var e = this.innerElem.style, i = t.fc ? this.buildColor(t.fc) : "rgba(0,0,0,0)";
          e.fill = i, e.color = i, t.sc && (e.stroke = this.buildColor(t.sc), e.strokeWidth = t.sw + "px");
          var r, s, a = this.globalData.fontManager.getFontByName(t.f);
          if (!this.globalData.fontManager.chars)
            if (e.fontSize = t.finalSize + "px", e.lineHeight = t.finalSize + "px", a.fClass)
              this.innerElem.className = a.fClass;
            else {
              e.fontFamily = a.fFamily;
              var n = t.fWeight, o = t.fStyle;
              e.fontStyle = o, e.fontWeight = n;
            }
          var h, l, p, f = t.l;
          s = f.length;
          var m, c = this.mHelper, d = "", u = 0;
          for (r = 0; r < s; r += 1) {
            if (this.globalData.fontManager.chars ? (this.textPaths[u] ? h = this.textPaths[u] : ((h = createNS("path")).setAttribute("stroke-linecap", lineCapEnum[1]), h.setAttribute("stroke-linejoin", lineJoinEnum[2]), h.setAttribute("stroke-miterlimit", "4")), this.isMasked || (this.textSpans[u] ? p = (l = this.textSpans[u]).children[0] : ((l = createTag("div")).style.lineHeight = 0, (p = createNS("svg")).appendChild(h), styleDiv(l)))) : this.isMasked ? h = this.textPaths[u] ? this.textPaths[u] : createNS("text") : this.textSpans[u] ? (l = this.textSpans[u], h = this.textPaths[u]) : (styleDiv(l = createTag("span")), styleDiv(h = createTag("span")), l.appendChild(h)), this.globalData.fontManager.chars) {
              var y, g = this.globalData.fontManager.getCharData(t.finalText[r], a.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
              if (y = g ? g.data : null, c.reset(), y && y.shapes && y.shapes.length && (m = y.shapes[0].it, c.scale(t.finalSize / 100, t.finalSize / 100), d = this.createPathShape(c, m), h.setAttribute("d", d)), this.isMasked)
                this.innerElem.appendChild(h);
              else {
                if (this.innerElem.appendChild(l), y && y.shapes) {
                  document.body.appendChild(p);
                  var v = p.getBBox();
                  p.setAttribute("width", v.width + 2), p.setAttribute("height", v.height + 2), p.setAttribute("viewBox", v.x - 1 + " " + (v.y - 1) + " " + (v.width + 2) + " " + (v.height + 2));
                  var b = p.style, x = "translate(" + (v.x - 1) + "px," + (v.y - 1) + "px)";
                  b.transform = x, b.webkitTransform = x, f[r].yOffset = v.y - 1;
                } else
                  p.setAttribute("width", 1), p.setAttribute("height", 1);
                l.appendChild(p);
              }
            } else if (h.textContent = f[r].val, h.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"), this.isMasked)
              this.innerElem.appendChild(h);
            else {
              this.innerElem.appendChild(l);
              var P = h.style, E = "translate3d(0," + -t.finalSize / 1.2 + "px,0)";
              P.transform = E, P.webkitTransform = E;
            }
            this.isMasked ? this.textSpans[u] = h : this.textSpans[u] = l, this.textSpans[u].style.display = "block", this.textPaths[u] = h, u += 1;
          }
          for (; u < this.textSpans.length; )
            this.textSpans[u].style.display = "none", u += 1;
        }, HTextElement.prototype.renderInnerContent = function() {
          var t;
          if (this.validateText(), this.data.singleShape) {
            if (!this._isFirstFrame && !this.lettersChangedFlag)
              return;
            if (this.isMasked && this.finalTransform._matMdf) {
              this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH), t = this.svgElement.style;
              var e = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
              t.transform = e, t.webkitTransform = e;
            }
          }
          if (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
            var i, r, s, a, n, o = 0, h = this.textAnimator.renderedLetters, l = this.textProperty.currentData.l;
            for (r = l.length, i = 0; i < r; i += 1)
              l[i].n ? o += 1 : (a = this.textSpans[i], n = this.textPaths[i], s = h[o], o += 1, s._mdf.m && (this.isMasked ? a.setAttribute("transform", s.m) : (a.style.webkitTransform = s.m, a.style.transform = s.m)), a.style.opacity = s.o, s.sw && s._mdf.sw && n.setAttribute("stroke-width", s.sw), s.sc && s._mdf.sc && n.setAttribute("stroke", s.sc), s.fc && s._mdf.fc && (n.setAttribute("fill", s.fc), n.style.color = s.fc));
            if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
              var p = this.innerElem.getBBox();
              this.currentBBox.w !== p.width && (this.currentBBox.w = p.width, this.svgElement.setAttribute("width", p.width)), this.currentBBox.h !== p.height && (this.currentBBox.h = p.height, this.svgElement.setAttribute("height", p.height));
              if (this.currentBBox.w !== p.width + 2 || this.currentBBox.h !== p.height + 2 || this.currentBBox.x !== p.x - 1 || this.currentBBox.y !== p.y - 1) {
                this.currentBBox.w = p.width + 2, this.currentBBox.h = p.height + 2, this.currentBBox.x = p.x - 1, this.currentBBox.y = p.y - 1, this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h), t = this.svgElement.style;
                var f = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                t.transform = f, t.webkitTransform = f;
              }
            }
          }
        }, extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement), HCameraElement.prototype.setup = function() {
          var t, e, i, r, s = this.comp.threeDElements.length;
          for (t = 0; t < s; t += 1)
            if ("3d" === (e = this.comp.threeDElements[t]).type) {
              i = e.perspectiveElem.style, r = e.container.style;
              var a = this.pe.v + "px", n = "0px 0px 0px", o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
              i.perspective = a, i.webkitPerspective = a, r.transformOrigin = n, r.mozTransformOrigin = n, r.webkitTransformOrigin = n, i.transform = o, i.webkitTransform = o;
            }
        }, HCameraElement.prototype.createElements = function() {
        }, HCameraElement.prototype.hide = function() {
        }, HCameraElement.prototype.renderFrame = function() {
          var t, e, i = this._isFirstFrame;
          if (this.hierarchy)
            for (e = this.hierarchy.length, t = 0; t < e; t += 1)
              i = this.hierarchy[t].finalTransform.mProp._mdf || i;
          if (i || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
            if (this.mat.reset(), this.hierarchy)
              for (t = e = this.hierarchy.length - 1; t >= 0; t -= 1) {
                var r = this.hierarchy[t].finalTransform.mProp;
                this.mat.translate(-r.p.v[0], -r.p.v[1], r.p.v[2]), this.mat.rotateX(-r.or.v[0]).rotateY(-r.or.v[1]).rotateZ(r.or.v[2]), this.mat.rotateX(-r.rx.v).rotateY(-r.ry.v).rotateZ(r.rz.v), this.mat.scale(1 / r.s.v[0], 1 / r.s.v[1], 1 / r.s.v[2]), this.mat.translate(r.a.v[0], r.a.v[1], r.a.v[2]);
              }
            if (this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v), this.a) {
              var s;
              s = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
              var a = Math.sqrt(Math.pow(s[0], 2) + Math.pow(s[1], 2) + Math.pow(s[2], 2)), n = [s[0] / a, s[1] / a, s[2] / a], o = Math.sqrt(n[2] * n[2] + n[0] * n[0]), h = Math.atan2(n[1], o), l = Math.atan2(n[0], -n[2]);
              this.mat.rotateY(l).rotateX(-h);
            }
            this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v), this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]), this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0), this.mat.translate(0, 0, this.pe.v);
            var p = !this._prevMat.equals(this.mat);
            if ((p || this.pe._mdf) && this.comp.threeDElements) {
              var f, m, c;
              for (e = this.comp.threeDElements.length, t = 0; t < e; t += 1)
                if ("3d" === (f = this.comp.threeDElements[t]).type) {
                  if (p) {
                    var d = this.mat.toCSS();
                    (c = f.container.style).transform = d, c.webkitTransform = d;
                  }
                  this.pe._mdf && ((m = f.perspectiveElem.style).perspective = this.pe.v + "px", m.webkitPerspective = this.pe.v + "px");
                }
              this.mat.clone(this._prevMat);
            }
          }
          this._isFirstFrame = false;
        }, HCameraElement.prototype.prepareFrame = function(t) {
          this.prepareProperties(t, true);
        }, HCameraElement.prototype.destroy = function() {
        }, HCameraElement.prototype.getBaseElement = function() {
          return null;
        }, extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement), HImageElement.prototype.createContent = function() {
          var t = this.globalData.getAssetsPath(this.assetData), e = new Image();
          this.data.hasMask ? (this.imageElem = createNS("image"), this.imageElem.setAttribute("width", this.assetData.w + "px"), this.imageElem.setAttribute("height", this.assetData.h + "px"), this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.layerElement.appendChild(this.imageElem), this.baseElement.setAttribute("width", this.assetData.w), this.baseElement.setAttribute("height", this.assetData.h)) : this.layerElement.appendChild(e), e.crossOrigin = "anonymous", e.src = t, this.data.ln && this.baseElement.setAttribute("id", this.data.ln);
        }, extendPrototype([BaseRenderer], HybridRendererBase), HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem, HybridRendererBase.prototype.checkPendingElements = function() {
          for (; this.pendingElements.length; ) {
            this.pendingElements.pop().checkParenting();
          }
        }, HybridRendererBase.prototype.appendElementInPos = function(t, e) {
          var i = t.getBaseElement();
          if (i) {
            var r = this.layers[e];
            if (r.ddd && this.supports3d)
              this.addTo3dContainer(i, e);
            else if (this.threeDElements)
              this.addTo3dContainer(i, e);
            else {
              for (var s, a, n = 0; n < e; )
                this.elements[n] && true !== this.elements[n] && this.elements[n].getBaseElement && (a = this.elements[n], s = (this.layers[n].ddd ? this.getThreeDContainerByPos(n) : a.getBaseElement()) || s), n += 1;
              s ? r.ddd && this.supports3d || this.layerElement.insertBefore(i, s) : r.ddd && this.supports3d || this.layerElement.appendChild(i);
            }
          }
        }, HybridRendererBase.prototype.createShape = function(t) {
          return this.supports3d ? new HShapeElement(t, this.globalData, this) : new SVGShapeElement(t, this.globalData, this);
        }, HybridRendererBase.prototype.createText = function(t) {
          return this.supports3d ? new HTextElement(t, this.globalData, this) : new SVGTextLottieElement(t, this.globalData, this);
        }, HybridRendererBase.prototype.createCamera = function(t) {
          return this.camera = new HCameraElement(t, this.globalData, this), this.camera;
        }, HybridRendererBase.prototype.createImage = function(t) {
          return this.supports3d ? new HImageElement(t, this.globalData, this) : new IImageElement(t, this.globalData, this);
        }, HybridRendererBase.prototype.createSolid = function(t) {
          return this.supports3d ? new HSolidElement(t, this.globalData, this) : new ISolidElement(t, this.globalData, this);
        }, HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull, HybridRendererBase.prototype.getThreeDContainerByPos = function(t) {
          for (var e = 0, i = this.threeDElements.length; e < i; ) {
            if (this.threeDElements[e].startPos <= t && this.threeDElements[e].endPos >= t)
              return this.threeDElements[e].perspectiveElem;
            e += 1;
          }
          return null;
        }, HybridRendererBase.prototype.createThreeDContainer = function(t, e) {
          var i, r, s = createTag("div");
          styleDiv(s);
          var a = createTag("div");
          if (styleDiv(a), "3d" === e) {
            (i = s.style).width = this.globalData.compSize.w + "px", i.height = this.globalData.compSize.h + "px";
            var n = "50% 50%";
            i.webkitTransformOrigin = n, i.mozTransformOrigin = n, i.transformOrigin = n;
            var o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
            (r = a.style).transform = o, r.webkitTransform = o;
          }
          s.appendChild(a);
          var h = { container: a, perspectiveElem: s, startPos: t, endPos: t, type: e };
          return this.threeDElements.push(h), h;
        }, HybridRendererBase.prototype.build3dContainers = function() {
          var t, e, i = this.layers.length, r = "";
          for (t = 0; t < i; t += 1)
            this.layers[t].ddd && 3 !== this.layers[t].ty ? ("3d" !== r && (r = "3d", e = this.createThreeDContainer(t, "3d")), e.endPos = Math.max(e.endPos, t)) : ("2d" !== r && (r = "2d", e = this.createThreeDContainer(t, "2d")), e.endPos = Math.max(e.endPos, t));
          for (t = (i = this.threeDElements.length) - 1; t >= 0; t -= 1)
            this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem);
        }, HybridRendererBase.prototype.addTo3dContainer = function(t, e) {
          for (var i = 0, r = this.threeDElements.length; i < r; ) {
            if (e <= this.threeDElements[i].endPos) {
              for (var s, a = this.threeDElements[i].startPos; a < e; )
                this.elements[a] && this.elements[a].getBaseElement && (s = this.elements[a].getBaseElement()), a += 1;
              s ? this.threeDElements[i].container.insertBefore(t, s) : this.threeDElements[i].container.appendChild(t);
              break;
            }
            i += 1;
          }
        }, HybridRendererBase.prototype.configAnimation = function(t) {
          var e = createTag("div"), i = this.animationItem.wrapper, r = e.style;
          r.width = t.w + "px", r.height = t.h + "px", this.resizerElem = e, styleDiv(e), r.transformStyle = "flat", r.mozTransformStyle = "flat", r.webkitTransformStyle = "flat", this.renderConfig.className && e.setAttribute("class", this.renderConfig.className), i.appendChild(e), r.overflow = "hidden";
          var s = createNS("svg");
          s.setAttribute("width", "1"), s.setAttribute("height", "1"), styleDiv(s), this.resizerElem.appendChild(s);
          var a = createNS("defs");
          s.appendChild(a), this.data = t, this.setupGlobalData(t, s), this.globalData.defs = a, this.layers = t.layers, this.layerElement = this.resizerElem, this.build3dContainers(), this.updateContainerSize();
        }, HybridRendererBase.prototype.destroy = function() {
          var t;
          this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), this.animationItem.container = null, this.globalData.defs = null;
          var e = this.layers ? this.layers.length : 0;
          for (t = 0; t < e; t += 1)
            this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
          this.elements.length = 0, this.destroyed = true, this.animationItem = null;
        }, HybridRendererBase.prototype.updateContainerSize = function() {
          var t, e, i, r, s = this.animationItem.wrapper.offsetWidth, a = this.animationItem.wrapper.offsetHeight, n = s / a;
          this.globalData.compSize.w / this.globalData.compSize.h > n ? (t = s / this.globalData.compSize.w, e = s / this.globalData.compSize.w, i = 0, r = (a - this.globalData.compSize.h * (s / this.globalData.compSize.w)) / 2) : (t = a / this.globalData.compSize.h, e = a / this.globalData.compSize.h, i = (s - this.globalData.compSize.w * (a / this.globalData.compSize.h)) / 2, r = 0);
          var o = this.resizerElem.style;
          o.webkitTransform = "matrix3d(" + t + ",0,0,0,0," + e + ",0,0,0,0,1,0," + i + "," + r + ",0,1)", o.transform = o.webkitTransform;
        }, HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame, HybridRendererBase.prototype.hide = function() {
          this.resizerElem.style.display = "none";
        }, HybridRendererBase.prototype.show = function() {
          this.resizerElem.style.display = "block";
        }, HybridRendererBase.prototype.initItems = function() {
          if (this.buildAllItems(), this.camera)
            this.camera.setup();
          else {
            var t, e = this.globalData.compSize.w, i = this.globalData.compSize.h, r = this.threeDElements.length;
            for (t = 0; t < r; t += 1) {
              var s = this.threeDElements[t].perspectiveElem.style;
              s.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(i, 2)) + "px", s.perspective = s.webkitPerspective;
            }
          }
        }, HybridRendererBase.prototype.searchExtraCompositions = function(t) {
          var e, i = t.length, r = createTag("div");
          for (e = 0; e < i; e += 1)
            if (t[e].xt) {
              var s = this.createComp(t[e], r, this.globalData.comp, null);
              s.initExpressions(), this.globalData.projectInterface.registerComposition(s);
            }
        }, extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement), HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements, HCompElement.prototype.createContainerElements = function() {
          this._createBaseContainerElements(), this.data.hasMask ? (this.svgElement.setAttribute("width", this.data.w), this.svgElement.setAttribute("height", this.data.h), this.transformedElement = this.baseElement) : this.transformedElement = this.layerElement;
        }, HCompElement.prototype.addTo3dContainer = function(t, e) {
          for (var i, r = 0; r < e; )
            this.elements[r] && this.elements[r].getBaseElement && (i = this.elements[r].getBaseElement()), r += 1;
          i ? this.layerElement.insertBefore(t, i) : this.layerElement.appendChild(t);
        }, HCompElement.prototype.createComp = function(t) {
          return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this);
        }, extendPrototype([HybridRendererBase], HybridRenderer), HybridRenderer.prototype.createComp = function(t) {
          return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this);
        };
        var CompExpressionInterface = function(t) {
          function e(e2) {
            for (var i = 0, r = t.layers.length; i < r; ) {
              if (t.layers[i].nm === e2 || t.layers[i].ind === e2)
                return t.elements[i].layerInterface;
              i += 1;
            }
            return null;
          }
          return Object.defineProperty(e, "_name", { value: t.data.nm }), e.layer = e, e.pixelAspect = 1, e.height = t.data.h || t.globalData.compSize.h, e.width = t.data.w || t.globalData.compSize.w, e.pixelAspect = 1, e.frameDuration = 1 / t.globalData.frameRate, e.displayStartTime = 0, e.numLayers = t.layers.length, e;
        };
        function _typeof$2(t) {
          return _typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
            return typeof t2;
          } : function(t2) {
            return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
          }, _typeof$2(t);
        }
        function seedRandom(t, e) {
          var i, r = this, s = 256, a = e.pow(s, 6), n = e.pow(2, 52), o = 2 * n, h = 255;
          function l(t2) {
            var e2, i2 = t2.length, r2 = this, a2 = 0, n2 = r2.i = r2.j = 0, o2 = r2.S = [];
            for (i2 || (t2 = [i2++]); a2 < s; )
              o2[a2] = a2++;
            for (a2 = 0; a2 < s; a2++)
              o2[a2] = o2[n2 = h & n2 + t2[a2 % i2] + (e2 = o2[a2])], o2[n2] = e2;
            r2.g = function(t3) {
              for (var e3, i3 = 0, a3 = r2.i, n3 = r2.j, o3 = r2.S; t3--; )
                e3 = o3[a3 = h & a3 + 1], i3 = i3 * s + o3[h & (o3[a3] = o3[n3 = h & n3 + e3]) + (o3[n3] = e3)];
              return r2.i = a3, r2.j = n3, i3;
            };
          }
          function p(t2, e2) {
            return e2.i = t2.i, e2.j = t2.j, e2.S = t2.S.slice(), e2;
          }
          function f(t2, e2) {
            var i2, r2 = [], s2 = _typeof$2(t2);
            if (e2 && "object" == s2)
              for (i2 in t2)
                try {
                  r2.push(f(t2[i2], e2 - 1));
                } catch (t3) {
                }
            return r2.length ? r2 : "string" == s2 ? t2 : t2 + "\0";
          }
          function m(t2, e2) {
            for (var i2, r2 = t2 + "", s2 = 0; s2 < r2.length; )
              e2[h & s2] = h & (i2 ^= 19 * e2[h & s2]) + r2.charCodeAt(s2++);
            return c(e2);
          }
          function c(t2) {
            return String.fromCharCode.apply(0, t2);
          }
          e.seedrandom = function(h2, d, u) {
            var y = [], g = m(f((d = true === d ? { entropy: true } : d || {}).entropy ? [h2, c(t)] : null === h2 ? function() {
              try {
                i;
                var e2 = new Uint8Array(s);
                return (r.crypto || r.msCrypto).getRandomValues(e2), c(e2);
              } catch (e3) {
                var a2 = r.navigator, n2 = a2 && a2.plugins;
                return [+/* @__PURE__ */ new Date(), r, n2, r.screen, c(t)];
              }
            }() : h2, 3), y), v = new l(y), b = function() {
              for (var t2 = v.g(6), e2 = a, i2 = 0; t2 < n; )
                t2 = (t2 + i2) * s, e2 *= s, i2 = v.g(1);
              for (; t2 >= o; )
                t2 /= 2, e2 /= 2, i2 >>>= 1;
              return (t2 + i2) / e2;
            };
            return b.int32 = function() {
              return 0 | v.g(4);
            }, b.quick = function() {
              return v.g(4) / 4294967296;
            }, b.double = b, m(c(v.S), t), (d.pass || u || function(t2, i2, r2, s2) {
              return s2 && (s2.S && p(s2, v), t2.state = function() {
                return p(v, {});
              }), r2 ? (e.random = t2, i2) : t2;
            })(b, g, "global" in d ? d.global : this == e, d.state);
          }, m(e.random(), t);
        }
        function initialize$2(t) {
          seedRandom([], t);
        }
        var propTypes = { SHAPE: "shape" };
        function _typeof$1(t) {
          return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
            return typeof t2;
          } : function(t2) {
            return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
          }, _typeof$1(t);
        }
        var ExpressionManager = function() {
          var ob = {}, Math = BMMath, window = null, document = null, XMLHttpRequest = null, fetch = null, frames = null, _lottieGlobal = {};
          function resetFrame() {
            _lottieGlobal = {};
          }
          function $bm_isInstanceOfArray(t) {
            return t.constructor === Array || t.constructor === Float32Array;
          }
          function isNumerable(t, e) {
            return "number" === t || e instanceof Number || "boolean" === t || "string" === t;
          }
          function $bm_neg(t) {
            var e = _typeof$1(t);
            if ("number" === e || t instanceof Number || "boolean" === e)
              return -t;
            if ($bm_isInstanceOfArray(t)) {
              var i, r = t.length, s = [];
              for (i = 0; i < r; i += 1)
                s[i] = -t[i];
              return s;
            }
            return t.propType ? t.v : -t;
          }
          initialize$2(BMMath);
          var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, "easeIn").get, easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, "easeOut").get, easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, "easeInOut").get;
          function sum(t, e) {
            var i = _typeof$1(t), r = _typeof$1(e);
            if (isNumerable(i, t) && isNumerable(r, e) || "string" === i || "string" === r)
              return t + e;
            if ($bm_isInstanceOfArray(t) && isNumerable(r, e))
              return (t = t.slice(0))[0] += e, t;
            if (isNumerable(i, t) && $bm_isInstanceOfArray(e))
              return (e = e.slice(0))[0] = t + e[0], e;
            if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
              for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; )
                ("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? o[s] = t[s] + e[s] : o[s] = void 0 === e[s] ? t[s] : t[s] || e[s], s += 1;
              return o;
            }
            return 0;
          }
          var add = sum;
          function sub(t, e) {
            var i = _typeof$1(t), r = _typeof$1(e);
            if (isNumerable(i, t) && isNumerable(r, e))
              return "string" === i && (t = parseInt(t, 10)), "string" === r && (e = parseInt(e, 10)), t - e;
            if ($bm_isInstanceOfArray(t) && isNumerable(r, e))
              return (t = t.slice(0))[0] -= e, t;
            if (isNumerable(i, t) && $bm_isInstanceOfArray(e))
              return (e = e.slice(0))[0] = t - e[0], e;
            if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
              for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; )
                ("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? o[s] = t[s] - e[s] : o[s] = void 0 === e[s] ? t[s] : t[s] || e[s], s += 1;
              return o;
            }
            return 0;
          }
          function mul(t, e) {
            var i, r, s, a = _typeof$1(t), n = _typeof$1(e);
            if (isNumerable(a, t) && isNumerable(n, e))
              return t * e;
            if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
              for (s = t.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1)
                i[r] = t[r] * e;
              return i;
            }
            if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
              for (s = e.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1)
                i[r] = t * e[r];
              return i;
            }
            return 0;
          }
          function div(t, e) {
            var i, r, s, a = _typeof$1(t), n = _typeof$1(e);
            if (isNumerable(a, t) && isNumerable(n, e))
              return t / e;
            if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
              for (s = t.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1)
                i[r] = t[r] / e;
              return i;
            }
            if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
              for (s = e.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1)
                i[r] = t / e[r];
              return i;
            }
            return 0;
          }
          function mod(t, e) {
            return "string" == typeof t && (t = parseInt(t, 10)), "string" == typeof e && (e = parseInt(e, 10)), t % e;
          }
          var $bm_sum = sum, $bm_sub = sub, $bm_mul = mul, $bm_div = div, $bm_mod = mod;
          function clamp(t, e, i) {
            if (e > i) {
              var r = i;
              i = e, e = r;
            }
            return Math.min(Math.max(t, e), i);
          }
          function radiansToDegrees(t) {
            return t / degToRads;
          }
          var radians_to_degrees = radiansToDegrees;
          function degreesToRadians(t) {
            return t * degToRads;
          }
          var degrees_to_radians = radiansToDegrees, helperLengthArray = [0, 0, 0, 0, 0, 0];
          function length(t, e) {
            if ("number" == typeof t || t instanceof Number)
              return e = e || 0, Math.abs(t - e);
            var i;
            e || (e = helperLengthArray);
            var r = Math.min(t.length, e.length), s = 0;
            for (i = 0; i < r; i += 1)
              s += Math.pow(e[i] - t[i], 2);
            return Math.sqrt(s);
          }
          function normalize(t) {
            return div(t, length(t));
          }
          function rgbToHsl(t) {
            var e, i, r = t[0], s = t[1], a = t[2], n = Math.max(r, s, a), o = Math.min(r, s, a), h = (n + o) / 2;
            if (n === o)
              e = 0, i = 0;
            else {
              var l = n - o;
              switch (i = h > 0.5 ? l / (2 - n - o) : l / (n + o), n) {
                case r:
                  e = (s - a) / l + (s < a ? 6 : 0);
                  break;
                case s:
                  e = (a - r) / l + 2;
                  break;
                case a:
                  e = (r - s) / l + 4;
              }
              e /= 6;
            }
            return [e, i, h, t[3]];
          }
          function hue2rgb(t, e, i) {
            return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < 0.5 ? e : i < 2 / 3 ? t + (e - t) * (2 / 3 - i) * 6 : t;
          }
          function hslToRgb(t) {
            var e, i, r, s = t[0], a = t[1], n = t[2];
            if (0 === a)
              e = n, r = n, i = n;
            else {
              var o = n < 0.5 ? n * (1 + a) : n + a - n * a, h = 2 * n - o;
              e = hue2rgb(h, o, s + 1 / 3), i = hue2rgb(h, o, s), r = hue2rgb(h, o, s - 1 / 3);
            }
            return [e, i, r, t[3]];
          }
          function linear(t, e, i, r, s) {
            if (void 0 !== r && void 0 !== s || (r = e, s = i, e = 0, i = 1), i < e) {
              var a = i;
              i = e, e = a;
            }
            if (t <= e)
              return r;
            if (t >= i)
              return s;
            var n, o = i === e ? 0 : (t - e) / (i - e);
            if (!r.length)
              return r + (s - r) * o;
            var h = r.length, l = createTypedArray("float32", h);
            for (n = 0; n < h; n += 1)
              l[n] = r[n] + (s[n] - r[n]) * o;
            return l;
          }
          function random(t, e) {
            if (void 0 === e && (void 0 === t ? (t = 0, e = 1) : (e = t, t = void 0)), e.length) {
              var i, r = e.length;
              t || (t = createTypedArray("float32", r));
              var s = createTypedArray("float32", r), a = BMMath.random();
              for (i = 0; i < r; i += 1)
                s[i] = t[i] + a * (e[i] - t[i]);
              return s;
            }
            return void 0 === t && (t = 0), t + BMMath.random() * (e - t);
          }
          function createPath(t, e, i, r) {
            var s, a = t.length, n = shapePool.newElement();
            n.setPathData(!!r, a);
            var o, h, l = [0, 0];
            for (s = 0; s < a; s += 1)
              o = e && e[s] ? e[s] : l, h = i && i[s] ? i[s] : l, n.setTripleAt(t[s][0], t[s][1], h[0] + t[s][0], h[1] + t[s][1], o[0] + t[s][0], o[1] + t[s][1], s, true);
            return n;
          }
          function initiateExpression(elem, data, property) {
            function noOp(t) {
              return t;
            }
            if (!elem.globalData.renderConfig.runExpressions)
              return noOp;
            var val = data.x, needsVelocity = /velocity(?![\w\d])/.test(val), _needsRandom = -1 !== val.indexOf("random"), elemType = elem.data.ty, transform, $bm_transform, content, effect, thisProperty = property;
            thisProperty.valueAtTime = thisProperty.getValueAtTime, Object.defineProperty(thisProperty, "value", { get: function() {
              return thisProperty.v;
            } }), elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate, elem.comp.displayStartTime = 0;
            var inPoint = elem.data.ip / elem.comp.globalData.frameRate, outPoint = elem.data.op / elem.comp.globalData.frameRate, width = elem.data.sw ? elem.data.sw : 0, height = elem.data.sh ? elem.data.sh : 0, name = elem.data.nm, loopIn, loop_in, loopOut, loop_out, smooth, toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime, scoped_bm_rt, expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0], numKeys = property.kf ? data.k.length : 0, active = !this.data || true !== this.data.hd, wiggle = function(t, e) {
              var i, r, s = this.pv.length ? this.pv.length : 1, a = createTypedArray("float32", s);
              var n = Math.floor(5 * time);
              for (i = 0, r = 0; i < n; ) {
                for (r = 0; r < s; r += 1)
                  a[r] += -e + 2 * e * BMMath.random();
                i += 1;
              }
              var o = 5 * time, h = o - Math.floor(o), l = createTypedArray("float32", s);
              if (s > 1) {
                for (r = 0; r < s; r += 1)
                  l[r] = this.pv[r] + a[r] + (-e + 2 * e * BMMath.random()) * h;
                return l;
              }
              return this.pv + a[0] + (-e + 2 * e * BMMath.random()) * h;
            }.bind(this);
            function loopInDuration(t, e) {
              return loopIn(t, e, true);
            }
            function loopOutDuration(t, e) {
              return loopOut(t, e, true);
            }
            thisProperty.loopIn && (loopIn = thisProperty.loopIn.bind(thisProperty), loop_in = loopIn), thisProperty.loopOut && (loopOut = thisProperty.loopOut.bind(thisProperty), loop_out = loopOut), thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)), this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)), this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
            var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface), time, velocity, value, text, textIndex, textTotal, selectorValue;
            function lookAt(t, e) {
              var i = [e[0] - t[0], e[1] - t[1], e[2] - t[2]], r = Math.atan2(i[0], Math.sqrt(i[1] * i[1] + i[2] * i[2])) / degToRads;
              return [-Math.atan2(i[1], i[2]) / degToRads, r, 0];
            }
            function easeOut(t, e, i, r, s) {
              return applyEase(easeOutBez, t, e, i, r, s);
            }
            function easeIn(t, e, i, r, s) {
              return applyEase(easeInBez, t, e, i, r, s);
            }
            function ease(t, e, i, r, s) {
              return applyEase(easeInOutBez, t, e, i, r, s);
            }
            function applyEase(t, e, i, r, s, a) {
              void 0 === s ? (s = i, a = r) : e = (e - i) / (r - i), e > 1 ? e = 1 : e < 0 && (e = 0);
              var n = t(e);
              if ($bm_isInstanceOfArray(s)) {
                var o, h = s.length, l = createTypedArray("float32", h);
                for (o = 0; o < h; o += 1)
                  l[o] = (a[o] - s[o]) * n + s[o];
                return l;
              }
              return (a - s) * n + s;
            }
            function nearestKey(t) {
              var e, i, r, s = data.k.length;
              if (data.k.length && "number" != typeof data.k[0])
                if (i = -1, (t *= elem.comp.globalData.frameRate) < data.k[0].t)
                  i = 1, r = data.k[0].t;
                else {
                  for (e = 0; e < s - 1; e += 1) {
                    if (t === data.k[e].t) {
                      i = e + 1, r = data.k[e].t;
                      break;
                    }
                    if (t > data.k[e].t && t < data.k[e + 1].t) {
                      t - data.k[e].t > data.k[e + 1].t - t ? (i = e + 2, r = data.k[e + 1].t) : (i = e + 1, r = data.k[e].t);
                      break;
                    }
                  }
                  -1 === i && (i = e + 1, r = data.k[e].t);
                }
              else
                i = 0, r = 0;
              var a = {};
              return a.index = i, a.time = r / elem.comp.globalData.frameRate, a;
            }
            function key(t) {
              var e, i, r;
              if (!data.k.length || "number" == typeof data.k[0])
                throw new Error("The property has no keyframe at index " + t);
              t -= 1, e = { time: data.k[t].t / elem.comp.globalData.frameRate, value: [] };
              var s = Object.prototype.hasOwnProperty.call(data.k[t], "s") ? data.k[t].s : data.k[t - 1].e;
              for (r = s.length, i = 0; i < r; i += 1)
                e[i] = s[i], e.value[i] = s[i];
              return e;
            }
            function framesToTime(t, e) {
              return e || (e = elem.comp.globalData.frameRate), t / e;
            }
            function timeToFrames(t, e) {
              return t || 0 === t || (t = time), e || (e = elem.comp.globalData.frameRate), t * e;
            }
            function seedRandom(t) {
              BMMath.seedrandom(randSeed + t);
            }
            function sourceRectAtTime() {
              return elem.sourceRectAtTime();
            }
            function substring(t, e) {
              return "string" == typeof value ? void 0 === e ? value.substring(t) : value.substring(t, e) : "";
            }
            function substr(t, e) {
              return "string" == typeof value ? void 0 === e ? value.substr(t) : value.substr(t, e) : "";
            }
            function posterizeTime(t) {
              time = 0 === t ? 0 : Math.floor(time * t) / t, value = valueAtTime(time);
            }
            var index = elem.data.ind, hasParent = !(!elem.hierarchy || !elem.hierarchy.length), parent, randSeed = Math.floor(1e6 * Math.random()), globalData = elem.globalData;
            function executeExpression(t) {
              return value = t, this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType ? value : ("textSelector" === this.propType && (textIndex = this.textIndex, textTotal = this.textTotal, selectorValue = this.selectorValue), thisLayer || (text = elem.layerInterface.text, thisLayer = elem.layerInterface, thisComp = elem.comp.compInterface, toWorld = thisLayer.toWorld.bind(thisLayer), fromWorld = thisLayer.fromWorld.bind(thisLayer), fromComp = thisLayer.fromComp.bind(thisLayer), toComp = thisLayer.toComp.bind(thisLayer), mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null, fromCompToSurface = fromComp), transform || (transform = elem.layerInterface("ADBE Transform Group"), $bm_transform = transform, transform && (anchorPoint = transform.anchorPoint)), 4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")), effect || (effect = thisLayer(4)), (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface), time = this.comp.renderedFrame / this.comp.globalData.frameRate, _needsRandom && seedRandom(randSeed + time), needsVelocity && (velocity = velocityAtTime(time)), expression_function(), this.frameExpressionId = elem.globalData.frameId, scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt);
            }
            return executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData], executeExpression;
          }
          return ob.initiateExpression = initiateExpression, ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath, _lottieGlobal], ob.resetFrame = resetFrame, ob;
        }(), Expressions = function() {
          var t = {};
          return t.initExpressions = function(t2) {
            var e = 0, i = [];
            t2.renderer.compInterface = CompExpressionInterface(t2.renderer), t2.renderer.globalData.projectInterface.registerComposition(t2.renderer), t2.renderer.globalData.pushExpression = function() {
              e += 1;
            }, t2.renderer.globalData.popExpression = function() {
              0 == (e -= 1) && function() {
                var t3, e2 = i.length;
                for (t3 = 0; t3 < e2; t3 += 1)
                  i[t3].release();
                i.length = 0;
              }();
            }, t2.renderer.globalData.registerExpressionProperty = function(t3) {
              -1 === i.indexOf(t3) && i.push(t3);
            };
          }, t.resetFrame = ExpressionManager.resetFrame, t;
        }(), MaskManagerInterface = function() {
          function t(t2, e) {
            this._mask = t2, this._data = e;
          }
          Object.defineProperty(t.prototype, "maskPath", { get: function() {
            return this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop;
          } }), Object.defineProperty(t.prototype, "maskOpacity", { get: function() {
            return this._mask.op.k && this._mask.op.getValue(), 100 * this._mask.op.v;
          } });
          return function(e) {
            var i, r = createSizedArray(e.viewData.length), s = e.viewData.length;
            for (i = 0; i < s; i += 1)
              r[i] = new t(e.viewData[i], e.masksProperties[i]);
            return function(t2) {
              for (i = 0; i < s; ) {
                if (e.masksProperties[i].nm === t2)
                  return r[i];
                i += 1;
              }
              return null;
            };
          };
        }(), ExpressionPropertyInterface = function() {
          var t = { pv: 0, v: 0, mult: 1 }, e = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };
          function i(t2, e2, i2) {
            Object.defineProperty(t2, "velocity", { get: function() {
              return e2.getVelocityAtTime(e2.comp.currentFrame);
            } }), t2.numKeys = e2.keyframes ? e2.keyframes.length : 0, t2.key = function(r2) {
              if (!t2.numKeys)
                return 0;
              var s = "";
              s = "s" in e2.keyframes[r2 - 1] ? e2.keyframes[r2 - 1].s : "e" in e2.keyframes[r2 - 2] ? e2.keyframes[r2 - 2].e : e2.keyframes[r2 - 2].s;
              var a = "unidimensional" === i2 ? new Number(s) : Object.assign({}, s);
              return a.time = e2.keyframes[r2 - 1].t / e2.elem.comp.globalData.frameRate, a.value = "unidimensional" === i2 ? s[0] : s, a;
            }, t2.valueAtTime = e2.getValueAtTime, t2.speedAtTime = e2.getSpeedAtTime, t2.velocityAtTime = e2.getVelocityAtTime, t2.propertyGroup = e2.propertyGroup;
          }
          function r() {
            return t;
          }
          return function(s) {
            return s ? "unidimensional" === s.propType ? function(e2) {
              e2 && "pv" in e2 || (e2 = t);
              var r2 = 1 / e2.mult, s2 = e2.pv * r2, a = new Number(s2);
              return a.value = s2, i(a, e2, "unidimensional"), function() {
                return e2.k && e2.getValue(), s2 = e2.v * r2, a.value !== s2 && ((a = new Number(s2)).value = s2, i(a, e2, "unidimensional")), a;
              };
            }(s) : function(t2) {
              t2 && "pv" in t2 || (t2 = e);
              var r2 = 1 / t2.mult, s2 = t2.data && t2.data.l || t2.pv.length, a = createTypedArray("float32", s2), n = createTypedArray("float32", s2);
              return a.value = n, i(a, t2, "multidimensional"), function() {
                t2.k && t2.getValue();
                for (var e2 = 0; e2 < s2; e2 += 1)
                  n[e2] = t2.v[e2] * r2, a[e2] = n[e2];
                return a;
              };
            }(s) : r;
          };
        }(), TransformExpressionInterface = function(t) {
          function e(t2) {
            switch (t2) {
              case "scale":
              case "Scale":
              case "ADBE Scale":
              case 6:
                return e.scale;
              case "rotation":
              case "Rotation":
              case "ADBE Rotation":
              case "ADBE Rotate Z":
              case 10:
                return e.rotation;
              case "ADBE Rotate X":
                return e.xRotation;
              case "ADBE Rotate Y":
                return e.yRotation;
              case "position":
              case "Position":
              case "ADBE Position":
              case 2:
                return e.position;
              case "ADBE Position_0":
                return e.xPosition;
              case "ADBE Position_1":
                return e.yPosition;
              case "ADBE Position_2":
                return e.zPosition;
              case "anchorPoint":
              case "AnchorPoint":
              case "Anchor Point":
              case "ADBE AnchorPoint":
              case 1:
                return e.anchorPoint;
              case "opacity":
              case "Opacity":
              case 11:
                return e.opacity;
              default:
                return null;
            }
          }
          var i, r, s, a;
          return Object.defineProperty(e, "rotation", { get: ExpressionPropertyInterface(t.r || t.rz) }), Object.defineProperty(e, "zRotation", { get: ExpressionPropertyInterface(t.rz || t.r) }), Object.defineProperty(e, "xRotation", { get: ExpressionPropertyInterface(t.rx) }), Object.defineProperty(e, "yRotation", { get: ExpressionPropertyInterface(t.ry) }), Object.defineProperty(e, "scale", { get: ExpressionPropertyInterface(t.s) }), t.p ? a = ExpressionPropertyInterface(t.p) : (i = ExpressionPropertyInterface(t.px), r = ExpressionPropertyInterface(t.py), t.pz && (s = ExpressionPropertyInterface(t.pz))), Object.defineProperty(e, "position", { get: function() {
            return t.p ? a() : [i(), r(), s ? s() : 0];
          } }), Object.defineProperty(e, "xPosition", { get: ExpressionPropertyInterface(t.px) }), Object.defineProperty(e, "yPosition", { get: ExpressionPropertyInterface(t.py) }), Object.defineProperty(e, "zPosition", { get: ExpressionPropertyInterface(t.pz) }), Object.defineProperty(e, "anchorPoint", { get: ExpressionPropertyInterface(t.a) }), Object.defineProperty(e, "opacity", { get: ExpressionPropertyInterface(t.o) }), Object.defineProperty(e, "skew", { get: ExpressionPropertyInterface(t.sk) }), Object.defineProperty(e, "skewAxis", { get: ExpressionPropertyInterface(t.sa) }), Object.defineProperty(e, "orientation", { get: ExpressionPropertyInterface(t.or) }), e;
        }, LayerExpressionInterface = function() {
          function t(t2) {
            var e2 = new Matrix();
            void 0 !== t2 ? this._elem.finalTransform.mProp.getValueAtTime(t2).clone(e2) : this._elem.finalTransform.mProp.applyToMatrix(e2);
            return e2;
          }
          function e(t2, e2) {
            var i2 = this.getMatrix(e2);
            return i2.props[12] = 0, i2.props[13] = 0, i2.props[14] = 0, this.applyPoint(i2, t2);
          }
          function i(t2, e2) {
            var i2 = this.getMatrix(e2);
            return this.applyPoint(i2, t2);
          }
          function r(t2, e2) {
            var i2 = this.getMatrix(e2);
            return i2.props[12] = 0, i2.props[13] = 0, i2.props[14] = 0, this.invertPoint(i2, t2);
          }
          function s(t2, e2) {
            var i2 = this.getMatrix(e2);
            return this.invertPoint(i2, t2);
          }
          function a(t2, e2) {
            if (this._elem.hierarchy && this._elem.hierarchy.length) {
              var i2, r2 = this._elem.hierarchy.length;
              for (i2 = 0; i2 < r2; i2 += 1)
                this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(t2);
            }
            return t2.applyToPointArray(e2[0], e2[1], e2[2] || 0);
          }
          function n(t2, e2) {
            if (this._elem.hierarchy && this._elem.hierarchy.length) {
              var i2, r2 = this._elem.hierarchy.length;
              for (i2 = 0; i2 < r2; i2 += 1)
                this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(t2);
            }
            return t2.inversePoint(e2);
          }
          function o(t2) {
            var e2 = new Matrix();
            if (e2.reset(), this._elem.finalTransform.mProp.applyToMatrix(e2), this._elem.hierarchy && this._elem.hierarchy.length) {
              var i2, r2 = this._elem.hierarchy.length;
              for (i2 = 0; i2 < r2; i2 += 1)
                this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(e2);
              return e2.inversePoint(t2);
            }
            return e2.inversePoint(t2);
          }
          function h() {
            return [1, 1, 1, 1];
          }
          return function(l) {
            var p;
            function f(t2) {
              switch (t2) {
                case "ADBE Root Vectors Group":
                case "Contents":
                case 2:
                  return f.shapeInterface;
                case 1:
                case 6:
                case "Transform":
                case "transform":
                case "ADBE Transform Group":
                  return p;
                case 4:
                case "ADBE Effect Parade":
                case "effects":
                case "Effects":
                  return f.effect;
                case "ADBE Text Properties":
                  return f.textInterface;
                default:
                  return null;
              }
            }
            f.getMatrix = t, f.invertPoint = n, f.applyPoint = a, f.toWorld = i, f.toWorldVec = e, f.fromWorld = s, f.fromWorldVec = r, f.toComp = i, f.fromComp = o, f.sampleImage = h, f.sourceRectAtTime = l.sourceRectAtTime.bind(l), f._elem = l;
            var m = getDescriptor(p = TransformExpressionInterface(l.finalTransform.mProp), "anchorPoint");
            return Object.defineProperties(f, { hasParent: { get: function() {
              return l.hierarchy.length;
            } }, parent: { get: function() {
              return l.hierarchy[0].layerInterface;
            } }, rotation: getDescriptor(p, "rotation"), scale: getDescriptor(p, "scale"), position: getDescriptor(p, "position"), opacity: getDescriptor(p, "opacity"), anchorPoint: m, anchor_point: m, transform: { get: function() {
              return p;
            } }, active: { get: function() {
              return l.isInRange;
            } } }), f.startTime = l.data.st, f.index = l.data.ind, f.source = l.data.refId, f.height = 0 === l.data.ty ? l.data.h : 100, f.width = 0 === l.data.ty ? l.data.w : 100, f.inPoint = l.data.ip / l.comp.globalData.frameRate, f.outPoint = l.data.op / l.comp.globalData.frameRate, f._name = l.data.nm, f.registerMaskInterface = function(t2) {
              f.mask = new MaskManagerInterface(t2, l);
            }, f.registerEffectsInterface = function(t2) {
              f.effect = t2;
            }, f;
          };
        }(), propertyGroupFactory = function(t, e) {
          return function(i) {
            return (i = void 0 === i ? 1 : i) <= 0 ? t : e(i - 1);
          };
        }, PropertyInterface = function(t, e) {
          var i = { _name: t };
          return function(t2) {
            return (t2 = void 0 === t2 ? 1 : t2) <= 0 ? i : e(t2 - 1);
          };
        }, EffectsExpressionInterface = function() {
          function t(i, r, s, a) {
            function n(t2) {
              for (var e2 = i.ef, r2 = 0, s2 = e2.length; r2 < s2; ) {
                if (t2 === e2[r2].nm || t2 === e2[r2].mn || t2 === e2[r2].ix)
                  return 5 === e2[r2].ty ? l[r2] : l[r2]();
                r2 += 1;
              }
              throw new Error();
            }
            var o, h = propertyGroupFactory(n, s), l = [], p = i.ef.length;
            for (o = 0; o < p; o += 1)
              5 === i.ef[o].ty ? l.push(t(i.ef[o], r.effectElements[o], r.effectElements[o].propertyGroup, a)) : l.push(e(r.effectElements[o], i.ef[o].ty, a, h));
            return "ADBE Color Control" === i.mn && Object.defineProperty(n, "color", { get: function() {
              return l[0]();
            } }), Object.defineProperties(n, { numProperties: { get: function() {
              return i.np;
            } }, _name: { value: i.nm }, propertyGroup: { value: h } }), n.enabled = 0 !== i.en, n.active = n.enabled, n;
          }
          function e(t2, e2, i, r) {
            var s = ExpressionPropertyInterface(t2.p);
            return t2.p.setGroupProperty && t2.p.setGroupProperty(PropertyInterface("", r)), function() {
              return 10 === e2 ? i.comp.compInterface(t2.p.v) : s();
            };
          }
          return { createEffectsInterface: function(e2, i) {
            if (e2.effectsManager) {
              var r, s = [], a = e2.data.ef, n = e2.effectsManager.effectElements.length;
              for (r = 0; r < n; r += 1)
                s.push(t(a[r], e2.effectsManager.effectElements[r], i, e2));
              var o = e2.data.ef || [], h = function(t2) {
                for (r = 0, n = o.length; r < n; ) {
                  if (t2 === o[r].nm || t2 === o[r].mn || t2 === o[r].ix)
                    return s[r];
                  r += 1;
                }
                return null;
              };
              return Object.defineProperty(h, "numProperties", { get: function() {
                return o.length;
              } }), h;
            }
            return null;
          } };
        }(), ShapePathInterface = function(t, e, i) {
          var r = e.sh;
          function s(t2) {
            return "Shape" === t2 || "shape" === t2 || "Path" === t2 || "path" === t2 || "ADBE Vector Shape" === t2 || 2 === t2 ? s.path : null;
          }
          var a = propertyGroupFactory(s, i);
          return r.setGroupProperty(PropertyInterface("Path", a)), Object.defineProperties(s, { path: { get: function() {
            return r.k && r.getValue(), r;
          } }, shape: { get: function() {
            return r.k && r.getValue(), r;
          } }, _name: { value: t.nm }, ix: { value: t.ix }, propertyIndex: { value: t.ix }, mn: { value: t.mn }, propertyGroup: { value: i } }), s;
        }, ShapeExpressionInterface = function() {
          function t(t2, o2, c) {
            var d, u = [], y = t2 ? t2.length : 0;
            for (d = 0; d < y; d += 1)
              "gr" === t2[d].ty ? u.push(e(t2[d], o2[d], c)) : "fl" === t2[d].ty ? u.push(i(t2[d], o2[d], c)) : "st" === t2[d].ty ? u.push(a(t2[d], o2[d], c)) : "tm" === t2[d].ty ? u.push(n(t2[d], o2[d], c)) : "tr" === t2[d].ty || ("el" === t2[d].ty ? u.push(h(t2[d], o2[d], c)) : "sr" === t2[d].ty ? u.push(l(t2[d], o2[d], c)) : "sh" === t2[d].ty ? u.push(ShapePathInterface(t2[d], o2[d], c)) : "rc" === t2[d].ty ? u.push(p(t2[d], o2[d], c)) : "rd" === t2[d].ty ? u.push(f(t2[d], o2[d], c)) : "rp" === t2[d].ty ? u.push(m(t2[d], o2[d], c)) : "gf" === t2[d].ty ? u.push(r(t2[d], o2[d], c)) : u.push(s(t2[d], o2[d])));
            return u;
          }
          function e(e2, i2, r2) {
            var s2 = function(t2) {
              switch (t2) {
                case "ADBE Vectors Group":
                case "Contents":
                case 2:
                  return s2.content;
                default:
                  return s2.transform;
              }
            };
            s2.propertyGroup = propertyGroupFactory(s2, r2);
            var a2 = function(e3, i3, r3) {
              var s3, a3 = function(t2) {
                for (var e4 = 0, i4 = s3.length; e4 < i4; ) {
                  if (s3[e4]._name === t2 || s3[e4].mn === t2 || s3[e4].propertyIndex === t2 || s3[e4].ix === t2 || s3[e4].ind === t2)
                    return s3[e4];
                  e4 += 1;
                }
                return "number" == typeof t2 ? s3[t2 - 1] : null;
              };
              a3.propertyGroup = propertyGroupFactory(a3, r3), s3 = t(e3.it, i3.it, a3.propertyGroup), a3.numProperties = s3.length;
              var n3 = o(e3.it[e3.it.length - 1], i3.it[i3.it.length - 1], a3.propertyGroup);
              return a3.transform = n3, a3.propertyIndex = e3.cix, a3._name = e3.nm, a3;
            }(e2, i2, s2.propertyGroup), n2 = o(e2.it[e2.it.length - 1], i2.it[i2.it.length - 1], s2.propertyGroup);
            return s2.content = a2, s2.transform = n2, Object.defineProperty(s2, "_name", { get: function() {
              return e2.nm;
            } }), s2.numProperties = e2.np, s2.propertyIndex = e2.ix, s2.nm = e2.nm, s2.mn = e2.mn, s2;
          }
          function i(t2, e2, i2) {
            function r2(t3) {
              return "Color" === t3 || "color" === t3 ? r2.color : "Opacity" === t3 || "opacity" === t3 ? r2.opacity : null;
            }
            return Object.defineProperties(r2, { color: { get: ExpressionPropertyInterface(e2.c) }, opacity: { get: ExpressionPropertyInterface(e2.o) }, _name: { value: t2.nm }, mn: { value: t2.mn } }), e2.c.setGroupProperty(PropertyInterface("Color", i2)), e2.o.setGroupProperty(PropertyInterface("Opacity", i2)), r2;
          }
          function r(t2, e2, i2) {
            function r2(t3) {
              return "Start Point" === t3 || "start point" === t3 ? r2.startPoint : "End Point" === t3 || "end point" === t3 ? r2.endPoint : "Opacity" === t3 || "opacity" === t3 ? r2.opacity : null;
            }
            return Object.defineProperties(r2, { startPoint: { get: ExpressionPropertyInterface(e2.s) }, endPoint: { get: ExpressionPropertyInterface(e2.e) }, opacity: { get: ExpressionPropertyInterface(e2.o) }, type: { get: function() {
              return "a";
            } }, _name: { value: t2.nm }, mn: { value: t2.mn } }), e2.s.setGroupProperty(PropertyInterface("Start Point", i2)), e2.e.setGroupProperty(PropertyInterface("End Point", i2)), e2.o.setGroupProperty(PropertyInterface("Opacity", i2)), r2;
          }
          function s() {
            return function() {
              return null;
            };
          }
          function a(t2, e2, i2) {
            var r2, s2 = propertyGroupFactory(l2, i2), a2 = propertyGroupFactory(h2, s2);
            function n2(i3) {
              Object.defineProperty(h2, t2.d[i3].nm, { get: ExpressionPropertyInterface(e2.d.dataProps[i3].p) });
            }
            var o2 = t2.d ? t2.d.length : 0, h2 = {};
            for (r2 = 0; r2 < o2; r2 += 1)
              n2(r2), e2.d.dataProps[r2].p.setGroupProperty(a2);
            function l2(t3) {
              return "Color" === t3 || "color" === t3 ? l2.color : "Opacity" === t3 || "opacity" === t3 ? l2.opacity : "Stroke Width" === t3 || "stroke width" === t3 ? l2.strokeWidth : null;
            }
            return Object.defineProperties(l2, { color: { get: ExpressionPropertyInterface(e2.c) }, opacity: { get: ExpressionPropertyInterface(e2.o) }, strokeWidth: { get: ExpressionPropertyInterface(e2.w) }, dash: { get: function() {
              return h2;
            } }, _name: { value: t2.nm }, mn: { value: t2.mn } }), e2.c.setGroupProperty(PropertyInterface("Color", s2)), e2.o.setGroupProperty(PropertyInterface("Opacity", s2)), e2.w.setGroupProperty(PropertyInterface("Stroke Width", s2)), l2;
          }
          function n(t2, e2, i2) {
            function r2(e3) {
              return e3 === t2.e.ix || "End" === e3 || "end" === e3 ? r2.end : e3 === t2.s.ix ? r2.start : e3 === t2.o.ix ? r2.offset : null;
            }
            var s2 = propertyGroupFactory(r2, i2);
            return r2.propertyIndex = t2.ix, e2.s.setGroupProperty(PropertyInterface("Start", s2)), e2.e.setGroupProperty(PropertyInterface("End", s2)), e2.o.setGroupProperty(PropertyInterface("Offset", s2)), r2.propertyIndex = t2.ix, r2.propertyGroup = i2, Object.defineProperties(r2, { start: { get: ExpressionPropertyInterface(e2.s) }, end: { get: ExpressionPropertyInterface(e2.e) }, offset: { get: ExpressionPropertyInterface(e2.o) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
          }
          function o(t2, e2, i2) {
            function r2(e3) {
              return t2.a.ix === e3 || "Anchor Point" === e3 ? r2.anchorPoint : t2.o.ix === e3 || "Opacity" === e3 ? r2.opacity : t2.p.ix === e3 || "Position" === e3 ? r2.position : t2.r.ix === e3 || "Rotation" === e3 || "ADBE Vector Rotation" === e3 ? r2.rotation : t2.s.ix === e3 || "Scale" === e3 ? r2.scale : t2.sk && t2.sk.ix === e3 || "Skew" === e3 ? r2.skew : t2.sa && t2.sa.ix === e3 || "Skew Axis" === e3 ? r2.skewAxis : null;
            }
            var s2 = propertyGroupFactory(r2, i2);
            return e2.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", s2)), e2.transform.mProps.p.setGroupProperty(PropertyInterface("Position", s2)), e2.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", s2)), e2.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", s2)), e2.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", s2)), e2.transform.mProps.sk && (e2.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", s2)), e2.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", s2))), e2.transform.op.setGroupProperty(PropertyInterface("Opacity", s2)), Object.defineProperties(r2, { opacity: { get: ExpressionPropertyInterface(e2.transform.mProps.o) }, position: { get: ExpressionPropertyInterface(e2.transform.mProps.p) }, anchorPoint: { get: ExpressionPropertyInterface(e2.transform.mProps.a) }, scale: { get: ExpressionPropertyInterface(e2.transform.mProps.s) }, rotation: { get: ExpressionPropertyInterface(e2.transform.mProps.r) }, skew: { get: ExpressionPropertyInterface(e2.transform.mProps.sk) }, skewAxis: { get: ExpressionPropertyInterface(e2.transform.mProps.sa) }, _name: { value: t2.nm } }), r2.ty = "tr", r2.mn = t2.mn, r2.propertyGroup = i2, r2;
          }
          function h(t2, e2, i2) {
            function r2(e3) {
              return t2.p.ix === e3 ? r2.position : t2.s.ix === e3 ? r2.size : null;
            }
            var s2 = propertyGroupFactory(r2, i2);
            r2.propertyIndex = t2.ix;
            var a2 = "tm" === e2.sh.ty ? e2.sh.prop : e2.sh;
            return a2.s.setGroupProperty(PropertyInterface("Size", s2)), a2.p.setGroupProperty(PropertyInterface("Position", s2)), Object.defineProperties(r2, { size: { get: ExpressionPropertyInterface(a2.s) }, position: { get: ExpressionPropertyInterface(a2.p) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
          }
          function l(t2, e2, i2) {
            function r2(e3) {
              return t2.p.ix === e3 ? r2.position : t2.r.ix === e3 ? r2.rotation : t2.pt.ix === e3 ? r2.points : t2.or.ix === e3 || "ADBE Vector Star Outer Radius" === e3 ? r2.outerRadius : t2.os.ix === e3 ? r2.outerRoundness : !t2.ir || t2.ir.ix !== e3 && "ADBE Vector Star Inner Radius" !== e3 ? t2.is && t2.is.ix === e3 ? r2.innerRoundness : null : r2.innerRadius;
            }
            var s2 = propertyGroupFactory(r2, i2), a2 = "tm" === e2.sh.ty ? e2.sh.prop : e2.sh;
            return r2.propertyIndex = t2.ix, a2.or.setGroupProperty(PropertyInterface("Outer Radius", s2)), a2.os.setGroupProperty(PropertyInterface("Outer Roundness", s2)), a2.pt.setGroupProperty(PropertyInterface("Points", s2)), a2.p.setGroupProperty(PropertyInterface("Position", s2)), a2.r.setGroupProperty(PropertyInterface("Rotation", s2)), t2.ir && (a2.ir.setGroupProperty(PropertyInterface("Inner Radius", s2)), a2.is.setGroupProperty(PropertyInterface("Inner Roundness", s2))), Object.defineProperties(r2, { position: { get: ExpressionPropertyInterface(a2.p) }, rotation: { get: ExpressionPropertyInterface(a2.r) }, points: { get: ExpressionPropertyInterface(a2.pt) }, outerRadius: { get: ExpressionPropertyInterface(a2.or) }, outerRoundness: { get: ExpressionPropertyInterface(a2.os) }, innerRadius: { get: ExpressionPropertyInterface(a2.ir) }, innerRoundness: { get: ExpressionPropertyInterface(a2.is) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
          }
          function p(t2, e2, i2) {
            function r2(e3) {
              return t2.p.ix === e3 ? r2.position : t2.r.ix === e3 ? r2.roundness : t2.s.ix === e3 || "Size" === e3 || "ADBE Vector Rect Size" === e3 ? r2.size : null;
            }
            var s2 = propertyGroupFactory(r2, i2), a2 = "tm" === e2.sh.ty ? e2.sh.prop : e2.sh;
            return r2.propertyIndex = t2.ix, a2.p.setGroupProperty(PropertyInterface("Position", s2)), a2.s.setGroupProperty(PropertyInterface("Size", s2)), a2.r.setGroupProperty(PropertyInterface("Rotation", s2)), Object.defineProperties(r2, { position: { get: ExpressionPropertyInterface(a2.p) }, roundness: { get: ExpressionPropertyInterface(a2.r) }, size: { get: ExpressionPropertyInterface(a2.s) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
          }
          function f(t2, e2, i2) {
            function r2(e3) {
              return t2.r.ix === e3 || "Round Corners 1" === e3 ? r2.radius : null;
            }
            var s2 = propertyGroupFactory(r2, i2), a2 = e2;
            return r2.propertyIndex = t2.ix, a2.rd.setGroupProperty(PropertyInterface("Radius", s2)), Object.defineProperties(r2, { radius: { get: ExpressionPropertyInterface(a2.rd) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
          }
          function m(t2, e2, i2) {
            function r2(e3) {
              return t2.c.ix === e3 || "Copies" === e3 ? r2.copies : t2.o.ix === e3 || "Offset" === e3 ? r2.offset : null;
            }
            var s2 = propertyGroupFactory(r2, i2), a2 = e2;
            return r2.propertyIndex = t2.ix, a2.c.setGroupProperty(PropertyInterface("Copies", s2)), a2.o.setGroupProperty(PropertyInterface("Offset", s2)), Object.defineProperties(r2, { copies: { get: ExpressionPropertyInterface(a2.c) }, offset: { get: ExpressionPropertyInterface(a2.o) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
          }
          return function(e2, i2, r2) {
            var s2;
            function a2(t2) {
              if ("number" == typeof t2)
                return 0 === (t2 = void 0 === t2 ? 1 : t2) ? r2 : s2[t2 - 1];
              for (var e3 = 0, i3 = s2.length; e3 < i3; ) {
                if (s2[e3]._name === t2)
                  return s2[e3];
                e3 += 1;
              }
              return null;
            }
            return a2.propertyGroup = propertyGroupFactory(a2, function() {
              return r2;
            }), s2 = t(e2, i2, a2.propertyGroup), a2.numProperties = s2.length, a2._name = "Contents", a2;
          };
        }(), TextExpressionInterface = function(t) {
          var e;
          function i(t2) {
            return "ADBE Text Document" === t2 ? i.sourceText : null;
          }
          return Object.defineProperty(i, "sourceText", { get: function() {
            t.textProperty.getValue();
            var i2 = t.textProperty.currentData.t;
            return e && i2 === e.value || ((e = new String(i2)).value = i2 || new String(i2), Object.defineProperty(e, "style", { get: function() {
              return { fillColor: t.textProperty.currentData.fc };
            } })), e;
          } }), i;
        };
        function _typeof(t) {
          return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
            return typeof t2;
          } : function(t2) {
            return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
          }, _typeof(t);
        }
        var FootageInterface = (dataInterfaceFactory = function(t) {
          function e(t2) {
            return "Outline" === t2 ? e.outlineInterface() : null;
          }
          return e._name = "Outline", e.outlineInterface = function(t2) {
            var e2 = "", i = t2.getFootageData();
            function r(t3) {
              if (i[t3])
                return e2 = t3, "object" === _typeof(i = i[t3]) ? r : i;
              var s = t3.indexOf(e2);
              if (-1 !== s) {
                var a = parseInt(t3.substr(s + e2.length), 10);
                return "object" === _typeof(i = i[a]) ? r : i;
              }
              return "";
            }
            return function() {
              return e2 = "", i = t2.getFootageData(), r;
            };
          }(t), e;
        }, function(t) {
          function e(t2) {
            return "Data" === t2 ? e.dataInterface : null;
          }
          return e._name = "Data", e.dataInterface = dataInterfaceFactory(t), e;
        }), dataInterfaceFactory, interfaces = { layer: LayerExpressionInterface, effects: EffectsExpressionInterface, comp: CompExpressionInterface, shape: ShapeExpressionInterface, text: TextExpressionInterface, footage: FootageInterface };
        function getInterface(t) {
          return interfaces[t] || null;
        }
        var expressionHelpers = { searchExpressions: function(t, e, i) {
          e.x && (i.k = true, i.x = true, i.initiateExpression = ExpressionManager.initiateExpression, i.effectsSequence.push(i.initiateExpression(t, e, i).bind(i)));
        }, getSpeedAtTime: function(t) {
          var e = this.getValueAtTime(t), i = this.getValueAtTime(t + -0.01), r = 0;
          if (e.length) {
            var s;
            for (s = 0; s < e.length; s += 1)
              r += Math.pow(i[s] - e[s], 2);
            r = 100 * Math.sqrt(r);
          } else
            r = 0;
          return r;
        }, getVelocityAtTime: function(t) {
          if (void 0 !== this.vel)
            return this.vel;
          var e, i, r = -1e-3, s = this.getValueAtTime(t), a = this.getValueAtTime(t + r);
          if (s.length)
            for (e = createTypedArray("float32", s.length), i = 0; i < s.length; i += 1)
              e[i] = (a[i] - s[i]) / r;
          else
            e = (a - s) / r;
          return e;
        }, getValueAtTime: function(t) {
          return t *= this.elem.globalData.frameRate, (t -= this.offsetTime) !== this._cachingAtTime.lastFrame && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0, this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime), this._cachingAtTime.lastFrame = t), this._cachingAtTime.value;
        }, getStaticValueAtTime: function() {
          return this.pv;
        }, setGroupProperty: function(t) {
          this.propertyGroup = t;
        } };
        function addPropertyDecorator() {
          function t(t2, e2, i2) {
            if (!this.k || !this.keyframes)
              return this.pv;
            t2 = t2 ? t2.toLowerCase() : "";
            var r2, s2, a2, n2, o2, h2 = this.comp.renderedFrame, l2 = this.keyframes, p2 = l2[l2.length - 1].t;
            if (h2 <= p2)
              return this.pv;
            if (i2 ? s2 = p2 - (r2 = e2 ? Math.abs(p2 - this.elem.comp.globalData.frameRate * e2) : Math.max(0, p2 - this.elem.data.ip)) : ((!e2 || e2 > l2.length - 1) && (e2 = l2.length - 1), r2 = p2 - (s2 = l2[l2.length - 1 - e2].t)), "pingpong" === t2) {
              if (Math.floor((h2 - s2) / r2) % 2 != 0)
                return this.getValueAtTime((r2 - (h2 - s2) % r2 + s2) / this.comp.globalData.frameRate, 0);
            } else {
              if ("offset" === t2) {
                var f = this.getValueAtTime(s2 / this.comp.globalData.frameRate, 0), m = this.getValueAtTime(p2 / this.comp.globalData.frameRate, 0), c = this.getValueAtTime(((h2 - s2) % r2 + s2) / this.comp.globalData.frameRate, 0), d = Math.floor((h2 - s2) / r2);
                if (this.pv.length) {
                  for (n2 = (o2 = new Array(f.length)).length, a2 = 0; a2 < n2; a2 += 1)
                    o2[a2] = (m[a2] - f[a2]) * d + c[a2];
                  return o2;
                }
                return (m - f) * d + c;
              }
              if ("continue" === t2) {
                var u = this.getValueAtTime(p2 / this.comp.globalData.frameRate, 0), y = this.getValueAtTime((p2 - 1e-3) / this.comp.globalData.frameRate, 0);
                if (this.pv.length) {
                  for (n2 = (o2 = new Array(u.length)).length, a2 = 0; a2 < n2; a2 += 1)
                    o2[a2] = u[a2] + (u[a2] - y[a2]) * ((h2 - p2) / this.comp.globalData.frameRate) / 5e-4;
                  return o2;
                }
                return u + (h2 - p2) / 1e-3 * (u - y);
              }
            }
            return this.getValueAtTime(((h2 - s2) % r2 + s2) / this.comp.globalData.frameRate, 0);
          }
          function e(t2, e2, i2) {
            if (!this.k)
              return this.pv;
            t2 = t2 ? t2.toLowerCase() : "";
            var r2, s2, a2, n2, o2, h2 = this.comp.renderedFrame, l2 = this.keyframes, p2 = l2[0].t;
            if (h2 >= p2)
              return this.pv;
            if (i2 ? s2 = p2 + (r2 = e2 ? Math.abs(this.elem.comp.globalData.frameRate * e2) : Math.max(0, this.elem.data.op - p2)) : ((!e2 || e2 > l2.length - 1) && (e2 = l2.length - 1), r2 = (s2 = l2[e2].t) - p2), "pingpong" === t2) {
              if (Math.floor((p2 - h2) / r2) % 2 == 0)
                return this.getValueAtTime(((p2 - h2) % r2 + p2) / this.comp.globalData.frameRate, 0);
            } else {
              if ("offset" === t2) {
                var f = this.getValueAtTime(p2 / this.comp.globalData.frameRate, 0), m = this.getValueAtTime(s2 / this.comp.globalData.frameRate, 0), c = this.getValueAtTime((r2 - (p2 - h2) % r2 + p2) / this.comp.globalData.frameRate, 0), d = Math.floor((p2 - h2) / r2) + 1;
                if (this.pv.length) {
                  for (n2 = (o2 = new Array(f.length)).length, a2 = 0; a2 < n2; a2 += 1)
                    o2[a2] = c[a2] - (m[a2] - f[a2]) * d;
                  return o2;
                }
                return c - (m - f) * d;
              }
              if ("continue" === t2) {
                var u = this.getValueAtTime(p2 / this.comp.globalData.frameRate, 0), y = this.getValueAtTime((p2 + 1e-3) / this.comp.globalData.frameRate, 0);
                if (this.pv.length) {
                  for (n2 = (o2 = new Array(u.length)).length, a2 = 0; a2 < n2; a2 += 1)
                    o2[a2] = u[a2] + (u[a2] - y[a2]) * (p2 - h2) / 1e-3;
                  return o2;
                }
                return u + (u - y) * (p2 - h2) / 1e-3;
              }
            }
            return this.getValueAtTime((r2 - ((p2 - h2) % r2 + p2)) / this.comp.globalData.frameRate, 0);
          }
          function i(t2, e2) {
            if (!this.k)
              return this.pv;
            if (t2 = 0.5 * (t2 || 0.4), (e2 = Math.floor(e2 || 5)) <= 1)
              return this.pv;
            var i2, r2, s2 = this.comp.renderedFrame / this.comp.globalData.frameRate, a2 = s2 - t2, n2 = e2 > 1 ? (s2 + t2 - a2) / (e2 - 1) : 1, o2 = 0, h2 = 0;
            for (i2 = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; o2 < e2; ) {
              if (r2 = this.getValueAtTime(a2 + o2 * n2), this.pv.length)
                for (h2 = 0; h2 < this.pv.length; h2 += 1)
                  i2[h2] += r2[h2];
              else
                i2 += r2;
              o2 += 1;
            }
            if (this.pv.length)
              for (h2 = 0; h2 < this.pv.length; h2 += 1)
                i2[h2] /= e2;
            else
              i2 /= e2;
            return i2;
          }
          function r(t2) {
            this._transformCachingAtTime || (this._transformCachingAtTime = { v: new Matrix() });
            var e2 = this._transformCachingAtTime.v;
            if (e2.cloneFromProps(this.pre.props), this.appliedTransformations < 1) {
              var i2 = this.a.getValueAtTime(t2);
              e2.translate(-i2[0] * this.a.mult, -i2[1] * this.a.mult, i2[2] * this.a.mult);
            }
            if (this.appliedTransformations < 2) {
              var r2 = this.s.getValueAtTime(t2);
              e2.scale(r2[0] * this.s.mult, r2[1] * this.s.mult, r2[2] * this.s.mult);
            }
            if (this.sk && this.appliedTransformations < 3) {
              var s2 = this.sk.getValueAtTime(t2), a2 = this.sa.getValueAtTime(t2);
              e2.skewFromAxis(-s2 * this.sk.mult, a2 * this.sa.mult);
            }
            if (this.r && this.appliedTransformations < 4) {
              var n2 = this.r.getValueAtTime(t2);
              e2.rotate(-n2 * this.r.mult);
            } else if (!this.r && this.appliedTransformations < 4) {
              var o2 = this.rz.getValueAtTime(t2), h2 = this.ry.getValueAtTime(t2), l2 = this.rx.getValueAtTime(t2), p2 = this.or.getValueAtTime(t2);
              e2.rotateZ(-o2 * this.rz.mult).rotateY(h2 * this.ry.mult).rotateX(l2 * this.rx.mult).rotateZ(-p2[2] * this.or.mult).rotateY(p2[1] * this.or.mult).rotateX(p2[0] * this.or.mult);
            }
            if (this.data.p && this.data.p.s) {
              var f = this.px.getValueAtTime(t2), m = this.py.getValueAtTime(t2);
              if (this.data.p.z) {
                var c = this.pz.getValueAtTime(t2);
                e2.translate(f * this.px.mult, m * this.py.mult, -c * this.pz.mult);
              } else
                e2.translate(f * this.px.mult, m * this.py.mult, 0);
            } else {
              var d = this.p.getValueAtTime(t2);
              e2.translate(d[0] * this.p.mult, d[1] * this.p.mult, -d[2] * this.p.mult);
            }
            return e2;
          }
          function s() {
            return this.v.clone(new Matrix());
          }
          var a = TransformPropertyFactory.getTransformProperty;
          TransformPropertyFactory.getTransformProperty = function(t2, e2, i2) {
            var n2 = a(t2, e2, i2);
            return n2.dynamicProperties.length ? n2.getValueAtTime = r.bind(n2) : n2.getValueAtTime = s.bind(n2), n2.setGroupProperty = expressionHelpers.setGroupProperty, n2;
          };
          var n = PropertyFactory.getProp;
          PropertyFactory.getProp = function(r2, s2, a2, o2, h2) {
            var l2 = n(r2, s2, a2, o2, h2);
            l2.kf ? l2.getValueAtTime = expressionHelpers.getValueAtTime.bind(l2) : l2.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(l2), l2.setGroupProperty = expressionHelpers.setGroupProperty, l2.loopOut = t, l2.loopIn = e, l2.smooth = i, l2.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(l2), l2.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(l2), l2.numKeys = 1 === s2.a ? s2.k.length : 0, l2.propertyIndex = s2.ix;
            var p2 = 0;
            return 0 !== a2 && (p2 = createTypedArray("float32", 1 === s2.a ? s2.k[0].s.length : s2.k.length)), l2._cachingAtTime = { lastFrame: initialDefaultFrame, lastIndex: 0, value: p2 }, expressionHelpers.searchExpressions(r2, s2, l2), l2.k && h2.addDynamicProperty(l2), l2;
          };
          var o = ShapePropertyFactory.getConstructorFunction(), h = ShapePropertyFactory.getKeyframedConstructorFunction();
          function l() {
          }
          l.prototype = { vertices: function(t2, e2) {
            this.k && this.getValue();
            var i2, r2 = this.v;
            void 0 !== e2 && (r2 = this.getValueAtTime(e2, 0));
            var s2 = r2._length, a2 = r2[t2], n2 = r2.v, o2 = createSizedArray(s2);
            for (i2 = 0; i2 < s2; i2 += 1)
              o2[i2] = "i" === t2 || "o" === t2 ? [a2[i2][0] - n2[i2][0], a2[i2][1] - n2[i2][1]] : [a2[i2][0], a2[i2][1]];
            return o2;
          }, points: function(t2) {
            return this.vertices("v", t2);
          }, inTangents: function(t2) {
            return this.vertices("i", t2);
          }, outTangents: function(t2) {
            return this.vertices("o", t2);
          }, isClosed: function() {
            return this.v.c;
          }, pointOnPath: function(t2, e2) {
            var i2 = this.v;
            void 0 !== e2 && (i2 = this.getValueAtTime(e2, 0)), this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(i2));
            for (var r2, s2 = this._segmentsLength, a2 = s2.lengths, n2 = s2.totalLength * t2, o2 = 0, h2 = a2.length, l2 = 0; o2 < h2; ) {
              if (l2 + a2[o2].addedLength > n2) {
                var p2 = o2, f = i2.c && o2 === h2 - 1 ? 0 : o2 + 1, m = (n2 - l2) / a2[o2].addedLength;
                r2 = bez.getPointInSegment(i2.v[p2], i2.v[f], i2.o[p2], i2.i[f], m, a2[o2]);
                break;
              }
              l2 += a2[o2].addedLength, o2 += 1;
            }
            return r2 || (r2 = i2.c ? [i2.v[0][0], i2.v[0][1]] : [i2.v[i2._length - 1][0], i2.v[i2._length - 1][1]]), r2;
          }, vectorOnPath: function(t2, e2, i2) {
            1 == t2 ? t2 = this.v.c : 0 == t2 && (t2 = 0.999);
            var r2 = this.pointOnPath(t2, e2), s2 = this.pointOnPath(t2 + 1e-3, e2), a2 = s2[0] - r2[0], n2 = s2[1] - r2[1], o2 = Math.sqrt(Math.pow(a2, 2) + Math.pow(n2, 2));
            return 0 === o2 ? [0, 0] : "tangent" === i2 ? [a2 / o2, n2 / o2] : [-n2 / o2, a2 / o2];
          }, tangentOnPath: function(t2, e2) {
            return this.vectorOnPath(t2, e2, "tangent");
          }, normalOnPath: function(t2, e2) {
            return this.vectorOnPath(t2, e2, "normal");
          }, setGroupProperty: expressionHelpers.setGroupProperty, getValueAtTime: expressionHelpers.getStaticValueAtTime }, extendPrototype([l], o), extendPrototype([l], h), h.prototype.getValueAtTime = function(t2) {
            return this._cachingAtTime || (this._cachingAtTime = { shapeValue: shapePool.clone(this.pv), lastIndex: 0, lastTime: initialDefaultFrame }), t2 *= this.elem.globalData.frameRate, (t2 -= this.offsetTime) !== this._cachingAtTime.lastTime && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t2 ? this._caching.lastIndex : 0, this._cachingAtTime.lastTime = t2, this.interpolateShape(t2, this._cachingAtTime.shapeValue, this._cachingAtTime)), this._cachingAtTime.shapeValue;
          }, h.prototype.initiateExpression = ExpressionManager.initiateExpression;
          var p = ShapePropertyFactory.getShapeProp;
          ShapePropertyFactory.getShapeProp = function(t2, e2, i2, r2, s2) {
            var a2 = p(t2, e2, i2, r2, s2);
            return a2.propertyIndex = e2.ix, a2.lock = false, 3 === i2 ? expressionHelpers.searchExpressions(t2, e2.pt, a2) : 4 === i2 && expressionHelpers.searchExpressions(t2, e2.ks, a2), a2.k && t2.addDynamicProperty(a2), a2;
          };
        }
        function initialize$1() {
          addPropertyDecorator();
        }
        function addDecorator() {
          TextProperty.prototype.getExpressionValue = function(t, e) {
            var i = this.calculateExpression(e);
            if (t.t !== i) {
              var r = {};
              return this.copyData(r, t), r.t = i.toString(), r.__complete = false, r;
            }
            return t;
          }, TextProperty.prototype.searchProperty = function() {
            var t = this.searchKeyframes(), e = this.searchExpressions();
            return this.kf = t || e, this.kf;
          }, TextProperty.prototype.searchExpressions = function() {
            return this.data.d.x ? (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this), this.addEffect(this.getExpressionValue.bind(this)), true) : null;
          };
        }
        function initialize() {
          addDecorator();
        }
        function SVGComposableEffect() {
        }
        SVGComposableEffect.prototype = { createMergeNode: function(t, e) {
          var i, r, s = createNS("feMerge");
          for (s.setAttribute("result", t), r = 0; r < e.length; r += 1)
            (i = createNS("feMergeNode")).setAttribute("in", e[r]), s.appendChild(i), s.appendChild(i);
          return s;
        } };
        var linearFilterValue = "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
        function SVGTintFilter(t, e, i, r, s) {
          this.filterManager = e;
          var a = createNS("feColorMatrix");
          a.setAttribute("type", "matrix"), a.setAttribute("color-interpolation-filters", "linearRGB"), a.setAttribute("values", linearFilterValue + " 1 0"), this.linearFilter = a, a.setAttribute("result", r + "_tint_1"), t.appendChild(a), (a = createNS("feColorMatrix")).setAttribute("type", "matrix"), a.setAttribute("color-interpolation-filters", "sRGB"), a.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"), a.setAttribute("result", r + "_tint_2"), t.appendChild(a), this.matrixFilter = a;
          var n = this.createMergeNode(r, [s, r + "_tint_1", r + "_tint_2"]);
          t.appendChild(n);
        }
        function SVGFillFilter(t, e, i, r) {
          this.filterManager = e;
          var s = createNS("feColorMatrix");
          s.setAttribute("type", "matrix"), s.setAttribute("color-interpolation-filters", "sRGB"), s.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"), s.setAttribute("result", r), t.appendChild(s), this.matrixFilter = s;
        }
        function SVGStrokeEffect(t, e, i) {
          this.initialized = false, this.filterManager = e, this.elem = i, this.paths = [];
        }
        function SVGTritoneFilter(t, e, i, r) {
          this.filterManager = e;
          var s = createNS("feColorMatrix");
          s.setAttribute("type", "matrix"), s.setAttribute("color-interpolation-filters", "linearRGB"), s.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"), t.appendChild(s);
          var a = createNS("feComponentTransfer");
          a.setAttribute("color-interpolation-filters", "sRGB"), a.setAttribute("result", r), this.matrixFilter = a;
          var n = createNS("feFuncR");
          n.setAttribute("type", "table"), a.appendChild(n), this.feFuncR = n;
          var o = createNS("feFuncG");
          o.setAttribute("type", "table"), a.appendChild(o), this.feFuncG = o;
          var h = createNS("feFuncB");
          h.setAttribute("type", "table"), a.appendChild(h), this.feFuncB = h, t.appendChild(a);
        }
        function SVGProLevelsFilter(t, e, i, r) {
          this.filterManager = e;
          var s = this.filterManager.effectElements, a = createNS("feComponentTransfer");
          (s[10].p.k || 0 !== s[10].p.v || s[11].p.k || 1 !== s[11].p.v || s[12].p.k || 1 !== s[12].p.v || s[13].p.k || 0 !== s[13].p.v || s[14].p.k || 1 !== s[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", a)), (s[17].p.k || 0 !== s[17].p.v || s[18].p.k || 1 !== s[18].p.v || s[19].p.k || 1 !== s[19].p.v || s[20].p.k || 0 !== s[20].p.v || s[21].p.k || 1 !== s[21].p.v) && (this.feFuncG = this.createFeFunc("feFuncG", a)), (s[24].p.k || 0 !== s[24].p.v || s[25].p.k || 1 !== s[25].p.v || s[26].p.k || 1 !== s[26].p.v || s[27].p.k || 0 !== s[27].p.v || s[28].p.k || 1 !== s[28].p.v) && (this.feFuncB = this.createFeFunc("feFuncB", a)), (s[31].p.k || 0 !== s[31].p.v || s[32].p.k || 1 !== s[32].p.v || s[33].p.k || 1 !== s[33].p.v || s[34].p.k || 0 !== s[34].p.v || s[35].p.k || 1 !== s[35].p.v) && (this.feFuncA = this.createFeFunc("feFuncA", a)), (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (a.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(a)), (s[3].p.k || 0 !== s[3].p.v || s[4].p.k || 1 !== s[4].p.v || s[5].p.k || 1 !== s[5].p.v || s[6].p.k || 0 !== s[6].p.v || s[7].p.k || 1 !== s[7].p.v) && ((a = createNS("feComponentTransfer")).setAttribute("color-interpolation-filters", "sRGB"), a.setAttribute("result", r), t.appendChild(a), this.feFuncRComposed = this.createFeFunc("feFuncR", a), this.feFuncGComposed = this.createFeFunc("feFuncG", a), this.feFuncBComposed = this.createFeFunc("feFuncB", a));
        }
        function SVGDropShadowEffect(t, e, i, r, s) {
          var a = e.container.globalData.renderConfig.filterSize, n = e.data.fs || a;
          t.setAttribute("x", n.x || a.x), t.setAttribute("y", n.y || a.y), t.setAttribute("width", n.width || a.width), t.setAttribute("height", n.height || a.height), this.filterManager = e;
          var o = createNS("feGaussianBlur");
          o.setAttribute("in", "SourceAlpha"), o.setAttribute("result", r + "_drop_shadow_1"), o.setAttribute("stdDeviation", "0"), this.feGaussianBlur = o, t.appendChild(o);
          var h = createNS("feOffset");
          h.setAttribute("dx", "25"), h.setAttribute("dy", "0"), h.setAttribute("in", r + "_drop_shadow_1"), h.setAttribute("result", r + "_drop_shadow_2"), this.feOffset = h, t.appendChild(h);
          var l = createNS("feFlood");
          l.setAttribute("flood-color", "#00ff00"), l.setAttribute("flood-opacity", "1"), l.setAttribute("result", r + "_drop_shadow_3"), this.feFlood = l, t.appendChild(l);
          var p = createNS("feComposite");
          p.setAttribute("in", r + "_drop_shadow_3"), p.setAttribute("in2", r + "_drop_shadow_2"), p.setAttribute("operator", "in"), p.setAttribute("result", r + "_drop_shadow_4"), t.appendChild(p);
          var f = this.createMergeNode(r, [r + "_drop_shadow_4", s]);
          t.appendChild(f);
        }
        extendPrototype([SVGComposableEffect], SVGTintFilter), SVGTintFilter.prototype.renderFrame = function(t) {
          if (t || this.filterManager._mdf) {
            var e = this.filterManager.effectElements[0].p.v, i = this.filterManager.effectElements[1].p.v, r = this.filterManager.effectElements[2].p.v / 100;
            this.linearFilter.setAttribute("values", linearFilterValue + " " + r + " 0"), this.matrixFilter.setAttribute("values", i[0] - e[0] + " 0 0 0 " + e[0] + " " + (i[1] - e[1]) + " 0 0 0 " + e[1] + " " + (i[2] - e[2]) + " 0 0 0 " + e[2] + " 0 0 0 1 0");
          }
        }, SVGFillFilter.prototype.renderFrame = function(t) {
          if (t || this.filterManager._mdf) {
            var e = this.filterManager.effectElements[2].p.v, i = this.filterManager.effectElements[6].p.v;
            this.matrixFilter.setAttribute("values", "0 0 0 0 " + e[0] + " 0 0 0 0 " + e[1] + " 0 0 0 0 " + e[2] + " 0 0 0 " + i + " 0");
          }
        }, SVGStrokeEffect.prototype.initialize = function() {
          var t, e, i, r, s = this.elem.layerElement.children || this.elem.layerElement.childNodes;
          for (1 === this.filterManager.effectElements[1].p.v ? (r = this.elem.maskManager.masksProperties.length, i = 0) : r = (i = this.filterManager.effectElements[0].p.v - 1) + 1, (e = createNS("g")).setAttribute("fill", "none"), e.setAttribute("stroke-linecap", "round"), e.setAttribute("stroke-dashoffset", 1); i < r; i += 1)
            t = createNS("path"), e.appendChild(t), this.paths.push({ p: t, m: i });
          if (3 === this.filterManager.effectElements[10].p.v) {
            var a = createNS("mask"), n = createElementID();
            a.setAttribute("id", n), a.setAttribute("mask-type", "alpha"), a.appendChild(e), this.elem.globalData.defs.appendChild(a);
            var o = createNS("g");
            for (o.setAttribute("mask", "url(" + getLocationHref() + "#" + n + ")"); s[0]; )
              o.appendChild(s[0]);
            this.elem.layerElement.appendChild(o), this.masker = a, e.setAttribute("stroke", "#fff");
          } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
            if (2 === this.filterManager.effectElements[10].p.v)
              for (s = this.elem.layerElement.children || this.elem.layerElement.childNodes; s.length; )
                this.elem.layerElement.removeChild(s[0]);
            this.elem.layerElement.appendChild(e), this.elem.layerElement.removeAttribute("mask"), e.setAttribute("stroke", "#fff");
          }
          this.initialized = true, this.pathMasker = e;
        }, SVGStrokeEffect.prototype.renderFrame = function(t) {
          var e;
          this.initialized || this.initialize();
          var i, r, s = this.paths.length;
          for (e = 0; e < s; e += 1)
            if (-1 !== this.paths[e].m && (i = this.elem.maskManager.viewData[this.paths[e].m], r = this.paths[e].p, (t || this.filterManager._mdf || i.prop._mdf) && r.setAttribute("d", i.lastPath), t || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || i.prop._mdf)) {
              var a;
              if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                var n = 0.01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v), o = 0.01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v), h = r.getTotalLength();
                a = "0 0 0 " + h * n + " ";
                var l, p = h * (o - n), f = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01, m = Math.floor(p / f);
                for (l = 0; l < m; l += 1)
                  a += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01 + " ";
                a += "0 " + 10 * h + " 0 0";
              } else
                a = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01;
              r.setAttribute("stroke-dasharray", a);
            }
          if ((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v), (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v), (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf)) {
            var c = this.filterManager.effectElements[3].p.v;
            this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * c[0]) + "," + bmFloor(255 * c[1]) + "," + bmFloor(255 * c[2]) + ")");
          }
        }, SVGTritoneFilter.prototype.renderFrame = function(t) {
          if (t || this.filterManager._mdf) {
            var e = this.filterManager.effectElements[0].p.v, i = this.filterManager.effectElements[1].p.v, r = this.filterManager.effectElements[2].p.v, s = r[0] + " " + i[0] + " " + e[0], a = r[1] + " " + i[1] + " " + e[1], n = r[2] + " " + i[2] + " " + e[2];
            this.feFuncR.setAttribute("tableValues", s), this.feFuncG.setAttribute("tableValues", a), this.feFuncB.setAttribute("tableValues", n);
          }
        }, SVGProLevelsFilter.prototype.createFeFunc = function(t, e) {
          var i = createNS(t);
          return i.setAttribute("type", "table"), e.appendChild(i), i;
        }, SVGProLevelsFilter.prototype.getTableValue = function(t, e, i, r, s) {
          for (var a, n, o = 0, h = Math.min(t, e), l = Math.max(t, e), p = Array.call(null, { length: 256 }), f = 0, m = s - r, c = e - t; o <= 256; )
            n = (a = o / 256) <= h ? c < 0 ? s : r : a >= l ? c < 0 ? r : s : r + m * Math.pow((a - t) / c, 1 / i), p[f] = n, f += 1, o += 256 / 255;
          return p.join(" ");
        }, SVGProLevelsFilter.prototype.renderFrame = function(t) {
          if (t || this.filterManager._mdf) {
            var e, i = this.filterManager.effectElements;
            this.feFuncRComposed && (t || i[3].p._mdf || i[4].p._mdf || i[5].p._mdf || i[6].p._mdf || i[7].p._mdf) && (e = this.getTableValue(i[3].p.v, i[4].p.v, i[5].p.v, i[6].p.v, i[7].p.v), this.feFuncRComposed.setAttribute("tableValues", e), this.feFuncGComposed.setAttribute("tableValues", e), this.feFuncBComposed.setAttribute("tableValues", e)), this.feFuncR && (t || i[10].p._mdf || i[11].p._mdf || i[12].p._mdf || i[13].p._mdf || i[14].p._mdf) && (e = this.getTableValue(i[10].p.v, i[11].p.v, i[12].p.v, i[13].p.v, i[14].p.v), this.feFuncR.setAttribute("tableValues", e)), this.feFuncG && (t || i[17].p._mdf || i[18].p._mdf || i[19].p._mdf || i[20].p._mdf || i[21].p._mdf) && (e = this.getTableValue(i[17].p.v, i[18].p.v, i[19].p.v, i[20].p.v, i[21].p.v), this.feFuncG.setAttribute("tableValues", e)), this.feFuncB && (t || i[24].p._mdf || i[25].p._mdf || i[26].p._mdf || i[27].p._mdf || i[28].p._mdf) && (e = this.getTableValue(i[24].p.v, i[25].p.v, i[26].p.v, i[27].p.v, i[28].p.v), this.feFuncB.setAttribute("tableValues", e)), this.feFuncA && (t || i[31].p._mdf || i[32].p._mdf || i[33].p._mdf || i[34].p._mdf || i[35].p._mdf) && (e = this.getTableValue(i[31].p.v, i[32].p.v, i[33].p.v, i[34].p.v, i[35].p.v), this.feFuncA.setAttribute("tableValues", e));
          }
        }, extendPrototype([SVGComposableEffect], SVGDropShadowEffect), SVGDropShadowEffect.prototype.renderFrame = function(t) {
          if (t || this.filterManager._mdf) {
            if ((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4), t || this.filterManager.effectElements[0].p._mdf) {
              var e = this.filterManager.effectElements[0].p.v;
              this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])));
            }
            if ((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255), t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
              var i = this.filterManager.effectElements[3].p.v, r = (this.filterManager.effectElements[2].p.v - 90) * degToRads, s = i * Math.cos(r), a = i * Math.sin(r);
              this.feOffset.setAttribute("dx", s), this.feOffset.setAttribute("dy", a);
            }
          }
        };
        var _svgMatteSymbols = [];
        function SVGMatte3Effect(t, e, i) {
          this.initialized = false, this.filterManager = e, this.filterElem = t, this.elem = i, i.matteElement = createNS("g"), i.matteElement.appendChild(i.layerElement), i.matteElement.appendChild(i.transformedElement), i.baseElement = i.matteElement;
        }
        function SVGGaussianBlurEffect(t, e, i, r) {
          t.setAttribute("x", "-100%"), t.setAttribute("y", "-100%"), t.setAttribute("width", "300%"), t.setAttribute("height", "300%"), this.filterManager = e;
          var s = createNS("feGaussianBlur");
          s.setAttribute("result", r), t.appendChild(s), this.feGaussianBlur = s;
        }
        function TransformEffect() {
        }
        function SVGTransformEffect(t, e) {
          this.init(e);
        }
        function CVTransformEffect(t) {
          this.init(t);
        }
        return SVGMatte3Effect.prototype.findSymbol = function(t) {
          for (var e = 0, i = _svgMatteSymbols.length; e < i; ) {
            if (_svgMatteSymbols[e] === t)
              return _svgMatteSymbols[e];
            e += 1;
          }
          return null;
        }, SVGMatte3Effect.prototype.replaceInParent = function(t, e) {
          var i = t.layerElement.parentNode;
          if (i) {
            for (var r, s = i.children, a = 0, n = s.length; a < n && s[a] !== t.layerElement; )
              a += 1;
            a <= n - 2 && (r = s[a + 1]);
            var o = createNS("use");
            o.setAttribute("href", "#" + e), r ? i.insertBefore(o, r) : i.appendChild(o);
          }
        }, SVGMatte3Effect.prototype.setElementAsMask = function(t, e) {
          if (!this.findSymbol(e)) {
            var i = createElementID(), r = createNS("mask");
            r.setAttribute("id", e.layerId), r.setAttribute("mask-type", "alpha"), _svgMatteSymbols.push(e);
            var s = t.globalData.defs;
            s.appendChild(r);
            var a = createNS("symbol");
            a.setAttribute("id", i), this.replaceInParent(e, i), a.appendChild(e.layerElement), s.appendChild(a);
            var n = createNS("use");
            n.setAttribute("href", "#" + i), r.appendChild(n), e.data.hd = false, e.show();
          }
          t.setMatte(e.layerId);
        }, SVGMatte3Effect.prototype.initialize = function() {
          for (var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, i = 0, r = e.length; i < r; )
            e[i] && e[i].data.ind === t && this.setElementAsMask(this.elem, e[i]), i += 1;
          this.initialized = true;
        }, SVGMatte3Effect.prototype.renderFrame = function() {
          this.initialized || this.initialize();
        }, SVGGaussianBlurEffect.prototype.renderFrame = function(t) {
          if (t || this.filterManager._mdf) {
            var e = 0.3 * this.filterManager.effectElements[0].p.v, i = this.filterManager.effectElements[1].p.v, r = 3 == i ? 0 : e, s = 2 == i ? 0 : e;
            this.feGaussianBlur.setAttribute("stdDeviation", r + " " + s);
            var a = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
            this.feGaussianBlur.setAttribute("edgeMode", a);
          }
        }, TransformEffect.prototype.init = function(t) {
          this.effectsManager = t, this.type = effectTypes.TRANSFORM_EFFECT, this.matrix = new Matrix(), this.opacity = -1, this._mdf = false, this._opMdf = false;
        }, TransformEffect.prototype.renderFrame = function(t) {
          if (this._opMdf = false, this._mdf = false, t || this.effectsManager._mdf) {
            var e = this.effectsManager.effectElements, i = e[0].p.v, r = e[1].p.v, s = 1 === e[2].p.v, a = e[3].p.v, n = s ? a : e[4].p.v, o = e[5].p.v, h = e[6].p.v, l = e[7].p.v;
            this.matrix.reset(), this.matrix.translate(-i[0], -i[1], i[2]), this.matrix.scale(0.01 * n, 0.01 * a, 1), this.matrix.rotate(-l * degToRads), this.matrix.skewFromAxis(-o * degToRads, (h + 90) * degToRads), this.matrix.translate(r[0], r[1], 0), this._mdf = true, this.opacity !== e[8].p.v && (this.opacity = e[8].p.v, this._opMdf = true);
          }
        }, extendPrototype([TransformEffect], SVGTransformEffect), extendPrototype([TransformEffect], CVTransformEffect), registerRenderer("canvas", CanvasRenderer), registerRenderer("html", HybridRenderer), registerRenderer("svg", SVGRenderer), ShapeModifiers.registerModifier("tm", TrimModifier), ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier), ShapeModifiers.registerModifier("rp", RepeaterModifier), ShapeModifiers.registerModifier("rd", RoundCornersModifier), ShapeModifiers.registerModifier("zz", ZigZagModifier), ShapeModifiers.registerModifier("op", OffsetPathModifier), setExpressionsPlugin(Expressions), setExpressionInterfaces(getInterface), initialize$1(), initialize(), registerEffect$1(20, SVGTintFilter, true), registerEffect$1(21, SVGFillFilter, true), registerEffect$1(22, SVGStrokeEffect, false), registerEffect$1(23, SVGTritoneFilter, true), registerEffect$1(24, SVGProLevelsFilter, true), registerEffect$1(25, SVGDropShadowEffect, true), registerEffect$1(28, SVGMatte3Effect, false), registerEffect$1(29, SVGGaussianBlurEffect, true), registerEffect$1(35, SVGTransformEffect, false), registerEffect(35, CVTransformEffect), lottie;
      });
    }
  });

  // packages/shared/render/plugins/Animation/webflow-lottie.js
  var require_webflow_lottie = __commonJS({
    "packages/shared/render/plugins/Animation/webflow-lottie.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      var lottieSiteModule = (init_LottieSiteModule(), __toCommonJS(LottieSiteModule_exports));
      var lottie2 = require_lottie_min();
      Webflow.define("lottie", module2.exports = function() {
        return {
          lottie: lottie2,
          createInstance: lottieSiteModule.createInstance,
          cleanupElement: lottieSiteModule.cleanupElement,
          init: lottieSiteModule.init,
          destroy: lottieSiteModule.destroy,
          ready: lottieSiteModule.ready
        };
      });
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-brand.js
  var require_webflow_brand = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-brand.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      Webflow.define("brand", module2.exports = function($2) {
        var api = {};
        var doc = document;
        var $html = $2("html");
        var $body = $2("body");
        var namespace = ".w-webflow-badge";
        var location = window.location;
        var isPhantom = /PhantomJS/i.test(navigator.userAgent);
        var fullScreenEvents = "fullscreenchange webkitfullscreenchange mozfullscreenchange msfullscreenchange";
        var brandElement;
        api.ready = function() {
          var shouldBrand = $html.attr("data-wf-status");
          var publishedDomain = $html.attr("data-wf-domain") || "";
          if (/\.webflow\.io$/i.test(publishedDomain) && location.hostname !== publishedDomain) {
            shouldBrand = true;
          }
          if (shouldBrand && !isPhantom) {
            brandElement = brandElement || createBadge();
            ensureBrand();
            setTimeout(ensureBrand, 500);
            $2(doc).off(fullScreenEvents, onFullScreenChange).on(fullScreenEvents, onFullScreenChange);
          }
        };
        function onFullScreenChange() {
          var fullScreen = doc.fullScreen || doc.mozFullScreen || doc.webkitIsFullScreen || doc.msFullscreenElement || Boolean(doc.webkitFullscreenElement);
          $2(brandElement).attr("style", fullScreen ? "display: none !important;" : "");
        }
        function createBadge() {
          var $brand = $2('<a class="w-webflow-badge"></a>').attr("href", "https://webflow.com?utm_campaign=brandjs");
          var $logoArt = $2("<img>").attr("src", "https://d3e54v103j8qbb.cloudfront.net/img/webflow-badge-icon-d2.89e12c322e.svg").attr("alt", "").css({
            marginRight: "4px",
            width: "26px"
          });
          var $logoText = $2("<img>").attr("src", "https://d3e54v103j8qbb.cloudfront.net/img/webflow-badge-text-d2.c82cec3b78.svg").attr("alt", "Made in Webflow");
          $brand.append($logoArt, $logoText);
          return $brand[0];
        }
        function ensureBrand() {
          var found = $body.children(namespace);
          var match = found.length && found.get(0) === brandElement;
          var inEditor = Webflow.env("editor");
          if (match) {
            if (inEditor) {
              found.remove();
            }
            return;
          }
          if (found.length) {
            found.remove();
          }
          if (!inEditor) {
            $body.append(brandElement);
          }
        }
        return api;
      });
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-edit.js
  var require_webflow_edit = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-edit.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      Webflow.define("edit", module2.exports = function($2, _, options) {
        options = options || {};
        if (Webflow.env("test") || Webflow.env("frame")) {
          if (!options.fixture && !inCypress()) {
            return {
              exit: 1
            };
          }
        }
        var api = {};
        var $win = $2(window);
        var $html = $2(document.documentElement);
        var location = document.location;
        var hashchange = "hashchange";
        var loaded;
        var loadEditor = options.load || load;
        var hasLocalStorage = false;
        try {
          hasLocalStorage = localStorage && localStorage.getItem && localStorage.getItem("WebflowEditor");
        } catch (e) {
        }
        if (hasLocalStorage) {
          loadEditor();
        } else if (location.search) {
          if (/[?&](edit)(?:[=&?]|$)/.test(location.search) || /\?edit$/.test(location.href)) {
            loadEditor();
          }
        } else {
          $win.on(hashchange, checkHash).triggerHandler(hashchange);
        }
        function checkHash() {
          if (loaded) {
            return;
          }
          if (/\?edit/.test(location.hash)) {
            loadEditor();
          }
        }
        function load() {
          loaded = true;
          window.WebflowEditor = true;
          $win.off(hashchange, checkHash);
          checkThirdPartyCookieSupport(function(thirdPartyCookiesSupported) {
            $2.ajax({
              url: cleanSlashes("https://editor-api.webflow.com/api/editor/view"),
              data: {
                siteId: $html.attr("data-wf-site")
              },
              xhrFields: {
                withCredentials: true
              },
              dataType: "json",
              crossDomain: true,
              success: success(thirdPartyCookiesSupported)
            });
          });
        }
        function success(thirdPartyCookiesSupported) {
          return function(data2) {
            if (!data2) {
              console.error("Could not load editor data");
              return;
            }
            data2.thirdPartyCookiesSupported = thirdPartyCookiesSupported;
            getScript(prefix(data2.scriptPath), function() {
              window.WebflowEditor(data2);
            });
          };
        }
        function getScript(url, done) {
          $2.ajax({
            type: "GET",
            url,
            dataType: "script",
            cache: true
          }).then(done, error);
        }
        function error(jqXHR, textStatus, errorThrown) {
          console.error("Could not load editor script: " + textStatus);
          throw errorThrown;
        }
        function prefix(url) {
          return url.indexOf("//") >= 0 ? url : cleanSlashes("https://editor-api.webflow.com" + url);
        }
        function cleanSlashes(url) {
          return url.replace(/([^:])\/\//g, "$1/");
        }
        function checkThirdPartyCookieSupport(callback) {
          var iframe = window.document.createElement("iframe");
          iframe.src = "https://webflow.com/site/third-party-cookie-check.html";
          iframe.style.display = "none";
          iframe.sandbox = "allow-scripts allow-same-origin";
          var handleMessage = function(event) {
            if (event.data === "WF_third_party_cookies_unsupported") {
              cleanUpCookieCheckerIframe(iframe, handleMessage);
              callback(false);
            } else if (event.data === "WF_third_party_cookies_supported") {
              cleanUpCookieCheckerIframe(iframe, handleMessage);
              callback(true);
            }
          };
          iframe.onerror = function() {
            cleanUpCookieCheckerIframe(iframe, handleMessage);
            callback(false);
          };
          window.addEventListener("message", handleMessage, false);
          window.document.body.appendChild(iframe);
        }
        function cleanUpCookieCheckerIframe(iframe, listener) {
          window.removeEventListener("message", listener, false);
          iframe.remove();
        }
        return api;
      });
      function inCypress() {
        try {
          return window.top.__Cypress__;
        } catch (e) {
          return false;
        }
      }
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-focus-visible.js
  var require_webflow_focus_visible = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-focus-visible.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      Webflow.define("focus-visible", module2.exports = function() {
        function applyFocusVisiblePolyfill(scope) {
          var hadKeyboardEvent = true;
          var hadFocusVisibleRecently = false;
          var hadFocusVisibleRecentlyTimeout = null;
          var inputTypesAllowlist = {
            text: true,
            search: true,
            url: true,
            tel: true,
            email: true,
            password: true,
            number: true,
            date: true,
            month: true,
            week: true,
            time: true,
            datetime: true,
            "datetime-local": true
          };
          function isValidFocusTarget(el) {
            if (el && el !== document && el.nodeName !== "HTML" && el.nodeName !== "BODY" && "classList" in el && "contains" in el.classList) {
              return true;
            }
            return false;
          }
          function focusTriggersKeyboardModality(el) {
            var type = el.type;
            var tagName = el.tagName;
            if (tagName === "INPUT" && inputTypesAllowlist[type] && !el.readOnly) {
              return true;
            }
            if (tagName === "TEXTAREA" && !el.readOnly) {
              return true;
            }
            if (el.isContentEditable) {
              return true;
            }
            return false;
          }
          function addFocusVisibleAttribute(el) {
            if (el.getAttribute("data-wf-focus-visible")) {
              return;
            }
            el.setAttribute("data-wf-focus-visible", "true");
          }
          function removeFocusVisibleAttribute(el) {
            if (!el.getAttribute("data-wf-focus-visible")) {
              return;
            }
            el.removeAttribute("data-wf-focus-visible");
          }
          function onKeyDown(e) {
            if (e.metaKey || e.altKey || e.ctrlKey) {
              return;
            }
            if (isValidFocusTarget(scope.activeElement)) {
              addFocusVisibleAttribute(scope.activeElement);
            }
            hadKeyboardEvent = true;
          }
          function onPointerDown() {
            hadKeyboardEvent = false;
          }
          function onFocus(e) {
            if (!isValidFocusTarget(e.target)) {
              return;
            }
            if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {
              addFocusVisibleAttribute(e.target);
            }
          }
          function onBlur(e) {
            if (!isValidFocusTarget(e.target)) {
              return;
            }
            if (e.target.hasAttribute("data-wf-focus-visible")) {
              hadFocusVisibleRecently = true;
              window.clearTimeout(hadFocusVisibleRecentlyTimeout);
              hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {
                hadFocusVisibleRecently = false;
              }, 100);
              removeFocusVisibleAttribute(e.target);
            }
          }
          function onVisibilityChange() {
            if (document.visibilityState === "hidden") {
              if (hadFocusVisibleRecently) {
                hadKeyboardEvent = true;
              }
              addInitialPointerMoveListeners();
            }
          }
          function addInitialPointerMoveListeners() {
            document.addEventListener("mousemove", onInitialPointerMove);
            document.addEventListener("mousedown", onInitialPointerMove);
            document.addEventListener("mouseup", onInitialPointerMove);
            document.addEventListener("pointermove", onInitialPointerMove);
            document.addEventListener("pointerdown", onInitialPointerMove);
            document.addEventListener("pointerup", onInitialPointerMove);
            document.addEventListener("touchmove", onInitialPointerMove);
            document.addEventListener("touchstart", onInitialPointerMove);
            document.addEventListener("touchend", onInitialPointerMove);
          }
          function removeInitialPointerMoveListeners() {
            document.removeEventListener("mousemove", onInitialPointerMove);
            document.removeEventListener("mousedown", onInitialPointerMove);
            document.removeEventListener("mouseup", onInitialPointerMove);
            document.removeEventListener("pointermove", onInitialPointerMove);
            document.removeEventListener("pointerdown", onInitialPointerMove);
            document.removeEventListener("pointerup", onInitialPointerMove);
            document.removeEventListener("touchmove", onInitialPointerMove);
            document.removeEventListener("touchstart", onInitialPointerMove);
            document.removeEventListener("touchend", onInitialPointerMove);
          }
          function onInitialPointerMove(e) {
            if (e.target.nodeName && e.target.nodeName.toLowerCase() === "html") {
              return;
            }
            hadKeyboardEvent = false;
            removeInitialPointerMoveListeners();
          }
          document.addEventListener("keydown", onKeyDown, true);
          document.addEventListener("mousedown", onPointerDown, true);
          document.addEventListener("pointerdown", onPointerDown, true);
          document.addEventListener("touchstart", onPointerDown, true);
          document.addEventListener("visibilitychange", onVisibilityChange, true);
          addInitialPointerMoveListeners();
          scope.addEventListener("focus", onFocus, true);
          scope.addEventListener("blur", onBlur, true);
        }
        function ready2() {
          if (typeof document !== "undefined") {
            try {
              document.querySelector(":focus-visible");
            } catch (e) {
              applyFocusVisiblePolyfill(document);
            }
          }
        }
        return {
          ready: ready2
        };
      });
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-focus.js
  var require_webflow_focus = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-focus.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      Webflow.define("focus", module2.exports = function() {
        var capturedEvents = [];
        var capturing = false;
        function captureEvent(e) {
          if (capturing) {
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            capturedEvents.unshift(e);
          }
        }
        function isPolyfilledFocusEvent(e) {
          var el = e.target;
          var tag = el.tagName;
          return /^a$/i.test(tag) && el.href != null || // (A)
          /^(button|textarea)$/i.test(tag) && el.disabled !== true || // (B) (C)
          /^input$/i.test(tag) && /^(button|reset|submit|radio|checkbox)$/i.test(el.type) && !el.disabled || // (D)
          !/^(button|input|textarea|select|a)$/i.test(tag) && !Number.isNaN(Number.parseFloat(el.tabIndex)) || // (E)
          /^audio$/i.test(tag) || // (F)
          /^video$/i.test(tag) && el.controls === true;
        }
        function handler(e) {
          if (isPolyfilledFocusEvent(e)) {
            capturing = true;
            setTimeout(() => {
              capturing = false;
              e.target.focus();
              while (capturedEvents.length > 0) {
                var event = capturedEvents.pop();
                event.target.dispatchEvent(new MouseEvent(event.type, event));
              }
            }, 0);
          }
        }
        function ready2() {
          if (typeof document !== "undefined" && document.body.hasAttribute("data-wf-focus-within") && Webflow.env.safari) {
            document.addEventListener("mousedown", handler, true);
            document.addEventListener("mouseup", captureEvent, true);
            document.addEventListener("click", captureEvent, true);
          }
        }
        return {
          ready: ready2
        };
      });
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-ix-events.js
  var require_webflow_ix_events = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-ix-events.js"(exports2, module2) {
      "use strict";
      var $2 = window.jQuery;
      var api = {};
      var eventQueue = [];
      var namespace = ".w-ix";
      var eventTriggers = {
        reset: function(i, el) {
          el.__wf_intro = null;
        },
        intro: function(i, el) {
          if (el.__wf_intro) {
            return;
          }
          el.__wf_intro = true;
          $2(el).triggerHandler(api.types.INTRO);
        },
        outro: function(i, el) {
          if (!el.__wf_intro) {
            return;
          }
          el.__wf_intro = null;
          $2(el).triggerHandler(api.types.OUTRO);
        }
      };
      api.triggers = {};
      api.types = {
        INTRO: "w-ix-intro" + namespace,
        OUTRO: "w-ix-outro" + namespace
      };
      api.init = function() {
        var count = eventQueue.length;
        for (var i = 0; i < count; i++) {
          var memo = eventQueue[i];
          memo[0](0, memo[1]);
        }
        eventQueue = [];
        $2.extend(api.triggers, eventTriggers);
      };
      api.async = function() {
        for (var key2 in eventTriggers) {
          var func = eventTriggers[key2];
          if (!eventTriggers.hasOwnProperty(key2)) {
            continue;
          }
          api.triggers[key2] = function(i, el) {
            eventQueue.push([func, el]);
          };
        }
      };
      api.async();
      module2.exports = api;
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-ix2-events.js
  var require_webflow_ix2_events = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-ix2-events.js"(exports2, module2) {
      "use strict";
      var IXEvents = require_webflow_ix_events();
      function dispatchCustomEvent2(element, eventName) {
        var event = document.createEvent("CustomEvent");
        event.initCustomEvent(eventName, true, true, null);
        element.dispatchEvent(event);
      }
      var $2 = window.jQuery;
      var api = {};
      var namespace = ".w-ix";
      var eventTriggers = {
        reset: function(i, el) {
          IXEvents.triggers.reset(i, el);
        },
        intro: function(i, el) {
          IXEvents.triggers.intro(i, el);
          dispatchCustomEvent2(el, "COMPONENT_ACTIVE");
        },
        outro: function(i, el) {
          IXEvents.triggers.outro(i, el);
          dispatchCustomEvent2(el, "COMPONENT_INACTIVE");
        }
      };
      api.triggers = {};
      api.types = {
        INTRO: "w-ix-intro" + namespace,
        OUTRO: "w-ix-outro" + namespace
      };
      $2.extend(api.triggers, eventTriggers);
      module2.exports = api;
    }
  });

  // node_modules/@babel/runtime/helpers/typeof.js
  var require_typeof = __commonJS({
    "node_modules/@babel/runtime/helpers/typeof.js"(exports2, module2) {
      function _typeof2(o) {
        "@babel/helpers - typeof";
        return module2.exports = _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
          return typeof o2;
        } : function(o2) {
          return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
        }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports, _typeof2(o);
      }
      module2.exports = _typeof2, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
    }
  });

  // node_modules/@babel/runtime/helpers/interopRequireWildcard.js
  var require_interopRequireWildcard = __commonJS({
    "node_modules/@babel/runtime/helpers/interopRequireWildcard.js"(exports2, module2) {
      var _typeof2 = require_typeof()["default"];
      function _getRequireWildcardCache(e) {
        if ("function" != typeof WeakMap)
          return null;
        var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
          return e2 ? t : r;
        })(e);
      }
      function _interopRequireWildcard(e, r) {
        if (!r && e && e.__esModule)
          return e;
        if (null === e || "object" != _typeof2(e) && "function" != typeof e)
          return {
            "default": e
          };
        var t = _getRequireWildcardCache(r);
        if (t && t.has(e))
          return t.get(e);
        var n = {
          __proto__: null
        }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var u in e)
          if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
            var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
            i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
          }
        return n["default"] = e, t && t.set(e, n), n;
      }
      module2.exports = _interopRequireWildcard, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
    }
  });

  // node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault = __commonJS({
    "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports2, module2) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module2.exports = _interopRequireDefault, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
    }
  });

  // node_modules/core-js/internals/entry-unbind.js
  var require_entry_unbind = __commonJS({
    "node_modules/core-js/internals/entry-unbind.js"(exports2, module2) {
      var global2 = require_global();
      var uncurryThis = require_function_uncurry_this();
      module2.exports = function(CONSTRUCTOR, METHOD) {
        return uncurryThis(global2[CONSTRUCTOR].prototype[METHOD]);
      };
    }
  });

  // node_modules/core-js/es/array/includes.js
  var require_includes = __commonJS({
    "node_modules/core-js/es/array/includes.js"(exports2, module2) {
      require_es_array_includes();
      var entryUnbind = require_entry_unbind();
      module2.exports = entryUnbind("Array", "includes");
    }
  });

  // node_modules/core-js/stable/array/includes.js
  var require_includes2 = __commonJS({
    "node_modules/core-js/stable/array/includes.js"(exports2, module2) {
      var parent2 = require_includes();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/features/array/includes.js
  var require_includes3 = __commonJS({
    "node_modules/core-js/features/array/includes.js"(exports2, module2) {
      var parent2 = require_includes2();
      module2.exports = parent2;
    }
  });

  // node_modules/lodash/_getPrototype.js
  var require_getPrototype = __commonJS({
    "node_modules/lodash/_getPrototype.js"(exports2, module2) {
      var overArg = require_overArg();
      var getPrototype = overArg(Object.getPrototypeOf, Object);
      module2.exports = getPrototype;
    }
  });

  // node_modules/lodash/isPlainObject.js
  var require_isPlainObject = __commonJS({
    "node_modules/lodash/isPlainObject.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var getPrototype = require_getPrototype();
      var isObjectLike2 = require_isObjectLike();
      var objectTag = "[object Object]";
      var funcProto = Function.prototype;
      var objectProto = Object.prototype;
      var funcToString = funcProto.toString;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      var objectCtorString = funcToString.call(Object);
      function isPlainObject(value2) {
        if (!isObjectLike2(value2) || baseGetTag(value2) != objectTag) {
          return false;
        }
        var proto = getPrototype(value2);
        if (proto === null) {
          return true;
        }
        var Ctor = hasOwnProperty9.call(proto, "constructor") && proto.constructor;
        return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
      }
      module2.exports = isPlainObject;
    }
  });

  // node_modules/redux/node_modules/symbol-observable/lib/ponyfill.js
  var require_ponyfill = __commonJS({
    "node_modules/redux/node_modules/symbol-observable/lib/ponyfill.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2["default"] = symbolObservablePonyfill2;
      function symbolObservablePonyfill2(root2) {
        var result2;
        var _Symbol = root2.Symbol;
        if (typeof _Symbol === "function") {
          if (_Symbol.observable) {
            result2 = _Symbol.observable;
          } else {
            result2 = _Symbol("observable");
            _Symbol.observable = result2;
          }
        } else {
          result2 = "@@observable";
        }
        return result2;
      }
    }
  });

  // node_modules/redux/node_modules/symbol-observable/lib/index.js
  var require_lib = __commonJS({
    "node_modules/redux/node_modules/symbol-observable/lib/index.js"(exports2, module2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      var _ponyfill = require_ponyfill();
      var _ponyfill2 = _interopRequireDefault(_ponyfill);
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { "default": obj };
      }
      var root2;
      if (typeof self !== "undefined") {
        root2 = self;
      } else if (typeof window !== "undefined") {
        root2 = window;
      } else if (typeof global !== "undefined") {
        root2 = global;
      } else if (typeof module2 !== "undefined") {
        root2 = module2;
      } else {
        root2 = Function("return this")();
      }
      var result2 = (0, _ponyfill2["default"])(root2);
      exports2["default"] = result2;
    }
  });

  // node_modules/redux/lib/createStore.js
  var require_createStore = __commonJS({
    "node_modules/redux/lib/createStore.js"(exports2) {
      "use strict";
      exports2.__esModule = true;
      exports2.ActionTypes = void 0;
      exports2["default"] = createStore;
      var _isPlainObject = require_isPlainObject();
      var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
      var _symbolObservable = require_lib();
      var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { "default": obj };
      }
      var ActionTypes = exports2.ActionTypes = {
        INIT: "@@redux/INIT"
      };
      function createStore(reducer, preloadedState, enhancer) {
        var _ref2;
        if (typeof preloadedState === "function" && typeof enhancer === "undefined") {
          enhancer = preloadedState;
          preloadedState = void 0;
        }
        if (typeof enhancer !== "undefined") {
          if (typeof enhancer !== "function") {
            throw new Error("Expected the enhancer to be a function.");
          }
          return enhancer(createStore)(reducer, preloadedState);
        }
        if (typeof reducer !== "function") {
          throw new Error("Expected the reducer to be a function.");
        }
        var currentReducer = reducer;
        var currentState = preloadedState;
        var currentListeners = [];
        var nextListeners = currentListeners;
        var isDispatching = false;
        function ensureCanMutateNextListeners() {
          if (nextListeners === currentListeners) {
            nextListeners = currentListeners.slice();
          }
        }
        function getState() {
          return currentState;
        }
        function subscribe(listener) {
          if (typeof listener !== "function") {
            throw new Error("Expected listener to be a function.");
          }
          var isSubscribed = true;
          ensureCanMutateNextListeners();
          nextListeners.push(listener);
          return function unsubscribe() {
            if (!isSubscribed) {
              return;
            }
            isSubscribed = false;
            ensureCanMutateNextListeners();
            var index2 = nextListeners.indexOf(listener);
            nextListeners.splice(index2, 1);
          };
        }
        function dispatch(action) {
          if (!(0, _isPlainObject2["default"])(action)) {
            throw new Error("Actions must be plain objects. Use custom middleware for async actions.");
          }
          if (typeof action.type === "undefined") {
            throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');
          }
          if (isDispatching) {
            throw new Error("Reducers may not dispatch actions.");
          }
          try {
            isDispatching = true;
            currentState = currentReducer(currentState, action);
          } finally {
            isDispatching = false;
          }
          var listeners = currentListeners = nextListeners;
          for (var i = 0; i < listeners.length; i++) {
            listeners[i]();
          }
          return action;
        }
        function replaceReducer(nextReducer) {
          if (typeof nextReducer !== "function") {
            throw new Error("Expected the nextReducer to be a function.");
          }
          currentReducer = nextReducer;
          dispatch({ type: ActionTypes.INIT });
        }
        function observable() {
          var _ref;
          var outerSubscribe = subscribe;
          return _ref = {
            /**
             * The minimal observable subscription method.
             * @param {Object} observer Any object that can be used as an observer.
             * The observer object should have a `next` method.
             * @returns {subscription} An object with an `unsubscribe` method that can
             * be used to unsubscribe the observable from the store, and prevent further
             * emission of values from the observable.
             */
            subscribe: function subscribe2(observer) {
              if (typeof observer !== "object") {
                throw new TypeError("Expected the observer to be an object.");
              }
              function observeState() {
                if (observer.next) {
                  observer.next(getState());
                }
              }
              observeState();
              var unsubscribe = outerSubscribe(observeState);
              return { unsubscribe };
            }
          }, _ref[_symbolObservable2["default"]] = function() {
            return this;
          }, _ref;
        }
        dispatch({ type: ActionTypes.INIT });
        return _ref2 = {
          dispatch,
          subscribe,
          getState,
          replaceReducer
        }, _ref2[_symbolObservable2["default"]] = observable, _ref2;
      }
    }
  });

  // node_modules/redux/lib/utils/warning.js
  var require_warning = __commonJS({
    "node_modules/redux/lib/utils/warning.js"(exports2) {
      "use strict";
      exports2.__esModule = true;
      exports2["default"] = warning;
      function warning(message) {
        if (typeof console !== "undefined" && typeof console.error === "function") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (e) {
        }
      }
    }
  });

  // node_modules/redux/lib/combineReducers.js
  var require_combineReducers = __commonJS({
    "node_modules/redux/lib/combineReducers.js"(exports2) {
      "use strict";
      exports2.__esModule = true;
      exports2["default"] = combineReducers2;
      var _createStore = require_createStore();
      var _isPlainObject = require_isPlainObject();
      var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
      var _warning = require_warning();
      var _warning2 = _interopRequireDefault(_warning);
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { "default": obj };
      }
      function getUndefinedStateErrorMessage(key2, action) {
        var actionType = action && action.type;
        var actionName = actionType && '"' + actionType.toString() + '"' || "an action";
        return "Given action " + actionName + ', reducer "' + key2 + '" returned undefined. To ignore an action, you must explicitly return the previous state.';
      }
      function assertReducerSanity(reducers) {
        Object.keys(reducers).forEach(function(key2) {
          var reducer = reducers[key2];
          var initialState5 = reducer(void 0, { type: _createStore.ActionTypes.INIT });
          if (typeof initialState5 === "undefined") {
            throw new Error('Reducer "' + key2 + '" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined.');
          }
          var type = "@@redux/PROBE_UNKNOWN_ACTION_" + Math.random().toString(36).substring(7).split("").join(".");
          if (typeof reducer(void 0, { type }) === "undefined") {
            throw new Error('Reducer "' + key2 + '" returned undefined when probed with a random type. ' + ("Don't try to handle " + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + "namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined.");
          }
        });
      }
      function combineReducers2(reducers) {
        var reducerKeys = Object.keys(reducers);
        var finalReducers = {};
        for (var i = 0; i < reducerKeys.length; i++) {
          var key2 = reducerKeys[i];
          if (false) {
            if (typeof reducers[key2] === "undefined") {
              (0, _warning2["default"])('No reducer provided for key "' + key2 + '"');
            }
          }
          if (typeof reducers[key2] === "function") {
            finalReducers[key2] = reducers[key2];
          }
        }
        var finalReducerKeys = Object.keys(finalReducers);
        if (false) {
          var unexpectedKeyCache = {};
        }
        var sanityError;
        try {
          assertReducerSanity(finalReducers);
        } catch (e) {
          sanityError = e;
        }
        return function combination() {
          var state = arguments.length <= 0 || arguments[0] === void 0 ? {} : arguments[0];
          var action = arguments[1];
          if (sanityError) {
            throw sanityError;
          }
          if (false) {
            var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
            if (warningMessage) {
              (0, _warning2["default"])(warningMessage);
            }
          }
          var hasChanged = false;
          var nextState = {};
          for (var i2 = 0; i2 < finalReducerKeys.length; i2++) {
            var key3 = finalReducerKeys[i2];
            var reducer = finalReducers[key3];
            var previousStateForKey = state[key3];
            var nextStateForKey = reducer(previousStateForKey, action);
            if (typeof nextStateForKey === "undefined") {
              var errorMessage = getUndefinedStateErrorMessage(key3, action);
              throw new Error(errorMessage);
            }
            nextState[key3] = nextStateForKey;
            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
          }
          return hasChanged ? nextState : state;
        };
      }
    }
  });

  // node_modules/redux/lib/bindActionCreators.js
  var require_bindActionCreators = __commonJS({
    "node_modules/redux/lib/bindActionCreators.js"(exports2) {
      "use strict";
      exports2.__esModule = true;
      exports2["default"] = bindActionCreators;
      function bindActionCreator(actionCreator, dispatch) {
        return function() {
          return dispatch(actionCreator.apply(void 0, arguments));
        };
      }
      function bindActionCreators(actionCreators, dispatch) {
        if (typeof actionCreators === "function") {
          return bindActionCreator(actionCreators, dispatch);
        }
        if (typeof actionCreators !== "object" || actionCreators === null) {
          throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? "null" : typeof actionCreators) + '. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
        }
        var keys = Object.keys(actionCreators);
        var boundActionCreators = {};
        for (var i = 0; i < keys.length; i++) {
          var key2 = keys[i];
          var actionCreator = actionCreators[key2];
          if (typeof actionCreator === "function") {
            boundActionCreators[key2] = bindActionCreator(actionCreator, dispatch);
          }
        }
        return boundActionCreators;
      }
    }
  });

  // node_modules/redux/lib/compose.js
  var require_compose = __commonJS({
    "node_modules/redux/lib/compose.js"(exports2) {
      "use strict";
      exports2.__esModule = true;
      exports2["default"] = compose2;
      function compose2() {
        for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
          funcs[_key] = arguments[_key];
        }
        if (funcs.length === 0) {
          return function(arg) {
            return arg;
          };
        }
        if (funcs.length === 1) {
          return funcs[0];
        }
        var last = funcs[funcs.length - 1];
        var rest = funcs.slice(0, -1);
        return function() {
          return rest.reduceRight(function(composed, f) {
            return f(composed);
          }, last.apply(void 0, arguments));
        };
      }
    }
  });

  // node_modules/redux/lib/applyMiddleware.js
  var require_applyMiddleware = __commonJS({
    "node_modules/redux/lib/applyMiddleware.js"(exports2) {
      "use strict";
      exports2.__esModule = true;
      var _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key2 in source) {
            if (Object.prototype.hasOwnProperty.call(source, key2)) {
              target[key2] = source[key2];
            }
          }
        }
        return target;
      };
      exports2["default"] = applyMiddleware;
      var _compose = require_compose();
      var _compose2 = _interopRequireDefault(_compose);
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { "default": obj };
      }
      function applyMiddleware() {
        for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
          middlewares[_key] = arguments[_key];
        }
        return function(createStore) {
          return function(reducer, preloadedState, enhancer) {
            var store = createStore(reducer, preloadedState, enhancer);
            var _dispatch = store.dispatch;
            var chain = [];
            var middlewareAPI = {
              getState: store.getState,
              dispatch: function dispatch(action) {
                return _dispatch(action);
              }
            };
            chain = middlewares.map(function(middleware) {
              return middleware(middlewareAPI);
            });
            _dispatch = _compose2["default"].apply(void 0, chain)(store.dispatch);
            return _extends({}, store, {
              dispatch: _dispatch
            });
          };
        };
      }
    }
  });

  // node_modules/redux/lib/index.js
  var require_lib2 = __commonJS({
    "node_modules/redux/lib/index.js"(exports2) {
      "use strict";
      exports2.__esModule = true;
      exports2.compose = exports2.applyMiddleware = exports2.bindActionCreators = exports2.combineReducers = exports2.createStore = void 0;
      var _createStore = require_createStore();
      var _createStore2 = _interopRequireDefault(_createStore);
      var _combineReducers = require_combineReducers();
      var _combineReducers2 = _interopRequireDefault(_combineReducers);
      var _bindActionCreators = require_bindActionCreators();
      var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
      var _applyMiddleware = require_applyMiddleware();
      var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
      var _compose = require_compose();
      var _compose2 = _interopRequireDefault(_compose);
      var _warning = require_warning();
      var _warning2 = _interopRequireDefault(_warning);
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { "default": obj };
      }
      if (false) {
        (0, _warning2["default"])("You are currently using minified code outside of NODE_ENV === 'production'. This means that you are running a slower development build of Redux. You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) to ensure you have the correct code for your production build.");
      }
      exports2.createStore = _createStore2["default"];
      exports2.combineReducers = _combineReducers2["default"];
      exports2.bindActionCreators = _bindActionCreators2["default"];
      exports2.applyMiddleware = _applyMiddleware2["default"];
      exports2.compose = _compose2["default"];
    }
  });

  // packages/systems/ix2/shared-constants/trigger-events.ts
  var EventTypeConsts, EventAppliesTo, EventBasedOn, EventContinuousMouseAxes, EventLimitAffectedElements, QuickEffectIds, QuickEffectDirectionConsts;
  var init_trigger_events = __esm({
    "packages/systems/ix2/shared-constants/trigger-events.ts"() {
      "use strict";
      EventTypeConsts = {
        NAVBAR_OPEN: "NAVBAR_OPEN",
        NAVBAR_CLOSE: "NAVBAR_CLOSE",
        TAB_ACTIVE: "TAB_ACTIVE",
        TAB_INACTIVE: "TAB_INACTIVE",
        SLIDER_ACTIVE: "SLIDER_ACTIVE",
        SLIDER_INACTIVE: "SLIDER_INACTIVE",
        DROPDOWN_OPEN: "DROPDOWN_OPEN",
        DROPDOWN_CLOSE: "DROPDOWN_CLOSE",
        MOUSE_CLICK: "MOUSE_CLICK",
        MOUSE_SECOND_CLICK: "MOUSE_SECOND_CLICK",
        MOUSE_DOWN: "MOUSE_DOWN",
        MOUSE_UP: "MOUSE_UP",
        MOUSE_OVER: "MOUSE_OVER",
        MOUSE_OUT: "MOUSE_OUT",
        MOUSE_MOVE: "MOUSE_MOVE",
        MOUSE_MOVE_IN_VIEWPORT: "MOUSE_MOVE_IN_VIEWPORT",
        SCROLL_INTO_VIEW: "SCROLL_INTO_VIEW",
        SCROLL_OUT_OF_VIEW: "SCROLL_OUT_OF_VIEW",
        SCROLLING_IN_VIEW: "SCROLLING_IN_VIEW",
        ECOMMERCE_CART_OPEN: "ECOMMERCE_CART_OPEN",
        ECOMMERCE_CART_CLOSE: "ECOMMERCE_CART_CLOSE",
        PAGE_START: "PAGE_START",
        PAGE_FINISH: "PAGE_FINISH",
        PAGE_SCROLL_UP: "PAGE_SCROLL_UP",
        PAGE_SCROLL_DOWN: "PAGE_SCROLL_DOWN",
        PAGE_SCROLL: "PAGE_SCROLL"
      };
      EventAppliesTo = {
        ELEMENT: "ELEMENT",
        CLASS: "CLASS",
        PAGE: "PAGE"
      };
      EventBasedOn = {
        ELEMENT: "ELEMENT",
        VIEWPORT: "VIEWPORT"
      };
      EventContinuousMouseAxes = {
        X_AXIS: "X_AXIS",
        Y_AXIS: "Y_AXIS"
      };
      EventLimitAffectedElements = {
        CHILDREN: "CHILDREN",
        SIBLINGS: "SIBLINGS",
        IMMEDIATE_CHILDREN: "IMMEDIATE_CHILDREN"
      };
      QuickEffectIds = {
        FADE_EFFECT: "FADE_EFFECT",
        SLIDE_EFFECT: "SLIDE_EFFECT",
        GROW_EFFECT: "GROW_EFFECT",
        SHRINK_EFFECT: "SHRINK_EFFECT",
        SPIN_EFFECT: "SPIN_EFFECT",
        FLY_EFFECT: "FLY_EFFECT",
        POP_EFFECT: "POP_EFFECT",
        FLIP_EFFECT: "FLIP_EFFECT",
        JIGGLE_EFFECT: "JIGGLE_EFFECT",
        PULSE_EFFECT: "PULSE_EFFECT",
        DROP_EFFECT: "DROP_EFFECT",
        BLINK_EFFECT: "BLINK_EFFECT",
        BOUNCE_EFFECT: "BOUNCE_EFFECT",
        FLIP_LEFT_TO_RIGHT_EFFECT: "FLIP_LEFT_TO_RIGHT_EFFECT",
        FLIP_RIGHT_TO_LEFT_EFFECT: "FLIP_RIGHT_TO_LEFT_EFFECT",
        RUBBER_BAND_EFFECT: "RUBBER_BAND_EFFECT",
        JELLO_EFFECT: "JELLO_EFFECT",
        GROW_BIG_EFFECT: "GROW_BIG_EFFECT",
        SHRINK_BIG_EFFECT: "SHRINK_BIG_EFFECT",
        PLUGIN_LOTTIE_EFFECT: "PLUGIN_LOTTIE_EFFECT"
      };
      QuickEffectDirectionConsts = {
        LEFT: "LEFT",
        RIGHT: "RIGHT",
        BOTTOM: "BOTTOM",
        TOP: "TOP",
        BOTTOM_LEFT: "BOTTOM_LEFT",
        BOTTOM_RIGHT: "BOTTOM_RIGHT",
        TOP_RIGHT: "TOP_RIGHT",
        TOP_LEFT: "TOP_LEFT",
        CLOCKWISE: "CLOCKWISE",
        COUNTER_CLOCKWISE: "COUNTER_CLOCKWISE"
      };
    }
  });

  // packages/systems/ix2/shared-constants/animation-actions.ts
  var ActionTypeConsts, ActionAppliesTo;
  var init_animation_actions = __esm({
    "packages/systems/ix2/shared-constants/animation-actions.ts"() {
      "use strict";
      ActionTypeConsts = {
        TRANSFORM_MOVE: "TRANSFORM_MOVE",
        TRANSFORM_SCALE: "TRANSFORM_SCALE",
        TRANSFORM_ROTATE: "TRANSFORM_ROTATE",
        TRANSFORM_SKEW: "TRANSFORM_SKEW",
        STYLE_OPACITY: "STYLE_OPACITY",
        STYLE_SIZE: "STYLE_SIZE",
        STYLE_FILTER: "STYLE_FILTER",
        STYLE_FONT_VARIATION: "STYLE_FONT_VARIATION",
        STYLE_BACKGROUND_COLOR: "STYLE_BACKGROUND_COLOR",
        STYLE_BORDER: "STYLE_BORDER",
        STYLE_TEXT_COLOR: "STYLE_TEXT_COLOR",
        OBJECT_VALUE: "OBJECT_VALUE",
        PLUGIN_LOTTIE: "PLUGIN_LOTTIE",
        PLUGIN_SPLINE: "PLUGIN_SPLINE",
        PLUGIN_VARIABLE: "PLUGIN_VARIABLE",
        GENERAL_DISPLAY: "GENERAL_DISPLAY",
        GENERAL_START_ACTION: "GENERAL_START_ACTION",
        GENERAL_CONTINUOUS_ACTION: "GENERAL_CONTINUOUS_ACTION",
        // TODO: Clean these up below because they're not used at this time
        GENERAL_COMBO_CLASS: "GENERAL_COMBO_CLASS",
        GENERAL_STOP_ACTION: "GENERAL_STOP_ACTION",
        GENERAL_LOOP: "GENERAL_LOOP",
        STYLE_BOX_SHADOW: "STYLE_BOX_SHADOW"
      };
      ActionAppliesTo = {
        ELEMENT: "ELEMENT",
        ELEMENT_CLASS: "ELEMENT_CLASS",
        TRIGGER_ELEMENT: "TRIGGER_ELEMENT"
      };
    }
  });

  // packages/systems/ix2/shared-constants/trigger-interactions.ts
  var InteractionTypeConsts;
  var init_trigger_interactions = __esm({
    "packages/systems/ix2/shared-constants/trigger-interactions.ts"() {
      "use strict";
      InteractionTypeConsts = {
        MOUSE_CLICK_INTERACTION: "MOUSE_CLICK_INTERACTION",
        MOUSE_HOVER_INTERACTION: "MOUSE_HOVER_INTERACTION",
        MOUSE_MOVE_INTERACTION: "MOUSE_MOVE_INTERACTION",
        SCROLL_INTO_VIEW_INTERACTION: "SCROLL_INTO_VIEW_INTERACTION",
        SCROLLING_IN_VIEW_INTERACTION: "SCROLLING_IN_VIEW_INTERACTION",
        MOUSE_MOVE_IN_VIEWPORT_INTERACTION: "MOUSE_MOVE_IN_VIEWPORT_INTERACTION",
        PAGE_IS_SCROLLING_INTERACTION: "PAGE_IS_SCROLLING_INTERACTION",
        PAGE_LOAD_INTERACTION: "PAGE_LOAD_INTERACTION",
        PAGE_SCROLLED_INTERACTION: "PAGE_SCROLLED_INTERACTION",
        NAVBAR_INTERACTION: "NAVBAR_INTERACTION",
        DROPDOWN_INTERACTION: "DROPDOWN_INTERACTION",
        ECOMMERCE_CART_INTERACTION: "ECOMMERCE_CART_INTERACTION",
        TAB_INTERACTION: "TAB_INTERACTION",
        SLIDER_INTERACTION: "SLIDER_INTERACTION"
      };
    }
  });

  // packages/systems/ix2/shared-constants/reduced-motion.ts
  var TRANSFORM_MOVE, TRANSFORM_SCALE, TRANSFORM_ROTATE, TRANSFORM_SKEW, STYLE_SIZE, STYLE_FILTER, STYLE_FONT_VARIATION, ReducedMotionTypes;
  var init_reduced_motion = __esm({
    "packages/systems/ix2/shared-constants/reduced-motion.ts"() {
      "use strict";
      init_animation_actions();
      ({
        TRANSFORM_MOVE,
        TRANSFORM_SCALE,
        TRANSFORM_ROTATE,
        TRANSFORM_SKEW,
        STYLE_SIZE,
        STYLE_FILTER,
        STYLE_FONT_VARIATION
      } = ActionTypeConsts);
      ReducedMotionTypes = {
        [TRANSFORM_MOVE]: true,
        [TRANSFORM_SCALE]: true,
        [TRANSFORM_ROTATE]: true,
        [TRANSFORM_SKEW]: true,
        [STYLE_SIZE]: true,
        [STYLE_FILTER]: true,
        [STYLE_FONT_VARIATION]: true
      };
    }
  });

  // packages/systems/ix2/shared-constants/IX2EngineActionTypes.ts
  var IX2EngineActionTypes_exports = {};
  __export(IX2EngineActionTypes_exports, {
    IX2_ACTION_LIST_PLAYBACK_CHANGED: () => IX2_ACTION_LIST_PLAYBACK_CHANGED,
    IX2_ANIMATION_FRAME_CHANGED: () => IX2_ANIMATION_FRAME_CHANGED,
    IX2_CLEAR_REQUESTED: () => IX2_CLEAR_REQUESTED,
    IX2_ELEMENT_STATE_CHANGED: () => IX2_ELEMENT_STATE_CHANGED,
    IX2_EVENT_LISTENER_ADDED: () => IX2_EVENT_LISTENER_ADDED,
    IX2_EVENT_STATE_CHANGED: () => IX2_EVENT_STATE_CHANGED,
    IX2_INSTANCE_ADDED: () => IX2_INSTANCE_ADDED,
    IX2_INSTANCE_REMOVED: () => IX2_INSTANCE_REMOVED,
    IX2_INSTANCE_STARTED: () => IX2_INSTANCE_STARTED,
    IX2_MEDIA_QUERIES_DEFINED: () => IX2_MEDIA_QUERIES_DEFINED,
    IX2_PARAMETER_CHANGED: () => IX2_PARAMETER_CHANGED,
    IX2_PLAYBACK_REQUESTED: () => IX2_PLAYBACK_REQUESTED,
    IX2_PREVIEW_REQUESTED: () => IX2_PREVIEW_REQUESTED,
    IX2_RAW_DATA_IMPORTED: () => IX2_RAW_DATA_IMPORTED,
    IX2_SESSION_INITIALIZED: () => IX2_SESSION_INITIALIZED,
    IX2_SESSION_STARTED: () => IX2_SESSION_STARTED,
    IX2_SESSION_STOPPED: () => IX2_SESSION_STOPPED,
    IX2_STOP_REQUESTED: () => IX2_STOP_REQUESTED,
    IX2_TEST_FRAME_RENDERED: () => IX2_TEST_FRAME_RENDERED,
    IX2_VIEWPORT_WIDTH_CHANGED: () => IX2_VIEWPORT_WIDTH_CHANGED
  });
  var IX2_RAW_DATA_IMPORTED, IX2_SESSION_INITIALIZED, IX2_SESSION_STARTED, IX2_SESSION_STOPPED, IX2_PREVIEW_REQUESTED, IX2_PLAYBACK_REQUESTED, IX2_STOP_REQUESTED, IX2_CLEAR_REQUESTED, IX2_EVENT_LISTENER_ADDED, IX2_EVENT_STATE_CHANGED, IX2_ANIMATION_FRAME_CHANGED, IX2_PARAMETER_CHANGED, IX2_INSTANCE_ADDED, IX2_INSTANCE_STARTED, IX2_INSTANCE_REMOVED, IX2_ELEMENT_STATE_CHANGED, IX2_ACTION_LIST_PLAYBACK_CHANGED, IX2_VIEWPORT_WIDTH_CHANGED, IX2_MEDIA_QUERIES_DEFINED, IX2_TEST_FRAME_RENDERED;
  var init_IX2EngineActionTypes = __esm({
    "packages/systems/ix2/shared-constants/IX2EngineActionTypes.ts"() {
      "use strict";
      IX2_RAW_DATA_IMPORTED = "IX2_RAW_DATA_IMPORTED";
      IX2_SESSION_INITIALIZED = "IX2_SESSION_INITIALIZED";
      IX2_SESSION_STARTED = "IX2_SESSION_STARTED";
      IX2_SESSION_STOPPED = "IX2_SESSION_STOPPED";
      IX2_PREVIEW_REQUESTED = "IX2_PREVIEW_REQUESTED";
      IX2_PLAYBACK_REQUESTED = "IX2_PLAYBACK_REQUESTED";
      IX2_STOP_REQUESTED = "IX2_STOP_REQUESTED";
      IX2_CLEAR_REQUESTED = "IX2_CLEAR_REQUESTED";
      IX2_EVENT_LISTENER_ADDED = "IX2_EVENT_LISTENER_ADDED";
      IX2_EVENT_STATE_CHANGED = "IX2_EVENT_STATE_CHANGED";
      IX2_ANIMATION_FRAME_CHANGED = "IX2_ANIMATION_FRAME_CHANGED";
      IX2_PARAMETER_CHANGED = "IX2_PARAMETER_CHANGED";
      IX2_INSTANCE_ADDED = "IX2_INSTANCE_ADDED";
      IX2_INSTANCE_STARTED = "IX2_INSTANCE_STARTED";
      IX2_INSTANCE_REMOVED = "IX2_INSTANCE_REMOVED";
      IX2_ELEMENT_STATE_CHANGED = "IX2_ELEMENT_STATE_CHANGED";
      IX2_ACTION_LIST_PLAYBACK_CHANGED = "IX2_ACTION_LIST_PLAYBACK_CHANGED";
      IX2_VIEWPORT_WIDTH_CHANGED = "IX2_VIEWPORT_WIDTH_CHANGED";
      IX2_MEDIA_QUERIES_DEFINED = "IX2_MEDIA_QUERIES_DEFINED";
      IX2_TEST_FRAME_RENDERED = "IX2_TEST_FRAME_RENDERED";
    }
  });

  // packages/systems/ix2/shared-constants/IX2EngineConstants.ts
  var IX2EngineConstants_exports = {};
  __export(IX2EngineConstants_exports, {
    ABSTRACT_NODE: () => ABSTRACT_NODE,
    AUTO: () => AUTO,
    BACKGROUND: () => BACKGROUND,
    BACKGROUND_COLOR: () => BACKGROUND_COLOR,
    BAR_DELIMITER: () => BAR_DELIMITER,
    BORDER_COLOR: () => BORDER_COLOR,
    BOUNDARY_SELECTOR: () => BOUNDARY_SELECTOR,
    CHILDREN: () => CHILDREN,
    COLON_DELIMITER: () => COLON_DELIMITER,
    COLOR: () => COLOR,
    COMMA_DELIMITER: () => COMMA_DELIMITER,
    CONFIG_UNIT: () => CONFIG_UNIT,
    CONFIG_VALUE: () => CONFIG_VALUE,
    CONFIG_X_UNIT: () => CONFIG_X_UNIT,
    CONFIG_X_VALUE: () => CONFIG_X_VALUE,
    CONFIG_Y_UNIT: () => CONFIG_Y_UNIT,
    CONFIG_Y_VALUE: () => CONFIG_Y_VALUE,
    CONFIG_Z_UNIT: () => CONFIG_Z_UNIT,
    CONFIG_Z_VALUE: () => CONFIG_Z_VALUE,
    DISPLAY: () => DISPLAY,
    FILTER: () => FILTER,
    FLEX: () => FLEX,
    FONT_VARIATION_SETTINGS: () => FONT_VARIATION_SETTINGS,
    HEIGHT: () => HEIGHT,
    HTML_ELEMENT: () => HTML_ELEMENT,
    IMMEDIATE_CHILDREN: () => IMMEDIATE_CHILDREN,
    IX2_ID_DELIMITER: () => IX2_ID_DELIMITER,
    OPACITY: () => OPACITY,
    PARENT: () => PARENT,
    PLAIN_OBJECT: () => PLAIN_OBJECT,
    PRESERVE_3D: () => PRESERVE_3D,
    RENDER_GENERAL: () => RENDER_GENERAL,
    RENDER_PLUGIN: () => RENDER_PLUGIN,
    RENDER_STYLE: () => RENDER_STYLE,
    RENDER_TRANSFORM: () => RENDER_TRANSFORM,
    ROTATE_X: () => ROTATE_X,
    ROTATE_Y: () => ROTATE_Y,
    ROTATE_Z: () => ROTATE_Z,
    SCALE_3D: () => SCALE_3D,
    SCALE_X: () => SCALE_X,
    SCALE_Y: () => SCALE_Y,
    SCALE_Z: () => SCALE_Z,
    SIBLINGS: () => SIBLINGS,
    SKEW: () => SKEW,
    SKEW_X: () => SKEW_X,
    SKEW_Y: () => SKEW_Y,
    TRANSFORM: () => TRANSFORM,
    TRANSLATE_3D: () => TRANSLATE_3D,
    TRANSLATE_X: () => TRANSLATE_X,
    TRANSLATE_Y: () => TRANSLATE_Y,
    TRANSLATE_Z: () => TRANSLATE_Z,
    WF_PAGE: () => WF_PAGE,
    WIDTH: () => WIDTH,
    WILL_CHANGE: () => WILL_CHANGE,
    W_MOD_IX: () => W_MOD_IX,
    W_MOD_JS: () => W_MOD_JS
  });
  var IX2_ID_DELIMITER, WF_PAGE, W_MOD_JS, W_MOD_IX, BOUNDARY_SELECTOR, CONFIG_X_VALUE, CONFIG_Y_VALUE, CONFIG_Z_VALUE, CONFIG_VALUE, CONFIG_X_UNIT, CONFIG_Y_UNIT, CONFIG_Z_UNIT, CONFIG_UNIT, TRANSFORM, TRANSLATE_X, TRANSLATE_Y, TRANSLATE_Z, TRANSLATE_3D, SCALE_X, SCALE_Y, SCALE_Z, SCALE_3D, ROTATE_X, ROTATE_Y, ROTATE_Z, SKEW, SKEW_X, SKEW_Y, OPACITY, FILTER, FONT_VARIATION_SETTINGS, WIDTH, HEIGHT, BACKGROUND_COLOR, BACKGROUND, BORDER_COLOR, COLOR, DISPLAY, FLEX, WILL_CHANGE, AUTO, COMMA_DELIMITER, COLON_DELIMITER, BAR_DELIMITER, CHILDREN, IMMEDIATE_CHILDREN, SIBLINGS, PARENT, PRESERVE_3D, HTML_ELEMENT, PLAIN_OBJECT, ABSTRACT_NODE, RENDER_TRANSFORM, RENDER_GENERAL, RENDER_STYLE, RENDER_PLUGIN;
  var init_IX2EngineConstants = __esm({
    "packages/systems/ix2/shared-constants/IX2EngineConstants.ts"() {
      "use strict";
      IX2_ID_DELIMITER = "|";
      WF_PAGE = "data-wf-page";
      W_MOD_JS = "w-mod-js";
      W_MOD_IX = "w-mod-ix";
      BOUNDARY_SELECTOR = ".w-dyn-item";
      CONFIG_X_VALUE = "xValue";
      CONFIG_Y_VALUE = "yValue";
      CONFIG_Z_VALUE = "zValue";
      CONFIG_VALUE = "value";
      CONFIG_X_UNIT = "xUnit";
      CONFIG_Y_UNIT = "yUnit";
      CONFIG_Z_UNIT = "zUnit";
      CONFIG_UNIT = "unit";
      TRANSFORM = "transform";
      TRANSLATE_X = "translateX";
      TRANSLATE_Y = "translateY";
      TRANSLATE_Z = "translateZ";
      TRANSLATE_3D = "translate3d";
      SCALE_X = "scaleX";
      SCALE_Y = "scaleY";
      SCALE_Z = "scaleZ";
      SCALE_3D = "scale3d";
      ROTATE_X = "rotateX";
      ROTATE_Y = "rotateY";
      ROTATE_Z = "rotateZ";
      SKEW = "skew";
      SKEW_X = "skewX";
      SKEW_Y = "skewY";
      OPACITY = "opacity";
      FILTER = "filter";
      FONT_VARIATION_SETTINGS = "font-variation-settings";
      WIDTH = "width";
      HEIGHT = "height";
      BACKGROUND_COLOR = "backgroundColor";
      BACKGROUND = "background";
      BORDER_COLOR = "borderColor";
      COLOR = "color";
      DISPLAY = "display";
      FLEX = "flex";
      WILL_CHANGE = "willChange";
      AUTO = "AUTO";
      COMMA_DELIMITER = ",";
      COLON_DELIMITER = ":";
      BAR_DELIMITER = "|";
      CHILDREN = "CHILDREN";
      IMMEDIATE_CHILDREN = "IMMEDIATE_CHILDREN";
      SIBLINGS = "SIBLINGS";
      PARENT = "PARENT";
      PRESERVE_3D = "preserve-3d";
      HTML_ELEMENT = "HTML_ELEMENT";
      PLAIN_OBJECT = "PLAIN_OBJECT";
      ABSTRACT_NODE = "ABSTRACT_NODE";
      RENDER_TRANSFORM = "RENDER_TRANSFORM";
      RENDER_GENERAL = "RENDER_GENERAL";
      RENDER_STYLE = "RENDER_STYLE";
      RENDER_PLUGIN = "RENDER_PLUGIN";
    }
  });

  // packages/systems/ix2/shared-constants/index.ts
  var shared_constants_exports = {};
  __export(shared_constants_exports, {
    ActionAppliesTo: () => ActionAppliesTo,
    ActionTypeConsts: () => ActionTypeConsts,
    EventAppliesTo: () => EventAppliesTo,
    EventBasedOn: () => EventBasedOn,
    EventContinuousMouseAxes: () => EventContinuousMouseAxes,
    EventLimitAffectedElements: () => EventLimitAffectedElements,
    EventTypeConsts: () => EventTypeConsts,
    IX2EngineActionTypes: () => IX2EngineActionTypes_exports,
    IX2EngineConstants: () => IX2EngineConstants_exports,
    InteractionTypeConsts: () => InteractionTypeConsts,
    QuickEffectDirectionConsts: () => QuickEffectDirectionConsts,
    QuickEffectIds: () => QuickEffectIds,
    ReducedMotionTypes: () => ReducedMotionTypes
  });
  var init_shared_constants = __esm({
    "packages/systems/ix2/shared-constants/index.ts"() {
      "use strict";
      init_trigger_events();
      init_animation_actions();
      init_trigger_interactions();
      init_reduced_motion();
      init_IX2EngineActionTypes();
      init_IX2EngineConstants();
      init_animation_actions();
      init_trigger_events();
    }
  });

  // packages/systems/ix2/engine/reducers/IX2DataReducer.ts
  var IX2_RAW_DATA_IMPORTED2, ixData;
  var init_IX2DataReducer = __esm({
    "packages/systems/ix2/engine/reducers/IX2DataReducer.ts"() {
      "use strict";
      init_shared_constants();
      ({ IX2_RAW_DATA_IMPORTED: IX2_RAW_DATA_IMPORTED2 } = IX2EngineActionTypes_exports);
      ixData = (state = Object.freeze({}), action) => {
        switch (action.type) {
          case IX2_RAW_DATA_IMPORTED2: {
            return action.payload.ixData || Object.freeze({});
          }
          default: {
            return state;
          }
        }
      };
    }
  });

  // node_modules/timm/lib/timm.js
  var require_timm = __commonJS({
    "node_modules/timm/lib/timm.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
      exports2.clone = clone;
      exports2.addLast = addLast2;
      exports2.addFirst = addFirst;
      exports2.removeLast = removeLast;
      exports2.removeFirst = removeFirst;
      exports2.insert = insert;
      exports2.removeAt = removeAt;
      exports2.replaceAt = replaceAt;
      exports2.getIn = getIn3;
      exports2.set = set3;
      exports2.setIn = setIn4;
      exports2.update = update;
      exports2.updateIn = updateIn;
      exports2.merge = merge4;
      exports2.mergeDeep = mergeDeep2;
      exports2.mergeIn = mergeIn4;
      exports2.omit = omit;
      exports2.addDefaults = addDefaults;
      var INVALID_ARGS = "INVALID_ARGS";
      function throwStr(msg) {
        throw new Error(msg);
      }
      function getKeysAndSymbols(obj) {
        var keys = Object.keys(obj);
        if (Object.getOwnPropertySymbols) {
          return keys.concat(Object.getOwnPropertySymbols(obj));
        }
        return keys;
      }
      var hasOwnProperty9 = {}.hasOwnProperty;
      function clone(obj) {
        if (Array.isArray(obj))
          return obj.slice();
        var keys = getKeysAndSymbols(obj);
        var out = {};
        for (var i = 0; i < keys.length; i++) {
          var key2 = keys[i];
          out[key2] = obj[key2];
        }
        return out;
      }
      function doMerge(fAddDefaults, fDeep, first) {
        var out = first;
        !(out != null) && throwStr(false ? "At least one object should be provided to merge()" : INVALID_ARGS);
        var fChanged = false;
        for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
          rest[_key - 3] = arguments[_key];
        }
        for (var idx = 0; idx < rest.length; idx++) {
          var obj = rest[idx];
          if (obj == null)
            continue;
          var keys = getKeysAndSymbols(obj);
          if (!keys.length)
            continue;
          for (var j = 0; j <= keys.length; j++) {
            var key2 = keys[j];
            if (fAddDefaults && out[key2] !== void 0)
              continue;
            var nextVal = obj[key2];
            if (fDeep && isObject2(out[key2]) && isObject2(nextVal)) {
              nextVal = doMerge(fAddDefaults, fDeep, out[key2], nextVal);
            }
            if (nextVal === void 0 || nextVal === out[key2])
              continue;
            if (!fChanged) {
              fChanged = true;
              out = clone(out);
            }
            out[key2] = nextVal;
          }
        }
        return out;
      }
      function isObject2(o) {
        var type = typeof o === "undefined" ? "undefined" : _typeof2(o);
        return o != null && (type === "object" || type === "function");
      }
      function addLast2(array, val2) {
        if (Array.isArray(val2))
          return array.concat(val2);
        return array.concat([val2]);
      }
      function addFirst(array, val2) {
        if (Array.isArray(val2))
          return val2.concat(array);
        return [val2].concat(array);
      }
      function removeLast(array) {
        if (!array.length)
          return array;
        return array.slice(0, array.length - 1);
      }
      function removeFirst(array) {
        if (!array.length)
          return array;
        return array.slice(1);
      }
      function insert(array, idx, val2) {
        return array.slice(0, idx).concat(Array.isArray(val2) ? val2 : [val2]).concat(array.slice(idx));
      }
      function removeAt(array, idx) {
        if (idx >= array.length || idx < 0)
          return array;
        return array.slice(0, idx).concat(array.slice(idx + 1));
      }
      function replaceAt(array, idx, newItem) {
        if (array[idx] === newItem)
          return array;
        var len = array.length;
        var result2 = Array(len);
        for (var i = 0; i < len; i++) {
          result2[i] = array[i];
        }
        result2[idx] = newItem;
        return result2;
      }
      function getIn3(obj, path) {
        !Array.isArray(path) && throwStr(false ? "A path array should be provided when calling getIn()" : INVALID_ARGS);
        if (obj == null)
          return void 0;
        var ptr = obj;
        for (var i = 0; i < path.length; i++) {
          var key2 = path[i];
          ptr = ptr != null ? ptr[key2] : void 0;
          if (ptr === void 0)
            return ptr;
        }
        return ptr;
      }
      function set3(obj, key2, val2) {
        var fallback = typeof key2 === "number" ? [] : {};
        var finalObj = obj == null ? fallback : obj;
        if (finalObj[key2] === val2)
          return finalObj;
        var obj2 = clone(finalObj);
        obj2[key2] = val2;
        return obj2;
      }
      function doSetIn(obj, path, val2, idx) {
        var newValue = void 0;
        var key2 = path[idx];
        if (idx === path.length - 1) {
          newValue = val2;
        } else {
          var nestedObj = isObject2(obj) && isObject2(obj[key2]) ? obj[key2] : typeof path[idx + 1] === "number" ? [] : {};
          newValue = doSetIn(nestedObj, path, val2, idx + 1);
        }
        return set3(obj, key2, newValue);
      }
      function setIn4(obj, path, val2) {
        if (!path.length)
          return val2;
        return doSetIn(obj, path, val2, 0);
      }
      function update(obj, key2, fnUpdate) {
        var prevVal = obj == null ? void 0 : obj[key2];
        var nextVal = fnUpdate(prevVal);
        return set3(obj, key2, nextVal);
      }
      function updateIn(obj, path, fnUpdate) {
        var prevVal = getIn3(obj, path);
        var nextVal = fnUpdate(prevVal);
        return setIn4(obj, path, nextVal);
      }
      function merge4(a, b, c, d, e, f) {
        for (var _len2 = arguments.length, rest = Array(_len2 > 6 ? _len2 - 6 : 0), _key2 = 6; _key2 < _len2; _key2++) {
          rest[_key2 - 6] = arguments[_key2];
        }
        return rest.length ? doMerge.call.apply(doMerge, [null, false, false, a, b, c, d, e, f].concat(rest)) : doMerge(false, false, a, b, c, d, e, f);
      }
      function mergeDeep2(a, b, c, d, e, f) {
        for (var _len3 = arguments.length, rest = Array(_len3 > 6 ? _len3 - 6 : 0), _key3 = 6; _key3 < _len3; _key3++) {
          rest[_key3 - 6] = arguments[_key3];
        }
        return rest.length ? doMerge.call.apply(doMerge, [null, false, true, a, b, c, d, e, f].concat(rest)) : doMerge(false, true, a, b, c, d, e, f);
      }
      function mergeIn4(a, path, b, c, d, e, f) {
        var prevVal = getIn3(a, path);
        if (prevVal == null)
          prevVal = {};
        var nextVal = void 0;
        for (var _len4 = arguments.length, rest = Array(_len4 > 7 ? _len4 - 7 : 0), _key4 = 7; _key4 < _len4; _key4++) {
          rest[_key4 - 7] = arguments[_key4];
        }
        if (rest.length) {
          nextVal = doMerge.call.apply(doMerge, [null, false, false, prevVal, b, c, d, e, f].concat(rest));
        } else {
          nextVal = doMerge(false, false, prevVal, b, c, d, e, f);
        }
        return setIn4(a, path, nextVal);
      }
      function omit(obj, attrs) {
        var omitList = Array.isArray(attrs) ? attrs : [attrs];
        var fDoSomething = false;
        for (var i = 0; i < omitList.length; i++) {
          if (hasOwnProperty9.call(obj, omitList[i])) {
            fDoSomething = true;
            break;
          }
        }
        if (!fDoSomething)
          return obj;
        var out = {};
        var keys = getKeysAndSymbols(obj);
        for (var _i = 0; _i < keys.length; _i++) {
          var key2 = keys[_i];
          if (omitList.indexOf(key2) >= 0)
            continue;
          out[key2] = obj[key2];
        }
        return out;
      }
      function addDefaults(a, b, c, d, e, f) {
        for (var _len5 = arguments.length, rest = Array(_len5 > 6 ? _len5 - 6 : 0), _key5 = 6; _key5 < _len5; _key5++) {
          rest[_key5 - 6] = arguments[_key5];
        }
        return rest.length ? doMerge.call.apply(doMerge, [null, true, false, a, b, c, d, e, f].concat(rest)) : doMerge(true, false, a, b, c, d, e, f);
      }
      var timm = {
        clone,
        addLast: addLast2,
        addFirst,
        removeLast,
        removeFirst,
        insert,
        removeAt,
        replaceAt,
        getIn: getIn3,
        // eslint-disable-next-line object-shorthand
        set: set3,
        // so that flow doesn't complain
        setIn: setIn4,
        update,
        updateIn,
        merge: merge4,
        mergeDeep: mergeDeep2,
        mergeIn: mergeIn4,
        omit,
        addDefaults
      };
      exports2.default = timm;
    }
  });

  // packages/systems/ix2/engine/reducers/IX2RequestReducer.ts
  var import_timm, IX2_PREVIEW_REQUESTED2, IX2_PLAYBACK_REQUESTED2, IX2_STOP_REQUESTED2, IX2_CLEAR_REQUESTED2, initialState, stateKeys, ixRequest;
  var init_IX2RequestReducer = __esm({
    "packages/systems/ix2/engine/reducers/IX2RequestReducer.ts"() {
      "use strict";
      init_shared_constants();
      import_timm = __toESM(require_timm());
      ({
        IX2_PREVIEW_REQUESTED: IX2_PREVIEW_REQUESTED2,
        IX2_PLAYBACK_REQUESTED: IX2_PLAYBACK_REQUESTED2,
        IX2_STOP_REQUESTED: IX2_STOP_REQUESTED2,
        IX2_CLEAR_REQUESTED: IX2_CLEAR_REQUESTED2
      } = IX2EngineActionTypes_exports);
      initialState = {
        preview: {},
        playback: {},
        stop: {},
        clear: {}
      };
      stateKeys = Object.create(null, {
        [IX2_PREVIEW_REQUESTED2]: { value: "preview" },
        [IX2_PLAYBACK_REQUESTED2]: { value: "playback" },
        [IX2_STOP_REQUESTED2]: { value: "stop" },
        [IX2_CLEAR_REQUESTED2]: { value: "clear" }
      });
      ixRequest = (state = initialState, action) => {
        if (action.type in stateKeys) {
          const key2 = [stateKeys[action.type]];
          return (0, import_timm.setIn)(state, [key2], { ...action.payload });
        }
        return state;
      };
    }
  });

  // packages/systems/ix2/engine/reducers/IX2SessionReducer.ts
  var import_timm2, IX2_SESSION_INITIALIZED2, IX2_SESSION_STARTED2, IX2_TEST_FRAME_RENDERED2, IX2_SESSION_STOPPED2, IX2_EVENT_LISTENER_ADDED2, IX2_EVENT_STATE_CHANGED2, IX2_ANIMATION_FRAME_CHANGED2, IX2_ACTION_LIST_PLAYBACK_CHANGED2, IX2_VIEWPORT_WIDTH_CHANGED2, IX2_MEDIA_QUERIES_DEFINED2, initialState2, TEST_FRAME_STEPS_SIZE, ixSession;
  var init_IX2SessionReducer = __esm({
    "packages/systems/ix2/engine/reducers/IX2SessionReducer.ts"() {
      "use strict";
      init_shared_constants();
      import_timm2 = __toESM(require_timm());
      ({
        IX2_SESSION_INITIALIZED: IX2_SESSION_INITIALIZED2,
        IX2_SESSION_STARTED: IX2_SESSION_STARTED2,
        IX2_TEST_FRAME_RENDERED: IX2_TEST_FRAME_RENDERED2,
        IX2_SESSION_STOPPED: IX2_SESSION_STOPPED2,
        IX2_EVENT_LISTENER_ADDED: IX2_EVENT_LISTENER_ADDED2,
        IX2_EVENT_STATE_CHANGED: IX2_EVENT_STATE_CHANGED2,
        IX2_ANIMATION_FRAME_CHANGED: IX2_ANIMATION_FRAME_CHANGED2,
        IX2_ACTION_LIST_PLAYBACK_CHANGED: IX2_ACTION_LIST_PLAYBACK_CHANGED2,
        IX2_VIEWPORT_WIDTH_CHANGED: IX2_VIEWPORT_WIDTH_CHANGED2,
        IX2_MEDIA_QUERIES_DEFINED: IX2_MEDIA_QUERIES_DEFINED2
      } = IX2EngineActionTypes_exports);
      initialState2 = {
        active: false,
        tick: 0,
        eventListeners: [],
        eventState: {},
        playbackState: {},
        viewportWidth: 0,
        mediaQueryKey: null,
        hasBoundaryNodes: false,
        hasDefinedMediaQueries: false,
        reducedMotion: false
      };
      TEST_FRAME_STEPS_SIZE = 20;
      ixSession = (state = initialState2, action) => {
        switch (action.type) {
          case IX2_SESSION_INITIALIZED2: {
            const { hasBoundaryNodes, reducedMotion } = action.payload;
            return (0, import_timm2.merge)(state, {
              hasBoundaryNodes,
              reducedMotion
            });
          }
          case IX2_SESSION_STARTED2: {
            return (0, import_timm2.set)(state, "active", true);
          }
          case IX2_TEST_FRAME_RENDERED2: {
            const {
              payload: { step = TEST_FRAME_STEPS_SIZE }
            } = action;
            return (0, import_timm2.set)(state, "tick", state.tick + step);
          }
          case IX2_SESSION_STOPPED2: {
            return initialState2;
          }
          case IX2_ANIMATION_FRAME_CHANGED2: {
            const {
              payload: { now }
            } = action;
            return (0, import_timm2.set)(state, "tick", now);
          }
          case IX2_EVENT_LISTENER_ADDED2: {
            const eventListeners = (0, import_timm2.addLast)(state.eventListeners, action.payload);
            return (0, import_timm2.set)(state, "eventListeners", eventListeners);
          }
          case IX2_EVENT_STATE_CHANGED2: {
            const { stateKey, newState } = action.payload;
            return (0, import_timm2.setIn)(state, ["eventState", stateKey], newState);
          }
          case IX2_ACTION_LIST_PLAYBACK_CHANGED2: {
            const { actionListId, isPlaying } = action.payload;
            return (0, import_timm2.setIn)(state, ["playbackState", actionListId], isPlaying);
          }
          case IX2_VIEWPORT_WIDTH_CHANGED2: {
            const { width: width2, mediaQueries } = action.payload;
            const mediaQueryCount = mediaQueries.length;
            let mediaQueryKey = null;
            for (let i = 0; i < mediaQueryCount; i++) {
              const { key: key2, min, max } = mediaQueries[i];
              if (width2 >= min && width2 <= max) {
                mediaQueryKey = key2;
                break;
              }
            }
            return (0, import_timm2.merge)(state, {
              viewportWidth: width2,
              mediaQueryKey
            });
          }
          case IX2_MEDIA_QUERIES_DEFINED2: {
            return (0, import_timm2.set)(state, "hasDefinedMediaQueries", true);
          }
          default: {
            return state;
          }
        }
      };
    }
  });

  // node_modules/lodash/_createFind.js
  var require_createFind = __commonJS({
    "node_modules/lodash/_createFind.js"(exports2, module2) {
      var baseIteratee = require_baseIteratee();
      var isArrayLike = require_isArrayLike();
      var keys = require_keys();
      function createFind(findIndexFunc) {
        return function(collection, predicate, fromIndex) {
          var iterable = Object(collection);
          if (!isArrayLike(collection)) {
            var iteratee = baseIteratee(predicate, 3);
            collection = keys(collection);
            predicate = function(key2) {
              return iteratee(iterable[key2], key2, iterable);
            };
          }
          var index2 = findIndexFunc(collection, predicate, fromIndex);
          return index2 > -1 ? iterable[iteratee ? collection[index2] : index2] : void 0;
        };
      }
      module2.exports = createFind;
    }
  });

  // node_modules/lodash/find.js
  var require_find = __commonJS({
    "node_modules/lodash/find.js"(exports2, module2) {
      var createFind = require_createFind();
      var findIndex2 = require_findIndex();
      var find4 = createFind(findIndex2);
      module2.exports = find4;
    }
  });

  // packages/systems/ix2/shared/logic/IX2BrowserSupport.ts
  var IX2BrowserSupport_exports = {};
  __export(IX2BrowserSupport_exports, {
    ELEMENT_MATCHES: () => ELEMENT_MATCHES,
    FLEX_PREFIXED: () => FLEX_PREFIXED,
    IS_BROWSER_ENV: () => IS_BROWSER_ENV,
    TRANSFORM_PREFIXED: () => TRANSFORM_PREFIXED,
    TRANSFORM_STYLE_PREFIXED: () => TRANSFORM_STYLE_PREFIXED,
    withBrowser: () => withBrowser
  });
  var import_find, IS_BROWSER_ENV, withBrowser, ELEMENT_MATCHES, FLEX_PREFIXED, TRANSFORM_PREFIXED, TRANSFORM_PREFIX, TRANSFORM_STYLE_PREFIXED;
  var init_IX2BrowserSupport = __esm({
    "packages/systems/ix2/shared/logic/IX2BrowserSupport.ts"() {
      "use strict";
      import_find = __toESM(require_find());
      IS_BROWSER_ENV = typeof window !== "undefined";
      withBrowser = (fn, fallback) => {
        if (IS_BROWSER_ENV) {
          return fn();
        }
        return fallback;
      };
      ELEMENT_MATCHES = withBrowser(() => {
        return (0, import_find.default)(
          [
            "matches",
            "matchesSelector",
            "mozMatchesSelector",
            "msMatchesSelector",
            "oMatchesSelector",
            "webkitMatchesSelector"
          ],
          (key2) => key2 in Element.prototype
        );
      });
      FLEX_PREFIXED = withBrowser(() => {
        const el = document.createElement("i");
        const values2 = [
          "flex",
          "-webkit-flex",
          "-ms-flexbox",
          "-moz-box",
          "-webkit-box"
        ];
        const none = "";
        try {
          const { length: length2 } = values2;
          for (let i = 0; i < length2; i++) {
            const value2 = values2[i];
            el.style.display = value2;
            if (el.style.display === value2) {
              return value2;
            }
          }
          return none;
        } catch (err) {
          return none;
        }
      }, "flex");
      TRANSFORM_PREFIXED = withBrowser(() => {
        const el = document.createElement("i");
        if (el.style.transform == null) {
          const prefixes = ["Webkit", "Moz", "ms"];
          const suffix = "Transform";
          const { length: length2 } = prefixes;
          for (let i = 0; i < length2; i++) {
            const prop = prefixes[i] + suffix;
            if (el.style[prop] !== void 0) {
              return prop;
            }
          }
        }
        return "transform";
      }, "transform");
      TRANSFORM_PREFIX = TRANSFORM_PREFIXED.split("transform")[0];
      TRANSFORM_STYLE_PREFIXED = TRANSFORM_PREFIX ? TRANSFORM_PREFIX + "TransformStyle" : "transformStyle";
    }
  });

  // node_modules/bezier-easing/src/index.js
  var require_src = __commonJS({
    "node_modules/bezier-easing/src/index.js"(exports2, module2) {
      var NEWTON_ITERATIONS = 4;
      var NEWTON_MIN_SLOPE = 1e-3;
      var SUBDIVISION_PRECISION = 1e-7;
      var SUBDIVISION_MAX_ITERATIONS = 10;
      var kSplineTableSize = 11;
      var kSampleStepSize = 1 / (kSplineTableSize - 1);
      var float32ArraySupported = typeof Float32Array === "function";
      function A(aA1, aA2) {
        return 1 - 3 * aA2 + 3 * aA1;
      }
      function B(aA1, aA2) {
        return 3 * aA2 - 6 * aA1;
      }
      function C(aA1) {
        return 3 * aA1;
      }
      function calcBezier(aT, aA1, aA2) {
        return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
      }
      function getSlope(aT, aA1, aA2) {
        return 3 * A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);
      }
      function binarySubdivide(aX, aA, aB, mX1, mX2) {
        var currentX, currentT, i = 0;
        do {
          currentT = aA + (aB - aA) / 2;
          currentX = calcBezier(currentT, mX1, mX2) - aX;
          if (currentX > 0) {
            aB = currentT;
          } else {
            aA = currentT;
          }
        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
        return currentT;
      }
      function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
          var currentSlope = getSlope(aGuessT, mX1, mX2);
          if (currentSlope === 0) {
            return aGuessT;
          }
          var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
          aGuessT -= currentX / currentSlope;
        }
        return aGuessT;
      }
      module2.exports = function bezier(mX1, mY1, mX2, mY2) {
        if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {
          throw new Error("bezier x values must be in [0, 1] range");
        }
        var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
        if (mX1 !== mY1 || mX2 !== mY2) {
          for (var i = 0; i < kSplineTableSize; ++i) {
            sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
          }
        }
        function getTForX(aX) {
          var intervalStart = 0;
          var currentSample = 1;
          var lastSample = kSplineTableSize - 1;
          for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
            intervalStart += kSampleStepSize;
          }
          --currentSample;
          var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
          var guessForT = intervalStart + dist * kSampleStepSize;
          var initialSlope = getSlope(guessForT, mX1, mX2);
          if (initialSlope >= NEWTON_MIN_SLOPE) {
            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
          } else if (initialSlope === 0) {
            return guessForT;
          } else {
            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
          }
        }
        return function BezierEasing3(x) {
          if (mX1 === mY1 && mX2 === mY2) {
            return x;
          }
          if (x === 0) {
            return 0;
          }
          if (x === 1) {
            return 1;
          }
          return calcBezier(getTForX(x), mY1, mY2);
        };
      };
    }
  });

  // packages/systems/ix2/shared/logic/IX2Easings.ts
  var IX2Easings_exports = {};
  __export(IX2Easings_exports, {
    bounce: () => bounce,
    bouncePast: () => bouncePast,
    ease: () => ease2,
    easeIn: () => easeIn2,
    easeInOut: () => easeInOut,
    easeOut: () => easeOut2,
    inBack: () => inBack,
    inCirc: () => inCirc,
    inCubic: () => inCubic,
    inElastic: () => inElastic,
    inExpo: () => inExpo,
    inOutBack: () => inOutBack,
    inOutCirc: () => inOutCirc,
    inOutCubic: () => inOutCubic,
    inOutElastic: () => inOutElastic,
    inOutExpo: () => inOutExpo,
    inOutQuad: () => inOutQuad,
    inOutQuart: () => inOutQuart,
    inOutQuint: () => inOutQuint,
    inOutSine: () => inOutSine,
    inQuad: () => inQuad,
    inQuart: () => inQuart,
    inQuint: () => inQuint,
    inSine: () => inSine,
    outBack: () => outBack,
    outBounce: () => outBounce,
    outCirc: () => outCirc,
    outCubic: () => outCubic,
    outElastic: () => outElastic,
    outExpo: () => outExpo,
    outQuad: () => outQuad,
    outQuart: () => outQuart,
    outQuint: () => outQuint,
    outSine: () => outSine,
    swingFrom: () => swingFrom,
    swingFromTo: () => swingFromTo,
    swingTo: () => swingTo
  });
  function inQuad(pos) {
    return Math.pow(pos, 2);
  }
  function outQuad(pos) {
    return -(Math.pow(pos - 1, 2) - 1);
  }
  function inOutQuad(pos) {
    if ((pos /= 0.5) < 1) {
      return 0.5 * Math.pow(pos, 2);
    }
    return -0.5 * ((pos -= 2) * pos - 2);
  }
  function inCubic(pos) {
    return Math.pow(pos, 3);
  }
  function outCubic(pos) {
    return Math.pow(pos - 1, 3) + 1;
  }
  function inOutCubic(pos) {
    if ((pos /= 0.5) < 1) {
      return 0.5 * Math.pow(pos, 3);
    }
    return 0.5 * (Math.pow(pos - 2, 3) + 2);
  }
  function inQuart(pos) {
    return Math.pow(pos, 4);
  }
  function outQuart(pos) {
    return -(Math.pow(pos - 1, 4) - 1);
  }
  function inOutQuart(pos) {
    if ((pos /= 0.5) < 1) {
      return 0.5 * Math.pow(pos, 4);
    }
    return -0.5 * ((pos -= 2) * Math.pow(pos, 3) - 2);
  }
  function inQuint(pos) {
    return Math.pow(pos, 5);
  }
  function outQuint(pos) {
    return Math.pow(pos - 1, 5) + 1;
  }
  function inOutQuint(pos) {
    if ((pos /= 0.5) < 1) {
      return 0.5 * Math.pow(pos, 5);
    }
    return 0.5 * (Math.pow(pos - 2, 5) + 2);
  }
  function inSine(pos) {
    return -Math.cos(pos * (Math.PI / 2)) + 1;
  }
  function outSine(pos) {
    return Math.sin(pos * (Math.PI / 2));
  }
  function inOutSine(pos) {
    return -0.5 * (Math.cos(Math.PI * pos) - 1);
  }
  function inExpo(pos) {
    return pos === 0 ? 0 : Math.pow(2, 10 * (pos - 1));
  }
  function outExpo(pos) {
    return pos === 1 ? 1 : -Math.pow(2, -10 * pos) + 1;
  }
  function inOutExpo(pos) {
    if (pos === 0) {
      return 0;
    }
    if (pos === 1) {
      return 1;
    }
    if ((pos /= 0.5) < 1) {
      return 0.5 * Math.pow(2, 10 * (pos - 1));
    }
    return 0.5 * (-Math.pow(2, -10 * --pos) + 2);
  }
  function inCirc(pos) {
    return -(Math.sqrt(1 - pos * pos) - 1);
  }
  function outCirc(pos) {
    return Math.sqrt(1 - Math.pow(pos - 1, 2));
  }
  function inOutCirc(pos) {
    if ((pos /= 0.5) < 1) {
      return -0.5 * (Math.sqrt(1 - pos * pos) - 1);
    }
    return 0.5 * (Math.sqrt(1 - (pos -= 2) * pos) + 1);
  }
  function outBounce(pos) {
    if (pos < 1 / 2.75) {
      return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
      return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
    } else if (pos < 2.5 / 2.75) {
      return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
    } else {
      return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;
    }
  }
  function inBack(pos) {
    const s = magicSwing;
    return pos * pos * ((s + 1) * pos - s);
  }
  function outBack(pos) {
    const s = magicSwing;
    return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;
  }
  function inOutBack(pos) {
    let s = magicSwing;
    if ((pos /= 0.5) < 1) {
      return 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s));
    }
    return 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
  }
  function inElastic(pos) {
    let s = magicSwing;
    let p = 0;
    let a = 1;
    if (pos === 0) {
      return 0;
    }
    if (pos === 1) {
      return 1;
    }
    if (!p) {
      p = 0.3;
    }
    if (a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(1 / a);
    }
    return -(a * Math.pow(2, 10 * (pos -= 1)) * Math.sin((pos - s) * (2 * Math.PI) / p));
  }
  function outElastic(pos) {
    let s = magicSwing;
    let p = 0;
    let a = 1;
    if (pos === 0) {
      return 0;
    }
    if (pos === 1) {
      return 1;
    }
    if (!p) {
      p = 0.3;
    }
    if (a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(1 / a);
    }
    return a * Math.pow(2, -10 * pos) * Math.sin((pos - s) * (2 * Math.PI) / p) + 1;
  }
  function inOutElastic(pos) {
    let s = magicSwing;
    let p = 0;
    let a = 1;
    if (pos === 0) {
      return 0;
    }
    if ((pos /= 1 / 2) === 2) {
      return 1;
    }
    if (!p) {
      p = 0.3 * 1.5;
    }
    if (a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(1 / a);
    }
    if (pos < 1) {
      return -0.5 * (a * Math.pow(2, 10 * (pos -= 1)) * Math.sin((pos - s) * (2 * Math.PI) / p));
    }
    return a * Math.pow(2, -10 * (pos -= 1)) * Math.sin((pos - s) * (2 * Math.PI) / p) * 0.5 + 1;
  }
  function swingFromTo(pos) {
    let s = magicSwing;
    return (pos /= 0.5) < 1 ? 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s)) : 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
  }
  function swingFrom(pos) {
    const s = magicSwing;
    return pos * pos * ((s + 1) * pos - s);
  }
  function swingTo(pos) {
    const s = magicSwing;
    return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;
  }
  function bounce(pos) {
    if (pos < 1 / 2.75) {
      return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
      return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
    } else if (pos < 2.5 / 2.75) {
      return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
    } else {
      return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;
    }
  }
  function bouncePast(pos) {
    if (pos < 1 / 2.75) {
      return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
      return 2 - (7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75);
    } else if (pos < 2.5 / 2.75) {
      return 2 - (7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375);
    } else {
      return 2 - (7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375);
    }
  }
  var import_bezier_easing, magicSwing, ease2, easeIn2, easeOut2, easeInOut;
  var init_IX2Easings = __esm({
    "packages/systems/ix2/shared/logic/IX2Easings.ts"() {
      "use strict";
      import_bezier_easing = __toESM(require_src());
      magicSwing = 1.70158;
      ease2 = (0, import_bezier_easing.default)(0.25, 0.1, 0.25, 1);
      easeIn2 = (0, import_bezier_easing.default)(0.42, 0, 1, 1);
      easeOut2 = (0, import_bezier_easing.default)(0, 0, 0.58, 1);
      easeInOut = (0, import_bezier_easing.default)(0.42, 0, 0.58, 1);
    }
  });

  // packages/systems/ix2/shared/logic/IX2EasingUtils.ts
  var IX2EasingUtils_exports = {};
  __export(IX2EasingUtils_exports, {
    applyEasing: () => applyEasing,
    createBezierEasing: () => createBezierEasing,
    optimizeFloat: () => optimizeFloat
  });
  function optimizeFloat(value2, digits = 5, base = 10) {
    const pow = Math.pow(base, digits);
    const float = Number(Math.round(value2 * pow) / pow);
    return Math.abs(float) > 1e-4 ? float : 0;
  }
  function createBezierEasing(easing) {
    return (0, import_bezier_easing2.default)(...easing);
  }
  function applyEasing(easing, position2, customEasingFn) {
    if (position2 === 0) {
      return 0;
    }
    if (position2 === 1) {
      return 1;
    }
    if (customEasingFn) {
      return optimizeFloat(position2 > 0 ? customEasingFn(position2) : position2);
    }
    return optimizeFloat(
      position2 > 0 && easing && IX2Easings_exports[easing] ? IX2Easings_exports[easing](position2) : position2
    );
  }
  var import_bezier_easing2;
  var init_IX2EasingUtils = __esm({
    "packages/systems/ix2/shared/logic/IX2EasingUtils.ts"() {
      "use strict";
      init_IX2Easings();
      import_bezier_easing2 = __toESM(require_src());
    }
  });

  // packages/systems/ix2/shared/reducers/IX2ElementsReducer.ts
  var IX2ElementsReducer_exports = {};
  __export(IX2ElementsReducer_exports, {
    createElementState: () => createElementState,
    ixElements: () => ixElements,
    mergeActionState: () => mergeActionState
  });
  function createElementState(state, ref, refType, elementId, actionItem) {
    const refId = refType === PLAIN_OBJECT2 ? (0, import_timm3.getIn)(actionItem, ["config", "target", "objectId"]) : null;
    return (0, import_timm3.mergeIn)(state, [elementId], {
      id: elementId,
      ref,
      refId,
      refType
    });
  }
  function mergeActionState(state, elementId, actionTypeId, actionState, actionItem) {
    const units = pickUnits(actionItem);
    const mergePath = [elementId, refState, actionTypeId];
    return (0, import_timm3.mergeIn)(state, mergePath, actionState, units);
  }
  function pickUnits(actionItem) {
    const { config } = actionItem;
    return valueUnitPairs.reduce((result2, pair) => {
      const valueKey = pair[0];
      const unitKey = pair[1];
      const configValue = config[valueKey];
      const configUnit = config[unitKey];
      if (configValue != null && configUnit != null) {
        result2[unitKey] = configUnit;
      }
      return result2;
    }, {});
  }
  var import_timm3, HTML_ELEMENT2, PLAIN_OBJECT2, ABSTRACT_NODE2, CONFIG_X_VALUE2, CONFIG_Y_VALUE2, CONFIG_Z_VALUE2, CONFIG_VALUE2, CONFIG_X_UNIT2, CONFIG_Y_UNIT2, CONFIG_Z_UNIT2, CONFIG_UNIT2, IX2_SESSION_STOPPED3, IX2_INSTANCE_ADDED2, IX2_ELEMENT_STATE_CHANGED2, initialState3, refState, ixElements, valueUnitPairs;
  var init_IX2ElementsReducer = __esm({
    "packages/systems/ix2/shared/reducers/IX2ElementsReducer.ts"() {
      "use strict";
      import_timm3 = __toESM(require_timm());
      init_shared_constants();
      ({
        HTML_ELEMENT: HTML_ELEMENT2,
        PLAIN_OBJECT: PLAIN_OBJECT2,
        ABSTRACT_NODE: ABSTRACT_NODE2,
        CONFIG_X_VALUE: CONFIG_X_VALUE2,
        CONFIG_Y_VALUE: CONFIG_Y_VALUE2,
        CONFIG_Z_VALUE: CONFIG_Z_VALUE2,
        CONFIG_VALUE: CONFIG_VALUE2,
        CONFIG_X_UNIT: CONFIG_X_UNIT2,
        CONFIG_Y_UNIT: CONFIG_Y_UNIT2,
        CONFIG_Z_UNIT: CONFIG_Z_UNIT2,
        CONFIG_UNIT: CONFIG_UNIT2
      } = IX2EngineConstants_exports);
      ({ IX2_SESSION_STOPPED: IX2_SESSION_STOPPED3, IX2_INSTANCE_ADDED: IX2_INSTANCE_ADDED2, IX2_ELEMENT_STATE_CHANGED: IX2_ELEMENT_STATE_CHANGED2 } = IX2EngineActionTypes_exports);
      initialState3 = {};
      refState = "refState";
      ixElements = (state = initialState3, action = {}) => {
        switch (action.type) {
          case IX2_SESSION_STOPPED3: {
            return initialState3;
          }
          case IX2_INSTANCE_ADDED2: {
            const {
              elementId,
              element: ref,
              origin,
              actionItem,
              refType
            } = action.payload;
            const { actionTypeId } = actionItem;
            let newState = state;
            if ((0, import_timm3.getIn)(newState, [elementId, ref]) !== ref) {
              newState = createElementState(
                newState,
                ref,
                refType,
                elementId,
                actionItem
              );
            }
            return mergeActionState(
              newState,
              elementId,
              actionTypeId,
              origin,
              actionItem
            );
          }
          case IX2_ELEMENT_STATE_CHANGED2: {
            const { elementId, actionTypeId, current, actionItem } = action.payload;
            return mergeActionState(
              state,
              elementId,
              actionTypeId,
              current,
              actionItem
            );
          }
          default: {
            return state;
          }
        }
      };
      valueUnitPairs = [
        [CONFIG_X_VALUE2, CONFIG_X_UNIT2],
        [CONFIG_Y_VALUE2, CONFIG_Y_UNIT2],
        [CONFIG_Z_VALUE2, CONFIG_Z_UNIT2],
        [CONFIG_VALUE2, CONFIG_UNIT2]
      ];
    }
  });

  // packages/systems/ix2/plugins/IX2Lottie.js
  var require_IX2Lottie = __commonJS({
    "packages/systems/ix2/plugins/IX2Lottie.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.renderPlugin = exports2.getPluginOrigin = exports2.getPluginDuration = exports2.getPluginDestination = exports2.getPluginConfig = exports2.createPluginInstance = exports2.clearPlugin = void 0;
      var getPluginConfig2 = (actionItemConfig) => {
        return actionItemConfig.value;
      };
      exports2.getPluginConfig = getPluginConfig2;
      var getPluginDuration3 = (element, actionItem) => {
        if (actionItem.config.duration !== "auto") {
          return null;
        }
        const duration = parseFloat(element.getAttribute("data-duration"));
        if (duration > 0) {
          return duration * 1e3;
        }
        return parseFloat(element.getAttribute("data-default-duration")) * 1e3;
      };
      exports2.getPluginDuration = getPluginDuration3;
      var getPluginOrigin2 = (refState2) => {
        return refState2 || {
          value: 0
        };
      };
      exports2.getPluginOrigin = getPluginOrigin2;
      var getPluginDestination2 = (actionItemConfig) => {
        return {
          value: actionItemConfig.value
        };
      };
      exports2.getPluginDestination = getPluginDestination2;
      var createPluginInstance3 = (element) => {
        const instance = window.Webflow.require("lottie").createInstance(element);
        instance.stop();
        instance.setSubframe(true);
        return instance;
      };
      exports2.createPluginInstance = createPluginInstance3;
      var renderPlugin2 = (pluginInstance, refState2, actionItem) => {
        if (!pluginInstance) {
          return;
        }
        const percent = refState2[actionItem.actionTypeId].value / 100;
        pluginInstance.goToFrame(pluginInstance.frames * percent);
      };
      exports2.renderPlugin = renderPlugin2;
      var clearPlugin2 = (element) => {
        const instance = window.Webflow.require("lottie").createInstance(element);
        instance.stop();
      };
      exports2.clearPlugin = clearPlugin2;
    }
  });

  // packages/systems/ix2/plugins/IX2Spline.js
  var require_IX2Spline = __commonJS({
    "packages/systems/ix2/plugins/IX2Spline.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.renderPlugin = exports2.getPluginOrigin = exports2.getPluginDuration = exports2.getPluginDestination = exports2.getPluginConfig = exports2.createPluginInstance = exports2.clearPlugin = void 0;
      var queryContainerElement = (elementId) => document.querySelector(`[data-w-id="${elementId}"]`);
      var getFrontendModule = () => window.Webflow.require("spline");
      var difference = (arr1, arr2) => arr1.filter((x) => !arr2.includes(x));
      var getPluginConfig2 = (actionItemConfig, key2) => {
        return actionItemConfig.value[key2];
      };
      exports2.getPluginConfig = getPluginConfig2;
      var getPluginDuration3 = () => {
        return null;
      };
      exports2.getPluginDuration = getPluginDuration3;
      var DEFAULT_VALUES = Object.freeze({
        positionX: 0,
        positionY: 0,
        positionZ: 0,
        rotationX: 0,
        rotationY: 0,
        rotationZ: 0,
        scaleX: 1,
        scaleY: 1,
        scaleZ: 1
      });
      var getPluginOrigin2 = (refState2, actionItem) => {
        const destination = actionItem.config.value;
        const destinationKeys = Object.keys(destination);
        if (refState2) {
          const stateKeys2 = Object.keys(refState2);
          const diffKeys = difference(destinationKeys, stateKeys2);
          if (diffKeys.length) {
            const origin2 = diffKeys.reduce((result2, key2) => {
              result2[key2] = DEFAULT_VALUES[key2];
              return result2;
            }, refState2);
            return origin2;
          }
          return refState2;
        }
        const origin = destinationKeys.reduce((result2, key2) => {
          result2[key2] = DEFAULT_VALUES[key2];
          return result2;
        }, {});
        return origin;
      };
      exports2.getPluginOrigin = getPluginOrigin2;
      var getPluginDestination2 = (actionItemConfig) => {
        return actionItemConfig.value;
      };
      exports2.getPluginDestination = getPluginDestination2;
      var createPluginInstance3 = (element, actionItem) => {
        var _actionItem$config;
        const pluginElementId = actionItem === null || actionItem === void 0 || (_actionItem$config = actionItem.config) === null || _actionItem$config === void 0 || (_actionItem$config = _actionItem$config.target) === null || _actionItem$config === void 0 ? void 0 : _actionItem$config.pluginElement;
        return pluginElementId ? queryContainerElement(pluginElementId) : null;
      };
      exports2.createPluginInstance = createPluginInstance3;
      var renderPlugin2 = (containerElement, refState2, actionItem) => {
        const frontendModule = getFrontendModule();
        const instance = frontendModule.getInstance(containerElement);
        const objectId = actionItem.config.target.objectId;
        const renderSpline = (spline) => {
          if (!spline) {
            throw new Error("Invalid spline app passed to renderSpline");
          }
          const obj = objectId && spline.findObjectById(objectId);
          if (!obj) {
            return;
          }
          const {
            PLUGIN_SPLINE: props
          } = refState2;
          if (props.positionX != null) {
            obj.position.x = props.positionX;
          }
          if (props.positionY != null) {
            obj.position.y = props.positionY;
          }
          if (props.positionZ != null) {
            obj.position.z = props.positionZ;
          }
          if (props.rotationX != null) {
            obj.rotation.x = props.rotationX;
          }
          if (props.rotationY != null) {
            obj.rotation.y = props.rotationY;
          }
          if (props.rotationZ != null) {
            obj.rotation.z = props.rotationZ;
          }
          if (props.scaleX != null) {
            obj.scale.x = props.scaleX;
          }
          if (props.scaleY != null) {
            obj.scale.y = props.scaleY;
          }
          if (props.scaleZ != null) {
            obj.scale.z = props.scaleZ;
          }
        };
        if (instance) {
          renderSpline(instance.spline);
        } else {
          frontendModule.setLoadHandler(containerElement, renderSpline);
        }
      };
      exports2.renderPlugin = renderPlugin2;
      var clearPlugin2 = () => {
        return null;
      };
      exports2.clearPlugin = clearPlugin2;
    }
  });

  // packages/systems/ix2/shared-utils/normalizeColor.js
  var require_normalizeColor = __commonJS({
    "packages/systems/ix2/shared-utils/normalizeColor.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.normalizeColor = normalizeColor2;
      var colorNamesObj = {
        aliceblue: "#F0F8FF",
        antiquewhite: "#FAEBD7",
        aqua: "#00FFFF",
        aquamarine: "#7FFFD4",
        azure: "#F0FFFF",
        beige: "#F5F5DC",
        bisque: "#FFE4C4",
        black: "#000000",
        blanchedalmond: "#FFEBCD",
        blue: "#0000FF",
        blueviolet: "#8A2BE2",
        brown: "#A52A2A",
        burlywood: "#DEB887",
        cadetblue: "#5F9EA0",
        chartreuse: "#7FFF00",
        chocolate: "#D2691E",
        coral: "#FF7F50",
        cornflowerblue: "#6495ED",
        cornsilk: "#FFF8DC",
        crimson: "#DC143C",
        cyan: "#00FFFF",
        darkblue: "#00008B",
        darkcyan: "#008B8B",
        darkgoldenrod: "#B8860B",
        darkgray: "#A9A9A9",
        darkgreen: "#006400",
        darkgrey: "#A9A9A9",
        darkkhaki: "#BDB76B",
        darkmagenta: "#8B008B",
        darkolivegreen: "#556B2F",
        darkorange: "#FF8C00",
        darkorchid: "#9932CC",
        darkred: "#8B0000",
        darksalmon: "#E9967A",
        darkseagreen: "#8FBC8F",
        darkslateblue: "#483D8B",
        darkslategray: "#2F4F4F",
        darkslategrey: "#2F4F4F",
        darkturquoise: "#00CED1",
        darkviolet: "#9400D3",
        deeppink: "#FF1493",
        deepskyblue: "#00BFFF",
        dimgray: "#696969",
        dimgrey: "#696969",
        dodgerblue: "#1E90FF",
        firebrick: "#B22222",
        floralwhite: "#FFFAF0",
        forestgreen: "#228B22",
        fuchsia: "#FF00FF",
        gainsboro: "#DCDCDC",
        ghostwhite: "#F8F8FF",
        gold: "#FFD700",
        goldenrod: "#DAA520",
        gray: "#808080",
        green: "#008000",
        greenyellow: "#ADFF2F",
        grey: "#808080",
        honeydew: "#F0FFF0",
        hotpink: "#FF69B4",
        indianred: "#CD5C5C",
        indigo: "#4B0082",
        ivory: "#FFFFF0",
        khaki: "#F0E68C",
        lavender: "#E6E6FA",
        lavenderblush: "#FFF0F5",
        lawngreen: "#7CFC00",
        lemonchiffon: "#FFFACD",
        lightblue: "#ADD8E6",
        lightcoral: "#F08080",
        lightcyan: "#E0FFFF",
        lightgoldenrodyellow: "#FAFAD2",
        lightgray: "#D3D3D3",
        lightgreen: "#90EE90",
        lightgrey: "#D3D3D3",
        lightpink: "#FFB6C1",
        lightsalmon: "#FFA07A",
        lightseagreen: "#20B2AA",
        lightskyblue: "#87CEFA",
        lightslategray: "#778899",
        lightslategrey: "#778899",
        lightsteelblue: "#B0C4DE",
        lightyellow: "#FFFFE0",
        lime: "#00FF00",
        limegreen: "#32CD32",
        linen: "#FAF0E6",
        magenta: "#FF00FF",
        maroon: "#800000",
        mediumaquamarine: "#66CDAA",
        mediumblue: "#0000CD",
        mediumorchid: "#BA55D3",
        mediumpurple: "#9370DB",
        mediumseagreen: "#3CB371",
        mediumslateblue: "#7B68EE",
        mediumspringgreen: "#00FA9A",
        mediumturquoise: "#48D1CC",
        mediumvioletred: "#C71585",
        midnightblue: "#191970",
        mintcream: "#F5FFFA",
        mistyrose: "#FFE4E1",
        moccasin: "#FFE4B5",
        navajowhite: "#FFDEAD",
        navy: "#000080",
        oldlace: "#FDF5E6",
        olive: "#808000",
        olivedrab: "#6B8E23",
        orange: "#FFA500",
        orangered: "#FF4500",
        orchid: "#DA70D6",
        palegoldenrod: "#EEE8AA",
        palegreen: "#98FB98",
        paleturquoise: "#AFEEEE",
        palevioletred: "#DB7093",
        papayawhip: "#FFEFD5",
        peachpuff: "#FFDAB9",
        peru: "#CD853F",
        pink: "#FFC0CB",
        plum: "#DDA0DD",
        powderblue: "#B0E0E6",
        purple: "#800080",
        rebeccapurple: "#663399",
        red: "#FF0000",
        rosybrown: "#BC8F8F",
        royalblue: "#4169E1",
        saddlebrown: "#8B4513",
        salmon: "#FA8072",
        sandybrown: "#F4A460",
        seagreen: "#2E8B57",
        seashell: "#FFF5EE",
        sienna: "#A0522D",
        silver: "#C0C0C0",
        skyblue: "#87CEEB",
        slateblue: "#6A5ACD",
        slategray: "#708090",
        slategrey: "#708090",
        snow: "#FFFAFA",
        springgreen: "#00FF7F",
        steelblue: "#4682B4",
        tan: "#D2B48C",
        teal: "#008080",
        thistle: "#D8BFD8",
        tomato: "#FF6347",
        turquoise: "#40E0D0",
        violet: "#EE82EE",
        wheat: "#F5DEB3",
        white: "#FFFFFF",
        whitesmoke: "#F5F5F5",
        yellow: "#FFFF00",
        yellowgreen: "#9ACD32"
      };
      function normalizeColor2(inputColor) {
        let red;
        let green;
        let blue;
        let alpha = 1;
        const rawColor = inputColor.replace(/\s/g, "").toLowerCase();
        const namedColor = typeof colorNamesObj[rawColor] === "string" ? colorNamesObj[rawColor].toLowerCase() : null;
        const cleanColor = namedColor || rawColor;
        if (cleanColor.startsWith("#")) {
          const hex = cleanColor.substring(1);
          if (hex.length === 3) {
            red = parseInt(hex[0] + hex[0], 16);
            green = parseInt(hex[1] + hex[1], 16);
            blue = parseInt(hex[2] + hex[2], 16);
          } else if (hex.length === 6) {
            red = parseInt(hex.substring(0, 2), 16);
            green = parseInt(hex.substring(2, 4), 16);
            blue = parseInt(hex.substring(4, 6), 16);
          }
        } else if (cleanColor.startsWith("rgba")) {
          const rgbaValues = cleanColor.match(/rgba\(([^)]+)\)/)[1].split(",");
          red = parseInt(rgbaValues[0], 10);
          green = parseInt(rgbaValues[1], 10);
          blue = parseInt(rgbaValues[2], 10);
          alpha = parseFloat(rgbaValues[3]);
        } else if (cleanColor.startsWith("rgb")) {
          const rgbValues = cleanColor.match(/rgb\(([^)]+)\)/)[1].split(",");
          red = parseInt(rgbValues[0], 10);
          green = parseInt(rgbValues[1], 10);
          blue = parseInt(rgbValues[2], 10);
        } else if (cleanColor.startsWith("hsla")) {
          const hslaValues = cleanColor.match(/hsla\(([^)]+)\)/)[1].split(",");
          const h = parseFloat(hslaValues[0]);
          const s = parseFloat(hslaValues[1].replace("%", "")) / 100;
          const l = parseFloat(hslaValues[2].replace("%", "")) / 100;
          alpha = parseFloat(hslaValues[3]);
          const C = (1 - Math.abs(2 * l - 1)) * s;
          const X = C * (1 - Math.abs(h / 60 % 2 - 1));
          const m = l - C / 2;
          let R;
          let G;
          let B;
          if (h >= 0 && h < 60) {
            R = C;
            G = X;
            B = 0;
          } else if (h >= 60 && h < 120) {
            R = X;
            G = C;
            B = 0;
          } else if (h >= 120 && h < 180) {
            R = 0;
            G = C;
            B = X;
          } else if (h >= 180 && h < 240) {
            R = 0;
            G = X;
            B = C;
          } else if (h >= 240 && h < 300) {
            R = X;
            G = 0;
            B = C;
          } else {
            R = C;
            G = 0;
            B = X;
          }
          red = Math.round((R + m) * 255);
          green = Math.round((G + m) * 255);
          blue = Math.round((B + m) * 255);
        } else if (cleanColor.startsWith("hsl")) {
          const hslValues = cleanColor.match(/hsl\(([^)]+)\)/)[1].split(",");
          const h = parseFloat(hslValues[0]);
          const s = parseFloat(hslValues[1].replace("%", "")) / 100;
          const l = parseFloat(hslValues[2].replace("%", "")) / 100;
          const C = (1 - Math.abs(2 * l - 1)) * s;
          const X = C * (1 - Math.abs(h / 60 % 2 - 1));
          const m = l - C / 2;
          let R;
          let G;
          let B;
          if (h >= 0 && h < 60) {
            R = C;
            G = X;
            B = 0;
          } else if (h >= 60 && h < 120) {
            R = X;
            G = C;
            B = 0;
          } else if (h >= 120 && h < 180) {
            R = 0;
            G = C;
            B = X;
          } else if (h >= 180 && h < 240) {
            R = 0;
            G = X;
            B = C;
          } else if (h >= 240 && h < 300) {
            R = X;
            G = 0;
            B = C;
          } else {
            R = C;
            G = 0;
            B = X;
          }
          red = Math.round((R + m) * 255);
          green = Math.round((G + m) * 255);
          blue = Math.round((B + m) * 255);
        }
        if (Number.isNaN(red) || Number.isNaN(green) || Number.isNaN(blue)) {
          throw new Error(`Invalid color in [ix2/shared/utils/normalizeColor.js] '${inputColor}'`);
        }
        return {
          red,
          green,
          blue,
          alpha
        };
      }
    }
  });

  // packages/systems/ix2/plugins/IX2Variable.js
  var require_IX2Variable = __commonJS({
    "packages/systems/ix2/plugins/IX2Variable.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.renderPlugin = exports2.getPluginOrigin = exports2.getPluginDuration = exports2.getPluginDestination = exports2.getPluginConfig = exports2.createPluginInstance = exports2.clearPlugin = void 0;
      var _normalizeColor = require_normalizeColor();
      var getPluginConfig2 = (actionItemConfig, key2) => {
        return actionItemConfig.value[key2];
      };
      exports2.getPluginConfig = getPluginConfig2;
      var getPluginDuration3 = () => {
        return null;
      };
      exports2.getPluginDuration = getPluginDuration3;
      var getPluginOrigin2 = (refState2, actionItem) => {
        if (refState2) {
          return refState2;
        }
        const destination = actionItem.config.value;
        const objectId = actionItem.config.target.objectId;
        const computedValue = getComputedStyle(document.documentElement).getPropertyValue(objectId);
        if (destination.size != null) {
          return {
            size: parseInt(computedValue, 10)
          };
        }
        if (destination.red != null && destination.green != null && destination.blue != null) {
          return (0, _normalizeColor.normalizeColor)(computedValue);
        }
      };
      exports2.getPluginOrigin = getPluginOrigin2;
      var getPluginDestination2 = (actionItemConfig) => {
        return actionItemConfig.value;
      };
      exports2.getPluginDestination = getPluginDestination2;
      var createPluginInstance3 = () => {
        return null;
      };
      exports2.createPluginInstance = createPluginInstance3;
      var renderPlugin2 = (_, refState2, actionItem) => {
        const objectId = actionItem.config.target.objectId;
        const unit = actionItem.config.value.unit;
        const {
          PLUGIN_VARIABLE: props
        } = refState2;
        const {
          size: size2,
          red,
          green,
          blue,
          alpha
        } = props;
        let value2;
        if (size2 != null) {
          value2 = size2 + unit;
        }
        if (red != null && blue != null && green != null && alpha != null) {
          value2 = `rgba(${red}, ${green}, ${blue}, ${alpha})`;
        }
        if (value2 != null) {
          document.documentElement.style.setProperty(objectId, value2);
        }
      };
      exports2.renderPlugin = renderPlugin2;
      var clearPlugin2 = (ref, actionItem) => {
        const objectId = actionItem.config.target.objectId;
        document.documentElement.style.removeProperty(objectId);
      };
      exports2.clearPlugin = clearPlugin2;
    }
  });

  // packages/systems/ix2/plugins/index.js
  var require_plugins = __commonJS({
    "packages/systems/ix2/plugins/index.js"(exports2) {
      "use strict";
      var _interopRequireWildcard = require_interopRequireWildcard().default;
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.pluginMethodMap = void 0;
      var _sharedConstants = (init_shared_constants(), __toCommonJS(shared_constants_exports));
      var lottie2 = _interopRequireWildcard(require_IX2Lottie());
      var spline = _interopRequireWildcard(require_IX2Spline());
      var variable = _interopRequireWildcard(require_IX2Variable());
      var pluginMethodMap2 = exports2.pluginMethodMap = /* @__PURE__ */ new Map([[_sharedConstants.ActionTypeConsts.PLUGIN_LOTTIE, {
        ...lottie2
      }], [_sharedConstants.ActionTypeConsts.PLUGIN_SPLINE, {
        ...spline
      }], [_sharedConstants.ActionTypeConsts.PLUGIN_VARIABLE, {
        ...variable
      }]]);
    }
  });

  // packages/systems/ix2/shared/logic/IX2VanillaPlugins.ts
  var IX2VanillaPlugins_exports = {};
  __export(IX2VanillaPlugins_exports, {
    clearPlugin: () => clearPlugin,
    createPluginInstance: () => createPluginInstance,
    getPluginConfig: () => getPluginConfig,
    getPluginDestination: () => getPluginDestination,
    getPluginDuration: () => getPluginDuration,
    getPluginOrigin: () => getPluginOrigin,
    isPluginType: () => isPluginType,
    renderPlugin: () => renderPlugin
  });
  function isPluginType(actionTypeId) {
    return import_plugins.pluginMethodMap.has(actionTypeId);
  }
  var import_plugins, pluginMethod, getPluginConfig, getPluginOrigin, getPluginDuration, getPluginDestination, createPluginInstance, renderPlugin, clearPlugin;
  var init_IX2VanillaPlugins = __esm({
    "packages/systems/ix2/shared/logic/IX2VanillaPlugins.ts"() {
      "use strict";
      init_IX2BrowserSupport();
      import_plugins = __toESM(require_plugins());
      pluginMethod = (methodName) => (actionTypeId) => {
        if (!IS_BROWSER_ENV) {
          return () => null;
        }
        const plugin = import_plugins.pluginMethodMap.get(actionTypeId);
        if (!plugin) {
          throw new Error(`IX2 no plugin configured for: ${actionTypeId}`);
        }
        const method = plugin[methodName];
        if (!method) {
          throw new Error(`IX2 invalid plugin method: ${methodName}`);
        }
        return method;
      };
      getPluginConfig = pluginMethod("getPluginConfig");
      getPluginOrigin = pluginMethod("getPluginOrigin");
      getPluginDuration = pluginMethod("getPluginDuration");
      getPluginDestination = pluginMethod("getPluginDestination");
      createPluginInstance = pluginMethod("createPluginInstance");
      renderPlugin = pluginMethod("renderPlugin");
      clearPlugin = pluginMethod("clearPlugin");
    }
  });

  // node_modules/lodash/defaultTo.js
  var require_defaultTo = __commonJS({
    "node_modules/lodash/defaultTo.js"(exports2, module2) {
      function defaultTo3(value2, defaultValue) {
        return value2 == null || value2 !== value2 ? defaultValue : value2;
      }
      module2.exports = defaultTo3;
    }
  });

  // node_modules/lodash/_arrayReduce.js
  var require_arrayReduce = __commonJS({
    "node_modules/lodash/_arrayReduce.js"(exports2, module2) {
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index2 = -1, length2 = array == null ? 0 : array.length;
        if (initAccum && length2) {
          accumulator = array[++index2];
        }
        while (++index2 < length2) {
          accumulator = iteratee(accumulator, array[index2], index2, array);
        }
        return accumulator;
      }
      module2.exports = arrayReduce;
    }
  });

  // node_modules/lodash/_createBaseFor.js
  var require_createBaseFor = __commonJS({
    "node_modules/lodash/_createBaseFor.js"(exports2, module2) {
      function createBaseFor(fromRight) {
        return function(object, iteratee, keysFunc) {
          var index2 = -1, iterable = Object(object), props = keysFunc(object), length2 = props.length;
          while (length2--) {
            var key2 = props[fromRight ? length2 : ++index2];
            if (iteratee(iterable[key2], key2, iterable) === false) {
              break;
            }
          }
          return object;
        };
      }
      module2.exports = createBaseFor;
    }
  });

  // node_modules/lodash/_baseFor.js
  var require_baseFor = __commonJS({
    "node_modules/lodash/_baseFor.js"(exports2, module2) {
      var createBaseFor = require_createBaseFor();
      var baseFor = createBaseFor();
      module2.exports = baseFor;
    }
  });

  // node_modules/lodash/_baseForOwn.js
  var require_baseForOwn = __commonJS({
    "node_modules/lodash/_baseForOwn.js"(exports2, module2) {
      var baseFor = require_baseFor();
      var keys = require_keys();
      function baseForOwn(object, iteratee) {
        return object && baseFor(object, iteratee, keys);
      }
      module2.exports = baseForOwn;
    }
  });

  // node_modules/lodash/_createBaseEach.js
  var require_createBaseEach = __commonJS({
    "node_modules/lodash/_createBaseEach.js"(exports2, module2) {
      var isArrayLike = require_isArrayLike();
      function createBaseEach(eachFunc, fromRight) {
        return function(collection, iteratee) {
          if (collection == null) {
            return collection;
          }
          if (!isArrayLike(collection)) {
            return eachFunc(collection, iteratee);
          }
          var length2 = collection.length, index2 = fromRight ? length2 : -1, iterable = Object(collection);
          while (fromRight ? index2-- : ++index2 < length2) {
            if (iteratee(iterable[index2], index2, iterable) === false) {
              break;
            }
          }
          return collection;
        };
      }
      module2.exports = createBaseEach;
    }
  });

  // node_modules/lodash/_baseEach.js
  var require_baseEach = __commonJS({
    "node_modules/lodash/_baseEach.js"(exports2, module2) {
      var baseForOwn = require_baseForOwn();
      var createBaseEach = require_createBaseEach();
      var baseEach = createBaseEach(baseForOwn);
      module2.exports = baseEach;
    }
  });

  // node_modules/lodash/_baseReduce.js
  var require_baseReduce = __commonJS({
    "node_modules/lodash/_baseReduce.js"(exports2, module2) {
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value2, index2, collection2) {
          accumulator = initAccum ? (initAccum = false, value2) : iteratee(accumulator, value2, index2, collection2);
        });
        return accumulator;
      }
      module2.exports = baseReduce;
    }
  });

  // node_modules/lodash/reduce.js
  var require_reduce = __commonJS({
    "node_modules/lodash/reduce.js"(exports2, module2) {
      var arrayReduce = require_arrayReduce();
      var baseEach = require_baseEach();
      var baseIteratee = require_baseIteratee();
      var baseReduce = require_baseReduce();
      var isArray2 = require_isArray();
      function reduce3(collection, iteratee, accumulator) {
        var func = isArray2(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
        return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
      }
      module2.exports = reduce3;
    }
  });

  // node_modules/lodash/findLastIndex.js
  var require_findLastIndex = __commonJS({
    "node_modules/lodash/findLastIndex.js"(exports2, module2) {
      var baseFindIndex = require_baseFindIndex();
      var baseIteratee = require_baseIteratee();
      var toInteger = require_toInteger();
      var nativeMax = Math.max;
      var nativeMin = Math.min;
      function findLastIndex(array, predicate, fromIndex) {
        var length2 = array == null ? 0 : array.length;
        if (!length2) {
          return -1;
        }
        var index2 = length2 - 1;
        if (fromIndex !== void 0) {
          index2 = toInteger(fromIndex);
          index2 = fromIndex < 0 ? nativeMax(length2 + index2, 0) : nativeMin(index2, length2 - 1);
        }
        return baseFindIndex(array, baseIteratee(predicate, 3), index2, true);
      }
      module2.exports = findLastIndex;
    }
  });

  // node_modules/lodash/findLast.js
  var require_findLast = __commonJS({
    "node_modules/lodash/findLast.js"(exports2, module2) {
      var createFind = require_createFind();
      var findLastIndex = require_findLastIndex();
      var findLast2 = createFind(findLastIndex);
      module2.exports = findLast2;
    }
  });

  // packages/systems/ix2/shared/logic/shallowEqual.ts
  function is(x, y) {
    if (x === y) {
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    }
    return x !== x && y !== y;
  }
  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }
    if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
      return false;
    }
    const keysA = Object.keys(objA);
    const keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) {
      return false;
    }
    for (let i = 0; i < keysA.length; i++) {
      if (!Object.hasOwn(
        objB,
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'PropertyKey'.
        keysA[i]
      ) || // @ts-expect-error - TS2538 - Type 'undefined' cannot be used as an index type. | TS2538 - Type 'undefined' cannot be used as an index type.
      !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }
    return true;
  }
  var shallowEqual_default;
  var init_shallowEqual = __esm({
    "packages/systems/ix2/shared/logic/shallowEqual.ts"() {
      "use strict";
      shallowEqual_default = shallowEqual;
    }
  });

  // packages/systems/ix2/shared/logic/IX2VanillaUtils.ts
  var IX2VanillaUtils_exports = {};
  __export(IX2VanillaUtils_exports, {
    cleanupHTMLElement: () => cleanupHTMLElement,
    clearAllStyles: () => clearAllStyles,
    clearObjectCache: () => clearObjectCache,
    getActionListProgress: () => getActionListProgress,
    getAffectedElements: () => getAffectedElements,
    getComputedStyle: () => getComputedStyle2,
    getDestinationValues: () => getDestinationValues,
    getElementId: () => getElementId,
    getInstanceId: () => getInstanceId,
    getInstanceOrigin: () => getInstanceOrigin,
    getItemConfigByKey: () => getItemConfigByKey,
    getMaxDurationItemIndex: () => getMaxDurationItemIndex,
    getNamespacedParameterId: () => getNamespacedParameterId,
    getRenderType: () => getRenderType,
    getStyleProp: () => getStyleProp,
    mediaQueriesEqual: () => mediaQueriesEqual,
    observeStore: () => observeStore,
    reduceListToGroup: () => reduceListToGroup,
    reifyState: () => reifyState,
    renderHTMLElement: () => renderHTMLElement,
    shallowEqual: () => shallowEqual_default,
    shouldAllowMediaQuery: () => shouldAllowMediaQuery,
    shouldNamespaceEventParameter: () => shouldNamespaceEventParameter,
    stringifyTarget: () => stringifyTarget
  });
  function clearObjectCache() {
    objectCache.clear();
  }
  function getInstanceId() {
    return "i" + instanceCount++;
  }
  function getElementId(ixElements3, ref) {
    for (const key2 in ixElements3) {
      const ixEl = ixElements3[key2];
      if (ixEl && ixEl.ref === ref) {
        return ixEl.id;
      }
    }
    return "e" + elementCount++;
  }
  function reifyState({ events, actionLists, site } = {}) {
    const eventTypeMap = (0, import_reduce.default)(
      events,
      (result2, event) => {
        const { eventTypeId } = event;
        if (!result2[eventTypeId]) {
          result2[eventTypeId] = {};
        }
        result2[eventTypeId][event.id] = event;
        return result2;
      },
      {}
    );
    let mediaQueries = site && site.mediaQueries;
    let mediaQueryKeys = [];
    if (mediaQueries) {
      mediaQueryKeys = mediaQueries.map((mq) => mq.key);
    } else {
      mediaQueries = [];
      console.warn(`IX2 missing mediaQueries in site data`);
    }
    return {
      ixData: {
        events,
        actionLists,
        eventTypeMap,
        mediaQueries,
        mediaQueryKeys
      }
    };
  }
  function observeStore({
    // @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type.
    store,
    // @ts-expect-error - TS7031 - Binding element 'select' implicitly has an 'any' type.
    select,
    // @ts-expect-error - TS7031 - Binding element 'onChange' implicitly has an 'any' type.
    onChange,
    comparator = strictEqual
  }) {
    const { getState, subscribe } = store;
    const unsubscribe = subscribe(handleChange);
    let currentState = select(getState());
    function handleChange() {
      const nextState = select(getState());
      if (nextState == null) {
        unsubscribe();
        return;
      }
      if (!comparator(nextState, currentState)) {
        currentState = nextState;
        onChange(currentState, store);
      }
    }
    return unsubscribe;
  }
  function normalizeTarget(target) {
    const type = typeof target;
    if (type === "string") {
      return { id: target };
    } else if (target != null && type === "object") {
      const { id, objectId, selector, selectorGuids, appliesTo, useEventTarget } = target;
      return { id, objectId, selector, selectorGuids, appliesTo, useEventTarget };
    }
    return {};
  }
  function getAffectedElements({
    config,
    event,
    eventTarget,
    elementRoot,
    elementApi
  }) {
    if (!elementApi) {
      throw new Error("IX2 missing elementApi");
    }
    const { targets } = config;
    if (Array.isArray(targets) && targets.length > 0) {
      return targets.reduce(
        (accumulator, target2) => accumulator.concat(
          getAffectedElements({
            config: { target: target2 },
            event,
            eventTarget,
            elementRoot,
            elementApi
          })
        ),
        []
      );
    }
    const {
      getValidDocument: getValidDocument2,
      getQuerySelector: getQuerySelector2,
      queryDocument: queryDocument2,
      getChildElements: getChildElements2,
      getSiblingElements: getSiblingElements2,
      matchSelector: matchSelector2,
      elementContains: elementContains2,
      isSiblingNode: isSiblingNode2
    } = elementApi;
    const { target } = config;
    if (!target) {
      return [];
    }
    const {
      id,
      objectId,
      selector,
      selectorGuids,
      appliesTo,
      useEventTarget
    } = normalizeTarget(target);
    if (objectId) {
      const ref = objectCache.has(objectId) ? objectCache.get(objectId) : objectCache.set(objectId, {}).get(objectId);
      return [ref];
    }
    if (appliesTo === EventAppliesTo.PAGE) {
      const doc = getValidDocument2(id);
      return doc ? [doc] : [];
    }
    const overrides = event?.action?.config?.affectedElements ?? {};
    const override = overrides[id || selector] || {};
    const validOverride = Boolean(override.id || override.selector);
    let limitAffectedElements;
    let baseSelector;
    let finalSelector;
    const eventTargetSelector = event && getQuerySelector2(normalizeTarget(event.target));
    if (validOverride) {
      limitAffectedElements = override.limitAffectedElements;
      baseSelector = eventTargetSelector;
      finalSelector = getQuerySelector2(override);
    } else {
      baseSelector = finalSelector = getQuerySelector2({
        id,
        selector,
        selectorGuids
      });
    }
    if (event && useEventTarget) {
      const eventTargets = eventTarget && (finalSelector || useEventTarget === true) ? [eventTarget] : queryDocument2(eventTargetSelector);
      if (finalSelector) {
        if (useEventTarget === PARENT2) {
          return queryDocument2(finalSelector).filter(
            (parentElement) => eventTargets.some(
              (targetElement) => elementContains2(parentElement, targetElement)
            )
          );
        }
        if (useEventTarget === CHILDREN2) {
          return queryDocument2(finalSelector).filter(
            (childElement) => eventTargets.some(
              (targetElement) => elementContains2(targetElement, childElement)
            )
          );
        }
        if (useEventTarget === SIBLINGS2) {
          return queryDocument2(finalSelector).filter(
            (siblingElement) => eventTargets.some(
              (targetElement) => isSiblingNode2(targetElement, siblingElement)
            )
          );
        }
      }
      return eventTargets;
    }
    if (baseSelector == null || finalSelector == null) {
      return [];
    }
    if (IS_BROWSER_ENV && elementRoot) {
      return queryDocument2(finalSelector).filter(
        (element) => elementRoot.contains(element)
      );
    }
    if (limitAffectedElements === CHILDREN2) {
      return queryDocument2(baseSelector, finalSelector);
    } else if (limitAffectedElements === IMMEDIATE_CHILDREN2) {
      return getChildElements2(queryDocument2(baseSelector)).filter(
        matchSelector2(finalSelector)
      );
    } else if (limitAffectedElements === SIBLINGS2) {
      return getSiblingElements2(queryDocument2(baseSelector)).filter(
        matchSelector2(finalSelector)
      );
    } else {
      return queryDocument2(finalSelector);
    }
  }
  function getComputedStyle2({ element, actionItem }) {
    if (!IS_BROWSER_ENV) {
      return {};
    }
    const { actionTypeId } = actionItem;
    switch (actionTypeId) {
      case STYLE_SIZE2:
      case STYLE_BACKGROUND_COLOR:
      case STYLE_BORDER:
      case STYLE_TEXT_COLOR:
      case GENERAL_DISPLAY:
        return window.getComputedStyle(element);
      default:
        return {};
    }
  }
  function getInstanceOrigin(element, refState2 = {}, computedStyle = {}, actionItem, elementApi) {
    const { getStyle: getStyle2 } = elementApi;
    const { actionTypeId } = actionItem;
    if (isPluginType(actionTypeId)) {
      return getPluginOrigin(actionTypeId)(refState2[actionTypeId], actionItem);
    }
    switch (actionItem.actionTypeId) {
      case TRANSFORM_MOVE2:
      case TRANSFORM_SCALE2:
      case TRANSFORM_ROTATE2:
      case TRANSFORM_SKEW2: {
        return (
          // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type '"TRANSFORM_MOVE" | "TRANSFORM_SCALE" | "TRANSFORM_ROTATE" | "TRANSFORM_SKEW"' can't be used to index type '{}'.
          refState2[actionItem.actionTypeId] || transformDefaults[actionItem.actionTypeId]
        );
      }
      case STYLE_FILTER2:
        return getFilterDefaults(
          // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type '"STYLE_FILTER"' can't be used to index type '{}'.
          refState2[actionItem.actionTypeId],
          actionItem.config.filters
        );
      case STYLE_FONT_VARIATION2:
        return getFontVariationDefaults(
          // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type '"STYLE_FONT_VARIATION"' can't be used to index type '{}'.
          refState2[actionItem.actionTypeId],
          actionItem.config.fontVariations
        );
      case STYLE_OPACITY:
        return { value: (0, import_defaultTo.default)(parseFloat(getStyle2(element, OPACITY2)), 1) };
      case STYLE_SIZE2: {
        const inlineWidth = getStyle2(element, WIDTH2);
        const inlineHeight = getStyle2(element, HEIGHT2);
        let widthValue;
        let heightValue;
        if (actionItem.config.widthUnit === AUTO2) {
          widthValue = pxValueRegex.test(inlineWidth) ? parseFloat(inlineWidth) : (
            // @ts-expect-error - TS18047 - 'computedStyle' is possibly 'null'.
            parseFloat(computedStyle.width)
          );
        } else {
          widthValue = (0, import_defaultTo.default)(
            parseFloat(inlineWidth),
            // @ts-expect-error - TS18047 - 'computedStyle' is possibly 'null'.
            parseFloat(computedStyle.width)
          );
        }
        if (actionItem.config.heightUnit === AUTO2) {
          heightValue = pxValueRegex.test(inlineHeight) ? parseFloat(inlineHeight) : (
            // @ts-expect-error - TS18047 - 'computedStyle' is possibly 'null'.
            parseFloat(computedStyle.height)
          );
        } else {
          heightValue = (0, import_defaultTo.default)(
            parseFloat(inlineHeight),
            // @ts-expect-error - TS18047 - 'computedStyle' is possibly 'null'.
            parseFloat(computedStyle.height)
          );
        }
        return {
          widthValue,
          heightValue
        };
      }
      case STYLE_BACKGROUND_COLOR:
      case STYLE_BORDER:
      case STYLE_TEXT_COLOR:
        return parseColor({
          element,
          actionTypeId: actionItem.actionTypeId,
          computedStyle,
          getStyle: getStyle2
        });
      case GENERAL_DISPLAY:
        return {
          // @ts-expect-error - TS18047 - 'computedStyle' is possibly 'null'.
          value: (0, import_defaultTo.default)(getStyle2(element, DISPLAY2), computedStyle.display)
        };
      case OBJECT_VALUE:
        return refState2[actionItem.actionTypeId] || { value: 0 };
      default: {
        return;
      }
    }
  }
  function getDestinationValues({
    element,
    actionItem,
    elementApi
  }) {
    if (isPluginType(actionItem.actionTypeId)) {
      return getPluginDestination(actionItem.actionTypeId)(actionItem.config);
    }
    switch (actionItem.actionTypeId) {
      case TRANSFORM_MOVE2:
      case TRANSFORM_SCALE2:
      case TRANSFORM_ROTATE2:
      case TRANSFORM_SKEW2: {
        const { xValue, yValue, zValue } = actionItem.config;
        return { xValue, yValue, zValue };
      }
      case STYLE_SIZE2: {
        const { getStyle: getStyle2, setStyle: setStyle2, getProperty: getProperty2 } = elementApi;
        const { widthUnit, heightUnit } = actionItem.config;
        let { widthValue, heightValue } = actionItem.config;
        if (!IS_BROWSER_ENV) {
          return { widthValue, heightValue };
        }
        if (widthUnit === AUTO2) {
          const temp = getStyle2(element, WIDTH2);
          setStyle2(element, WIDTH2, "");
          widthValue = getProperty2(element, "offsetWidth");
          setStyle2(element, WIDTH2, temp);
        }
        if (heightUnit === AUTO2) {
          const temp = getStyle2(element, HEIGHT2);
          setStyle2(element, HEIGHT2, "");
          heightValue = getProperty2(element, "offsetHeight");
          setStyle2(element, HEIGHT2, temp);
        }
        return { widthValue, heightValue };
      }
      case STYLE_BACKGROUND_COLOR:
      case STYLE_BORDER:
      case STYLE_TEXT_COLOR: {
        const { rValue, gValue, bValue, aValue, globalSwatchId } = actionItem.config;
        if (globalSwatchId && globalSwatchId.startsWith("--")) {
          const { getStyle: getStyle2 } = elementApi;
          const value2 = getStyle2(element, globalSwatchId);
          const normalizedValue = (0, import_normalizeColor.normalizeColor)(value2);
          return {
            rValue: normalizedValue.red,
            gValue: normalizedValue.green,
            bValue: normalizedValue.blue,
            aValue: normalizedValue.alpha
          };
        }
        return { rValue, gValue, bValue, aValue };
      }
      case STYLE_FILTER2: {
        return actionItem.config.filters.reduce(
          reduceFilters,
          {}
        );
      }
      case STYLE_FONT_VARIATION2: {
        return actionItem.config.fontVariations.reduce(
          reduceFontVariations,
          {}
        );
      }
      default: {
        const { value: value2 } = actionItem.config;
        return { value: value2 };
      }
    }
  }
  function getRenderType(actionTypeId) {
    if (/^TRANSFORM_/.test(actionTypeId)) {
      return RENDER_TRANSFORM2;
    }
    if (/^STYLE_/.test(actionTypeId)) {
      return RENDER_STYLE2;
    }
    if (/^GENERAL_/.test(actionTypeId)) {
      return RENDER_GENERAL2;
    }
    if (/^PLUGIN_/.test(actionTypeId)) {
      return RENDER_PLUGIN2;
    }
  }
  function getStyleProp(renderType, actionTypeId) {
    return renderType === RENDER_STYLE2 ? actionTypeId.replace("STYLE_", "").toLowerCase() : null;
  }
  function renderHTMLElement(element, refState2, actionState, eventId, actionItem, styleProp, elementApi, renderType, pluginInstance) {
    switch (renderType) {
      case RENDER_TRANSFORM2: {
        return renderTransform(
          element,
          refState2,
          actionState,
          actionItem,
          elementApi
        );
      }
      case RENDER_STYLE2: {
        return renderStyle(
          element,
          refState2,
          actionState,
          actionItem,
          styleProp,
          elementApi
        );
      }
      case RENDER_GENERAL2: {
        return renderGeneral(element, actionItem, elementApi);
      }
      case RENDER_PLUGIN2: {
        const { actionTypeId } = actionItem;
        if (isPluginType(actionTypeId)) {
          return renderPlugin(actionTypeId)(pluginInstance, refState2, actionItem);
        }
      }
    }
  }
  function renderTransform(element, refState2, actionState, actionItem, elementApi) {
    const newTransform = transformKeys.map((actionTypeId) => {
      const defaults = transformDefaults[actionTypeId];
      const {
        xValue = defaults.xValue,
        yValue = defaults.yValue,
        zValue = defaults.zValue,
        xUnit = "",
        yUnit = "",
        zUnit = ""
      } = refState2[actionTypeId] || {};
      switch (actionTypeId) {
        case TRANSFORM_MOVE2:
          return `${TRANSLATE_3D2}(${xValue}${xUnit}, ${yValue}${yUnit}, ${zValue}${zUnit})`;
        case TRANSFORM_SCALE2:
          return `${SCALE_3D2}(${xValue}${xUnit}, ${yValue}${yUnit}, ${zValue}${zUnit})`;
        case TRANSFORM_ROTATE2:
          return `${ROTATE_X2}(${xValue}${xUnit}) ${ROTATE_Y2}(${yValue}${yUnit}) ${ROTATE_Z2}(${zValue}${zUnit})`;
        case TRANSFORM_SKEW2:
          return `${SKEW2}(${xValue}${xUnit}, ${yValue}${yUnit})`;
        default:
          return "";
      }
    }).join(" ");
    const { setStyle: setStyle2 } = elementApi;
    addWillChange(element, TRANSFORM_PREFIXED, elementApi);
    setStyle2(element, TRANSFORM_PREFIXED, newTransform);
    if (hasDefined3dTransform(actionItem, actionState)) {
      setStyle2(element, TRANSFORM_STYLE_PREFIXED, PRESERVE_3D2);
    }
  }
  function renderFilter(element, actionState, actionItemConfig, elementApi) {
    const filterValue = (0, import_reduce.default)(
      actionState,
      (result2, value2, type) => `${result2} ${type}(${value2}${getFilterUnit(type, actionItemConfig)})`,
      ""
    );
    const { setStyle: setStyle2 } = elementApi;
    addWillChange(element, FILTER2, elementApi);
    setStyle2(element, FILTER2, filterValue);
  }
  function renderFontVariation(element, actionState, actionItemConfig, elementApi) {
    const fontVariationValue = (0, import_reduce.default)(
      actionState,
      (result2, value2, type) => {
        result2.push(`"${type}" ${value2}`);
        return result2;
      },
      []
    ).join(", ");
    const { setStyle: setStyle2 } = elementApi;
    addWillChange(element, FONT_VARIATION_SETTINGS2, elementApi);
    setStyle2(element, FONT_VARIATION_SETTINGS2, fontVariationValue);
  }
  function hasDefined3dTransform({ actionTypeId }, { xValue, yValue, zValue }) {
    return actionTypeId === TRANSFORM_MOVE2 && zValue !== void 0 || // SCALE_Z
    actionTypeId === TRANSFORM_SCALE2 && zValue !== void 0 || // ROTATE_X or ROTATE_Y
    actionTypeId === TRANSFORM_ROTATE2 && (xValue !== void 0 || yValue !== void 0);
  }
  function getFirstMatch(regex, value2) {
    const match = regex.exec(value2);
    return match ? match[1] : "";
  }
  function parseColor({ element, actionTypeId, computedStyle, getStyle: getStyle2 }) {
    const prop = colorStyleProps[actionTypeId];
    const inlineValue = getStyle2(element, prop);
    const value2 = rgbValidRegex.test(inlineValue) ? inlineValue : computedStyle[prop];
    const matches = getFirstMatch(rgbMatchRegex, value2).split(COMMA_DELIMITER2);
    return {
      // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
      rValue: (0, import_defaultTo.default)(parseInt(matches[0], 10), 255),
      // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
      gValue: (0, import_defaultTo.default)(parseInt(matches[1], 10), 255),
      // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
      bValue: (0, import_defaultTo.default)(parseInt(matches[2], 10), 255),
      // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
      aValue: (0, import_defaultTo.default)(parseFloat(matches[3]), 1)
    };
  }
  function renderStyle(element, refState2, actionState, actionItem, styleProp, elementApi) {
    const { setStyle: setStyle2 } = elementApi;
    switch (actionItem.actionTypeId) {
      case STYLE_SIZE2: {
        let { widthUnit = "", heightUnit = "" } = actionItem.config;
        const { widthValue, heightValue } = actionState;
        if (widthValue !== void 0) {
          if (widthUnit === AUTO2) {
            widthUnit = "px";
          }
          addWillChange(element, WIDTH2, elementApi);
          setStyle2(element, WIDTH2, widthValue + widthUnit);
        }
        if (heightValue !== void 0) {
          if (heightUnit === AUTO2) {
            heightUnit = "px";
          }
          addWillChange(element, HEIGHT2, elementApi);
          setStyle2(element, HEIGHT2, heightValue + heightUnit);
        }
        break;
      }
      case STYLE_FILTER2: {
        renderFilter(element, actionState, actionItem.config, elementApi);
        break;
      }
      case STYLE_FONT_VARIATION2: {
        renderFontVariation(element, actionState, actionItem.config, elementApi);
        break;
      }
      case STYLE_BACKGROUND_COLOR:
      case STYLE_BORDER:
      case STYLE_TEXT_COLOR: {
        const prop = colorStyleProps[actionItem.actionTypeId];
        const rValue = Math.round(actionState.rValue);
        const gValue = Math.round(actionState.gValue);
        const bValue = Math.round(actionState.bValue);
        const aValue = actionState.aValue;
        addWillChange(element, prop, elementApi);
        setStyle2(
          element,
          prop,
          aValue >= 1 ? `rgb(${rValue},${gValue},${bValue})` : `rgba(${rValue},${gValue},${bValue},${aValue})`
        );
        break;
      }
      default: {
        const { unit = "" } = actionItem.config;
        addWillChange(element, styleProp, elementApi);
        setStyle2(element, styleProp, actionState.value + unit);
        break;
      }
    }
  }
  function renderGeneral(element, actionItem, elementApi) {
    const { setStyle: setStyle2 } = elementApi;
    switch (actionItem.actionTypeId) {
      case GENERAL_DISPLAY: {
        const { value: value2 } = actionItem.config;
        if (value2 === FLEX2 && IS_BROWSER_ENV) {
          setStyle2(element, DISPLAY2, FLEX_PREFIXED);
        } else {
          setStyle2(element, DISPLAY2, value2);
        }
        return;
      }
    }
  }
  function addWillChange(element, prop, elementApi) {
    if (!IS_BROWSER_ENV) {
      return;
    }
    const validProp = willChangeProps[prop];
    if (!validProp) {
      return;
    }
    const { getStyle: getStyle2, setStyle: setStyle2 } = elementApi;
    const value2 = getStyle2(element, WILL_CHANGE2);
    if (!value2) {
      setStyle2(element, WILL_CHANGE2, validProp);
      return;
    }
    const values2 = value2.split(COMMA_DELIMITER2).map(trim);
    if (values2.indexOf(validProp) === -1) {
      setStyle2(
        element,
        WILL_CHANGE2,
        values2.concat(validProp).join(COMMA_DELIMITER2)
      );
    }
  }
  function removeWillChange(element, prop, elementApi) {
    if (!IS_BROWSER_ENV) {
      return;
    }
    const validProp = willChangeProps[prop];
    if (!validProp) {
      return;
    }
    const { getStyle: getStyle2, setStyle: setStyle2 } = elementApi;
    const value2 = getStyle2(element, WILL_CHANGE2);
    if (!value2 || value2.indexOf(validProp) === -1) {
      return;
    }
    setStyle2(
      element,
      WILL_CHANGE2,
      value2.split(COMMA_DELIMITER2).map(trim).filter((v) => v !== validProp).join(COMMA_DELIMITER2)
    );
  }
  function clearAllStyles({ store, elementApi }) {
    const { ixData: ixData2 } = store.getState();
    const { events = {}, actionLists = {} } = ixData2;
    Object.keys(events).forEach((eventId) => {
      const event = events[eventId];
      const { config } = event.action;
      const { actionListId } = config;
      const actionList = actionLists[actionListId];
      if (actionList) {
        clearActionListStyles({ actionList, event, elementApi });
      }
    });
    Object.keys(actionLists).forEach((actionListId) => {
      clearActionListStyles({ actionList: actionLists[actionListId], elementApi });
    });
  }
  function clearActionListStyles({ actionList = {}, event, elementApi }) {
    const { actionItemGroups, continuousParameterGroups } = actionList;
    actionItemGroups && // @ts-expect-error - TS7006 - Parameter 'actionGroup' implicitly has an 'any' type.
    actionItemGroups.forEach((actionGroup) => {
      clearActionGroupStyles({ actionGroup, event, elementApi });
    });
    continuousParameterGroups && // @ts-expect-error - TS7006 - Parameter 'paramGroup' implicitly has an 'any' type.
    continuousParameterGroups.forEach((paramGroup) => {
      const { continuousActionGroups } = paramGroup;
      continuousActionGroups.forEach((actionGroup) => {
        clearActionGroupStyles({ actionGroup, event, elementApi });
      });
    });
  }
  function clearActionGroupStyles({ actionGroup, event, elementApi }) {
    const { actionItems } = actionGroup;
    actionItems.forEach((actionItem) => {
      const { actionTypeId, config } = actionItem;
      let clearElement;
      if (isPluginType(actionTypeId)) {
        clearElement = (ref) => clearPlugin(actionTypeId)(ref, actionItem);
      } else {
        clearElement = processElementByType({
          effect: clearStyleProp,
          actionTypeId,
          elementApi
        });
      }
      getAffectedElements({ config, event, elementApi }).forEach(clearElement);
    });
  }
  function cleanupHTMLElement(element, actionItem, elementApi) {
    const { setStyle: setStyle2, getStyle: getStyle2 } = elementApi;
    const { actionTypeId } = actionItem;
    if (actionTypeId === STYLE_SIZE2) {
      const { config } = actionItem;
      if (config.widthUnit === AUTO2) {
        setStyle2(element, WIDTH2, "");
      }
      if (config.heightUnit === AUTO2) {
        setStyle2(element, HEIGHT2, "");
      }
    }
    if (getStyle2(element, WILL_CHANGE2)) {
      processElementByType({ effect: removeWillChange, actionTypeId, elementApi })(
        element
      );
    }
  }
  function clearStyleProp(element, prop, elementApi) {
    const { setStyle: setStyle2 } = elementApi;
    removeWillChange(element, prop, elementApi);
    setStyle2(element, prop, "");
    if (prop === TRANSFORM_PREFIXED) {
      setStyle2(element, TRANSFORM_STYLE_PREFIXED, "");
    }
  }
  function getMaxDurationItemIndex(actionItems) {
    let maxDuration = 0;
    let resultIndex = 0;
    actionItems.forEach((actionItem, index2) => {
      const { config } = actionItem;
      const total = config.delay + config.duration;
      if (total >= maxDuration) {
        maxDuration = total;
        resultIndex = index2;
      }
    });
    return resultIndex;
  }
  function getActionListProgress(actionList, instance) {
    const { actionItemGroups, useFirstGroupAsInitialState } = actionList;
    const { actionItem: instanceItem, verboseTimeElapsed = 0 } = instance;
    let totalDuration = 0;
    let elapsedDuration = 0;
    actionItemGroups.forEach((group, index2) => {
      if (useFirstGroupAsInitialState && index2 === 0) {
        return;
      }
      const { actionItems } = group;
      const carrierItem = actionItems[getMaxDurationItemIndex(actionItems)];
      const { config, actionTypeId } = carrierItem;
      if (instanceItem.id === carrierItem.id) {
        elapsedDuration = totalDuration + verboseTimeElapsed;
      }
      const duration = getRenderType(actionTypeId) === RENDER_GENERAL2 ? 0 : config.duration;
      totalDuration += config.delay + duration;
    });
    return totalDuration > 0 ? optimizeFloat(elapsedDuration / totalDuration) : 0;
  }
  function reduceListToGroup({ actionList, actionItemId, rawData }) {
    const { actionItemGroups, continuousParameterGroups } = actionList;
    const newActionItems = [];
    const takeItemUntilMatch = (actionItem) => {
      newActionItems.push(
        (0, import_timm4.mergeIn)(actionItem, ["config"], {
          delay: 0,
          duration: 0
        })
      );
      return actionItem.id === actionItemId;
    };
    actionItemGroups && // @ts-expect-error - TS7031 - Binding element 'actionItems' implicitly has an 'any' type.
    actionItemGroups.some(({ actionItems }) => {
      return actionItems.some(takeItemUntilMatch);
    });
    continuousParameterGroups && // @ts-expect-error - TS7006 - Parameter 'paramGroup' implicitly has an 'any' type.
    continuousParameterGroups.some((paramGroup) => {
      const { continuousActionGroups } = paramGroup;
      return continuousActionGroups.some(({ actionItems }) => {
        return actionItems.some(takeItemUntilMatch);
      });
    });
    return (0, import_timm4.setIn)(rawData, ["actionLists"], {
      [actionList.id]: {
        id: actionList.id,
        actionItemGroups: [
          {
            actionItems: newActionItems
          }
        ]
      }
    });
  }
  function shouldNamespaceEventParameter(eventTypeId, { basedOn }) {
    return eventTypeId === EventTypeConsts.SCROLLING_IN_VIEW && (basedOn === EventBasedOn.ELEMENT || basedOn == null) || eventTypeId === EventTypeConsts.MOUSE_MOVE && basedOn === EventBasedOn.ELEMENT;
  }
  function getNamespacedParameterId(eventStateKey, continuousParameterGroupId) {
    const namespacedParameterId = eventStateKey + COLON_DELIMITER2 + continuousParameterGroupId;
    return namespacedParameterId;
  }
  function shouldAllowMediaQuery(mediaQueries, mediaQueryKey) {
    if (mediaQueryKey == null) {
      return true;
    }
    return mediaQueries.indexOf(mediaQueryKey) !== -1;
  }
  function mediaQueriesEqual(listA, listB) {
    return shallowEqual_default(listA && listA.sort(), listB && listB.sort());
  }
  function stringifyTarget(target) {
    if (typeof target === "string") {
      return target;
    }
    if (target.pluginElement && target.objectId) {
      return target.pluginElement + BAR_DELIMITER2 + target.objectId;
    }
    if (target.objectId) {
      return target.objectId;
    }
    const { id = "", selector = "", useEventTarget = "" } = target;
    return id + BAR_DELIMITER2 + selector + BAR_DELIMITER2 + useEventTarget;
  }
  var import_defaultTo, import_reduce, import_findLast, import_timm4, import_normalizeColor, BACKGROUND2, TRANSFORM2, TRANSLATE_3D2, SCALE_3D2, ROTATE_X2, ROTATE_Y2, ROTATE_Z2, SKEW2, PRESERVE_3D2, FLEX2, OPACITY2, FILTER2, FONT_VARIATION_SETTINGS2, WIDTH2, HEIGHT2, BACKGROUND_COLOR2, BORDER_COLOR2, COLOR2, CHILDREN2, IMMEDIATE_CHILDREN2, SIBLINGS2, PARENT2, DISPLAY2, WILL_CHANGE2, AUTO2, COMMA_DELIMITER2, COLON_DELIMITER2, BAR_DELIMITER2, RENDER_TRANSFORM2, RENDER_GENERAL2, RENDER_STYLE2, RENDER_PLUGIN2, TRANSFORM_MOVE2, TRANSFORM_SCALE2, TRANSFORM_ROTATE2, TRANSFORM_SKEW2, STYLE_OPACITY, STYLE_FILTER2, STYLE_FONT_VARIATION2, STYLE_SIZE2, STYLE_BACKGROUND_COLOR, STYLE_BORDER, STYLE_TEXT_COLOR, GENERAL_DISPLAY, OBJECT_VALUE, trim, colorStyleProps, willChangeProps, objectCache, instanceCount, elementCount, strictEqual, pxValueRegex, getFilterDefaults, getFontVariationDefaults, reduceFilters, reduceFontVariations, getItemConfigByKey, transformDefaults, filterDefaults, fontVariationDefaults, getFilterUnit, transformKeys, paramCapture, rgbValidRegex, rgbMatchRegex, processElementByType;
  var init_IX2VanillaUtils = __esm({
    "packages/systems/ix2/shared/logic/IX2VanillaUtils.ts"() {
      "use strict";
      import_defaultTo = __toESM(require_defaultTo());
      import_reduce = __toESM(require_reduce());
      import_findLast = __toESM(require_findLast());
      import_timm4 = __toESM(require_timm());
      init_shared_constants();
      init_shallowEqual();
      init_IX2EasingUtils();
      import_normalizeColor = __toESM(require_normalizeColor());
      init_IX2VanillaPlugins();
      init_IX2BrowserSupport();
      ({
        BACKGROUND: BACKGROUND2,
        TRANSFORM: TRANSFORM2,
        TRANSLATE_3D: TRANSLATE_3D2,
        SCALE_3D: SCALE_3D2,
        ROTATE_X: ROTATE_X2,
        ROTATE_Y: ROTATE_Y2,
        ROTATE_Z: ROTATE_Z2,
        SKEW: SKEW2,
        PRESERVE_3D: PRESERVE_3D2,
        FLEX: FLEX2,
        OPACITY: OPACITY2,
        FILTER: FILTER2,
        FONT_VARIATION_SETTINGS: FONT_VARIATION_SETTINGS2,
        WIDTH: WIDTH2,
        HEIGHT: HEIGHT2,
        BACKGROUND_COLOR: BACKGROUND_COLOR2,
        BORDER_COLOR: BORDER_COLOR2,
        COLOR: COLOR2,
        CHILDREN: CHILDREN2,
        IMMEDIATE_CHILDREN: IMMEDIATE_CHILDREN2,
        SIBLINGS: SIBLINGS2,
        PARENT: PARENT2,
        DISPLAY: DISPLAY2,
        WILL_CHANGE: WILL_CHANGE2,
        AUTO: AUTO2,
        COMMA_DELIMITER: COMMA_DELIMITER2,
        COLON_DELIMITER: COLON_DELIMITER2,
        BAR_DELIMITER: BAR_DELIMITER2,
        RENDER_TRANSFORM: RENDER_TRANSFORM2,
        RENDER_GENERAL: RENDER_GENERAL2,
        RENDER_STYLE: RENDER_STYLE2,
        RENDER_PLUGIN: RENDER_PLUGIN2
      } = IX2EngineConstants_exports);
      ({
        TRANSFORM_MOVE: TRANSFORM_MOVE2,
        TRANSFORM_SCALE: TRANSFORM_SCALE2,
        TRANSFORM_ROTATE: TRANSFORM_ROTATE2,
        TRANSFORM_SKEW: TRANSFORM_SKEW2,
        STYLE_OPACITY,
        STYLE_FILTER: STYLE_FILTER2,
        STYLE_FONT_VARIATION: STYLE_FONT_VARIATION2,
        STYLE_SIZE: STYLE_SIZE2,
        STYLE_BACKGROUND_COLOR,
        STYLE_BORDER,
        STYLE_TEXT_COLOR,
        GENERAL_DISPLAY,
        OBJECT_VALUE
      } = ActionTypeConsts);
      trim = (v) => v.trim();
      colorStyleProps = Object.freeze({
        [STYLE_BACKGROUND_COLOR]: BACKGROUND_COLOR2,
        [STYLE_BORDER]: BORDER_COLOR2,
        [STYLE_TEXT_COLOR]: COLOR2
      });
      willChangeProps = Object.freeze({
        [TRANSFORM_PREFIXED]: TRANSFORM2,
        [BACKGROUND_COLOR2]: BACKGROUND2,
        [OPACITY2]: OPACITY2,
        [FILTER2]: FILTER2,
        [WIDTH2]: WIDTH2,
        [HEIGHT2]: HEIGHT2,
        [FONT_VARIATION_SETTINGS2]: FONT_VARIATION_SETTINGS2
      });
      objectCache = /* @__PURE__ */ new Map();
      instanceCount = 1;
      elementCount = 1;
      strictEqual = (a, b) => a === b;
      pxValueRegex = /px/;
      getFilterDefaults = (actionState, filters) => (
        // @ts-expect-error - TS7006 - Parameter 'result' implicitly has an 'any' type. | TS7006 - Parameter 'filter' implicitly has an 'any' type.
        filters.reduce((result2, filter) => {
          if (result2[filter.type] == null) {
            result2[filter.type] = // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Readonly<{ blur: 0; 'hue-rotate': 0; invert: 0; grayscale: 0; saturate: 100; sepia: 0; contrast: 100; brightness: 100; }>'.
            filterDefaults[filter.type];
          }
          return result2;
        }, actionState || {})
      );
      getFontVariationDefaults = (actionState, fontVariations) => fontVariations.reduce((result2, fontVariation) => {
        if (result2[fontVariation.type] == null) {
          result2[fontVariation.type] = // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'Readonly<{ wght: 0; opsz: 0; wdth: 0; slnt: 0; }>'.
          fontVariationDefaults[fontVariation.type] || // @ts-expect-error - TS2339 - Property 'defaultValue' does not exist on type 'FontVariationItemConfigType'.
          fontVariation.defaultValue || 0;
        }
        return result2;
      }, actionState || {});
      reduceFilters = (result2, filter) => {
        if (filter) {
          result2[filter.type] = filter.value || 0;
        }
        return result2;
      };
      reduceFontVariations = (result2, fontVariation) => {
        if (fontVariation) {
          result2[fontVariation.type] = fontVariation.value || 0;
        }
        return result2;
      };
      getItemConfigByKey = (actionTypeId, key2, config) => {
        if (isPluginType(actionTypeId)) {
          return getPluginConfig(actionTypeId)(config, key2);
        }
        switch (actionTypeId) {
          case STYLE_FILTER2: {
            const filter = (0, import_findLast.default)(config.filters, ({ type }) => type === key2);
            return filter ? filter.value : 0;
          }
          case STYLE_FONT_VARIATION2: {
            const fontVariation = (0, import_findLast.default)(
              config.fontVariations,
              ({ type }) => type === key2
            );
            return fontVariation ? fontVariation.value : 0;
          }
          default:
            return config[key2];
        }
      };
      transformDefaults = {
        [TRANSFORM_MOVE2]: Object.freeze({
          xValue: 0,
          yValue: 0,
          zValue: 0
        }),
        [TRANSFORM_SCALE2]: Object.freeze({
          xValue: 1,
          yValue: 1,
          zValue: 1
        }),
        [TRANSFORM_ROTATE2]: Object.freeze({
          xValue: 0,
          yValue: 0,
          zValue: 0
        }),
        [TRANSFORM_SKEW2]: Object.freeze({
          xValue: 0,
          yValue: 0
        })
      };
      filterDefaults = Object.freeze({
        blur: 0,
        "hue-rotate": 0,
        invert: 0,
        grayscale: 0,
        saturate: 100,
        sepia: 0,
        contrast: 100,
        brightness: 100
      });
      fontVariationDefaults = Object.freeze({
        wght: 0,
        opsz: 0,
        wdth: 0,
        slnt: 0
      });
      getFilterUnit = (filterType, actionItemConfig) => {
        const filter = (0, import_findLast.default)(
          actionItemConfig.filters,
          ({ type }) => type === filterType
        );
        if (filter && filter.unit) {
          return filter.unit;
        }
        switch (filterType) {
          case "blur":
            return "px";
          case "hue-rotate":
            return "deg";
          default:
            return "%";
        }
      };
      transformKeys = Object.keys(transformDefaults);
      paramCapture = "\\(([^)]+)\\)";
      rgbValidRegex = /^rgb/;
      rgbMatchRegex = RegExp(`rgba?${paramCapture}`);
      processElementByType = ({
        effect: effect2,
        actionTypeId,
        elementApi
      }) => (
        // @ts-expect-error - TS7006 - Parameter 'element' implicitly has an 'any' type.
        (element) => {
          switch (actionTypeId) {
            case TRANSFORM_MOVE2:
            case TRANSFORM_SCALE2:
            case TRANSFORM_ROTATE2:
            case TRANSFORM_SKEW2:
              effect2(element, TRANSFORM_PREFIXED, elementApi);
              break;
            case STYLE_FILTER2:
              effect2(element, FILTER2, elementApi);
              break;
            case STYLE_FONT_VARIATION2:
              effect2(element, FONT_VARIATION_SETTINGS2, elementApi);
              break;
            case STYLE_OPACITY:
              effect2(element, OPACITY2, elementApi);
              break;
            case STYLE_SIZE2:
              effect2(element, WIDTH2, elementApi);
              effect2(element, HEIGHT2, elementApi);
              break;
            case STYLE_BACKGROUND_COLOR:
            case STYLE_BORDER:
            case STYLE_TEXT_COLOR:
              effect2(element, colorStyleProps[actionTypeId], elementApi);
              break;
            case GENERAL_DISPLAY:
              effect2(element, DISPLAY2, elementApi);
              break;
          }
        }
      );
    }
  });

  // packages/systems/ix2/shared/index.js
  var require_shared2 = __commonJS({
    "packages/systems/ix2/shared/index.js"(exports2) {
      "use strict";
      var _interopRequireWildcard = require_interopRequireWildcard().default;
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.IX2VanillaUtils = exports2.IX2VanillaPlugins = exports2.IX2ElementsReducer = exports2.IX2Easings = exports2.IX2EasingUtils = exports2.IX2BrowserSupport = void 0;
      var IX2BrowserSupport2 = _interopRequireWildcard((init_IX2BrowserSupport(), __toCommonJS(IX2BrowserSupport_exports)));
      exports2.IX2BrowserSupport = IX2BrowserSupport2;
      var IX2Easings = _interopRequireWildcard((init_IX2Easings(), __toCommonJS(IX2Easings_exports)));
      exports2.IX2Easings = IX2Easings;
      var IX2EasingUtils2 = _interopRequireWildcard((init_IX2EasingUtils(), __toCommonJS(IX2EasingUtils_exports)));
      exports2.IX2EasingUtils = IX2EasingUtils2;
      var IX2ElementsReducer2 = _interopRequireWildcard((init_IX2ElementsReducer(), __toCommonJS(IX2ElementsReducer_exports)));
      exports2.IX2ElementsReducer = IX2ElementsReducer2;
      var IX2VanillaPlugins2 = _interopRequireWildcard((init_IX2VanillaPlugins(), __toCommonJS(IX2VanillaPlugins_exports)));
      exports2.IX2VanillaPlugins = IX2VanillaPlugins2;
      var IX2VanillaUtils5 = _interopRequireWildcard((init_IX2VanillaUtils(), __toCommonJS(IX2VanillaUtils_exports)));
      exports2.IX2VanillaUtils = IX2VanillaUtils5;
    }
  });

  // packages/systems/ix2/engine/reducers/IX2InstancesReducer.ts
  var import_shared, import_timm5, IX2_RAW_DATA_IMPORTED3, IX2_SESSION_STOPPED4, IX2_INSTANCE_ADDED3, IX2_INSTANCE_STARTED2, IX2_INSTANCE_REMOVED2, IX2_ANIMATION_FRAME_CHANGED3, optimizeFloat2, applyEasing2, createBezierEasing2, RENDER_GENERAL3, getItemConfigByKey2, getRenderType2, getStyleProp2, continuousInstance, timedInstance, ixInstances;
  var init_IX2InstancesReducer = __esm({
    "packages/systems/ix2/engine/reducers/IX2InstancesReducer.ts"() {
      "use strict";
      init_shared_constants();
      import_shared = __toESM(require_shared2());
      import_timm5 = __toESM(require_timm());
      ({
        IX2_RAW_DATA_IMPORTED: IX2_RAW_DATA_IMPORTED3,
        IX2_SESSION_STOPPED: IX2_SESSION_STOPPED4,
        IX2_INSTANCE_ADDED: IX2_INSTANCE_ADDED3,
        IX2_INSTANCE_STARTED: IX2_INSTANCE_STARTED2,
        IX2_INSTANCE_REMOVED: IX2_INSTANCE_REMOVED2,
        IX2_ANIMATION_FRAME_CHANGED: IX2_ANIMATION_FRAME_CHANGED3
      } = IX2EngineActionTypes_exports);
      ({ optimizeFloat: optimizeFloat2, applyEasing: applyEasing2, createBezierEasing: createBezierEasing2 } = import_shared.IX2EasingUtils);
      ({ RENDER_GENERAL: RENDER_GENERAL3 } = IX2EngineConstants_exports);
      ({ getItemConfigByKey: getItemConfigByKey2, getRenderType: getRenderType2, getStyleProp: getStyleProp2 } = import_shared.IX2VanillaUtils);
      continuousInstance = (state, action) => {
        const {
          position: lastPosition,
          parameterId,
          actionGroups,
          destinationKeys,
          smoothing,
          restingValue,
          actionTypeId,
          customEasingFn,
          skipMotion,
          skipToValue
        } = state;
        const { parameters } = action.payload;
        let velocity2 = Math.max(1 - smoothing, 0.01);
        let paramValue = parameters[parameterId];
        if (paramValue == null) {
          velocity2 = 1;
          paramValue = restingValue;
        }
        const nextPosition = Math.max(paramValue, 0) || 0;
        const positionDiff = optimizeFloat2(nextPosition - lastPosition);
        const position2 = skipMotion ? skipToValue : optimizeFloat2(lastPosition + positionDiff * velocity2);
        const keyframePosition = position2 * 100;
        if (position2 === lastPosition && state.current) {
          return state;
        }
        let fromActionItem;
        let toActionItem;
        let positionOffset;
        let positionRange;
        for (let i = 0, { length: length2 } = actionGroups; i < length2; i++) {
          const { keyframe, actionItems } = actionGroups[i];
          if (i === 0) {
            fromActionItem = actionItems[0];
          }
          if (keyframePosition >= keyframe) {
            fromActionItem = actionItems[0];
            const nextGroup = actionGroups[i + 1];
            const hasNextItem = nextGroup && keyframePosition !== keyframe;
            toActionItem = hasNextItem ? nextGroup.actionItems[0] : null;
            if (hasNextItem) {
              positionOffset = keyframe / 100;
              positionRange = (nextGroup.keyframe - keyframe) / 100;
            }
          }
        }
        const current = {};
        if (fromActionItem && !toActionItem) {
          for (let i = 0, { length: length2 } = destinationKeys; i < length2; i++) {
            const key2 = destinationKeys[i];
            current[key2] = getItemConfigByKey2(
              actionTypeId,
              key2,
              fromActionItem.config
            );
          }
        } else if (fromActionItem && toActionItem && positionOffset !== void 0 && positionRange !== void 0) {
          const localPosition = (position2 - positionOffset) / positionRange;
          const easing = fromActionItem.config.easing;
          const eased = applyEasing2(easing, localPosition, customEasingFn);
          for (let i = 0, { length: length2 } = destinationKeys; i < length2; i++) {
            const key2 = destinationKeys[i];
            const fromVal = getItemConfigByKey2(
              actionTypeId,
              key2,
              fromActionItem.config
            );
            const toVal = getItemConfigByKey2(actionTypeId, key2, toActionItem.config);
            const diff = toVal - fromVal;
            const value2 = diff * eased + fromVal;
            current[key2] = value2;
          }
        }
        return (0, import_timm5.merge)(state, {
          position: position2,
          current
        });
      };
      timedInstance = (state, action) => {
        const {
          active: active2,
          origin,
          start,
          immediate,
          renderType,
          verbose,
          actionItem,
          destination,
          destinationKeys,
          pluginDuration,
          instanceDelay,
          customEasingFn,
          skipMotion
        } = state;
        const easing = actionItem.config.easing;
        let { duration, delay } = actionItem.config;
        if (pluginDuration != null) {
          duration = pluginDuration;
        }
        delay = instanceDelay != null ? instanceDelay : delay;
        if (renderType === RENDER_GENERAL3) {
          duration = 0;
        } else if (immediate || skipMotion) {
          duration = delay = 0;
        }
        const { now } = action.payload;
        if (active2 && origin) {
          const delta = now - (start + delay);
          if (verbose) {
            const verboseDelta = now - start;
            const verboseDuration = duration + delay;
            const verbosePosition = optimizeFloat2(
              Math.min(Math.max(0, verboseDelta / verboseDuration), 1)
            );
            state = (0, import_timm5.set)(
              state,
              "verboseTimeElapsed",
              verboseDuration * verbosePosition
            );
          }
          if (delta < 0) {
            return state;
          }
          const position2 = optimizeFloat2(Math.min(Math.max(0, delta / duration), 1));
          const eased = applyEasing2(easing, position2, customEasingFn);
          const newProps = {};
          let current = null;
          if (destinationKeys.length) {
            current = destinationKeys.reduce((result2, key2) => {
              const destValue = destination[key2];
              const originVal = parseFloat(origin[key2]) || 0;
              const diff = parseFloat(destValue) - originVal;
              const value2 = diff * eased + originVal;
              result2[key2] = value2;
              return result2;
            }, {});
          }
          newProps.current = current;
          newProps.position = position2;
          if (position2 === 1) {
            newProps.active = false;
            newProps.complete = true;
          }
          return (0, import_timm5.merge)(state, newProps);
        }
        return state;
      };
      ixInstances = (state = Object.freeze({}), action) => {
        switch (action.type) {
          case IX2_RAW_DATA_IMPORTED3: {
            return action.payload.ixInstances || Object.freeze({});
          }
          case IX2_SESSION_STOPPED4: {
            return Object.freeze({});
          }
          case IX2_INSTANCE_ADDED3: {
            const {
              instanceId,
              elementId,
              actionItem,
              eventId,
              eventTarget,
              eventStateKey,
              actionListId,
              groupIndex,
              isCarrier,
              origin,
              destination,
              immediate,
              verbose,
              continuous,
              parameterId,
              actionGroups,
              smoothing,
              restingValue,
              pluginInstance,
              pluginDuration,
              instanceDelay,
              skipMotion,
              skipToValue
            } = action.payload;
            const { actionTypeId } = actionItem;
            const renderType = getRenderType2(actionTypeId);
            const styleProp = getStyleProp2(renderType, actionTypeId);
            const destinationKeys = Object.keys(destination).filter(
              (key2) => (
                // Skip null destination values
                destination[key2] != null && // Skip string destination values
                typeof destination[key2] !== "string"
              )
            );
            const { easing } = actionItem.config;
            return (0, import_timm5.set)(state, instanceId, {
              id: instanceId,
              elementId,
              active: false,
              position: 0,
              start: 0,
              origin,
              destination,
              destinationKeys,
              immediate,
              verbose,
              current: null,
              actionItem,
              actionTypeId,
              eventId,
              eventTarget,
              eventStateKey,
              actionListId,
              groupIndex,
              renderType,
              isCarrier,
              styleProp,
              continuous,
              parameterId,
              actionGroups,
              smoothing,
              restingValue,
              pluginInstance,
              pluginDuration,
              instanceDelay,
              skipMotion,
              skipToValue,
              customEasingFn: Array.isArray(easing) && easing.length === 4 ? (
                // @ts-expect-error - TS2345 - Argument of type 'any[]' is not assignable to parameter of type 'IX2EasingCustomType'.
                createBezierEasing2(easing)
              ) : void 0
            });
          }
          case IX2_INSTANCE_STARTED2: {
            const { instanceId, time: time2 } = action.payload;
            return (0, import_timm5.mergeIn)(state, [instanceId], {
              active: true,
              complete: false,
              start: time2
            });
          }
          case IX2_INSTANCE_REMOVED2: {
            const { instanceId } = action.payload;
            if (!state[instanceId]) {
              return state;
            }
            const newState = {};
            const keys = Object.keys(state);
            const { length: length2 } = keys;
            for (let i = 0; i < length2; i++) {
              const key2 = keys[i];
              if (key2 !== instanceId) {
                newState[key2] = state[key2];
              }
            }
            return newState;
          }
          case IX2_ANIMATION_FRAME_CHANGED3: {
            let newState = state;
            const keys = Object.keys(state);
            const { length: length2 } = keys;
            for (let i = 0; i < length2; i++) {
              const key2 = keys[i];
              const instance = state[key2];
              const reducer = instance.continuous ? continuousInstance : timedInstance;
              newState = (0, import_timm5.set)(newState, key2, reducer(instance, action));
            }
            return newState;
          }
          default: {
            return state;
          }
        }
      };
    }
  });

  // packages/systems/ix2/engine/reducers/IX2ParametersReducer.ts
  var IX2_RAW_DATA_IMPORTED4, IX2_SESSION_STOPPED5, IX2_PARAMETER_CHANGED2, ixParameters;
  var init_IX2ParametersReducer = __esm({
    "packages/systems/ix2/engine/reducers/IX2ParametersReducer.ts"() {
      "use strict";
      init_shared_constants();
      ({ IX2_RAW_DATA_IMPORTED: IX2_RAW_DATA_IMPORTED4, IX2_SESSION_STOPPED: IX2_SESSION_STOPPED5, IX2_PARAMETER_CHANGED: IX2_PARAMETER_CHANGED2 } = IX2EngineActionTypes_exports);
      ixParameters = (state = {
        /*mutable flat state*/
      }, action) => {
        switch (action.type) {
          case IX2_RAW_DATA_IMPORTED4: {
            return action.payload.ixParameters || {
              /*mutable flat state*/
            };
          }
          case IX2_SESSION_STOPPED5: {
            return {
              /*mutable flat state*/
            };
          }
          case IX2_PARAMETER_CHANGED2: {
            const { key: key2, value: value2 } = action.payload;
            state[key2] = value2;
            return state;
          }
          default: {
            return state;
          }
        }
      };
    }
  });

  // packages/systems/ix2/engine/reducers/IX2Reducer.ts
  var IX2Reducer_exports = {};
  __export(IX2Reducer_exports, {
    default: () => IX2Reducer_default
  });
  var import_redux, import_shared2, ixElements2, IX2Reducer_default;
  var init_IX2Reducer = __esm({
    "packages/systems/ix2/engine/reducers/IX2Reducer.ts"() {
      "use strict";
      import_redux = __toESM(require_lib2());
      init_IX2DataReducer();
      init_IX2RequestReducer();
      init_IX2SessionReducer();
      import_shared2 = __toESM(require_shared2());
      init_IX2InstancesReducer();
      init_IX2ParametersReducer();
      ({ ixElements: ixElements2 } = import_shared2.IX2ElementsReducer);
      IX2Reducer_default = (0, import_redux.combineReducers)({
        // @ts-expect-error - TS2322 - Type '(state: FixMeAny | null | undefined, action: {    type: typeof IX2_RAW_DATA_IMPORTED;    payload: {        ixData: FixMeAny;    };}) => any' is not assignable to type 'Reducer<any>'.
        ixData,
        ixRequest,
        ixSession,
        ixElements: ixElements2,
        ixInstances,
        ixParameters
      });
    }
  });

  // node_modules/lodash/isString.js
  var require_isString = __commonJS({
    "node_modules/lodash/isString.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var isArray2 = require_isArray();
      var isObjectLike2 = require_isObjectLike();
      var stringTag = "[object String]";
      function isString2(value2) {
        return typeof value2 == "string" || !isArray2(value2) && isObjectLike2(value2) && baseGetTag(value2) == stringTag;
      }
      module2.exports = isString2;
    }
  });

  // node_modules/lodash/_asciiSize.js
  var require_asciiSize = __commonJS({
    "node_modules/lodash/_asciiSize.js"(exports2, module2) {
      var baseProperty = require_baseProperty();
      var asciiSize = baseProperty("length");
      module2.exports = asciiSize;
    }
  });

  // node_modules/lodash/_hasUnicode.js
  var require_hasUnicode = __commonJS({
    "node_modules/lodash/_hasUnicode.js"(exports2, module2) {
      var rsAstralRange = "\\ud800-\\udfff";
      var rsComboMarksRange = "\\u0300-\\u036f";
      var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
      var rsComboSymbolsRange = "\\u20d0-\\u20ff";
      var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
      var rsVarRange = "\\ufe0e\\ufe0f";
      var rsZWJ = "\\u200d";
      var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      module2.exports = hasUnicode;
    }
  });

  // node_modules/lodash/_unicodeSize.js
  var require_unicodeSize = __commonJS({
    "node_modules/lodash/_unicodeSize.js"(exports2, module2) {
      var rsAstralRange = "\\ud800-\\udfff";
      var rsComboMarksRange = "\\u0300-\\u036f";
      var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
      var rsComboSymbolsRange = "\\u20d0-\\u20ff";
      var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
      var rsVarRange = "\\ufe0e\\ufe0f";
      var rsAstral = "[" + rsAstralRange + "]";
      var rsCombo = "[" + rsComboRange + "]";
      var rsFitz = "\\ud83c[\\udffb-\\udfff]";
      var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
      var rsNonAstral = "[^" + rsAstralRange + "]";
      var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
      var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
      var rsZWJ = "\\u200d";
      var reOptMod = rsModifier + "?";
      var rsOptVar = "[" + rsVarRange + "]?";
      var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
      var rsSeq = rsOptVar + reOptMod + rsOptJoin;
      var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      function unicodeSize(string) {
        var result2 = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          ++result2;
        }
        return result2;
      }
      module2.exports = unicodeSize;
    }
  });

  // node_modules/lodash/_stringSize.js
  var require_stringSize = __commonJS({
    "node_modules/lodash/_stringSize.js"(exports2, module2) {
      var asciiSize = require_asciiSize();
      var hasUnicode = require_hasUnicode();
      var unicodeSize = require_unicodeSize();
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      module2.exports = stringSize;
    }
  });

  // node_modules/lodash/size.js
  var require_size = __commonJS({
    "node_modules/lodash/size.js"(exports2, module2) {
      var baseKeys = require_baseKeys();
      var getTag = require_getTag();
      var isArrayLike = require_isArrayLike();
      var isString2 = require_isString();
      var stringSize = require_stringSize();
      var mapTag = "[object Map]";
      var setTag = "[object Set]";
      function size2(collection) {
        if (collection == null) {
          return 0;
        }
        if (isArrayLike(collection)) {
          return isString2(collection) ? stringSize(collection) : collection.length;
        }
        var tag = getTag(collection);
        if (tag == mapTag || tag == setTag) {
          return collection.size;
        }
        return baseKeys(collection).length;
      }
      module2.exports = size2;
    }
  });

  // node_modules/lodash/negate.js
  var require_negate = __commonJS({
    "node_modules/lodash/negate.js"(exports2, module2) {
      var FUNC_ERROR_TEXT = "Expected a function";
      function negate(predicate) {
        if (typeof predicate != "function") {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return function() {
          var args = arguments;
          switch (args.length) {
            case 0:
              return !predicate.call(this);
            case 1:
              return !predicate.call(this, args[0]);
            case 2:
              return !predicate.call(this, args[0], args[1]);
            case 3:
              return !predicate.call(this, args[0], args[1], args[2]);
          }
          return !predicate.apply(this, args);
        };
      }
      module2.exports = negate;
    }
  });

  // node_modules/lodash/_defineProperty.js
  var require_defineProperty = __commonJS({
    "node_modules/lodash/_defineProperty.js"(exports2, module2) {
      var getNative = require_getNative();
      var defineProperty = function() {
        try {
          var func = getNative(Object, "defineProperty");
          func({}, "", {});
          return func;
        } catch (e) {
        }
      }();
      module2.exports = defineProperty;
    }
  });

  // node_modules/lodash/_baseAssignValue.js
  var require_baseAssignValue = __commonJS({
    "node_modules/lodash/_baseAssignValue.js"(exports2, module2) {
      var defineProperty = require_defineProperty();
      function baseAssignValue(object, key2, value2) {
        if (key2 == "__proto__" && defineProperty) {
          defineProperty(object, key2, {
            "configurable": true,
            "enumerable": true,
            "value": value2,
            "writable": true
          });
        } else {
          object[key2] = value2;
        }
      }
      module2.exports = baseAssignValue;
    }
  });

  // node_modules/lodash/_assignValue.js
  var require_assignValue = __commonJS({
    "node_modules/lodash/_assignValue.js"(exports2, module2) {
      var baseAssignValue = require_baseAssignValue();
      var eq = require_eq();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function assignValue(object, key2, value2) {
        var objValue = object[key2];
        if (!(hasOwnProperty9.call(object, key2) && eq(objValue, value2)) || value2 === void 0 && !(key2 in object)) {
          baseAssignValue(object, key2, value2);
        }
      }
      module2.exports = assignValue;
    }
  });

  // node_modules/lodash/_baseSet.js
  var require_baseSet = __commonJS({
    "node_modules/lodash/_baseSet.js"(exports2, module2) {
      var assignValue = require_assignValue();
      var castPath = require_castPath();
      var isIndex = require_isIndex();
      var isObject2 = require_isObject();
      var toKey = require_toKey();
      function baseSet(object, path, value2, customizer) {
        if (!isObject2(object)) {
          return object;
        }
        path = castPath(path, object);
        var index2 = -1, length2 = path.length, lastIndex = length2 - 1, nested = object;
        while (nested != null && ++index2 < length2) {
          var key2 = toKey(path[index2]), newValue = value2;
          if (key2 === "__proto__" || key2 === "constructor" || key2 === "prototype") {
            return object;
          }
          if (index2 != lastIndex) {
            var objValue = nested[key2];
            newValue = customizer ? customizer(objValue, key2, nested) : void 0;
            if (newValue === void 0) {
              newValue = isObject2(objValue) ? objValue : isIndex(path[index2 + 1]) ? [] : {};
            }
          }
          assignValue(nested, key2, newValue);
          nested = nested[key2];
        }
        return object;
      }
      module2.exports = baseSet;
    }
  });

  // node_modules/lodash/_basePickBy.js
  var require_basePickBy = __commonJS({
    "node_modules/lodash/_basePickBy.js"(exports2, module2) {
      var baseGet = require_baseGet();
      var baseSet = require_baseSet();
      var castPath = require_castPath();
      function basePickBy(object, paths, predicate) {
        var index2 = -1, length2 = paths.length, result2 = {};
        while (++index2 < length2) {
          var path = paths[index2], value2 = baseGet(object, path);
          if (predicate(value2, path)) {
            baseSet(result2, castPath(path, object), value2);
          }
        }
        return result2;
      }
      module2.exports = basePickBy;
    }
  });

  // node_modules/lodash/_getSymbolsIn.js
  var require_getSymbolsIn = __commonJS({
    "node_modules/lodash/_getSymbolsIn.js"(exports2, module2) {
      var arrayPush = require_arrayPush();
      var getPrototype = require_getPrototype();
      var getSymbols = require_getSymbols();
      var stubArray = require_stubArray();
      var nativeGetSymbols = Object.getOwnPropertySymbols;
      var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
        var result2 = [];
        while (object) {
          arrayPush(result2, getSymbols(object));
          object = getPrototype(object);
        }
        return result2;
      };
      module2.exports = getSymbolsIn;
    }
  });

  // node_modules/lodash/_nativeKeysIn.js
  var require_nativeKeysIn = __commonJS({
    "node_modules/lodash/_nativeKeysIn.js"(exports2, module2) {
      function nativeKeysIn(object) {
        var result2 = [];
        if (object != null) {
          for (var key2 in Object(object)) {
            result2.push(key2);
          }
        }
        return result2;
      }
      module2.exports = nativeKeysIn;
    }
  });

  // node_modules/lodash/_baseKeysIn.js
  var require_baseKeysIn = __commonJS({
    "node_modules/lodash/_baseKeysIn.js"(exports2, module2) {
      var isObject2 = require_isObject();
      var isPrototype = require_isPrototype();
      var nativeKeysIn = require_nativeKeysIn();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function baseKeysIn(object) {
        if (!isObject2(object)) {
          return nativeKeysIn(object);
        }
        var isProto = isPrototype(object), result2 = [];
        for (var key2 in object) {
          if (!(key2 == "constructor" && (isProto || !hasOwnProperty9.call(object, key2)))) {
            result2.push(key2);
          }
        }
        return result2;
      }
      module2.exports = baseKeysIn;
    }
  });

  // node_modules/lodash/keysIn.js
  var require_keysIn = __commonJS({
    "node_modules/lodash/keysIn.js"(exports2, module2) {
      var arrayLikeKeys = require_arrayLikeKeys();
      var baseKeysIn = require_baseKeysIn();
      var isArrayLike = require_isArrayLike();
      function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
      }
      module2.exports = keysIn;
    }
  });

  // node_modules/lodash/_getAllKeysIn.js
  var require_getAllKeysIn = __commonJS({
    "node_modules/lodash/_getAllKeysIn.js"(exports2, module2) {
      var baseGetAllKeys = require_baseGetAllKeys();
      var getSymbolsIn = require_getSymbolsIn();
      var keysIn = require_keysIn();
      function getAllKeysIn(object) {
        return baseGetAllKeys(object, keysIn, getSymbolsIn);
      }
      module2.exports = getAllKeysIn;
    }
  });

  // node_modules/lodash/pickBy.js
  var require_pickBy = __commonJS({
    "node_modules/lodash/pickBy.js"(exports2, module2) {
      var arrayMap = require_arrayMap();
      var baseIteratee = require_baseIteratee();
      var basePickBy = require_basePickBy();
      var getAllKeysIn = require_getAllKeysIn();
      function pickBy(object, predicate) {
        if (object == null) {
          return {};
        }
        var props = arrayMap(getAllKeysIn(object), function(prop) {
          return [prop];
        });
        predicate = baseIteratee(predicate);
        return basePickBy(object, props, function(value2, path) {
          return predicate(value2, path[0]);
        });
      }
      module2.exports = pickBy;
    }
  });

  // node_modules/lodash/omitBy.js
  var require_omitBy = __commonJS({
    "node_modules/lodash/omitBy.js"(exports2, module2) {
      var baseIteratee = require_baseIteratee();
      var negate = require_negate();
      var pickBy = require_pickBy();
      function omitBy2(object, predicate) {
        return pickBy(object, negate(baseIteratee(predicate)));
      }
      module2.exports = omitBy2;
    }
  });

  // node_modules/lodash/isEmpty.js
  var require_isEmpty = __commonJS({
    "node_modules/lodash/isEmpty.js"(exports2, module2) {
      var baseKeys = require_baseKeys();
      var getTag = require_getTag();
      var isArguments = require_isArguments();
      var isArray2 = require_isArray();
      var isArrayLike = require_isArrayLike();
      var isBuffer = require_isBuffer();
      var isPrototype = require_isPrototype();
      var isTypedArray = require_isTypedArray();
      var mapTag = "[object Map]";
      var setTag = "[object Set]";
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function isEmpty3(value2) {
        if (value2 == null) {
          return true;
        }
        if (isArrayLike(value2) && (isArray2(value2) || typeof value2 == "string" || typeof value2.splice == "function" || isBuffer(value2) || isTypedArray(value2) || isArguments(value2))) {
          return !value2.length;
        }
        var tag = getTag(value2);
        if (tag == mapTag || tag == setTag) {
          return !value2.size;
        }
        if (isPrototype(value2)) {
          return !baseKeys(value2).length;
        }
        for (var key2 in value2) {
          if (hasOwnProperty9.call(value2, key2)) {
            return false;
          }
        }
        return true;
      }
      module2.exports = isEmpty3;
    }
  });

  // node_modules/lodash/mapValues.js
  var require_mapValues = __commonJS({
    "node_modules/lodash/mapValues.js"(exports2, module2) {
      var baseAssignValue = require_baseAssignValue();
      var baseForOwn = require_baseForOwn();
      var baseIteratee = require_baseIteratee();
      function mapValues2(object, iteratee) {
        var result2 = {};
        iteratee = baseIteratee(iteratee, 3);
        baseForOwn(object, function(value2, key2, object2) {
          baseAssignValue(result2, key2, iteratee(value2, key2, object2));
        });
        return result2;
      }
      module2.exports = mapValues2;
    }
  });

  // node_modules/lodash/_arrayEach.js
  var require_arrayEach = __commonJS({
    "node_modules/lodash/_arrayEach.js"(exports2, module2) {
      function arrayEach(array, iteratee) {
        var index2 = -1, length2 = array == null ? 0 : array.length;
        while (++index2 < length2) {
          if (iteratee(array[index2], index2, array) === false) {
            break;
          }
        }
        return array;
      }
      module2.exports = arrayEach;
    }
  });

  // node_modules/lodash/_castFunction.js
  var require_castFunction = __commonJS({
    "node_modules/lodash/_castFunction.js"(exports2, module2) {
      var identity3 = require_identity();
      function castFunction(value2) {
        return typeof value2 == "function" ? value2 : identity3;
      }
      module2.exports = castFunction;
    }
  });

  // node_modules/lodash/forEach.js
  var require_forEach = __commonJS({
    "node_modules/lodash/forEach.js"(exports2, module2) {
      var arrayEach = require_arrayEach();
      var baseEach = require_baseEach();
      var castFunction = require_castFunction();
      var isArray2 = require_isArray();
      function forEach6(collection, iteratee) {
        var func = isArray2(collection) ? arrayEach : baseEach;
        return func(collection, castFunction(iteratee));
      }
      module2.exports = forEach6;
    }
  });

  // node_modules/lodash/now.js
  var require_now = __commonJS({
    "node_modules/lodash/now.js"(exports2, module2) {
      var root2 = require_root();
      var now = function() {
        return root2.Date.now();
      };
      module2.exports = now;
    }
  });

  // node_modules/lodash/debounce.js
  var require_debounce = __commonJS({
    "node_modules/lodash/debounce.js"(exports2, module2) {
      var isObject2 = require_isObject();
      var now = require_now();
      var toNumber = require_toNumber();
      var FUNC_ERROR_TEXT = "Expected a function";
      var nativeMax = Math.max;
      var nativeMin = Math.min;
      function debounce2(func, wait, options) {
        var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
        if (typeof func != "function") {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        wait = toNumber(wait) || 0;
        if (isObject2(options)) {
          leading = !!options.leading;
          maxing = "maxWait" in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = "trailing" in options ? !!options.trailing : trailing;
        }
        function invokeFunc(time2) {
          var args = lastArgs, thisArg = lastThis;
          lastArgs = lastThis = void 0;
          lastInvokeTime = time2;
          result2 = func.apply(thisArg, args);
          return result2;
        }
        function leadingEdge(time2) {
          lastInvokeTime = time2;
          timerId = setTimeout(timerExpired, wait);
          return leading ? invokeFunc(time2) : result2;
        }
        function remainingWait(time2) {
          var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }
        function shouldInvoke(time2) {
          var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime;
          return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }
        function timerExpired() {
          var time2 = now();
          if (shouldInvoke(time2)) {
            return trailingEdge(time2);
          }
          timerId = setTimeout(timerExpired, remainingWait(time2));
        }
        function trailingEdge(time2) {
          timerId = void 0;
          if (trailing && lastArgs) {
            return invokeFunc(time2);
          }
          lastArgs = lastThis = void 0;
          return result2;
        }
        function cancel() {
          if (timerId !== void 0) {
            clearTimeout(timerId);
          }
          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = void 0;
        }
        function flush() {
          return timerId === void 0 ? result2 : trailingEdge(now());
        }
        function debounced() {
          var time2 = now(), isInvoking = shouldInvoke(time2);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time2;
          if (isInvoking) {
            if (timerId === void 0) {
              return leadingEdge(lastCallTime);
            }
            if (maxing) {
              clearTimeout(timerId);
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }
          if (timerId === void 0) {
            timerId = setTimeout(timerExpired, wait);
          }
          return result2;
        }
        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }
      module2.exports = debounce2;
    }
  });

  // node_modules/lodash/throttle.js
  var require_throttle = __commonJS({
    "node_modules/lodash/throttle.js"(exports2, module2) {
      var debounce2 = require_debounce();
      var isObject2 = require_isObject();
      var FUNC_ERROR_TEXT = "Expected a function";
      function throttle2(func, wait, options) {
        var leading = true, trailing = true;
        if (typeof func != "function") {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        if (isObject2(options)) {
          leading = "leading" in options ? !!options.leading : leading;
          trailing = "trailing" in options ? !!options.trailing : trailing;
        }
        return debounce2(func, wait, {
          "leading": leading,
          "maxWait": wait,
          "trailing": trailing
        });
      }
      module2.exports = throttle2;
    }
  });

  // packages/systems/ix2/engine/actions/IX2EngineActions.ts
  var IX2EngineActions_exports = {};
  __export(IX2EngineActions_exports, {
    actionListPlaybackChanged: () => actionListPlaybackChanged,
    animationFrameChanged: () => animationFrameChanged,
    clearRequested: () => clearRequested,
    elementStateChanged: () => elementStateChanged,
    eventListenerAdded: () => eventListenerAdded,
    eventStateChanged: () => eventStateChanged,
    instanceAdded: () => instanceAdded,
    instanceRemoved: () => instanceRemoved,
    instanceStarted: () => instanceStarted,
    mediaQueriesDefined: () => mediaQueriesDefined,
    parameterChanged: () => parameterChanged,
    playbackRequested: () => playbackRequested,
    previewRequested: () => previewRequested,
    rawDataImported: () => rawDataImported,
    sessionInitialized: () => sessionInitialized,
    sessionStarted: () => sessionStarted,
    sessionStopped: () => sessionStopped,
    stopRequested: () => stopRequested,
    testFrameRendered: () => testFrameRendered,
    viewportWidthChanged: () => viewportWidthChanged
  });
  var import_shared3, IX2_RAW_DATA_IMPORTED5, IX2_SESSION_INITIALIZED3, IX2_SESSION_STARTED3, IX2_SESSION_STOPPED6, IX2_PREVIEW_REQUESTED3, IX2_PLAYBACK_REQUESTED3, IX2_STOP_REQUESTED3, IX2_CLEAR_REQUESTED3, IX2_EVENT_LISTENER_ADDED3, IX2_TEST_FRAME_RENDERED3, IX2_EVENT_STATE_CHANGED3, IX2_ANIMATION_FRAME_CHANGED4, IX2_PARAMETER_CHANGED3, IX2_INSTANCE_ADDED4, IX2_INSTANCE_STARTED3, IX2_INSTANCE_REMOVED3, IX2_ELEMENT_STATE_CHANGED3, IX2_ACTION_LIST_PLAYBACK_CHANGED3, IX2_VIEWPORT_WIDTH_CHANGED3, IX2_MEDIA_QUERIES_DEFINED3, reifyState2, rawDataImported, sessionInitialized, sessionStarted, sessionStopped, previewRequested, playbackRequested, stopRequested, clearRequested, eventListenerAdded, testFrameRendered, eventStateChanged, animationFrameChanged, parameterChanged, instanceAdded, instanceStarted, instanceRemoved, elementStateChanged, actionListPlaybackChanged, viewportWidthChanged, mediaQueriesDefined;
  var init_IX2EngineActions = __esm({
    "packages/systems/ix2/engine/actions/IX2EngineActions.ts"() {
      "use strict";
      init_shared_constants();
      import_shared3 = __toESM(require_shared2());
      ({
        IX2_RAW_DATA_IMPORTED: IX2_RAW_DATA_IMPORTED5,
        IX2_SESSION_INITIALIZED: IX2_SESSION_INITIALIZED3,
        IX2_SESSION_STARTED: IX2_SESSION_STARTED3,
        IX2_SESSION_STOPPED: IX2_SESSION_STOPPED6,
        IX2_PREVIEW_REQUESTED: IX2_PREVIEW_REQUESTED3,
        IX2_PLAYBACK_REQUESTED: IX2_PLAYBACK_REQUESTED3,
        IX2_STOP_REQUESTED: IX2_STOP_REQUESTED3,
        IX2_CLEAR_REQUESTED: IX2_CLEAR_REQUESTED3,
        IX2_EVENT_LISTENER_ADDED: IX2_EVENT_LISTENER_ADDED3,
        IX2_TEST_FRAME_RENDERED: IX2_TEST_FRAME_RENDERED3,
        IX2_EVENT_STATE_CHANGED: IX2_EVENT_STATE_CHANGED3,
        IX2_ANIMATION_FRAME_CHANGED: IX2_ANIMATION_FRAME_CHANGED4,
        IX2_PARAMETER_CHANGED: IX2_PARAMETER_CHANGED3,
        IX2_INSTANCE_ADDED: IX2_INSTANCE_ADDED4,
        IX2_INSTANCE_STARTED: IX2_INSTANCE_STARTED3,
        IX2_INSTANCE_REMOVED: IX2_INSTANCE_REMOVED3,
        IX2_ELEMENT_STATE_CHANGED: IX2_ELEMENT_STATE_CHANGED3,
        IX2_ACTION_LIST_PLAYBACK_CHANGED: IX2_ACTION_LIST_PLAYBACK_CHANGED3,
        IX2_VIEWPORT_WIDTH_CHANGED: IX2_VIEWPORT_WIDTH_CHANGED3,
        IX2_MEDIA_QUERIES_DEFINED: IX2_MEDIA_QUERIES_DEFINED3
      } = IX2EngineActionTypes_exports);
      ({ reifyState: reifyState2 } = import_shared3.IX2VanillaUtils);
      rawDataImported = (rawData) => ({
        type: IX2_RAW_DATA_IMPORTED5,
        payload: {
          ...reifyState2(rawData)
        }
      });
      sessionInitialized = ({
        hasBoundaryNodes,
        reducedMotion
      }) => ({
        type: IX2_SESSION_INITIALIZED3,
        payload: {
          hasBoundaryNodes,
          reducedMotion
        }
      });
      sessionStarted = () => ({
        type: IX2_SESSION_STARTED3
      });
      sessionStopped = () => ({
        type: IX2_SESSION_STOPPED6
      });
      previewRequested = ({
        rawData,
        defer
      }) => ({
        type: IX2_PREVIEW_REQUESTED3,
        payload: {
          defer,
          rawData
        }
      });
      playbackRequested = ({
        actionTypeId = ActionTypeConsts.GENERAL_START_ACTION,
        actionListId,
        actionItemId,
        eventId,
        allowEvents,
        immediate,
        testManual,
        verbose,
        rawData
      }) => ({
        type: IX2_PLAYBACK_REQUESTED3,
        payload: {
          actionTypeId,
          actionListId,
          actionItemId,
          testManual,
          eventId,
          allowEvents,
          immediate,
          verbose,
          rawData
        }
      });
      stopRequested = (actionListId) => ({
        type: IX2_STOP_REQUESTED3,
        payload: {
          actionListId
        }
      });
      clearRequested = () => ({
        type: IX2_CLEAR_REQUESTED3
      });
      eventListenerAdded = (target, listenerParams) => ({
        type: IX2_EVENT_LISTENER_ADDED3,
        payload: {
          target,
          listenerParams
        }
      });
      testFrameRendered = (step = 1) => ({
        type: IX2_TEST_FRAME_RENDERED3,
        payload: {
          step
        }
      });
      eventStateChanged = (stateKey, newState) => ({
        type: IX2_EVENT_STATE_CHANGED3,
        payload: {
          stateKey,
          newState
        }
      });
      animationFrameChanged = (now, parameters) => ({
        type: IX2_ANIMATION_FRAME_CHANGED4,
        payload: {
          now,
          parameters
        }
      });
      parameterChanged = (key2, value2) => ({
        type: IX2_PARAMETER_CHANGED3,
        payload: {
          key: key2,
          value: value2
        }
      });
      instanceAdded = (options) => ({
        type: IX2_INSTANCE_ADDED4,
        payload: {
          ...options
        }
      });
      instanceStarted = (instanceId, time2) => ({
        type: IX2_INSTANCE_STARTED3,
        payload: {
          instanceId,
          time: time2
        }
      });
      instanceRemoved = (instanceId) => ({
        type: IX2_INSTANCE_REMOVED3,
        payload: {
          instanceId
        }
      });
      elementStateChanged = (elementId, actionTypeId, current, actionItem) => ({
        type: IX2_ELEMENT_STATE_CHANGED3,
        payload: {
          elementId,
          actionTypeId,
          current,
          actionItem
        }
      });
      actionListPlaybackChanged = ({
        actionListId,
        isPlaying
      }) => ({
        type: IX2_ACTION_LIST_PLAYBACK_CHANGED3,
        payload: {
          actionListId,
          isPlaying
        }
      });
      viewportWidthChanged = ({
        width: width2,
        mediaQueries
      }) => ({
        type: IX2_VIEWPORT_WIDTH_CHANGED3,
        payload: {
          width: width2,
          mediaQueries
        }
      });
      mediaQueriesDefined = () => ({
        type: IX2_MEDIA_QUERIES_DEFINED3
      });
    }
  });

  // packages/systems/ix2/engine/logic/IX2BrowserApi.ts
  var IX2BrowserApi_exports = {};
  __export(IX2BrowserApi_exports, {
    elementContains: () => elementContains,
    getChildElements: () => getChildElements,
    getClosestElement: () => getClosestElement,
    getProperty: () => getProperty,
    getQuerySelector: () => getQuerySelector,
    getRefType: () => getRefType,
    getSiblingElements: () => getSiblingElements,
    getStyle: () => getStyle,
    getValidDocument: () => getValidDocument,
    isSiblingNode: () => isSiblingNode,
    matchSelector: () => matchSelector,
    queryDocument: () => queryDocument,
    setStyle: () => setStyle
  });
  function setStyle(element, prop, value2) {
    element.style[prop] = value2;
  }
  function getStyle(element, prop) {
    if (prop.startsWith("--")) {
      return window.getComputedStyle(document.documentElement).getPropertyValue(prop);
    }
    return element.style[prop];
  }
  function getProperty(element, prop) {
    return element[prop];
  }
  function matchSelector(selector) {
    return (element) => element[ELEMENT_MATCHES2](selector);
  }
  function getQuerySelector({
    id,
    selector
  }) {
    if (id) {
      let nodeId = id;
      if (id.indexOf(IX2_ID_DELIMITER2) !== -1) {
        const pair = id.split(IX2_ID_DELIMITER2);
        const pageId = pair[0];
        nodeId = pair[1];
        if (pageId !== document.documentElement.getAttribute(WF_PAGE2)) {
          return null;
        }
      }
      return `[data-w-id="${nodeId}"], [data-w-id^="${nodeId}_instance"]`;
    }
    return selector;
  }
  function getValidDocument(pageId) {
    if (pageId == null || pageId === document.documentElement.getAttribute(WF_PAGE2)) {
      return document;
    }
    return null;
  }
  function queryDocument(baseSelector, descendantSelector) {
    return Array.prototype.slice.call(
      document.querySelectorAll(
        descendantSelector ? baseSelector + " " + descendantSelector : baseSelector
      )
    );
  }
  function elementContains(parent2, child) {
    return parent2.contains(child);
  }
  function isSiblingNode(a, b) {
    return a !== b && a.parentNode === b.parentNode;
  }
  function getChildElements(sourceElements) {
    const childElements = [];
    for (let i = 0, { length: length2 } = sourceElements || []; i < length2; i++) {
      const { children } = sourceElements[i];
      const { length: childCount } = children;
      if (!childCount) {
        continue;
      }
      for (let j = 0; j < childCount; j++) {
        childElements.push(children[j]);
      }
    }
    return childElements;
  }
  function getSiblingElements(sourceElements = []) {
    const elements = [];
    const parentCache = [];
    for (let i = 0, { length: length2 } = sourceElements; i < length2; i++) {
      const { parentNode } = sourceElements[i];
      if (!parentNode || !parentNode.children || !parentNode.children.length) {
        continue;
      }
      if (parentCache.indexOf(parentNode) !== -1) {
        continue;
      }
      parentCache.push(parentNode);
      let el = parentNode.firstElementChild;
      while (el != null) {
        if (sourceElements.indexOf(el) === -1) {
          elements.push(el);
        }
        el = el.nextElementSibling;
      }
    }
    return elements;
  }
  function getRefType(ref) {
    if (ref != null && typeof ref == "object") {
      return ref instanceof Element ? HTML_ELEMENT3 : PLAIN_OBJECT3;
    }
    return null;
  }
  var import_shared4, ELEMENT_MATCHES2, IX2_ID_DELIMITER2, HTML_ELEMENT3, PLAIN_OBJECT3, WF_PAGE2, getClosestElement;
  var init_IX2BrowserApi = __esm({
    "packages/systems/ix2/engine/logic/IX2BrowserApi.ts"() {
      "use strict";
      import_shared4 = __toESM(require_shared2());
      init_shared_constants();
      ({ ELEMENT_MATCHES: ELEMENT_MATCHES2 } = import_shared4.IX2BrowserSupport);
      ({ IX2_ID_DELIMITER: IX2_ID_DELIMITER2, HTML_ELEMENT: HTML_ELEMENT3, PLAIN_OBJECT: PLAIN_OBJECT3, WF_PAGE: WF_PAGE2 } = IX2EngineConstants_exports);
      getClosestElement = Element.prototype.closest ? (element, selector) => {
        if (!document.documentElement.contains(element)) {
          return null;
        }
        return element.closest(selector);
      } : (element, selector) => {
        if (!document.documentElement.contains(element)) {
          return null;
        }
        let el = element;
        do {
          if (el[ELEMENT_MATCHES2] && el[ELEMENT_MATCHES2](selector)) {
            return el;
          }
          el = el.parentNode;
        } while (el != null);
        return null;
      };
    }
  });

  // node_modules/lodash/_baseCreate.js
  var require_baseCreate = __commonJS({
    "node_modules/lodash/_baseCreate.js"(exports2, module2) {
      var isObject2 = require_isObject();
      var objectCreate = Object.create;
      var baseCreate = function() {
        function object() {
        }
        return function(proto) {
          if (!isObject2(proto)) {
            return {};
          }
          if (objectCreate) {
            return objectCreate(proto);
          }
          object.prototype = proto;
          var result2 = new object();
          object.prototype = void 0;
          return result2;
        };
      }();
      module2.exports = baseCreate;
    }
  });

  // node_modules/lodash/_baseLodash.js
  var require_baseLodash = __commonJS({
    "node_modules/lodash/_baseLodash.js"(exports2, module2) {
      function baseLodash() {
      }
      module2.exports = baseLodash;
    }
  });

  // node_modules/lodash/_LodashWrapper.js
  var require_LodashWrapper = __commonJS({
    "node_modules/lodash/_LodashWrapper.js"(exports2, module2) {
      var baseCreate = require_baseCreate();
      var baseLodash = require_baseLodash();
      function LodashWrapper(value2, chainAll) {
        this.__wrapped__ = value2;
        this.__actions__ = [];
        this.__chain__ = !!chainAll;
        this.__index__ = 0;
        this.__values__ = void 0;
      }
      LodashWrapper.prototype = baseCreate(baseLodash.prototype);
      LodashWrapper.prototype.constructor = LodashWrapper;
      module2.exports = LodashWrapper;
    }
  });

  // node_modules/lodash/_isFlattenable.js
  var require_isFlattenable = __commonJS({
    "node_modules/lodash/_isFlattenable.js"(exports2, module2) {
      var Symbol2 = require_Symbol();
      var isArguments = require_isArguments();
      var isArray2 = require_isArray();
      var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
      function isFlattenable(value2) {
        return isArray2(value2) || isArguments(value2) || !!(spreadableSymbol && value2 && value2[spreadableSymbol]);
      }
      module2.exports = isFlattenable;
    }
  });

  // node_modules/lodash/_baseFlatten.js
  var require_baseFlatten = __commonJS({
    "node_modules/lodash/_baseFlatten.js"(exports2, module2) {
      var arrayPush = require_arrayPush();
      var isFlattenable = require_isFlattenable();
      function baseFlatten(array, depth, predicate, isStrict, result2) {
        var index2 = -1, length2 = array.length;
        predicate || (predicate = isFlattenable);
        result2 || (result2 = []);
        while (++index2 < length2) {
          var value2 = array[index2];
          if (depth > 0 && predicate(value2)) {
            if (depth > 1) {
              baseFlatten(value2, depth - 1, predicate, isStrict, result2);
            } else {
              arrayPush(result2, value2);
            }
          } else if (!isStrict) {
            result2[result2.length] = value2;
          }
        }
        return result2;
      }
      module2.exports = baseFlatten;
    }
  });

  // node_modules/lodash/flatten.js
  var require_flatten = __commonJS({
    "node_modules/lodash/flatten.js"(exports2, module2) {
      var baseFlatten = require_baseFlatten();
      function flatten(array) {
        var length2 = array == null ? 0 : array.length;
        return length2 ? baseFlatten(array, 1) : [];
      }
      module2.exports = flatten;
    }
  });

  // node_modules/lodash/_apply.js
  var require_apply = __commonJS({
    "node_modules/lodash/_apply.js"(exports2, module2) {
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      module2.exports = apply;
    }
  });

  // node_modules/lodash/_overRest.js
  var require_overRest = __commonJS({
    "node_modules/lodash/_overRest.js"(exports2, module2) {
      var apply = require_apply();
      var nativeMax = Math.max;
      function overRest(func, start, transform3) {
        start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
        return function() {
          var args = arguments, index2 = -1, length2 = nativeMax(args.length - start, 0), array = Array(length2);
          while (++index2 < length2) {
            array[index2] = args[start + index2];
          }
          index2 = -1;
          var otherArgs = Array(start + 1);
          while (++index2 < start) {
            otherArgs[index2] = args[index2];
          }
          otherArgs[start] = transform3(array);
          return apply(func, this, otherArgs);
        };
      }
      module2.exports = overRest;
    }
  });

  // node_modules/lodash/constant.js
  var require_constant = __commonJS({
    "node_modules/lodash/constant.js"(exports2, module2) {
      function constant2(value2) {
        return function() {
          return value2;
        };
      }
      module2.exports = constant2;
    }
  });

  // node_modules/lodash/_baseSetToString.js
  var require_baseSetToString = __commonJS({
    "node_modules/lodash/_baseSetToString.js"(exports2, module2) {
      var constant2 = require_constant();
      var defineProperty = require_defineProperty();
      var identity3 = require_identity();
      var baseSetToString = !defineProperty ? identity3 : function(func, string) {
        return defineProperty(func, "toString", {
          "configurable": true,
          "enumerable": false,
          "value": constant2(string),
          "writable": true
        });
      };
      module2.exports = baseSetToString;
    }
  });

  // node_modules/lodash/_shortOut.js
  var require_shortOut = __commonJS({
    "node_modules/lodash/_shortOut.js"(exports2, module2) {
      var HOT_COUNT = 800;
      var HOT_SPAN = 16;
      var nativeNow = Date.now;
      function shortOut(func) {
        var count = 0, lastCalled = 0;
        return function() {
          var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
          lastCalled = stamp;
          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }
          return func.apply(void 0, arguments);
        };
      }
      module2.exports = shortOut;
    }
  });

  // node_modules/lodash/_setToString.js
  var require_setToString = __commonJS({
    "node_modules/lodash/_setToString.js"(exports2, module2) {
      var baseSetToString = require_baseSetToString();
      var shortOut = require_shortOut();
      var setToString = shortOut(baseSetToString);
      module2.exports = setToString;
    }
  });

  // node_modules/lodash/_flatRest.js
  var require_flatRest = __commonJS({
    "node_modules/lodash/_flatRest.js"(exports2, module2) {
      var flatten = require_flatten();
      var overRest = require_overRest();
      var setToString = require_setToString();
      function flatRest(func) {
        return setToString(overRest(func, void 0, flatten), func + "");
      }
      module2.exports = flatRest;
    }
  });

  // node_modules/lodash/_metaMap.js
  var require_metaMap = __commonJS({
    "node_modules/lodash/_metaMap.js"(exports2, module2) {
      var WeakMap2 = require_WeakMap();
      var metaMap = WeakMap2 && new WeakMap2();
      module2.exports = metaMap;
    }
  });

  // node_modules/lodash/noop.js
  var require_noop = __commonJS({
    "node_modules/lodash/noop.js"(exports2, module2) {
      function noop2() {
      }
      module2.exports = noop2;
    }
  });

  // node_modules/lodash/_getData.js
  var require_getData = __commonJS({
    "node_modules/lodash/_getData.js"(exports2, module2) {
      var metaMap = require_metaMap();
      var noop2 = require_noop();
      var getData = !metaMap ? noop2 : function(func) {
        return metaMap.get(func);
      };
      module2.exports = getData;
    }
  });

  // node_modules/lodash/_realNames.js
  var require_realNames = __commonJS({
    "node_modules/lodash/_realNames.js"(exports2, module2) {
      var realNames = {};
      module2.exports = realNames;
    }
  });

  // node_modules/lodash/_getFuncName.js
  var require_getFuncName = __commonJS({
    "node_modules/lodash/_getFuncName.js"(exports2, module2) {
      var realNames = require_realNames();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function getFuncName(func) {
        var result2 = func.name + "", array = realNames[result2], length2 = hasOwnProperty9.call(realNames, result2) ? array.length : 0;
        while (length2--) {
          var data2 = array[length2], otherFunc = data2.func;
          if (otherFunc == null || otherFunc == func) {
            return data2.name;
          }
        }
        return result2;
      }
      module2.exports = getFuncName;
    }
  });

  // node_modules/lodash/_LazyWrapper.js
  var require_LazyWrapper = __commonJS({
    "node_modules/lodash/_LazyWrapper.js"(exports2, module2) {
      var baseCreate = require_baseCreate();
      var baseLodash = require_baseLodash();
      var MAX_ARRAY_LENGTH2 = 4294967295;
      function LazyWrapper(value2) {
        this.__wrapped__ = value2;
        this.__actions__ = [];
        this.__dir__ = 1;
        this.__filtered__ = false;
        this.__iteratees__ = [];
        this.__takeCount__ = MAX_ARRAY_LENGTH2;
        this.__views__ = [];
      }
      LazyWrapper.prototype = baseCreate(baseLodash.prototype);
      LazyWrapper.prototype.constructor = LazyWrapper;
      module2.exports = LazyWrapper;
    }
  });

  // node_modules/lodash/_copyArray.js
  var require_copyArray = __commonJS({
    "node_modules/lodash/_copyArray.js"(exports2, module2) {
      function copyArray(source, array) {
        var index2 = -1, length2 = source.length;
        array || (array = Array(length2));
        while (++index2 < length2) {
          array[index2] = source[index2];
        }
        return array;
      }
      module2.exports = copyArray;
    }
  });

  // node_modules/lodash/_wrapperClone.js
  var require_wrapperClone = __commonJS({
    "node_modules/lodash/_wrapperClone.js"(exports2, module2) {
      var LazyWrapper = require_LazyWrapper();
      var LodashWrapper = require_LodashWrapper();
      var copyArray = require_copyArray();
      function wrapperClone(wrapper) {
        if (wrapper instanceof LazyWrapper) {
          return wrapper.clone();
        }
        var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
        result2.__actions__ = copyArray(wrapper.__actions__);
        result2.__index__ = wrapper.__index__;
        result2.__values__ = wrapper.__values__;
        return result2;
      }
      module2.exports = wrapperClone;
    }
  });

  // node_modules/lodash/wrapperLodash.js
  var require_wrapperLodash = __commonJS({
    "node_modules/lodash/wrapperLodash.js"(exports2, module2) {
      var LazyWrapper = require_LazyWrapper();
      var LodashWrapper = require_LodashWrapper();
      var baseLodash = require_baseLodash();
      var isArray2 = require_isArray();
      var isObjectLike2 = require_isObjectLike();
      var wrapperClone = require_wrapperClone();
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function lodash(value2) {
        if (isObjectLike2(value2) && !isArray2(value2) && !(value2 instanceof LazyWrapper)) {
          if (value2 instanceof LodashWrapper) {
            return value2;
          }
          if (hasOwnProperty9.call(value2, "__wrapped__")) {
            return wrapperClone(value2);
          }
        }
        return new LodashWrapper(value2);
      }
      lodash.prototype = baseLodash.prototype;
      lodash.prototype.constructor = lodash;
      module2.exports = lodash;
    }
  });

  // node_modules/lodash/_isLaziable.js
  var require_isLaziable = __commonJS({
    "node_modules/lodash/_isLaziable.js"(exports2, module2) {
      var LazyWrapper = require_LazyWrapper();
      var getData = require_getData();
      var getFuncName = require_getFuncName();
      var lodash = require_wrapperLodash();
      function isLaziable(func) {
        var funcName = getFuncName(func), other = lodash[funcName];
        if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
          return false;
        }
        if (func === other) {
          return true;
        }
        var data2 = getData(other);
        return !!data2 && func === data2[0];
      }
      module2.exports = isLaziable;
    }
  });

  // node_modules/lodash/_createFlow.js
  var require_createFlow = __commonJS({
    "node_modules/lodash/_createFlow.js"(exports2, module2) {
      var LodashWrapper = require_LodashWrapper();
      var flatRest = require_flatRest();
      var getData = require_getData();
      var getFuncName = require_getFuncName();
      var isArray2 = require_isArray();
      var isLaziable = require_isLaziable();
      var FUNC_ERROR_TEXT = "Expected a function";
      var WRAP_CURRY_FLAG = 8;
      var WRAP_PARTIAL_FLAG = 32;
      var WRAP_ARY_FLAG = 128;
      var WRAP_REARG_FLAG = 256;
      function createFlow(fromRight) {
        return flatRest(function(funcs) {
          var length2 = funcs.length, index2 = length2, prereq = LodashWrapper.prototype.thru;
          if (fromRight) {
            funcs.reverse();
          }
          while (index2--) {
            var func = funcs[index2];
            if (typeof func != "function") {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            if (prereq && !wrapper && getFuncName(func) == "wrapper") {
              var wrapper = new LodashWrapper([], true);
            }
          }
          index2 = wrapper ? index2 : length2;
          while (++index2 < length2) {
            func = funcs[index2];
            var funcName = getFuncName(func), data2 = funcName == "wrapper" ? getData(func) : void 0;
            if (data2 && isLaziable(data2[0]) && data2[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data2[4].length && data2[9] == 1) {
              wrapper = wrapper[getFuncName(data2[0])].apply(wrapper, data2[3]);
            } else {
              wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
            }
          }
          return function() {
            var args = arguments, value2 = args[0];
            if (wrapper && args.length == 1 && isArray2(value2)) {
              return wrapper.plant(value2).value();
            }
            var index3 = 0, result2 = length2 ? funcs[index3].apply(this, args) : value2;
            while (++index3 < length2) {
              result2 = funcs[index3].call(this, result2);
            }
            return result2;
          };
        });
      }
      module2.exports = createFlow;
    }
  });

  // node_modules/lodash/flow.js
  var require_flow = __commonJS({
    "node_modules/lodash/flow.js"(exports2, module2) {
      var createFlow = require_createFlow();
      var flow2 = createFlow();
      module2.exports = flow2;
    }
  });

  // node_modules/lodash/_baseClamp.js
  var require_baseClamp = __commonJS({
    "node_modules/lodash/_baseClamp.js"(exports2, module2) {
      function baseClamp(number, lower, upper) {
        if (number === number) {
          if (upper !== void 0) {
            number = number <= upper ? number : upper;
          }
          if (lower !== void 0) {
            number = number >= lower ? number : lower;
          }
        }
        return number;
      }
      module2.exports = baseClamp;
    }
  });

  // node_modules/lodash/clamp.js
  var require_clamp = __commonJS({
    "node_modules/lodash/clamp.js"(exports2, module2) {
      var baseClamp = require_baseClamp();
      var toNumber = require_toNumber();
      function clamp3(number, lower, upper) {
        if (upper === void 0) {
          upper = lower;
          lower = void 0;
        }
        if (upper !== void 0) {
          upper = toNumber(upper);
          upper = upper === upper ? upper : 0;
        }
        if (lower !== void 0) {
          lower = toNumber(lower);
          lower = lower === lower ? lower : 0;
        }
        return baseClamp(toNumber(number), lower, upper);
      }
      module2.exports = clamp3;
    }
  });

  // packages/systems/ix2/engine/logic/IX2VanillaEvents.ts
  var import_flow, import_get, import_clamp, import_shared5, MOUSE_CLICK, MOUSE_SECOND_CLICK, MOUSE_DOWN, MOUSE_UP, MOUSE_OVER, MOUSE_OUT, DROPDOWN_CLOSE, DROPDOWN_OPEN, SLIDER_ACTIVE, SLIDER_INACTIVE, TAB_ACTIVE, TAB_INACTIVE, NAVBAR_CLOSE, NAVBAR_OPEN, MOUSE_MOVE, PAGE_SCROLL_DOWN, SCROLL_INTO_VIEW, SCROLL_OUT_OF_VIEW, PAGE_SCROLL_UP, SCROLLING_IN_VIEW, PAGE_FINISH, ECOMMERCE_CART_CLOSE, ECOMMERCE_CART_OPEN, PAGE_START, PAGE_SCROLL, COMPONENT_ACTIVE, COMPONENT_INACTIVE, COLON_DELIMITER3, getNamespacedParameterId2, composableFilter, isElement, containsElement, isOrContainsElement, getAutoStopEvent, hasAutoStopEvent, actionGroupCreator, withFilter, baseActionGroupOptions, baseActivityActionGroupOptions, SCROLL_EVENT_TYPES, MOUSE_OVER_OUT_TYPES, baseScrollActionGroupOptions, AUTO_STOP_DISABLED_EVENTS, getDocumentState, areBoxesIntersecting, isElementHovered, isElementVisible, whenComponentActiveChange, whenElementHoverChange, whenElementVisibiltyChange, whenScrollDirectionChange, pointIntersects, whenPageLoadFinish, whenPageLoadStart, whenClickCountChange, getComponentActiveOptions, getComponentInactiveOptions, scrollIntoOutOfViewOptions, MOUSE_OUT_ROUND_THRESHOLD, IX2VanillaEvents_default;
  var init_IX2VanillaEvents = __esm({
    "packages/systems/ix2/engine/logic/IX2VanillaEvents.ts"() {
      "use strict";
      import_flow = __toESM(require_flow());
      import_get = __toESM(require_get());
      import_clamp = __toESM(require_clamp());
      init_shared_constants();
      init_IX2VanillaEngine();
      init_IX2EngineActions();
      import_shared5 = __toESM(require_shared2());
      ({
        MOUSE_CLICK,
        MOUSE_SECOND_CLICK,
        MOUSE_DOWN,
        MOUSE_UP,
        MOUSE_OVER,
        MOUSE_OUT,
        DROPDOWN_CLOSE,
        DROPDOWN_OPEN,
        SLIDER_ACTIVE,
        SLIDER_INACTIVE,
        TAB_ACTIVE,
        TAB_INACTIVE,
        NAVBAR_CLOSE,
        NAVBAR_OPEN,
        MOUSE_MOVE,
        PAGE_SCROLL_DOWN,
        SCROLL_INTO_VIEW,
        SCROLL_OUT_OF_VIEW,
        PAGE_SCROLL_UP,
        SCROLLING_IN_VIEW,
        PAGE_FINISH,
        ECOMMERCE_CART_CLOSE,
        ECOMMERCE_CART_OPEN,
        PAGE_START,
        PAGE_SCROLL
      } = EventTypeConsts);
      COMPONENT_ACTIVE = "COMPONENT_ACTIVE";
      COMPONENT_INACTIVE = "COMPONENT_INACTIVE";
      ({ COLON_DELIMITER: COLON_DELIMITER3 } = IX2EngineConstants_exports);
      ({ getNamespacedParameterId: getNamespacedParameterId2 } = import_shared5.IX2VanillaUtils);
      composableFilter = (predicate) => (options) => {
        if (typeof options === "object" && predicate(options)) {
          return true;
        }
        return options;
      };
      isElement = composableFilter(({ element, nativeEvent }) => {
        return element === nativeEvent.target;
      });
      containsElement = composableFilter(({ element, nativeEvent }) => {
        return element.contains(nativeEvent.target);
      });
      isOrContainsElement = (0, import_flow.default)([isElement, containsElement]);
      getAutoStopEvent = (store, autoStopEventId) => {
        if (autoStopEventId) {
          const { ixData: ixData2 } = store.getState();
          const { events } = ixData2;
          const eventToStop = events[autoStopEventId];
          if (eventToStop && !AUTO_STOP_DISABLED_EVENTS[eventToStop.eventTypeId]) {
            return eventToStop;
          }
        }
        return null;
      };
      hasAutoStopEvent = ({ store, event }) => {
        const { action: eventAction } = event;
        const { autoStopEventId } = eventAction.config;
        return Boolean(getAutoStopEvent(store, autoStopEventId));
      };
      actionGroupCreator = ({ store, event, element, eventStateKey }, state) => {
        const { action: eventAction, id: eventId } = event;
        const { actionListId, autoStopEventId } = eventAction.config;
        const eventToStop = getAutoStopEvent(store, autoStopEventId);
        if (eventToStop) {
          stopActionGroup({
            store,
            eventId: autoStopEventId,
            eventTarget: element,
            eventStateKey: autoStopEventId + COLON_DELIMITER3 + eventStateKey.split(COLON_DELIMITER3)[1],
            actionListId: (0, import_get.default)(eventToStop, "action.config.actionListId")
          });
        }
        stopActionGroup({
          store,
          eventId,
          eventTarget: element,
          eventStateKey,
          actionListId
        });
        startActionGroup({
          store,
          eventId,
          eventTarget: element,
          eventStateKey,
          actionListId
        });
        return state;
      };
      withFilter = (filter, handler) => (options, state) => filter(options, state) === true ? handler(options, state) : state;
      baseActionGroupOptions = {
        handler: withFilter(isOrContainsElement, actionGroupCreator)
      };
      baseActivityActionGroupOptions = {
        ...baseActionGroupOptions,
        types: [COMPONENT_ACTIVE, COMPONENT_INACTIVE].join(" ")
      };
      SCROLL_EVENT_TYPES = [
        { target: window, types: "resize orientationchange", throttle: true },
        {
          target: document,
          types: "scroll wheel readystatechange IX2_PAGE_UPDATE",
          throttle: true
        }
      ];
      MOUSE_OVER_OUT_TYPES = "mouseover mouseout";
      baseScrollActionGroupOptions = {
        types: SCROLL_EVENT_TYPES
      };
      AUTO_STOP_DISABLED_EVENTS = {
        PAGE_START,
        PAGE_FINISH
      };
      getDocumentState = (() => {
        const supportOffset = window.pageXOffset !== void 0;
        const isCSS1Compat = document.compatMode === "CSS1Compat";
        const rootElement = isCSS1Compat ? document.documentElement : document.body;
        return () => ({
          scrollLeft: supportOffset ? window.pageXOffset : rootElement.scrollLeft,
          scrollTop: supportOffset ? window.pageYOffset : rootElement.scrollTop,
          // required to remove elasticity in Safari scrolling.
          stiffScrollTop: (0, import_clamp.default)(
            supportOffset ? window.pageYOffset : rootElement.scrollTop,
            0,
            rootElement.scrollHeight - window.innerHeight
          ),
          scrollWidth: rootElement.scrollWidth,
          scrollHeight: rootElement.scrollHeight,
          clientWidth: rootElement.clientWidth,
          clientHeight: rootElement.clientHeight,
          innerWidth: window.innerWidth,
          innerHeight: window.innerHeight
        });
      })();
      areBoxesIntersecting = (a, b) => !(a.left > b.right || a.right < b.left || a.top > b.bottom || a.bottom < b.top);
      isElementHovered = ({ element, nativeEvent }) => {
        const { type, target, relatedTarget } = nativeEvent;
        const containsTarget = element.contains(target);
        if (type === "mouseover" && containsTarget) {
          return true;
        }
        const containsRelated = element.contains(relatedTarget);
        if (type === "mouseout" && containsTarget && containsRelated) {
          return true;
        }
        return false;
      };
      isElementVisible = (options) => {
        const {
          element,
          event: { config }
        } = options;
        const { clientWidth, clientHeight } = getDocumentState();
        const scrollOffsetValue = config.scrollOffsetValue;
        const scrollOffsetUnit = config.scrollOffsetUnit;
        const isPX = scrollOffsetUnit === "PX";
        const offsetPadding = isPX ? scrollOffsetValue : clientHeight * (scrollOffsetValue || 0) / 100;
        return areBoxesIntersecting(element.getBoundingClientRect(), {
          left: 0,
          top: offsetPadding,
          right: clientWidth,
          bottom: clientHeight - offsetPadding
        });
      };
      whenComponentActiveChange = // @ts-expect-error - TS7006 - Parameter 'handler' implicitly has an 'any' type.
      (handler) => (options, oldState) => {
        const { type } = options.nativeEvent;
        const isActive = [COMPONENT_ACTIVE, COMPONENT_INACTIVE].indexOf(type) !== -1 ? type === COMPONENT_ACTIVE : oldState.isActive;
        const newState = {
          ...oldState,
          isActive
        };
        if (!oldState || newState.isActive !== oldState.isActive) {
          return handler(options, newState) || newState;
        }
        return newState;
      };
      whenElementHoverChange = (handler) => (options, oldState) => {
        const newState = {
          elementHovered: isElementHovered(options)
        };
        if (oldState ? newState.elementHovered !== oldState.elementHovered : newState.elementHovered) {
          return handler(options, newState) || newState;
        }
        return newState;
      };
      whenElementVisibiltyChange = (handler) => (options, oldState) => {
        const newState = {
          ...oldState,
          elementVisible: isElementVisible(options)
        };
        if (oldState ? newState.elementVisible !== oldState.elementVisible : newState.elementVisible) {
          return handler(options, newState) || newState;
        }
        return newState;
      };
      whenScrollDirectionChange = // @ts-expect-error - TS7006 - Parameter 'handler' implicitly has an 'any' type.
      (handler) => (options, oldState = {}) => {
        const {
          stiffScrollTop: scrollTop,
          scrollHeight,
          innerHeight
        } = getDocumentState();
        const {
          event: { config, eventTypeId }
        } = options;
        const { scrollOffsetValue, scrollOffsetUnit } = config;
        const isPX = scrollOffsetUnit === "PX";
        const scrollHeightBounds = scrollHeight - innerHeight;
        const percentTop = Number((scrollTop / scrollHeightBounds).toFixed(2));
        if (oldState && oldState.percentTop === percentTop) {
          return oldState;
        }
        const scrollTopPadding = (isPX ? scrollOffsetValue : innerHeight * (scrollOffsetValue || 0) / 100) / scrollHeightBounds;
        let scrollingDown;
        let scrollDirectionChanged;
        let anchorTop = 0;
        if (oldState) {
          scrollingDown = percentTop > oldState.percentTop;
          scrollDirectionChanged = oldState.scrollingDown !== scrollingDown;
          anchorTop = scrollDirectionChanged ? percentTop : oldState.anchorTop;
        }
        const inBounds = eventTypeId === PAGE_SCROLL_DOWN ? percentTop >= anchorTop + scrollTopPadding : percentTop <= anchorTop - scrollTopPadding;
        const newState = {
          ...oldState,
          percentTop,
          inBounds,
          anchorTop,
          scrollingDown
        };
        if (oldState && inBounds && // @ts-expect-error - TS2339 - Property 'inBounds' does not exist on type '{}'.
        (scrollDirectionChanged || newState.inBounds !== oldState.inBounds)) {
          return handler(options, newState) || newState;
        }
        return newState;
      };
      pointIntersects = (point, rect) => point.left > rect.left && point.left < rect.right && point.top > rect.top && point.top < rect.bottom;
      whenPageLoadFinish = (handler) => (options, oldState) => {
        const newState = {
          finished: document.readyState === "complete"
        };
        if (newState.finished && !(oldState && oldState.finshed)) {
          handler(options);
        }
        return newState;
      };
      whenPageLoadStart = (handler) => (options, oldState) => {
        const newState = {
          started: true
        };
        if (!oldState) {
          handler(options);
        }
        return newState;
      };
      whenClickCountChange = (handler) => (options, oldState = { clickCount: 0 }) => {
        const newState = {
          clickCount: oldState.clickCount % 2 + 1
        };
        if (newState.clickCount !== oldState.clickCount) {
          return handler(options, newState) || newState;
        }
        return newState;
      };
      getComponentActiveOptions = (allowNestedChildrenEvents = true) => ({
        ...baseActivityActionGroupOptions,
        handler: withFilter(
          allowNestedChildrenEvents ? isOrContainsElement : isElement,
          // @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
          whenComponentActiveChange((options, state) => {
            return state.isActive ? baseActionGroupOptions.handler(options, state) : state;
          })
        )
      });
      getComponentInactiveOptions = (allowNestedChildrenEvents = true) => ({
        ...baseActivityActionGroupOptions,
        handler: withFilter(
          allowNestedChildrenEvents ? isOrContainsElement : isElement,
          // @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
          whenComponentActiveChange((options, state) => {
            return !state.isActive ? baseActionGroupOptions.handler(options, state) : state;
          })
        )
      });
      scrollIntoOutOfViewOptions = {
        ...baseScrollActionGroupOptions,
        handler: whenElementVisibiltyChange((options, state) => {
          const { elementVisible } = state;
          const { event, store } = options;
          const { ixData: ixData2 } = store.getState();
          const { events } = ixData2;
          if (!events[event.action.config.autoStopEventId] && state.triggered) {
            return state;
          }
          if (event.eventTypeId === SCROLL_INTO_VIEW === elementVisible) {
            actionGroupCreator(options);
            return {
              ...state,
              triggered: true
            };
          } else {
            return state;
          }
        })
      };
      MOUSE_OUT_ROUND_THRESHOLD = 0.05;
      IX2VanillaEvents_default = {
        [SLIDER_ACTIVE]: getComponentActiveOptions(),
        [SLIDER_INACTIVE]: getComponentInactiveOptions(),
        [DROPDOWN_OPEN]: getComponentActiveOptions(),
        [DROPDOWN_CLOSE]: getComponentInactiveOptions(),
        // navbar elements may contain nested components in the menu. To prevent activity misfires, only listed for activity
        // events where the target is the navbar element, and ignore children that dispatch activitiy events.
        [NAVBAR_OPEN]: getComponentActiveOptions(false),
        [NAVBAR_CLOSE]: getComponentInactiveOptions(false),
        [TAB_ACTIVE]: getComponentActiveOptions(),
        [TAB_INACTIVE]: getComponentInactiveOptions(),
        [ECOMMERCE_CART_OPEN]: {
          types: "ecommerce-cart-open",
          handler: withFilter(isOrContainsElement, actionGroupCreator)
        },
        [ECOMMERCE_CART_CLOSE]: {
          types: "ecommerce-cart-close",
          handler: withFilter(isOrContainsElement, actionGroupCreator)
        },
        [MOUSE_CLICK]: {
          types: "click",
          handler: withFilter(
            isOrContainsElement,
            whenClickCountChange((options, { clickCount }) => {
              if (hasAutoStopEvent(options)) {
                clickCount === 1 && actionGroupCreator(options);
              } else {
                actionGroupCreator(options);
              }
            })
          )
        },
        [MOUSE_SECOND_CLICK]: {
          types: "click",
          handler: withFilter(
            isOrContainsElement,
            whenClickCountChange((options, { clickCount }) => {
              if (clickCount === 2) {
                actionGroupCreator(options);
              }
            })
          )
        },
        [MOUSE_DOWN]: {
          ...baseActionGroupOptions,
          types: "mousedown"
        },
        [MOUSE_UP]: {
          ...baseActionGroupOptions,
          types: "mouseup"
        },
        [MOUSE_OVER]: {
          types: MOUSE_OVER_OUT_TYPES,
          handler: withFilter(
            isOrContainsElement,
            whenElementHoverChange((options, state) => {
              if (state.elementHovered) {
                actionGroupCreator(options);
              }
            })
          )
        },
        [MOUSE_OUT]: {
          types: MOUSE_OVER_OUT_TYPES,
          handler: withFilter(
            isOrContainsElement,
            whenElementHoverChange((options, state) => {
              if (!state.elementHovered) {
                actionGroupCreator(options);
              }
            })
          )
        },
        [MOUSE_MOVE]: {
          types: "mousemove mouseout scroll",
          handler: ({ store, element, eventConfig, nativeEvent, eventStateKey }, state = { clientX: 0, clientY: 0, pageX: 0, pageY: 0 }) => {
            const {
              basedOn,
              selectedAxis,
              continuousParameterGroupId,
              reverse,
              restingState = 0
            } = eventConfig;
            const {
              clientX = state.clientX,
              clientY = state.clientY,
              pageX = state.pageX,
              pageY = state.pageY
            } = nativeEvent;
            const isXAxis = selectedAxis === "X_AXIS";
            const isMouseOut = nativeEvent.type === "mouseout";
            let value2 = restingState / 100;
            let namespacedParameterId = continuousParameterGroupId;
            let elementHovered = false;
            switch (basedOn) {
              case EventBasedOn.VIEWPORT: {
                value2 = isXAxis ? Math.min(clientX, window.innerWidth) / window.innerWidth : Math.min(clientY, window.innerHeight) / window.innerHeight;
                break;
              }
              case EventBasedOn.PAGE: {
                const { scrollLeft, scrollTop, scrollWidth, scrollHeight } = getDocumentState();
                value2 = isXAxis ? Math.min(scrollLeft + pageX, scrollWidth) / scrollWidth : Math.min(scrollTop + pageY, scrollHeight) / scrollHeight;
                break;
              }
              case EventBasedOn.ELEMENT:
              default: {
                namespacedParameterId = getNamespacedParameterId2(
                  eventStateKey,
                  continuousParameterGroupId
                );
                const isMouseEvent = nativeEvent.type.indexOf("mouse") === 0;
                if (isMouseEvent && isOrContainsElement({ element, nativeEvent }) !== true) {
                  break;
                }
                const rect = element.getBoundingClientRect();
                const { left, top, width: width2, height: height2 } = rect;
                if (!isMouseEvent && !pointIntersects({ left: clientX, top: clientY }, rect)) {
                  break;
                }
                elementHovered = true;
                value2 = isXAxis ? (clientX - left) / width2 : (clientY - top) / height2;
                break;
              }
            }
            if (isMouseOut && (value2 > 1 - MOUSE_OUT_ROUND_THRESHOLD || value2 < MOUSE_OUT_ROUND_THRESHOLD)) {
              value2 = Math.round(value2);
            }
            if (basedOn !== EventBasedOn.ELEMENT || elementHovered || // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-expect-error
            elementHovered !== state.elementHovered) {
              value2 = reverse ? 1 - value2 : value2;
              store.dispatch(parameterChanged(namespacedParameterId, value2));
            }
            return {
              elementHovered,
              clientX,
              clientY,
              pageX,
              pageY
            };
          }
        },
        [PAGE_SCROLL]: {
          types: SCROLL_EVENT_TYPES,
          // eslint-disable-next-line @typescript-eslint/ban-ts-comment
          // @ts-expect-error
          handler: ({ store, eventConfig }) => {
            const { continuousParameterGroupId, reverse } = eventConfig;
            const { scrollTop, scrollHeight, clientHeight } = getDocumentState();
            let value2 = scrollTop / (scrollHeight - clientHeight);
            value2 = reverse ? 1 - value2 : value2;
            store.dispatch(parameterChanged(continuousParameterGroupId, value2));
          }
        },
        [SCROLLING_IN_VIEW]: {
          types: SCROLL_EVENT_TYPES,
          handler: ({ element, store, eventConfig, eventStateKey }, state = { scrollPercent: 0 }) => {
            const {
              scrollLeft,
              scrollTop,
              scrollWidth,
              scrollHeight,
              clientHeight: visibleHeight
            } = getDocumentState();
            const {
              basedOn,
              selectedAxis,
              continuousParameterGroupId,
              startsEntering,
              startsExiting,
              addEndOffset,
              addStartOffset,
              addOffsetValue = 0,
              endOffsetValue = 0
            } = eventConfig;
            const isXAxis = selectedAxis === "X_AXIS";
            if (basedOn === EventBasedOn.VIEWPORT) {
              const value2 = isXAxis ? scrollLeft / scrollWidth : scrollTop / scrollHeight;
              if (value2 !== state.scrollPercent) {
                store.dispatch(parameterChanged(continuousParameterGroupId, value2));
              }
              return {
                scrollPercent: value2
              };
            } else {
              const namespacedParameterId = getNamespacedParameterId2(
                eventStateKey,
                continuousParameterGroupId
              );
              const elementRect = element.getBoundingClientRect();
              let offsetStartPerc = (addStartOffset ? addOffsetValue : 0) / 100;
              let offsetEndPerc = (addEndOffset ? endOffsetValue : 0) / 100;
              offsetStartPerc = startsEntering ? offsetStartPerc : 1 - offsetStartPerc;
              offsetEndPerc = startsExiting ? offsetEndPerc : 1 - offsetEndPerc;
              const offsetElementTop = elementRect.top + Math.min(elementRect.height * offsetStartPerc, visibleHeight);
              const offsetElementBottom = elementRect.top + elementRect.height * offsetEndPerc;
              const offsetHeight = offsetElementBottom - offsetElementTop;
              const fixedScrollHeight = Math.min(
                visibleHeight + offsetHeight,
                scrollHeight
              );
              const fixedScrollTop = Math.min(
                Math.max(0, visibleHeight - offsetElementTop),
                fixedScrollHeight
              );
              const fixedScrollPerc = fixedScrollTop / fixedScrollHeight;
              if (fixedScrollPerc !== state.scrollPercent) {
                store.dispatch(
                  parameterChanged(namespacedParameterId, fixedScrollPerc)
                );
              }
              return {
                scrollPercent: fixedScrollPerc
              };
            }
          }
        },
        [SCROLL_INTO_VIEW]: scrollIntoOutOfViewOptions,
        [SCROLL_OUT_OF_VIEW]: scrollIntoOutOfViewOptions,
        [PAGE_SCROLL_DOWN]: {
          ...baseScrollActionGroupOptions,
          // @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
          handler: whenScrollDirectionChange((options, state) => {
            if (state.scrollingDown) {
              actionGroupCreator(options);
            }
          })
        },
        [PAGE_SCROLL_UP]: {
          ...baseScrollActionGroupOptions,
          // @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
          handler: whenScrollDirectionChange((options, state) => {
            if (!state.scrollingDown) {
              actionGroupCreator(options);
            }
          })
        },
        [PAGE_FINISH]: {
          types: "readystatechange IX2_PAGE_UPDATE",
          handler: withFilter(isElement, whenPageLoadFinish(actionGroupCreator))
        },
        [PAGE_START]: {
          types: "readystatechange IX2_PAGE_UPDATE",
          handler: withFilter(isElement, whenPageLoadStart(actionGroupCreator))
        }
      };
    }
  });

  // packages/systems/ix2/engine/logic/IX2VanillaEngine.ts
  var IX2VanillaEngine_exports = {};
  __export(IX2VanillaEngine_exports, {
    observeRequests: () => observeRequests,
    startActionGroup: () => startActionGroup,
    startEngine: () => startEngine,
    stopActionGroup: () => stopActionGroup,
    stopAllActionGroups: () => stopAllActionGroups,
    stopEngine: () => stopEngine
  });
  function observeRequests(store) {
    observeStore2({
      store,
      // @ts-expect-error - TS7031 - Binding element 'ixRequest' implicitly has an 'any' type.
      select: ({ ixRequest: ixRequest2 }) => ixRequest2.preview,
      onChange: handlePreviewRequest
    });
    observeStore2({
      store,
      // @ts-expect-error - TS7031 - Binding element 'ixRequest' implicitly has an 'any' type.
      select: ({ ixRequest: ixRequest2 }) => ixRequest2.playback,
      onChange: handlePlaybackRequest
    });
    observeStore2({
      store,
      // @ts-expect-error - TS7031 - Binding element 'ixRequest' implicitly has an 'any' type.
      select: ({ ixRequest: ixRequest2 }) => ixRequest2.stop,
      onChange: handleStopRequest
    });
    observeStore2({
      store,
      // @ts-expect-error - TS7031 - Binding element 'ixRequest' implicitly has an 'any' type.
      select: ({ ixRequest: ixRequest2 }) => ixRequest2.clear,
      onChange: handleClearRequest
    });
  }
  function observeMediaQueryChange(store) {
    observeStore2({
      store,
      // @ts-expect-error - TS7031 - Binding element 'ixSession' implicitly has an 'any' type.
      select: ({ ixSession: ixSession2 }) => ixSession2.mediaQueryKey,
      onChange: () => {
        stopEngine(store);
        clearAllStyles2({ store, elementApi: IX2BrowserApi_exports });
        startEngine({ store, allowEvents: true });
        dispatchPageUpdateEvent();
      }
    });
  }
  function observeOneRenderTick(store, onTick) {
    const unsubscribe = observeStore2({
      store,
      // @ts-expect-error - TS7031 - Binding element 'ixSession' implicitly has an 'any' type.
      select: ({ ixSession: ixSession2 }) => ixSession2.tick,
      // @ts-expect-error - TS7006 - Parameter 'tick' implicitly has an 'any' type.
      onChange: (tick) => {
        onTick(tick);
        unsubscribe();
      }
    });
  }
  function handlePreviewRequest({ rawData, defer }, store) {
    const start = () => {
      startEngine({ store, rawData, allowEvents: true });
      dispatchPageUpdateEvent();
    };
    defer ? setTimeout(start, 0) : start();
  }
  function dispatchPageUpdateEvent() {
    document.dispatchEvent(new CustomEvent("IX2_PAGE_UPDATE"));
  }
  function handlePlaybackRequest(playback, store) {
    const {
      actionTypeId,
      actionListId,
      actionItemId,
      eventId,
      allowEvents,
      immediate,
      testManual,
      verbose = true
    } = playback;
    let { rawData } = playback;
    if (actionListId && actionItemId && rawData && immediate) {
      const actionList = rawData.actionLists[actionListId];
      if (actionList) {
        rawData = reduceListToGroup2({
          actionList,
          actionItemId,
          rawData
        });
      }
    }
    startEngine({ store, rawData, allowEvents, testManual });
    if (actionListId && actionTypeId === ActionTypeConsts.GENERAL_START_ACTION || isQuickEffect(actionTypeId)) {
      stopActionGroup({ store, actionListId });
      renderInitialGroup({ store, actionListId, eventId });
      const started = startActionGroup({
        store,
        eventId,
        actionListId,
        immediate,
        verbose
      });
      if (verbose && started) {
        store.dispatch(
          actionListPlaybackChanged({ actionListId, isPlaying: !immediate })
        );
      }
    }
  }
  function handleStopRequest({ actionListId }, store) {
    if (actionListId) {
      stopActionGroup({ store, actionListId });
    } else {
      stopAllActionGroups({ store });
    }
    stopEngine(store);
  }
  function handleClearRequest(state, store) {
    stopEngine(store);
    clearAllStyles2({ store, elementApi: IX2BrowserApi_exports });
  }
  function startEngine({ store, rawData, allowEvents, testManual }) {
    const { ixSession: ixSession2 } = store.getState();
    if (rawData) {
      store.dispatch(rawDataImported(rawData));
    }
    if (!ixSession2.active) {
      store.dispatch(
        sessionInitialized({
          hasBoundaryNodes: Boolean(document.querySelector(BOUNDARY_SELECTOR2)),
          reducedMotion: document.body.hasAttribute("data-wf-ix-vacation") && window.matchMedia("(prefers-reduced-motion)").matches
        })
      );
      if (allowEvents) {
        bindEvents(store);
        addDocumentClass();
        if (store.getState().ixSession.hasDefinedMediaQueries) {
          observeMediaQueryChange(store);
        }
      }
      store.dispatch(sessionStarted());
      startRenderLoop(store, testManual);
    }
  }
  function addDocumentClass() {
    const { documentElement } = document;
    if (documentElement.className.indexOf(W_MOD_IX2) === -1) {
      documentElement.className += ` ${W_MOD_IX2}`;
    }
  }
  function startRenderLoop(store, testManual) {
    const handleFrame = (now) => {
      const { ixSession: ixSession2, ixParameters: ixParameters2 } = store.getState();
      if (ixSession2.active) {
        store.dispatch(animationFrameChanged(now, ixParameters2));
        if (testManual) {
          observeOneRenderTick(store, handleFrame);
        } else {
          requestAnimationFrame(handleFrame);
        }
      }
    };
    handleFrame(window.performance.now());
  }
  function stopEngine(store) {
    const { ixSession: ixSession2 } = store.getState();
    if (ixSession2.active) {
      const { eventListeners } = ixSession2;
      eventListeners.forEach(clearEventListener);
      clearObjectCache2();
      store.dispatch(sessionStopped());
    }
  }
  function clearEventListener({ target, listenerParams }) {
    target.removeEventListener.apply(target, listenerParams);
  }
  function createGroupInstances({
    // @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type.
    store,
    // @ts-expect-error - TS7031 - Binding element 'eventStateKey' implicitly has an 'any' type.
    eventStateKey,
    // @ts-expect-error - TS7031 - Binding element 'eventTarget' implicitly has an 'any' type.
    eventTarget,
    // @ts-expect-error - TS7031 - Binding element 'eventId' implicitly has an 'any' type.
    eventId,
    // @ts-expect-error - TS7031 - Binding element 'eventConfig' implicitly has an 'any' type.
    eventConfig,
    // @ts-expect-error - TS7031 - Binding element 'actionListId' implicitly has an 'any' type.
    actionListId,
    // @ts-expect-error - TS7031 - Binding element 'parameterGroup' implicitly has an 'any' type.
    parameterGroup,
    // @ts-expect-error - TS7031 - Binding element 'smoothing' implicitly has an 'any' type.
    smoothing,
    // @ts-expect-error - TS7031 - Binding element 'restingValue' implicitly has an 'any' type.
    restingValue
  }) {
    const { ixData: ixData2, ixSession: ixSession2 } = store.getState();
    const { events } = ixData2;
    const event = events[eventId];
    const { eventTypeId } = event;
    const targetCache = {};
    const instanceActionGroups = {};
    const instanceConfigs = [];
    const { continuousActionGroups } = parameterGroup;
    let { id: parameterId } = parameterGroup;
    if (shouldNamespaceEventParameter2(eventTypeId, eventConfig)) {
      parameterId = getNamespacedParameterId3(eventStateKey, parameterId);
    }
    const eventElementRoot = ixSession2.hasBoundaryNodes && eventTarget ? getClosestElement(eventTarget, BOUNDARY_SELECTOR2) : null;
    continuousActionGroups.forEach((actionGroup) => {
      const { keyframe, actionItems } = actionGroup;
      actionItems.forEach((actionItem) => {
        const { actionTypeId } = actionItem;
        const { target } = actionItem.config;
        if (!target) {
          return;
        }
        const elementRoot = target.boundaryMode ? eventElementRoot : null;
        const key2 = stringifyTarget2(target) + COLON_DELIMITER4 + actionTypeId;
        instanceActionGroups[key2] = appendActionItem(
          instanceActionGroups[key2],
          keyframe,
          actionItem
        );
        if (!targetCache[key2]) {
          targetCache[key2] = true;
          const { config } = actionItem;
          getAffectedElements2({
            config,
            event,
            eventTarget,
            elementRoot,
            elementApi: IX2BrowserApi_exports
          }).forEach((element) => {
            instanceConfigs.push({ element, key: key2 });
          });
        }
      });
    });
    instanceConfigs.forEach(({ element, key: key2 }) => {
      const actionGroups = instanceActionGroups[key2];
      const actionItem = (0, import_get2.default)(actionGroups, `[0].actionItems[0]`, {});
      const { actionTypeId } = actionItem;
      const pluginInstance = isPluginType2(actionTypeId) ? createPluginInstance2(actionTypeId)(element, actionItem) : null;
      const destination = getDestinationValues2(
        { element, actionItem, elementApi: IX2BrowserApi_exports },
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-expect-error
        pluginInstance
      );
      createInstance2({
        store,
        element,
        eventId,
        actionListId,
        actionItem,
        destination,
        continuous: true,
        parameterId,
        actionGroups,
        smoothing,
        restingValue,
        pluginInstance
      });
    });
  }
  function appendActionItem(actionGroups = [], keyframe, actionItem) {
    const newActionGroups = [...actionGroups];
    let groupIndex;
    newActionGroups.some((group, index2) => {
      if (group.keyframe === keyframe) {
        groupIndex = index2;
        return true;
      }
      return false;
    });
    if (groupIndex == null) {
      groupIndex = newActionGroups.length;
      newActionGroups.push({
        keyframe,
        actionItems: []
      });
    }
    newActionGroups[groupIndex].actionItems.push(actionItem);
    return newActionGroups;
  }
  function bindEvents(store) {
    const { ixData: ixData2 } = store.getState();
    const { eventTypeMap } = ixData2;
    updateViewportWidth(store);
    (0, import_forEach.default)(eventTypeMap, (events, key2) => {
      const logic = IX2VanillaEvents_default[key2];
      if (!logic) {
        console.warn(`IX2 event type not configured: ${key2}`);
        return;
      }
      bindEventType({
        logic,
        store,
        events
      });
    });
    const { ixSession: ixSession2 } = store.getState();
    if (ixSession2.eventListeners.length) {
      bindResizeEvents(store);
    }
  }
  function bindResizeEvents(store) {
    const handleResize = () => {
      updateViewportWidth(store);
    };
    WINDOW_RESIZE_EVENTS.forEach((type) => {
      window.addEventListener(type, handleResize);
      store.dispatch(eventListenerAdded(window, [type, handleResize]));
    });
    handleResize();
  }
  function updateViewportWidth(store) {
    const { ixSession: ixSession2, ixData: ixData2 } = store.getState();
    const width2 = window.innerWidth;
    if (width2 !== ixSession2.viewportWidth) {
      const { mediaQueries } = ixData2;
      store.dispatch(viewportWidthChanged({ width: width2, mediaQueries }));
    }
  }
  function bindEventType({ logic, store, events }) {
    injectBehaviorCSSFixes(events);
    const { types: eventTypes, handler: eventHandler } = logic;
    const { ixData: ixData2 } = store.getState();
    const { actionLists } = ixData2;
    const eventTargets = mapFoundValues(events, getAffectedForEvent);
    if (!(0, import_size.default)(eventTargets)) {
      return;
    }
    (0, import_forEach.default)(eventTargets, (elements, key2) => {
      const event = events[key2];
      const {
        action: eventAction,
        id: eventId,
        mediaQueries = ixData2.mediaQueryKeys
      } = event;
      const { actionListId } = eventAction.config;
      if (!mediaQueriesEqual2(mediaQueries, ixData2.mediaQueryKeys)) {
        store.dispatch(mediaQueriesDefined());
      }
      if (eventAction.actionTypeId === ActionTypeConsts.GENERAL_CONTINUOUS_ACTION) {
        const configs = Array.isArray(event.config) ? event.config : [event.config];
        configs.forEach((eventConfig) => {
          const { continuousParameterGroupId } = eventConfig;
          const paramGroups = (0, import_get2.default)(
            actionLists,
            `${actionListId}.continuousParameterGroups`,
            []
          );
          const parameterGroup = (0, import_find2.default)(
            paramGroups,
            ({ id }) => id === continuousParameterGroupId
          );
          const smoothing = (eventConfig.smoothing || 0) / 100;
          const restingValue = (eventConfig.restingState || 0) / 100;
          if (!parameterGroup) {
            return;
          }
          elements.forEach((eventTarget, index2) => {
            const eventStateKey = eventId + COLON_DELIMITER4 + index2;
            createGroupInstances({
              store,
              eventStateKey,
              eventTarget,
              eventId,
              eventConfig,
              actionListId,
              parameterGroup,
              smoothing,
              restingValue
            });
          });
        });
      }
      if (eventAction.actionTypeId === ActionTypeConsts.GENERAL_START_ACTION || isQuickEffect(eventAction.actionTypeId)) {
        renderInitialGroup({ store, actionListId, eventId });
      }
    });
    const handleEvent = (nativeEvent) => {
      const { ixSession: ixSession2 } = store.getState();
      forEachEventTarget(eventTargets, (element, eventId, eventStateKey) => {
        const event = events[eventId];
        const oldState = ixSession2.eventState[eventStateKey];
        const { action: eventAction, mediaQueries = ixData2.mediaQueryKeys } = event;
        if (!shouldAllowMediaQuery2(mediaQueries, ixSession2.mediaQueryKey)) {
          return;
        }
        const handleEventWithConfig = (eventConfig = {}) => {
          const newState = eventHandler(
            {
              store,
              element,
              event,
              eventConfig,
              nativeEvent,
              eventStateKey
            },
            oldState
          );
          if (!shallowEqual2(newState, oldState)) {
            store.dispatch(eventStateChanged(eventStateKey, newState));
          }
        };
        if (eventAction.actionTypeId === ActionTypeConsts.GENERAL_CONTINUOUS_ACTION) {
          const configs = Array.isArray(event.config) ? event.config : [event.config];
          configs.forEach(handleEventWithConfig);
        } else {
          handleEventWithConfig();
        }
      });
    };
    const handleEventThrottled = (0, import_throttle.default)(handleEvent, THROTTLED_EVENT_WAIT);
    const addListeners = ({
      target = document,
      // @ts-expect-error - TS7031 - Binding element 'types' implicitly has an 'any' type.
      types,
      // @ts-expect-error - TS7031 - Binding element 'shouldThrottle' implicitly has an 'any' type.
      throttle: shouldThrottle
    }) => {
      types.split(" ").filter(Boolean).forEach((type) => {
        const handlerFunc = shouldThrottle ? handleEventThrottled : handleEvent;
        target.addEventListener(type, handlerFunc);
        store.dispatch(eventListenerAdded(target, [type, handlerFunc]));
      });
    };
    if (Array.isArray(eventTypes)) {
      eventTypes.forEach(addListeners);
    } else if (typeof eventTypes === "string") {
      addListeners(logic);
    }
  }
  function injectBehaviorCSSFixes(events) {
    if (!IS_MOBILE_SAFARI) {
      return;
    }
    const injectedSelectors = {};
    let cssText = "";
    for (const eventId in events) {
      const { eventTypeId, target } = events[eventId];
      const selector = getQuerySelector(target);
      if (injectedSelectors[selector]) {
        continue;
      }
      if (eventTypeId === EventTypeConsts.MOUSE_CLICK || eventTypeId === EventTypeConsts.MOUSE_SECOND_CLICK) {
        injectedSelectors[selector] = true;
        cssText += selector + "{cursor: pointer;touch-action: manipulation;}";
      }
    }
    if (cssText) {
      const style2 = document.createElement("style");
      style2.textContent = cssText;
      document.body.appendChild(style2);
    }
  }
  function renderInitialGroup({ store, actionListId, eventId }) {
    const { ixData: ixData2, ixSession: ixSession2 } = store.getState();
    const { actionLists, events } = ixData2;
    const event = events[eventId];
    const actionList = actionLists[actionListId];
    if (actionList && actionList.useFirstGroupAsInitialState) {
      const initialStateItems = (0, import_get2.default)(
        actionList,
        "actionItemGroups[0].actionItems",
        []
      );
      const mediaQueries = (0, import_get2.default)(event, "mediaQueries", ixData2.mediaQueryKeys);
      if (!shouldAllowMediaQuery2(mediaQueries, ixSession2.mediaQueryKey)) {
        return;
      }
      initialStateItems.forEach((actionItem) => {
        const { config: itemConfig, actionTypeId } = actionItem;
        const config = (
          // When useEventTarget is explicitly true, use event target/targets to query elements
          // However, skip this condition when objectId is defined
          itemConfig?.target?.useEventTarget === true && itemConfig?.target?.objectId == null ? { target: event.target, targets: event.targets } : itemConfig
        );
        const itemElements = getAffectedElements2({ config, event, elementApi: IX2BrowserApi_exports });
        const shouldUsePlugin = isPluginType2(actionTypeId);
        itemElements.forEach((element) => {
          const pluginInstance = shouldUsePlugin ? createPluginInstance2(actionTypeId)(element, actionItem) : null;
          createInstance2({
            destination: getDestinationValues2(
              { element, actionItem, elementApi: IX2BrowserApi_exports },
              // eslint-disable-next-line @typescript-eslint/ban-ts-comment
              // @ts-expect-error
              pluginInstance
            ),
            immediate: true,
            store,
            element,
            eventId,
            actionItem,
            actionListId,
            pluginInstance
          });
        });
      });
    }
  }
  function stopAllActionGroups({ store }) {
    const { ixInstances: ixInstances2 } = store.getState();
    (0, import_forEach.default)(ixInstances2, (instance) => {
      if (!instance.continuous) {
        const { actionListId, verbose } = instance;
        removeInstance(instance, store);
        if (verbose) {
          store.dispatch(
            actionListPlaybackChanged({ actionListId, isPlaying: false })
          );
        }
      }
    });
  }
  function stopActionGroup({
    // @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type.
    store,
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    eventId,
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    eventTarget,
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    eventStateKey,
    // @ts-expect-error - TS7031 - Binding element 'actionListId' implicitly has an 'any' type.
    actionListId
  }) {
    const { ixInstances: ixInstances2, ixSession: ixSession2 } = store.getState();
    const eventElementRoot = ixSession2.hasBoundaryNodes && eventTarget ? getClosestElement(eventTarget, BOUNDARY_SELECTOR2) : null;
    (0, import_forEach.default)(ixInstances2, (instance) => {
      const boundaryMode = (0, import_get2.default)(instance, "actionItem.config.target.boundaryMode");
      const validEventKey = eventStateKey ? instance.eventStateKey === eventStateKey : true;
      if (instance.actionListId === actionListId && instance.eventId === eventId && validEventKey) {
        if (eventElementRoot && boundaryMode && !elementContains(eventElementRoot, instance.element)) {
          return;
        }
        removeInstance(instance, store);
        if (instance.verbose) {
          store.dispatch(
            actionListPlaybackChanged({ actionListId, isPlaying: false })
          );
        }
      }
    });
  }
  function startActionGroup({
    // @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type.
    store,
    // @ts-expect-error - TS7031 - Binding element 'eventId' implicitly has an 'any' type.
    eventId,
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    eventTarget,
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    eventStateKey,
    // @ts-expect-error - TS7031 - Binding element 'actionListId' implicitly has an 'any' type.
    actionListId,
    groupIndex = 0,
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    immediate,
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    verbose
  }) {
    const { ixData: ixData2, ixSession: ixSession2 } = store.getState();
    const { events } = ixData2;
    const event = events[eventId] || {};
    const { mediaQueries = ixData2.mediaQueryKeys } = event;
    const actionList = (0, import_get2.default)(ixData2, `actionLists.${actionListId}`, {});
    const { actionItemGroups, useFirstGroupAsInitialState } = actionList;
    if (!actionItemGroups || !actionItemGroups.length) {
      return false;
    }
    if (groupIndex >= actionItemGroups.length && (0, import_get2.default)(event, "config.loop")) {
      groupIndex = 0;
    }
    if (groupIndex === 0 && useFirstGroupAsInitialState) {
      groupIndex++;
    }
    const isFirstGroup = groupIndex === 0 || groupIndex === 1 && useFirstGroupAsInitialState;
    const instanceDelay = isFirstGroup && isQuickEffect(event.action?.actionTypeId) ? event.config.delay : void 0;
    const actionItems = (0, import_get2.default)(actionItemGroups, [groupIndex, "actionItems"], []);
    if (!actionItems.length) {
      return false;
    }
    if (!shouldAllowMediaQuery2(mediaQueries, ixSession2.mediaQueryKey)) {
      return false;
    }
    const eventElementRoot = ixSession2.hasBoundaryNodes && eventTarget ? getClosestElement(eventTarget, BOUNDARY_SELECTOR2) : null;
    const carrierIndex = getMaxDurationItemIndex2(actionItems);
    let groupStartResult = false;
    actionItems.forEach((actionItem, actionIndex) => {
      const { config, actionTypeId } = actionItem;
      const shouldUsePlugin = isPluginType2(actionTypeId);
      const { target } = config;
      if (!target) {
        return;
      }
      const elementRoot = target.boundaryMode ? eventElementRoot : null;
      const elements = getAffectedElements2({
        config,
        event,
        eventTarget,
        elementRoot,
        elementApi: IX2BrowserApi_exports
      });
      elements.forEach((element, elementIndex) => {
        const pluginInstance = shouldUsePlugin ? createPluginInstance2(actionTypeId)(element, actionItem) : null;
        const pluginDuration = shouldUsePlugin ? getPluginDuration2(actionTypeId)(element, actionItem) : null;
        groupStartResult = true;
        const isCarrier = carrierIndex === actionIndex && elementIndex === 0;
        const computedStyle = getComputedStyle3({ element, actionItem });
        const destination = getDestinationValues2(
          { element, actionItem, elementApi: IX2BrowserApi_exports },
          // eslint-disable-next-line @typescript-eslint/ban-ts-comment
          // @ts-expect-error
          pluginInstance
        );
        createInstance2({
          store,
          element,
          actionItem,
          eventId,
          eventTarget,
          eventStateKey,
          actionListId,
          groupIndex,
          isCarrier,
          computedStyle,
          destination,
          immediate,
          verbose,
          pluginInstance,
          pluginDuration,
          instanceDelay
        });
      });
    });
    return groupStartResult;
  }
  function createInstance2(options) {
    const { store, computedStyle, ...rest } = options;
    const {
      element,
      actionItem,
      immediate,
      pluginInstance,
      continuous,
      restingValue,
      eventId
    } = rest;
    const autoStart = !continuous;
    const instanceId = getInstanceId2();
    const { ixElements: ixElements3, ixSession: ixSession2, ixData: ixData2 } = store.getState();
    const elementId = getElementId2(ixElements3, element);
    const { refState: refState2 } = ixElements3[elementId] || {};
    const refType = getRefType(element);
    const skipMotion = (
      // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ readonly TRANSFORM_MOVE: true; readonly TRANSFORM_SCALE: true; readonly TRANSFORM_ROTATE: true; readonly TRANSFORM_SKEW: true; readonly STYLE_SIZE: true; readonly STYLE_FILTER: true; readonly STYLE_FONT_VARIATION: true; }'.
      ixSession2.reducedMotion && ReducedMotionTypes[actionItem.actionTypeId]
    );
    let skipToValue;
    if (skipMotion && continuous) {
      switch (ixData2.events[eventId]?.eventTypeId) {
        case EventTypeConsts.MOUSE_MOVE:
        case EventTypeConsts.MOUSE_MOVE_IN_VIEWPORT:
          skipToValue = restingValue;
          break;
        default:
          skipToValue = 0.5;
          break;
      }
    }
    const origin = getInstanceOrigin2(
      element,
      refState2,
      computedStyle,
      actionItem,
      IX2BrowserApi_exports,
      // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-expect-error
      pluginInstance
    );
    store.dispatch(
      instanceAdded({
        instanceId,
        elementId,
        origin,
        refType,
        skipMotion,
        skipToValue,
        ...rest
      })
    );
    dispatchCustomEvent(document.body, "ix2-animation-started", instanceId);
    if (immediate) {
      renderImmediateInstance(store, instanceId);
      return;
    }
    observeStore2({
      store,
      // @ts-expect-error - TS7031 - Binding element 'ixInstances' implicitly has an 'any' type.
      select: ({ ixInstances: ixInstances2 }) => ixInstances2[instanceId],
      onChange: handleInstanceChange
    });
    if (autoStart) {
      store.dispatch(instanceStarted(instanceId, ixSession2.tick));
    }
  }
  function removeInstance(instance, store) {
    dispatchCustomEvent(document.body, "ix2-animation-stopping", {
      instanceId: instance.id,
      state: store.getState()
    });
    const { elementId, actionItem } = instance;
    const { ixElements: ixElements3 } = store.getState();
    const { ref, refType } = ixElements3[elementId] || {};
    if (refType === HTML_ELEMENT4) {
      cleanupHTMLElement2(ref, actionItem, IX2BrowserApi_exports);
    }
    store.dispatch(instanceRemoved(instance.id));
  }
  function dispatchCustomEvent(element, eventName, detail) {
    const event = document.createEvent("CustomEvent");
    event.initCustomEvent(eventName, true, true, detail);
    element.dispatchEvent(event);
  }
  function renderImmediateInstance(store, instanceId) {
    const { ixParameters: ixParameters2 } = store.getState();
    store.dispatch(instanceStarted(instanceId, 0));
    store.dispatch(animationFrameChanged(performance.now(), ixParameters2));
    const { ixInstances: ixInstances2 } = store.getState();
    handleInstanceChange(ixInstances2[instanceId], store);
  }
  function handleInstanceChange(instance, store) {
    const {
      active: active2,
      continuous,
      complete,
      elementId,
      actionItem,
      actionTypeId,
      renderType,
      current,
      groupIndex,
      eventId,
      eventTarget,
      eventStateKey,
      actionListId,
      isCarrier,
      styleProp,
      verbose,
      pluginInstance
    } = instance;
    const { ixData: ixData2, ixSession: ixSession2 } = store.getState();
    const { events } = ixData2;
    const event = events[eventId] || {};
    const { mediaQueries = ixData2.mediaQueryKeys } = event;
    if (!shouldAllowMediaQuery2(mediaQueries, ixSession2.mediaQueryKey)) {
      return;
    }
    if (continuous || active2 || complete) {
      if (current || renderType === RENDER_GENERAL4 && complete) {
        store.dispatch(
          elementStateChanged(elementId, actionTypeId, current, actionItem)
        );
        const { ixElements: ixElements3 } = store.getState();
        const { ref, refType, refState: refState2 } = ixElements3[elementId] || {};
        const actionState = refState2 && refState2[actionTypeId];
        if (refType === HTML_ELEMENT4 || isPluginType2(actionTypeId)) {
          renderHTMLElement2(
            ref,
            refState2,
            actionState,
            eventId,
            actionItem,
            styleProp,
            IX2BrowserApi_exports,
            renderType,
            pluginInstance
          );
        }
      }
      if (complete) {
        if (isCarrier) {
          const started = startActionGroup({
            store,
            eventId,
            eventTarget,
            eventStateKey,
            actionListId,
            groupIndex: groupIndex + 1,
            verbose
          });
          if (verbose && !started) {
            store.dispatch(
              actionListPlaybackChanged({ actionListId, isPlaying: false })
            );
          }
        }
        removeInstance(instance, store);
      }
    }
  }
  var import_find2, import_get2, import_size, import_omitBy, import_isEmpty, import_mapValues, import_forEach, import_throttle, import_shared6, QuickEffectsIdList, isQuickEffect, COLON_DELIMITER4, BOUNDARY_SELECTOR2, HTML_ELEMENT4, RENDER_GENERAL4, W_MOD_IX2, getAffectedElements2, getElementId2, getDestinationValues2, observeStore2, getInstanceId2, renderHTMLElement2, clearAllStyles2, getMaxDurationItemIndex2, getComputedStyle3, getInstanceOrigin2, reduceListToGroup2, shouldNamespaceEventParameter2, getNamespacedParameterId3, shouldAllowMediaQuery2, cleanupHTMLElement2, clearObjectCache2, stringifyTarget2, mediaQueriesEqual2, shallowEqual2, isPluginType2, createPluginInstance2, getPluginDuration2, ua, IS_MOBILE_SAFARI, THROTTLED_EVENT_WAIT, WINDOW_RESIZE_EVENTS, mapFoundValues, forEachEventTarget, getAffectedForEvent;
  var init_IX2VanillaEngine = __esm({
    "packages/systems/ix2/engine/logic/IX2VanillaEngine.ts"() {
      "use strict";
      import_find2 = __toESM(require_find());
      import_get2 = __toESM(require_get());
      import_size = __toESM(require_size());
      import_omitBy = __toESM(require_omitBy());
      import_isEmpty = __toESM(require_isEmpty());
      import_mapValues = __toESM(require_mapValues());
      import_forEach = __toESM(require_forEach());
      import_throttle = __toESM(require_throttle());
      init_shared_constants();
      import_shared6 = __toESM(require_shared2());
      init_IX2EngineActions();
      init_IX2BrowserApi();
      init_IX2VanillaEvents();
      QuickEffectsIdList = Object.keys(QuickEffectIds);
      isQuickEffect = (actionTypeId) => QuickEffectsIdList.includes(actionTypeId);
      ({
        COLON_DELIMITER: COLON_DELIMITER4,
        BOUNDARY_SELECTOR: BOUNDARY_SELECTOR2,
        HTML_ELEMENT: HTML_ELEMENT4,
        RENDER_GENERAL: RENDER_GENERAL4,
        W_MOD_IX: W_MOD_IX2
      } = IX2EngineConstants_exports);
      ({
        getAffectedElements: getAffectedElements2,
        getElementId: getElementId2,
        getDestinationValues: getDestinationValues2,
        observeStore: observeStore2,
        getInstanceId: getInstanceId2,
        renderHTMLElement: renderHTMLElement2,
        clearAllStyles: clearAllStyles2,
        getMaxDurationItemIndex: getMaxDurationItemIndex2,
        getComputedStyle: getComputedStyle3,
        getInstanceOrigin: getInstanceOrigin2,
        reduceListToGroup: reduceListToGroup2,
        shouldNamespaceEventParameter: shouldNamespaceEventParameter2,
        getNamespacedParameterId: getNamespacedParameterId3,
        shouldAllowMediaQuery: shouldAllowMediaQuery2,
        cleanupHTMLElement: cleanupHTMLElement2,
        clearObjectCache: clearObjectCache2,
        stringifyTarget: stringifyTarget2,
        mediaQueriesEqual: mediaQueriesEqual2,
        shallowEqual: shallowEqual2
      } = import_shared6.IX2VanillaUtils);
      ({ isPluginType: isPluginType2, createPluginInstance: createPluginInstance2, getPluginDuration: getPluginDuration2 } = import_shared6.IX2VanillaPlugins);
      ua = navigator.userAgent;
      IS_MOBILE_SAFARI = ua.match(/iPad/i) || ua.match(/iPhone/);
      THROTTLED_EVENT_WAIT = 12;
      WINDOW_RESIZE_EVENTS = ["resize", "orientationchange"];
      mapFoundValues = (object, iteratee) => (0, import_omitBy.default)((0, import_mapValues.default)(object, iteratee), import_isEmpty.default);
      forEachEventTarget = (eventTargets, eventCallback) => {
        (0, import_forEach.default)(eventTargets, (elements, eventId) => {
          elements.forEach((element, index2) => {
            const eventStateKey = eventId + COLON_DELIMITER4 + index2;
            eventCallback(element, eventId, eventStateKey);
          });
        });
      };
      getAffectedForEvent = (event) => {
        const config = { target: event.target, targets: event.targets };
        return getAffectedElements2({ config, elementApi: IX2BrowserApi_exports });
      };
    }
  });

  // packages/systems/ix2/engine/index.js
  var require_engine = __commonJS({
    "packages/systems/ix2/engine/index.js"(exports2) {
      "use strict";
      var _interopRequireWildcard = require_interopRequireWildcard().default;
      var _interopRequireDefault = require_interopRequireDefault().default;
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.actions = void 0;
      exports2.destroy = destroy3;
      exports2.init = init3;
      exports2.setEnv = setEnv;
      exports2.store = void 0;
      require_includes3();
      var _redux = require_lib2();
      var _IX2Reducer = _interopRequireDefault((init_IX2Reducer(), __toCommonJS(IX2Reducer_exports)));
      var _IX2VanillaEngine = (init_IX2VanillaEngine(), __toCommonJS(IX2VanillaEngine_exports));
      var actions = _interopRequireWildcard((init_IX2EngineActions(), __toCommonJS(IX2EngineActions_exports)));
      exports2.actions = actions;
      var store = exports2.store = (0, _redux.createStore)(_IX2Reducer.default);
      function setEnv(env) {
        if (env()) {
          (0, _IX2VanillaEngine.observeRequests)(store);
        }
      }
      function init3(rawData) {
        destroy3();
        (0, _IX2VanillaEngine.startEngine)({
          store,
          rawData,
          allowEvents: true
        });
      }
      function destroy3() {
        (0, _IX2VanillaEngine.stopEngine)(store);
      }
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-ix2.js
  var require_webflow_ix2 = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-ix2.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      var ix2 = require_engine();
      ix2.setEnv(Webflow.env);
      Webflow.define("ix2", module2.exports = function() {
        return ix2;
      });
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-links.js
  var require_webflow_links = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-links.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      Webflow.define("links", module2.exports = function($2, _) {
        var api = {};
        var $win = $2(window);
        var designer;
        var inApp = Webflow.env();
        var location = window.location;
        var tempLink = document.createElement("a");
        var linkCurrent = "w--current";
        var indexPage = /index\.(html|php)$/;
        var dirList = /\/$/;
        var anchors;
        var slug;
        api.ready = api.design = api.preview = init3;
        function init3() {
          designer = inApp && Webflow.env("design");
          slug = Webflow.env("slug") || location.pathname || "";
          Webflow.scroll.off(scroll);
          anchors = [];
          var links = document.links;
          for (var i = 0; i < links.length; ++i) {
            select(links[i]);
          }
          if (anchors.length) {
            Webflow.scroll.on(scroll);
            scroll();
          }
        }
        function select(link) {
          if (link.getAttribute("hreflang")) {
            return;
          }
          var href = designer && link.getAttribute("href-disabled") || link.getAttribute("href");
          tempLink.href = href;
          if (href.indexOf(":") >= 0) {
            return;
          }
          var $link = $2(link);
          if (tempLink.hash.length > 1 && tempLink.host + tempLink.pathname === location.host + location.pathname) {
            if (!/^#[a-zA-Z0-9\-\_]+$/.test(tempLink.hash)) {
              return;
            }
            var $section = $2(tempLink.hash);
            $section.length && anchors.push({
              link: $link,
              sec: $section,
              active: false
            });
            return;
          }
          if (href === "#" || href === "") {
            return;
          }
          var match = tempLink.href === location.href || href === slug || indexPage.test(href) && dirList.test(slug);
          setClass($link, linkCurrent, match);
        }
        function scroll() {
          var viewTop = $win.scrollTop();
          var viewHeight = $win.height();
          _.each(anchors, function(anchor) {
            if (anchor.link.attr("hreflang")) {
              return;
            }
            var $link = anchor.link;
            var $section = anchor.sec;
            var top = $section.offset().top;
            var height2 = $section.outerHeight();
            var offset = viewHeight * 0.5;
            var active2 = $section.is(":visible") && top + height2 - offset >= viewTop && top + offset <= viewTop + viewHeight;
            if (anchor.active === active2) {
              return;
            }
            anchor.active = active2;
            setClass($link, linkCurrent, active2);
          });
        }
        function setClass($elem, className, add2) {
          var exists = $elem.hasClass(className);
          if (add2 && exists) {
            return;
          }
          if (!add2 && !exists) {
            return;
          }
          add2 ? $elem.addClass(className) : $elem.removeClass(className);
        }
        return api;
      });
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-scroll.js
  var require_webflow_scroll = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-scroll.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      Webflow.define("scroll", module2.exports = function($2) {
        var NS_EVENTS = {
          WF_CLICK_EMPTY: "click.wf-empty-link",
          WF_CLICK_SCROLL: "click.wf-scroll"
        };
        var loc = window.location;
        var history = inIframe() ? null : window.history;
        var $win = $2(window);
        var $doc = $2(document);
        var $body = $2(document.body);
        var animate = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) {
          window.setTimeout(fn, 15);
        };
        var rootTag = Webflow.env("editor") ? ".w-editor-body" : "body";
        var headerSelector = "header, " + rootTag + " > .header, " + rootTag + " > .w-nav:not([data-no-scroll])";
        var emptyHrefSelector = 'a[href="#"]';
        var localHrefSelector = 'a[href*="#"]:not(.w-tab-link):not(' + emptyHrefSelector + ")";
        var scrollTargetOutlineCSS = '.wf-force-outline-none[tabindex="-1"]:focus{outline:none;}';
        var focusStylesEl = document.createElement("style");
        focusStylesEl.appendChild(document.createTextNode(scrollTargetOutlineCSS));
        function inIframe() {
          try {
            return Boolean(window.frameElement);
          } catch (e) {
            return true;
          }
        }
        var validHash = /^#[a-zA-Z0-9][\w:.-]*$/;
        function linksToCurrentPage(link) {
          return validHash.test(link.hash) && link.host + link.pathname === loc.host + loc.pathname;
        }
        const reducedMotionMediaQuery = typeof window.matchMedia === "function" && window.matchMedia("(prefers-reduced-motion: reduce)");
        function reducedMotionEnabled() {
          return document.body.getAttribute("data-wf-scroll-motion") === "none" || reducedMotionMediaQuery.matches;
        }
        function setFocusable($el, action) {
          var initialTabindex;
          switch (action) {
            case "add":
              initialTabindex = $el.attr("tabindex");
              if (initialTabindex) {
                $el.attr("data-wf-tabindex-swap", initialTabindex);
              } else {
                $el.attr("tabindex", "-1");
              }
              break;
            case "remove":
              initialTabindex = $el.attr("data-wf-tabindex-swap");
              if (initialTabindex) {
                $el.attr("tabindex", initialTabindex);
                $el.removeAttr("data-wf-tabindex-swap");
              } else {
                $el.removeAttr("tabindex");
              }
              break;
          }
          $el.toggleClass("wf-force-outline-none", action === "add");
        }
        function validateScroll(evt) {
          var target = evt.currentTarget;
          if (
            // Bail if in Designer
            Webflow.env("design") || // Ignore links being used by jQuery mobile
            window.$.mobile && /(?:^|\s)ui-link(?:$|\s)/.test(target.className)
          ) {
            return;
          }
          var hash = linksToCurrentPage(target) ? target.hash : "";
          if (hash === "")
            return;
          var $el = $2(hash);
          if (!$el.length) {
            return;
          }
          if (evt) {
            evt.preventDefault();
            evt.stopPropagation();
          }
          updateHistory(hash, evt);
          window.setTimeout(function() {
            scroll($el, function setFocus() {
              setFocusable($el, "add");
              $el.get(0).focus({
                preventScroll: true
              });
              setFocusable($el, "remove");
            });
          }, evt ? 0 : 300);
        }
        function updateHistory(hash) {
          if (loc.hash !== hash && history && history.pushState && // Navigation breaks Chrome when the protocol is `file:`.
          !(Webflow.env.chrome && loc.protocol === "file:")) {
            var oldHash = history.state && history.state.hash;
            if (oldHash !== hash) {
              history.pushState({
                hash
              }, "", hash);
            }
          }
        }
        function scroll($targetEl, cb) {
          var start = $win.scrollTop();
          var end = calculateScrollEndPosition($targetEl);
          if (start === end)
            return;
          var duration = calculateScrollDuration($targetEl, start, end);
          var clock = Date.now();
          var step = function() {
            var elapsed = Date.now() - clock;
            window.scroll(0, getY(start, end, elapsed, duration));
            if (elapsed <= duration) {
              animate(step);
            } else if (typeof cb === "function") {
              cb();
            }
          };
          animate(step);
        }
        function calculateScrollEndPosition($targetEl) {
          var $header = $2(headerSelector);
          var offsetY = $header.css("position") === "fixed" ? $header.outerHeight() : 0;
          var end = $targetEl.offset().top - offsetY;
          if ($targetEl.data("scroll") === "mid") {
            var available = $win.height() - offsetY;
            var elHeight = $targetEl.outerHeight();
            if (elHeight < available) {
              end -= Math.round((available - elHeight) / 2);
            }
          }
          return end;
        }
        function calculateScrollDuration($targetEl, start, end) {
          if (reducedMotionEnabled())
            return 0;
          var mult = 1;
          $body.add($targetEl).each(function(_, el) {
            var time2 = parseFloat(el.getAttribute("data-scroll-time"));
            if (!isNaN(time2) && time2 >= 0) {
              mult = time2;
            }
          });
          return (472.143 * Math.log(Math.abs(start - end) + 125) - 2e3) * mult;
        }
        function getY(start, end, elapsed, duration) {
          if (elapsed > duration) {
            return end;
          }
          return start + (end - start) * ease3(elapsed / duration);
        }
        function ease3(t) {
          return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
        }
        function ready2() {
          var {
            WF_CLICK_EMPTY,
            WF_CLICK_SCROLL
          } = NS_EVENTS;
          $doc.on(WF_CLICK_SCROLL, localHrefSelector, validateScroll);
          $doc.on(WF_CLICK_EMPTY, emptyHrefSelector, function(e) {
            e.preventDefault();
          });
          document.head.insertBefore(focusStylesEl, document.head.firstChild);
        }
        return {
          ready: ready2
        };
      });
    }
  });

  // packages/shared/render/plugins/BaseSiteModules/webflow-touch.js
  var require_webflow_touch = __commonJS({
    "packages/shared/render/plugins/BaseSiteModules/webflow-touch.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      Webflow.define("touch", module2.exports = function($2) {
        var api = {};
        var getSelection = window.getSelection;
        $2.event.special.tap = {
          bindType: "click",
          delegateType: "click"
        };
        api.init = function(el) {
          el = typeof el === "string" ? $2(el).get(0) : el;
          return el ? new Touch(el) : null;
        };
        function Touch(el) {
          var active2 = false;
          var useTouch = false;
          var thresholdX = Math.min(Math.round(window.innerWidth * 0.04), 40);
          var startX;
          var lastX;
          el.addEventListener("touchstart", start, false);
          el.addEventListener("touchmove", move, false);
          el.addEventListener("touchend", end, false);
          el.addEventListener("touchcancel", cancel, false);
          el.addEventListener("mousedown", start, false);
          el.addEventListener("mousemove", move, false);
          el.addEventListener("mouseup", end, false);
          el.addEventListener("mouseout", cancel, false);
          function start(evt) {
            var touches = evt.touches;
            if (touches && touches.length > 1) {
              return;
            }
            active2 = true;
            if (touches) {
              useTouch = true;
              startX = touches[0].clientX;
            } else {
              startX = evt.clientX;
            }
            lastX = startX;
          }
          function move(evt) {
            if (!active2) {
              return;
            }
            if (useTouch && evt.type === "mousemove") {
              evt.preventDefault();
              evt.stopPropagation();
              return;
            }
            var touches = evt.touches;
            var x = touches ? touches[0].clientX : evt.clientX;
            var velocityX = x - lastX;
            lastX = x;
            if (Math.abs(velocityX) > thresholdX && getSelection && String(getSelection()) === "") {
              triggerEvent("swipe", evt, {
                direction: velocityX > 0 ? "right" : "left"
              });
              cancel();
            }
          }
          function end(evt) {
            if (!active2) {
              return;
            }
            active2 = false;
            if (useTouch && evt.type === "mouseup") {
              evt.preventDefault();
              evt.stopPropagation();
              useTouch = false;
              return;
            }
          }
          function cancel() {
            active2 = false;
          }
          function destroy3() {
            el.removeEventListener("touchstart", start, false);
            el.removeEventListener("touchmove", move, false);
            el.removeEventListener("touchend", end, false);
            el.removeEventListener("touchcancel", cancel, false);
            el.removeEventListener("mousedown", start, false);
            el.removeEventListener("mousemove", move, false);
            el.removeEventListener("mouseup", end, false);
            el.removeEventListener("mouseout", cancel, false);
            el = null;
          }
          this.destroy = destroy3;
        }
        function triggerEvent(type, evt, data2) {
          var newEvent = $2.Event(type, {
            originalEvent: evt
          });
          $2(evt.target).trigger(newEvent, data2);
        }
        api.instance = api.init(document);
        return api;
      });
    }
  });

  // node_modules/custom-event-polyfill/polyfill.js
  var init_polyfill = __esm({
    "node_modules/custom-event-polyfill/polyfill.js"() {
      (function() {
        if (typeof window === "undefined") {
          return;
        }
        try {
          var ce = new window.CustomEvent("test", { cancelable: true });
          ce.preventDefault();
          if (ce.defaultPrevented !== true) {
            throw new Error("Could not prevent default");
          }
        } catch (e) {
          var CustomEvent2 = function(event, params) {
            var evt, origPrevent;
            params = params || {};
            params.bubbles = !!params.bubbles;
            params.cancelable = !!params.cancelable;
            evt = document.createEvent("CustomEvent");
            evt.initCustomEvent(
              event,
              params.bubbles,
              params.cancelable,
              params.detail
            );
            origPrevent = evt.preventDefault;
            evt.preventDefault = function() {
              origPrevent.call(this);
              try {
                Object.defineProperty(this, "defaultPrevented", {
                  get: function() {
                    return true;
                  }
                });
              } catch (e2) {
                this.defaultPrevented = true;
              }
            };
            return evt;
          };
          CustomEvent2.prototype = window.Event.prototype;
          window.CustomEvent = CustomEvent2;
        }
      })();
    }
  });

  // node_modules/core-js/internals/well-known-symbol-wrapped.js
  var require_well_known_symbol_wrapped = __commonJS({
    "node_modules/core-js/internals/well-known-symbol-wrapped.js"(exports2) {
      var wellKnownSymbol = require_well_known_symbol();
      exports2.f = wellKnownSymbol;
    }
  });

  // node_modules/core-js/internals/define-well-known-symbol.js
  var require_define_well_known_symbol = __commonJS({
    "node_modules/core-js/internals/define-well-known-symbol.js"(exports2, module2) {
      var path = require_path();
      var hasOwn2 = require_has_own_property();
      var wrappedWellKnownSymbolModule = require_well_known_symbol_wrapped();
      var defineProperty = require_object_define_property().f;
      module2.exports = function(NAME) {
        var Symbol2 = path.Symbol || (path.Symbol = {});
        if (!hasOwn2(Symbol2, NAME))
          defineProperty(Symbol2, NAME, {
            value: wrappedWellKnownSymbolModule.f(NAME)
          });
      };
    }
  });

  // node_modules/core-js/modules/es.symbol.js
  var require_es_symbol = __commonJS({
    "node_modules/core-js/modules/es.symbol.js"() {
      "use strict";
      var $2 = require_export();
      var global2 = require_global();
      var getBuiltIn = require_get_built_in();
      var apply = require_function_apply();
      var call = require_function_call();
      var uncurryThis = require_function_uncurry_this();
      var IS_PURE = require_is_pure();
      var DESCRIPTORS = require_descriptors();
      var NATIVE_SYMBOL = require_native_symbol();
      var fails = require_fails();
      var hasOwn2 = require_has_own_property();
      var isArray2 = require_is_array();
      var isCallable = require_is_callable();
      var isObject2 = require_is_object();
      var isPrototypeOf = require_object_is_prototype_of();
      var isSymbol = require_is_symbol();
      var anObject = require_an_object();
      var toObject = require_to_object();
      var toIndexedObject = require_to_indexed_object();
      var toPropertyKey = require_to_property_key();
      var $toString = require_to_string();
      var createPropertyDescriptor = require_create_property_descriptor();
      var nativeObjectCreate = require_object_create();
      var objectKeys = require_object_keys();
      var getOwnPropertyNamesModule = require_object_get_own_property_names();
      var getOwnPropertyNamesExternal = require_object_get_own_property_names_external();
      var getOwnPropertySymbolsModule = require_object_get_own_property_symbols();
      var getOwnPropertyDescriptorModule = require_object_get_own_property_descriptor();
      var definePropertyModule = require_object_define_property();
      var propertyIsEnumerableModule = require_object_property_is_enumerable();
      var arraySlice = require_array_slice();
      var redefine = require_redefine();
      var shared = require_shared();
      var sharedKey = require_shared_key();
      var hiddenKeys = require_hidden_keys();
      var uid = require_uid();
      var wellKnownSymbol = require_well_known_symbol();
      var wrappedWellKnownSymbolModule = require_well_known_symbol_wrapped();
      var defineWellKnownSymbol = require_define_well_known_symbol();
      var setToStringTag = require_set_to_string_tag();
      var InternalStateModule = require_internal_state();
      var $forEach = require_array_iteration().forEach;
      var HIDDEN = sharedKey("hidden");
      var SYMBOL = "Symbol";
      var PROTOTYPE = "prototype";
      var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
      var setInternalState = InternalStateModule.set;
      var getInternalState = InternalStateModule.getterFor(SYMBOL);
      var ObjectPrototype = Object[PROTOTYPE];
      var $Symbol = global2.Symbol;
      var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
      var TypeError2 = global2.TypeError;
      var QObject = global2.QObject;
      var $stringify = getBuiltIn("JSON", "stringify");
      var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
      var nativeDefineProperty = definePropertyModule.f;
      var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
      var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
      var push = uncurryThis([].push);
      var AllSymbols = shared("symbols");
      var ObjectPrototypeSymbols = shared("op-symbols");
      var StringToSymbolRegistry = shared("string-to-symbol-registry");
      var SymbolToStringRegistry = shared("symbol-to-string-registry");
      var WellKnownSymbolsStore = shared("wks");
      var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
      var setSymbolDescriptor = DESCRIPTORS && fails(function() {
        return nativeObjectCreate(nativeDefineProperty({}, "a", {
          get: function() {
            return nativeDefineProperty(this, "a", { value: 7 }).a;
          }
        })).a != 7;
      }) ? function(O, P, Attributes) {
        var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
        if (ObjectPrototypeDescriptor)
          delete ObjectPrototype[P];
        nativeDefineProperty(O, P, Attributes);
        if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
          nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
        }
      } : nativeDefineProperty;
      var wrap4 = function(tag, description) {
        var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
        setInternalState(symbol, {
          type: SYMBOL,
          tag,
          description
        });
        if (!DESCRIPTORS)
          symbol.description = description;
        return symbol;
      };
      var $defineProperty = function defineProperty(O, P, Attributes) {
        if (O === ObjectPrototype)
          $defineProperty(ObjectPrototypeSymbols, P, Attributes);
        anObject(O);
        var key2 = toPropertyKey(P);
        anObject(Attributes);
        if (hasOwn2(AllSymbols, key2)) {
          if (!Attributes.enumerable) {
            if (!hasOwn2(O, HIDDEN))
              nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
            O[HIDDEN][key2] = true;
          } else {
            if (hasOwn2(O, HIDDEN) && O[HIDDEN][key2])
              O[HIDDEN][key2] = false;
            Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
          }
          return setSymbolDescriptor(O, key2, Attributes);
        }
        return nativeDefineProperty(O, key2, Attributes);
      };
      var $defineProperties = function defineProperties(O, Properties) {
        anObject(O);
        var properties = toIndexedObject(Properties);
        var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
        $forEach(keys, function(key2) {
          if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key2))
            $defineProperty(O, key2, properties[key2]);
        });
        return O;
      };
      var $create = function create5(O, Properties) {
        return Properties === void 0 ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
      };
      var $propertyIsEnumerable = function propertyIsEnumerable(V) {
        var P = toPropertyKey(V);
        var enumerable = call(nativePropertyIsEnumerable, this, P);
        if (this === ObjectPrototype && hasOwn2(AllSymbols, P) && !hasOwn2(ObjectPrototypeSymbols, P))
          return false;
        return enumerable || !hasOwn2(this, P) || !hasOwn2(AllSymbols, P) || hasOwn2(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
      };
      var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
        var it = toIndexedObject(O);
        var key2 = toPropertyKey(P);
        if (it === ObjectPrototype && hasOwn2(AllSymbols, key2) && !hasOwn2(ObjectPrototypeSymbols, key2))
          return;
        var descriptor = nativeGetOwnPropertyDescriptor(it, key2);
        if (descriptor && hasOwn2(AllSymbols, key2) && !(hasOwn2(it, HIDDEN) && it[HIDDEN][key2])) {
          descriptor.enumerable = true;
        }
        return descriptor;
      };
      var $getOwnPropertyNames = function getOwnPropertyNames(O) {
        var names = nativeGetOwnPropertyNames(toIndexedObject(O));
        var result2 = [];
        $forEach(names, function(key2) {
          if (!hasOwn2(AllSymbols, key2) && !hasOwn2(hiddenKeys, key2))
            push(result2, key2);
        });
        return result2;
      };
      var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
        var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
        var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
        var result2 = [];
        $forEach(names, function(key2) {
          if (hasOwn2(AllSymbols, key2) && (!IS_OBJECT_PROTOTYPE || hasOwn2(ObjectPrototype, key2))) {
            push(result2, AllSymbols[key2]);
          }
        });
        return result2;
      };
      if (!NATIVE_SYMBOL) {
        $Symbol = function Symbol2() {
          if (isPrototypeOf(SymbolPrototype, this))
            throw TypeError2("Symbol is not a constructor");
          var description = !arguments.length || arguments[0] === void 0 ? void 0 : $toString(arguments[0]);
          var tag = uid(description);
          var setter = function(value2) {
            if (this === ObjectPrototype)
              call(setter, ObjectPrototypeSymbols, value2);
            if (hasOwn2(this, HIDDEN) && hasOwn2(this[HIDDEN], tag))
              this[HIDDEN][tag] = false;
            setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value2));
          };
          if (DESCRIPTORS && USE_SETTER)
            setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
          return wrap4(tag, description);
        };
        SymbolPrototype = $Symbol[PROTOTYPE];
        redefine(SymbolPrototype, "toString", function toString3() {
          return getInternalState(this).tag;
        });
        redefine($Symbol, "withoutSetter", function(description) {
          return wrap4(uid(description), description);
        });
        propertyIsEnumerableModule.f = $propertyIsEnumerable;
        definePropertyModule.f = $defineProperty;
        getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
        getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
        getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;
        wrappedWellKnownSymbolModule.f = function(name2) {
          return wrap4(wellKnownSymbol(name2), name2);
        };
        if (DESCRIPTORS) {
          nativeDefineProperty(SymbolPrototype, "description", {
            configurable: true,
            get: function description() {
              return getInternalState(this).description;
            }
          });
          if (!IS_PURE) {
            redefine(ObjectPrototype, "propertyIsEnumerable", $propertyIsEnumerable, { unsafe: true });
          }
        }
      }
      $2({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
        Symbol: $Symbol
      });
      $forEach(objectKeys(WellKnownSymbolsStore), function(name2) {
        defineWellKnownSymbol(name2);
      });
      $2({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
        // `Symbol.for` method
        // https://tc39.es/ecma262/#sec-symbol.for
        "for": function(key2) {
          var string = $toString(key2);
          if (hasOwn2(StringToSymbolRegistry, string))
            return StringToSymbolRegistry[string];
          var symbol = $Symbol(string);
          StringToSymbolRegistry[string] = symbol;
          SymbolToStringRegistry[symbol] = string;
          return symbol;
        },
        // `Symbol.keyFor` method
        // https://tc39.es/ecma262/#sec-symbol.keyfor
        keyFor: function keyFor(sym) {
          if (!isSymbol(sym))
            throw TypeError2(sym + " is not a symbol");
          if (hasOwn2(SymbolToStringRegistry, sym))
            return SymbolToStringRegistry[sym];
        },
        useSetter: function() {
          USE_SETTER = true;
        },
        useSimple: function() {
          USE_SETTER = false;
        }
      });
      $2({ target: "Object", stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
        // `Object.create` method
        // https://tc39.es/ecma262/#sec-object.create
        create: $create,
        // `Object.defineProperty` method
        // https://tc39.es/ecma262/#sec-object.defineproperty
        defineProperty: $defineProperty,
        // `Object.defineProperties` method
        // https://tc39.es/ecma262/#sec-object.defineproperties
        defineProperties: $defineProperties,
        // `Object.getOwnPropertyDescriptor` method
        // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
        getOwnPropertyDescriptor: $getOwnPropertyDescriptor
      });
      $2({ target: "Object", stat: true, forced: !NATIVE_SYMBOL }, {
        // `Object.getOwnPropertyNames` method
        // https://tc39.es/ecma262/#sec-object.getownpropertynames
        getOwnPropertyNames: $getOwnPropertyNames,
        // `Object.getOwnPropertySymbols` method
        // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
        getOwnPropertySymbols: $getOwnPropertySymbols
      });
      $2({ target: "Object", stat: true, forced: fails(function() {
        getOwnPropertySymbolsModule.f(1);
      }) }, {
        getOwnPropertySymbols: function getOwnPropertySymbols(it) {
          return getOwnPropertySymbolsModule.f(toObject(it));
        }
      });
      if ($stringify) {
        FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function() {
          var symbol = $Symbol();
          return $stringify([symbol]) != "[null]" || $stringify({ a: symbol }) != "{}" || $stringify(Object(symbol)) != "{}";
        });
        $2({ target: "JSON", stat: true, forced: FORCED_JSON_STRINGIFY }, {
          // eslint-disable-next-line no-unused-vars -- required for `.length`
          stringify: function stringify3(it, replacer, space) {
            var args = arraySlice(arguments);
            var $replacer = replacer;
            if (!isObject2(replacer) && it === void 0 || isSymbol(it))
              return;
            if (!isArray2(replacer))
              replacer = function(key2, value2) {
                if (isCallable($replacer))
                  value2 = call($replacer, this, key2, value2);
                if (!isSymbol(value2))
                  return value2;
              };
            args[1] = replacer;
            return apply($stringify, null, args);
          }
        });
      }
      var FORCED_JSON_STRINGIFY;
      if (!SymbolPrototype[TO_PRIMITIVE]) {
        valueOf = SymbolPrototype.valueOf;
        redefine(SymbolPrototype, TO_PRIMITIVE, function(hint) {
          return call(valueOf, this);
        });
      }
      var valueOf;
      setToStringTag($Symbol, SYMBOL);
      hiddenKeys[HIDDEN] = true;
    }
  });

  // node_modules/core-js/modules/es.symbol.async-iterator.js
  var require_es_symbol_async_iterator = __commonJS({
    "node_modules/core-js/modules/es.symbol.async-iterator.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("asyncIterator");
    }
  });

  // node_modules/core-js/modules/es.symbol.description.js
  var require_es_symbol_description = __commonJS({
    "node_modules/core-js/modules/es.symbol.description.js"() {
      "use strict";
      var $2 = require_export();
      var DESCRIPTORS = require_descriptors();
      var global2 = require_global();
      var uncurryThis = require_function_uncurry_this();
      var hasOwn2 = require_has_own_property();
      var isCallable = require_is_callable();
      var isPrototypeOf = require_object_is_prototype_of();
      var toString3 = require_to_string();
      var defineProperty = require_object_define_property().f;
      var copyConstructorProperties = require_copy_constructor_properties();
      var NativeSymbol = global2.Symbol;
      var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;
      if (DESCRIPTORS && isCallable(NativeSymbol) && (!("description" in SymbolPrototype) || // Safari 12 bug
      NativeSymbol().description !== void 0)) {
        EmptyStringDescriptionStore = {};
        SymbolWrapper = function Symbol2() {
          var description = arguments.length < 1 || arguments[0] === void 0 ? void 0 : toString3(arguments[0]);
          var result2 = isPrototypeOf(SymbolPrototype, this) ? new NativeSymbol(description) : description === void 0 ? NativeSymbol() : NativeSymbol(description);
          if (description === "")
            EmptyStringDescriptionStore[result2] = true;
          return result2;
        };
        copyConstructorProperties(SymbolWrapper, NativeSymbol);
        SymbolWrapper.prototype = SymbolPrototype;
        SymbolPrototype.constructor = SymbolWrapper;
        NATIVE_SYMBOL = String(NativeSymbol("test")) == "Symbol(test)";
        symbolToString = uncurryThis(SymbolPrototype.toString);
        symbolValueOf = uncurryThis(SymbolPrototype.valueOf);
        regexp = /^Symbol\((.*)\)[^)]+$/;
        replace = uncurryThis("".replace);
        stringSlice = uncurryThis("".slice);
        defineProperty(SymbolPrototype, "description", {
          configurable: true,
          get: function description() {
            var symbol = symbolValueOf(this);
            var string = symbolToString(symbol);
            if (hasOwn2(EmptyStringDescriptionStore, symbol))
              return "";
            var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, "$1");
            return desc === "" ? void 0 : desc;
          }
        });
        $2({ global: true, forced: true }, {
          Symbol: SymbolWrapper
        });
      }
      var EmptyStringDescriptionStore;
      var SymbolWrapper;
      var NATIVE_SYMBOL;
      var symbolToString;
      var symbolValueOf;
      var regexp;
      var replace;
      var stringSlice;
    }
  });

  // node_modules/core-js/modules/es.symbol.has-instance.js
  var require_es_symbol_has_instance = __commonJS({
    "node_modules/core-js/modules/es.symbol.has-instance.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("hasInstance");
    }
  });

  // node_modules/core-js/modules/es.symbol.is-concat-spreadable.js
  var require_es_symbol_is_concat_spreadable = __commonJS({
    "node_modules/core-js/modules/es.symbol.is-concat-spreadable.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("isConcatSpreadable");
    }
  });

  // node_modules/core-js/modules/es.symbol.iterator.js
  var require_es_symbol_iterator = __commonJS({
    "node_modules/core-js/modules/es.symbol.iterator.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("iterator");
    }
  });

  // node_modules/core-js/modules/es.symbol.match.js
  var require_es_symbol_match = __commonJS({
    "node_modules/core-js/modules/es.symbol.match.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("match");
    }
  });

  // node_modules/core-js/modules/es.symbol.match-all.js
  var require_es_symbol_match_all = __commonJS({
    "node_modules/core-js/modules/es.symbol.match-all.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("matchAll");
    }
  });

  // node_modules/core-js/modules/es.symbol.replace.js
  var require_es_symbol_replace = __commonJS({
    "node_modules/core-js/modules/es.symbol.replace.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("replace");
    }
  });

  // node_modules/core-js/modules/es.symbol.search.js
  var require_es_symbol_search = __commonJS({
    "node_modules/core-js/modules/es.symbol.search.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("search");
    }
  });

  // node_modules/core-js/modules/es.symbol.species.js
  var require_es_symbol_species = __commonJS({
    "node_modules/core-js/modules/es.symbol.species.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("species");
    }
  });

  // node_modules/core-js/modules/es.symbol.split.js
  var require_es_symbol_split = __commonJS({
    "node_modules/core-js/modules/es.symbol.split.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("split");
    }
  });

  // node_modules/core-js/modules/es.symbol.to-primitive.js
  var require_es_symbol_to_primitive = __commonJS({
    "node_modules/core-js/modules/es.symbol.to-primitive.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("toPrimitive");
    }
  });

  // node_modules/core-js/modules/es.symbol.to-string-tag.js
  var require_es_symbol_to_string_tag = __commonJS({
    "node_modules/core-js/modules/es.symbol.to-string-tag.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("toStringTag");
    }
  });

  // node_modules/core-js/modules/es.symbol.unscopables.js
  var require_es_symbol_unscopables = __commonJS({
    "node_modules/core-js/modules/es.symbol.unscopables.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("unscopables");
    }
  });

  // node_modules/core-js/modules/es.json.to-string-tag.js
  var require_es_json_to_string_tag = __commonJS({
    "node_modules/core-js/modules/es.json.to-string-tag.js"() {
      var global2 = require_global();
      var setToStringTag = require_set_to_string_tag();
      setToStringTag(global2.JSON, "JSON", true);
    }
  });

  // node_modules/core-js/modules/es.math.to-string-tag.js
  var require_es_math_to_string_tag = __commonJS({
    "node_modules/core-js/modules/es.math.to-string-tag.js"() {
      var setToStringTag = require_set_to_string_tag();
      setToStringTag(Math, "Math", true);
    }
  });

  // node_modules/core-js/modules/es.reflect.to-string-tag.js
  var require_es_reflect_to_string_tag = __commonJS({
    "node_modules/core-js/modules/es.reflect.to-string-tag.js"() {
      var $2 = require_export();
      var global2 = require_global();
      var setToStringTag = require_set_to_string_tag();
      $2({ global: true }, { Reflect: {} });
      setToStringTag(global2.Reflect, "Reflect", true);
    }
  });

  // node_modules/core-js/es/symbol/index.js
  var require_symbol = __commonJS({
    "node_modules/core-js/es/symbol/index.js"(exports2, module2) {
      require_es_array_concat();
      require_es_object_to_string();
      require_es_symbol();
      require_es_symbol_async_iterator();
      require_es_symbol_description();
      require_es_symbol_has_instance();
      require_es_symbol_is_concat_spreadable();
      require_es_symbol_iterator();
      require_es_symbol_match();
      require_es_symbol_match_all();
      require_es_symbol_replace();
      require_es_symbol_search();
      require_es_symbol_species();
      require_es_symbol_split();
      require_es_symbol_to_primitive();
      require_es_symbol_to_string_tag();
      require_es_symbol_unscopables();
      require_es_json_to_string_tag();
      require_es_math_to_string_tag();
      require_es_reflect_to_string_tag();
      var path = require_path();
      module2.exports = path.Symbol;
    }
  });

  // node_modules/core-js/internals/dom-iterables.js
  var require_dom_iterables = __commonJS({
    "node_modules/core-js/internals/dom-iterables.js"(exports2, module2) {
      module2.exports = {
        CSSRuleList: 0,
        CSSStyleDeclaration: 0,
        CSSValueList: 0,
        ClientRectList: 0,
        DOMRectList: 0,
        DOMStringList: 0,
        DOMTokenList: 1,
        DataTransferItemList: 0,
        FileList: 0,
        HTMLAllCollection: 0,
        HTMLCollection: 0,
        HTMLFormElement: 0,
        HTMLSelectElement: 0,
        MediaList: 0,
        MimeTypeArray: 0,
        NamedNodeMap: 0,
        NodeList: 1,
        PaintRequestList: 0,
        Plugin: 0,
        PluginArray: 0,
        SVGLengthList: 0,
        SVGNumberList: 0,
        SVGPathSegList: 0,
        SVGPointList: 0,
        SVGStringList: 0,
        SVGTransformList: 0,
        SourceBufferList: 0,
        StyleSheetList: 0,
        TextTrackCueList: 0,
        TextTrackList: 0,
        TouchList: 0
      };
    }
  });

  // node_modules/core-js/internals/dom-token-list-prototype.js
  var require_dom_token_list_prototype = __commonJS({
    "node_modules/core-js/internals/dom-token-list-prototype.js"(exports2, module2) {
      var documentCreateElement = require_document_create_element();
      var classList = documentCreateElement("span").classList;
      var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;
      module2.exports = DOMTokenListPrototype === Object.prototype ? void 0 : DOMTokenListPrototype;
    }
  });

  // node_modules/core-js/modules/web.dom-collections.iterator.js
  var require_web_dom_collections_iterator = __commonJS({
    "node_modules/core-js/modules/web.dom-collections.iterator.js"() {
      var global2 = require_global();
      var DOMIterables = require_dom_iterables();
      var DOMTokenListPrototype = require_dom_token_list_prototype();
      var ArrayIteratorMethods = require_es_array_iterator();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var wellKnownSymbol = require_well_known_symbol();
      var ITERATOR = wellKnownSymbol("iterator");
      var TO_STRING_TAG = wellKnownSymbol("toStringTag");
      var ArrayValues = ArrayIteratorMethods.values;
      var handlePrototype = function(CollectionPrototype, COLLECTION_NAME2) {
        if (CollectionPrototype) {
          if (CollectionPrototype[ITERATOR] !== ArrayValues)
            try {
              createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
            } catch (error) {
              CollectionPrototype[ITERATOR] = ArrayValues;
            }
          if (!CollectionPrototype[TO_STRING_TAG]) {
            createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME2);
          }
          if (DOMIterables[COLLECTION_NAME2])
            for (var METHOD_NAME in ArrayIteratorMethods) {
              if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME])
                try {
                  createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
                } catch (error) {
                  CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
                }
            }
        }
      };
      for (COLLECTION_NAME in DOMIterables) {
        handlePrototype(global2[COLLECTION_NAME] && global2[COLLECTION_NAME].prototype, COLLECTION_NAME);
      }
      var COLLECTION_NAME;
      handlePrototype(DOMTokenListPrototype, "DOMTokenList");
    }
  });

  // node_modules/core-js/stable/symbol/index.js
  var require_symbol2 = __commonJS({
    "node_modules/core-js/stable/symbol/index.js"(exports2, module2) {
      var parent2 = require_symbol();
      require_web_dom_collections_iterator();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/modules/esnext.symbol.async-dispose.js
  var require_esnext_symbol_async_dispose = __commonJS({
    "node_modules/core-js/modules/esnext.symbol.async-dispose.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("asyncDispose");
    }
  });

  // node_modules/core-js/modules/esnext.symbol.dispose.js
  var require_esnext_symbol_dispose = __commonJS({
    "node_modules/core-js/modules/esnext.symbol.dispose.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("dispose");
    }
  });

  // node_modules/core-js/modules/esnext.symbol.matcher.js
  var require_esnext_symbol_matcher = __commonJS({
    "node_modules/core-js/modules/esnext.symbol.matcher.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("matcher");
    }
  });

  // node_modules/core-js/modules/esnext.symbol.metadata.js
  var require_esnext_symbol_metadata = __commonJS({
    "node_modules/core-js/modules/esnext.symbol.metadata.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("metadata");
    }
  });

  // node_modules/core-js/modules/esnext.symbol.observable.js
  var require_esnext_symbol_observable = __commonJS({
    "node_modules/core-js/modules/esnext.symbol.observable.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("observable");
    }
  });

  // node_modules/core-js/modules/esnext.symbol.pattern-match.js
  var require_esnext_symbol_pattern_match = __commonJS({
    "node_modules/core-js/modules/esnext.symbol.pattern-match.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("patternMatch");
    }
  });

  // node_modules/core-js/modules/esnext.symbol.replace-all.js
  var require_esnext_symbol_replace_all = __commonJS({
    "node_modules/core-js/modules/esnext.symbol.replace-all.js"() {
      var defineWellKnownSymbol = require_define_well_known_symbol();
      defineWellKnownSymbol("replaceAll");
    }
  });

  // node_modules/core-js/features/symbol/index.js
  var require_symbol3 = __commonJS({
    "node_modules/core-js/features/symbol/index.js"(exports2, module2) {
      var parent2 = require_symbol2();
      require_esnext_symbol_async_dispose();
      require_esnext_symbol_dispose();
      require_esnext_symbol_matcher();
      require_esnext_symbol_metadata();
      require_esnext_symbol_observable();
      require_esnext_symbol_pattern_match();
      require_esnext_symbol_replace_all();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/internals/string-repeat.js
  var require_string_repeat = __commonJS({
    "node_modules/core-js/internals/string-repeat.js"(exports2, module2) {
      "use strict";
      var global2 = require_global();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var toString3 = require_to_string();
      var requireObjectCoercible = require_require_object_coercible();
      var RangeError = global2.RangeError;
      module2.exports = function repeat(count) {
        var str = toString3(requireObjectCoercible(this));
        var result2 = "";
        var n = toIntegerOrInfinity(count);
        if (n < 0 || n == Infinity)
          throw RangeError("Wrong number of repetitions");
        for (; n > 0; (n >>>= 1) && (str += str))
          if (n & 1)
            result2 += str;
        return result2;
      };
    }
  });

  // node_modules/core-js/modules/es.string.repeat.js
  var require_es_string_repeat = __commonJS({
    "node_modules/core-js/modules/es.string.repeat.js"() {
      var $2 = require_export();
      var repeat = require_string_repeat();
      $2({ target: "String", proto: true }, {
        repeat
      });
    }
  });

  // node_modules/core-js/es/string/repeat.js
  var require_repeat = __commonJS({
    "node_modules/core-js/es/string/repeat.js"(exports2, module2) {
      require_es_string_repeat();
      var entryUnbind = require_entry_unbind();
      module2.exports = entryUnbind("String", "repeat");
    }
  });

  // node_modules/core-js/stable/string/repeat.js
  var require_repeat2 = __commonJS({
    "node_modules/core-js/stable/string/repeat.js"(exports2, module2) {
      var parent2 = require_repeat();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/features/string/repeat.js
  var require_repeat3 = __commonJS({
    "node_modules/core-js/features/string/repeat.js"(exports2, module2) {
      var parent2 = require_repeat2();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/internals/object-to-array.js
  var require_object_to_array = __commonJS({
    "node_modules/core-js/internals/object-to-array.js"(exports2, module2) {
      var DESCRIPTORS = require_descriptors();
      var uncurryThis = require_function_uncurry_this();
      var objectKeys = require_object_keys();
      var toIndexedObject = require_to_indexed_object();
      var $propertyIsEnumerable = require_object_property_is_enumerable().f;
      var propertyIsEnumerable = uncurryThis($propertyIsEnumerable);
      var push = uncurryThis([].push);
      var createMethod = function(TO_ENTRIES) {
        return function(it) {
          var O = toIndexedObject(it);
          var keys = objectKeys(O);
          var length2 = keys.length;
          var i = 0;
          var result2 = [];
          var key2;
          while (length2 > i) {
            key2 = keys[i++];
            if (!DESCRIPTORS || propertyIsEnumerable(O, key2)) {
              push(result2, TO_ENTRIES ? [key2, O[key2]] : O[key2]);
            }
          }
          return result2;
        };
      };
      module2.exports = {
        // `Object.entries` method
        // https://tc39.es/ecma262/#sec-object.entries
        entries: createMethod(true),
        // `Object.values` method
        // https://tc39.es/ecma262/#sec-object.values
        values: createMethod(false)
      };
    }
  });

  // node_modules/core-js/modules/es.object.entries.js
  var require_es_object_entries = __commonJS({
    "node_modules/core-js/modules/es.object.entries.js"() {
      var $2 = require_export();
      var $entries = require_object_to_array().entries;
      $2({ target: "Object", stat: true }, {
        entries: function entries(O) {
          return $entries(O);
        }
      });
    }
  });

  // node_modules/core-js/es/object/entries.js
  var require_entries = __commonJS({
    "node_modules/core-js/es/object/entries.js"(exports2, module2) {
      require_es_object_entries();
      var path = require_path();
      module2.exports = path.Object.entries;
    }
  });

  // node_modules/core-js/stable/object/entries.js
  var require_entries2 = __commonJS({
    "node_modules/core-js/stable/object/entries.js"(exports2, module2) {
      var parent2 = require_entries();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/features/object/entries.js
  var require_entries3 = __commonJS({
    "node_modules/core-js/features/object/entries.js"(exports2, module2) {
      var parent2 = require_entries2();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/modules/web.dom-collections.for-each.js
  var require_web_dom_collections_for_each = __commonJS({
    "node_modules/core-js/modules/web.dom-collections.for-each.js"() {
      var global2 = require_global();
      var DOMIterables = require_dom_iterables();
      var DOMTokenListPrototype = require_dom_token_list_prototype();
      var forEach6 = require_array_for_each();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var handlePrototype = function(CollectionPrototype) {
        if (CollectionPrototype && CollectionPrototype.forEach !== forEach6)
          try {
            createNonEnumerableProperty(CollectionPrototype, "forEach", forEach6);
          } catch (error) {
            CollectionPrototype.forEach = forEach6;
          }
      };
      for (COLLECTION_NAME in DOMIterables) {
        if (DOMIterables[COLLECTION_NAME]) {
          handlePrototype(global2[COLLECTION_NAME] && global2[COLLECTION_NAME].prototype);
        }
      }
      var COLLECTION_NAME;
      handlePrototype(DOMTokenListPrototype);
    }
  });

  // node_modules/core-js/stable/dom-collections/for-each.js
  var require_for_each = __commonJS({
    "node_modules/core-js/stable/dom-collections/for-each.js"(exports2, module2) {
      require_web_dom_collections_for_each();
      var parent2 = require_array_for_each();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/features/dom-collections/for-each.js
  var require_for_each2 = __commonJS({
    "node_modules/core-js/features/dom-collections/for-each.js"(exports2, module2) {
      var parent2 = require_for_each();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/internals/this-number-value.js
  var require_this_number_value = __commonJS({
    "node_modules/core-js/internals/this-number-value.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      module2.exports = uncurryThis(1 .valueOf);
    }
  });

  // node_modules/core-js/internals/whitespaces.js
  var require_whitespaces = __commonJS({
    "node_modules/core-js/internals/whitespaces.js"(exports2, module2) {
      module2.exports = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
    }
  });

  // node_modules/core-js/internals/string-trim.js
  var require_string_trim = __commonJS({
    "node_modules/core-js/internals/string-trim.js"(exports2, module2) {
      var uncurryThis = require_function_uncurry_this();
      var requireObjectCoercible = require_require_object_coercible();
      var toString3 = require_to_string();
      var whitespaces = require_whitespaces();
      var replace = uncurryThis("".replace);
      var whitespace = "[" + whitespaces + "]";
      var ltrim = RegExp("^" + whitespace + whitespace + "*");
      var rtrim = RegExp(whitespace + whitespace + "*$");
      var createMethod = function(TYPE) {
        return function($this) {
          var string = toString3(requireObjectCoercible($this));
          if (TYPE & 1)
            string = replace(string, ltrim, "");
          if (TYPE & 2)
            string = replace(string, rtrim, "");
          return string;
        };
      };
      module2.exports = {
        // `String.prototype.{ trimLeft, trimStart }` methods
        // https://tc39.es/ecma262/#sec-string.prototype.trimstart
        start: createMethod(1),
        // `String.prototype.{ trimRight, trimEnd }` methods
        // https://tc39.es/ecma262/#sec-string.prototype.trimend
        end: createMethod(2),
        // `String.prototype.trim` method
        // https://tc39.es/ecma262/#sec-string.prototype.trim
        trim: createMethod(3)
      };
    }
  });

  // node_modules/core-js/modules/es.number.constructor.js
  var require_es_number_constructor = __commonJS({
    "node_modules/core-js/modules/es.number.constructor.js"() {
      "use strict";
      var DESCRIPTORS = require_descriptors();
      var global2 = require_global();
      var uncurryThis = require_function_uncurry_this();
      var isForced = require_is_forced();
      var redefine = require_redefine();
      var hasOwn2 = require_has_own_property();
      var inheritIfRequired = require_inherit_if_required();
      var isPrototypeOf = require_object_is_prototype_of();
      var isSymbol = require_is_symbol();
      var toPrimitive = require_to_primitive();
      var fails = require_fails();
      var getOwnPropertyNames = require_object_get_own_property_names().f;
      var getOwnPropertyDescriptor = require_object_get_own_property_descriptor().f;
      var defineProperty = require_object_define_property().f;
      var thisNumberValue = require_this_number_value();
      var trim2 = require_string_trim().trim;
      var NUMBER = "Number";
      var NativeNumber = global2[NUMBER];
      var NumberPrototype = NativeNumber.prototype;
      var TypeError2 = global2.TypeError;
      var arraySlice = uncurryThis("".slice);
      var charCodeAt = uncurryThis("".charCodeAt);
      var toNumeric = function(value2) {
        var primValue = toPrimitive(value2, "number");
        return typeof primValue == "bigint" ? primValue : toNumber(primValue);
      };
      var toNumber = function(argument) {
        var it = toPrimitive(argument, "number");
        var first, third, radix, maxCode, digits, length2, index2, code;
        if (isSymbol(it))
          throw TypeError2("Cannot convert a Symbol value to a number");
        if (typeof it == "string" && it.length > 2) {
          it = trim2(it);
          first = charCodeAt(it, 0);
          if (first === 43 || first === 45) {
            third = charCodeAt(it, 2);
            if (third === 88 || third === 120)
              return NaN;
          } else if (first === 48) {
            switch (charCodeAt(it, 1)) {
              case 66:
              case 98:
                radix = 2;
                maxCode = 49;
                break;
              case 79:
              case 111:
                radix = 8;
                maxCode = 55;
                break;
              default:
                return +it;
            }
            digits = arraySlice(it, 2);
            length2 = digits.length;
            for (index2 = 0; index2 < length2; index2++) {
              code = charCodeAt(digits, index2);
              if (code < 48 || code > maxCode)
                return NaN;
            }
            return parseInt(digits, radix);
          }
        }
        return +it;
      };
      if (isForced(NUMBER, !NativeNumber(" 0o1") || !NativeNumber("0b1") || NativeNumber("+0x1"))) {
        NumberWrapper = function Number2(value2) {
          var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value2));
          var dummy = this;
          return isPrototypeOf(NumberPrototype, dummy) && fails(function() {
            thisNumberValue(dummy);
          }) ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;
        };
        for (keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (
          // ES3:
          "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(",")
        ), j = 0; keys.length > j; j++) {
          if (hasOwn2(NativeNumber, key2 = keys[j]) && !hasOwn2(NumberWrapper, key2)) {
            defineProperty(NumberWrapper, key2, getOwnPropertyDescriptor(NativeNumber, key2));
          }
        }
        NumberWrapper.prototype = NumberPrototype;
        NumberPrototype.constructor = NumberWrapper;
        redefine(global2, NUMBER, NumberWrapper);
      }
      var NumberWrapper;
      var keys;
      var j;
      var key2;
    }
  });

  // node_modules/core-js/modules/es.number.epsilon.js
  var require_es_number_epsilon = __commonJS({
    "node_modules/core-js/modules/es.number.epsilon.js"() {
      var $2 = require_export();
      $2({ target: "Number", stat: true }, {
        EPSILON: Math.pow(2, -52)
      });
    }
  });

  // node_modules/core-js/internals/number-is-finite.js
  var require_number_is_finite = __commonJS({
    "node_modules/core-js/internals/number-is-finite.js"(exports2, module2) {
      var global2 = require_global();
      var globalIsFinite = global2.isFinite;
      module2.exports = Number.isFinite || function isFinite2(it) {
        return typeof it == "number" && globalIsFinite(it);
      };
    }
  });

  // node_modules/core-js/modules/es.number.is-finite.js
  var require_es_number_is_finite = __commonJS({
    "node_modules/core-js/modules/es.number.is-finite.js"() {
      var $2 = require_export();
      var numberIsFinite = require_number_is_finite();
      $2({ target: "Number", stat: true }, { isFinite: numberIsFinite });
    }
  });

  // node_modules/core-js/internals/is-integral-number.js
  var require_is_integral_number = __commonJS({
    "node_modules/core-js/internals/is-integral-number.js"(exports2, module2) {
      var isObject2 = require_is_object();
      var floor = Math.floor;
      module2.exports = Number.isInteger || function isInteger2(it) {
        return !isObject2(it) && isFinite(it) && floor(it) === it;
      };
    }
  });

  // node_modules/core-js/modules/es.number.is-integer.js
  var require_es_number_is_integer = __commonJS({
    "node_modules/core-js/modules/es.number.is-integer.js"() {
      var $2 = require_export();
      var isIntegralNumber = require_is_integral_number();
      $2({ target: "Number", stat: true }, {
        isInteger: isIntegralNumber
      });
    }
  });

  // node_modules/core-js/modules/es.number.is-nan.js
  var require_es_number_is_nan = __commonJS({
    "node_modules/core-js/modules/es.number.is-nan.js"() {
      var $2 = require_export();
      $2({ target: "Number", stat: true }, {
        isNaN: function isNaN2(number) {
          return number != number;
        }
      });
    }
  });

  // node_modules/core-js/modules/es.number.is-safe-integer.js
  var require_es_number_is_safe_integer = __commonJS({
    "node_modules/core-js/modules/es.number.is-safe-integer.js"() {
      var $2 = require_export();
      var isIntegralNumber = require_is_integral_number();
      var abs = Math.abs;
      $2({ target: "Number", stat: true }, {
        isSafeInteger: function isSafeInteger(number) {
          return isIntegralNumber(number) && abs(number) <= 9007199254740991;
        }
      });
    }
  });

  // node_modules/core-js/modules/es.number.max-safe-integer.js
  var require_es_number_max_safe_integer = __commonJS({
    "node_modules/core-js/modules/es.number.max-safe-integer.js"() {
      var $2 = require_export();
      $2({ target: "Number", stat: true }, {
        MAX_SAFE_INTEGER: 9007199254740991
      });
    }
  });

  // node_modules/core-js/modules/es.number.min-safe-integer.js
  var require_es_number_min_safe_integer = __commonJS({
    "node_modules/core-js/modules/es.number.min-safe-integer.js"() {
      var $2 = require_export();
      $2({ target: "Number", stat: true }, {
        MIN_SAFE_INTEGER: -9007199254740991
      });
    }
  });

  // node_modules/core-js/internals/number-parse-float.js
  var require_number_parse_float = __commonJS({
    "node_modules/core-js/internals/number-parse-float.js"(exports2, module2) {
      var global2 = require_global();
      var fails = require_fails();
      var uncurryThis = require_function_uncurry_this();
      var toString3 = require_to_string();
      var trim2 = require_string_trim().trim;
      var whitespaces = require_whitespaces();
      var charAt = uncurryThis("".charAt);
      var n$ParseFloat = global2.parseFloat;
      var Symbol2 = global2.Symbol;
      var ITERATOR = Symbol2 && Symbol2.iterator;
      var FORCED = 1 / n$ParseFloat(whitespaces + "-0") !== -Infinity || ITERATOR && !fails(function() {
        n$ParseFloat(Object(ITERATOR));
      });
      module2.exports = FORCED ? function parseFloat2(string) {
        var trimmedString = trim2(toString3(string));
        var result2 = n$ParseFloat(trimmedString);
        return result2 === 0 && charAt(trimmedString, 0) == "-" ? -0 : result2;
      } : n$ParseFloat;
    }
  });

  // node_modules/core-js/modules/es.number.parse-float.js
  var require_es_number_parse_float = __commonJS({
    "node_modules/core-js/modules/es.number.parse-float.js"() {
      var $2 = require_export();
      var parseFloat2 = require_number_parse_float();
      $2({ target: "Number", stat: true, forced: Number.parseFloat != parseFloat2 }, {
        parseFloat: parseFloat2
      });
    }
  });

  // node_modules/core-js/internals/number-parse-int.js
  var require_number_parse_int = __commonJS({
    "node_modules/core-js/internals/number-parse-int.js"(exports2, module2) {
      var global2 = require_global();
      var fails = require_fails();
      var uncurryThis = require_function_uncurry_this();
      var toString3 = require_to_string();
      var trim2 = require_string_trim().trim;
      var whitespaces = require_whitespaces();
      var $parseInt = global2.parseInt;
      var Symbol2 = global2.Symbol;
      var ITERATOR = Symbol2 && Symbol2.iterator;
      var hex = /^[+-]?0x/i;
      var exec = uncurryThis(hex.exec);
      var FORCED = $parseInt(whitespaces + "08") !== 8 || $parseInt(whitespaces + "0x16") !== 22 || ITERATOR && !fails(function() {
        $parseInt(Object(ITERATOR));
      });
      module2.exports = FORCED ? function parseInt2(string, radix) {
        var S = trim2(toString3(string));
        return $parseInt(S, radix >>> 0 || (exec(hex, S) ? 16 : 10));
      } : $parseInt;
    }
  });

  // node_modules/core-js/modules/es.number.parse-int.js
  var require_es_number_parse_int = __commonJS({
    "node_modules/core-js/modules/es.number.parse-int.js"() {
      var $2 = require_export();
      var parseInt2 = require_number_parse_int();
      $2({ target: "Number", stat: true, forced: Number.parseInt != parseInt2 }, {
        parseInt: parseInt2
      });
    }
  });

  // node_modules/core-js/modules/es.number.to-fixed.js
  var require_es_number_to_fixed = __commonJS({
    "node_modules/core-js/modules/es.number.to-fixed.js"() {
      "use strict";
      var $2 = require_export();
      var global2 = require_global();
      var uncurryThis = require_function_uncurry_this();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var thisNumberValue = require_this_number_value();
      var $repeat = require_string_repeat();
      var fails = require_fails();
      var RangeError = global2.RangeError;
      var String2 = global2.String;
      var floor = Math.floor;
      var repeat = uncurryThis($repeat);
      var stringSlice = uncurryThis("".slice);
      var un$ToFixed = uncurryThis(1 .toFixed);
      var pow = function(x, n, acc) {
        return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
      };
      var log = function(x) {
        var n = 0;
        var x2 = x;
        while (x2 >= 4096) {
          n += 12;
          x2 /= 4096;
        }
        while (x2 >= 2) {
          n += 1;
          x2 /= 2;
        }
        return n;
      };
      var multiply = function(data2, n, c) {
        var index2 = -1;
        var c2 = c;
        while (++index2 < 6) {
          c2 += n * data2[index2];
          data2[index2] = c2 % 1e7;
          c2 = floor(c2 / 1e7);
        }
      };
      var divide = function(data2, n) {
        var index2 = 6;
        var c = 0;
        while (--index2 >= 0) {
          c += data2[index2];
          data2[index2] = floor(c / n);
          c = c % n * 1e7;
        }
      };
      var dataToString = function(data2) {
        var index2 = 6;
        var s = "";
        while (--index2 >= 0) {
          if (s !== "" || index2 === 0 || data2[index2] !== 0) {
            var t = String2(data2[index2]);
            s = s === "" ? t : s + repeat("0", 7 - t.length) + t;
          }
        }
        return s;
      };
      var FORCED = fails(function() {
        return un$ToFixed(8e-5, 3) !== "0.000" || un$ToFixed(0.9, 0) !== "1" || un$ToFixed(1.255, 2) !== "1.25" || un$ToFixed(1000000000000000100, 0) !== "1000000000000000128";
      }) || !fails(function() {
        un$ToFixed({});
      });
      $2({ target: "Number", proto: true, forced: FORCED }, {
        toFixed: function toFixed(fractionDigits) {
          var number = thisNumberValue(this);
          var fractDigits = toIntegerOrInfinity(fractionDigits);
          var data2 = [0, 0, 0, 0, 0, 0];
          var sign = "";
          var result2 = "0";
          var e, z, j, k;
          if (fractDigits < 0 || fractDigits > 20)
            throw RangeError("Incorrect fraction digits");
          if (number != number)
            return "NaN";
          if (number <= -1e21 || number >= 1e21)
            return String2(number);
          if (number < 0) {
            sign = "-";
            number = -number;
          }
          if (number > 1e-21) {
            e = log(number * pow(2, 69, 1)) - 69;
            z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
            z *= 4503599627370496;
            e = 52 - e;
            if (e > 0) {
              multiply(data2, 0, z);
              j = fractDigits;
              while (j >= 7) {
                multiply(data2, 1e7, 0);
                j -= 7;
              }
              multiply(data2, pow(10, j, 1), 0);
              j = e - 1;
              while (j >= 23) {
                divide(data2, 1 << 23);
                j -= 23;
              }
              divide(data2, 1 << j);
              multiply(data2, 1, 1);
              divide(data2, 2);
              result2 = dataToString(data2);
            } else {
              multiply(data2, 0, z);
              multiply(data2, 1 << -e, 0);
              result2 = dataToString(data2) + repeat("0", fractDigits);
            }
          }
          if (fractDigits > 0) {
            k = result2.length;
            result2 = sign + (k <= fractDigits ? "0." + repeat("0", fractDigits - k) + result2 : stringSlice(result2, 0, k - fractDigits) + "." + stringSlice(result2, k - fractDigits));
          } else {
            result2 = sign + result2;
          }
          return result2;
        }
      });
    }
  });

  // node_modules/core-js/modules/es.number.to-precision.js
  var require_es_number_to_precision = __commonJS({
    "node_modules/core-js/modules/es.number.to-precision.js"() {
      "use strict";
      var $2 = require_export();
      var uncurryThis = require_function_uncurry_this();
      var fails = require_fails();
      var thisNumberValue = require_this_number_value();
      var un$ToPrecision = uncurryThis(1 .toPrecision);
      var FORCED = fails(function() {
        return un$ToPrecision(1, void 0) !== "1";
      }) || !fails(function() {
        un$ToPrecision({});
      });
      $2({ target: "Number", proto: true, forced: FORCED }, {
        toPrecision: function toPrecision(precision) {
          return precision === void 0 ? un$ToPrecision(thisNumberValue(this)) : un$ToPrecision(thisNumberValue(this), precision);
        }
      });
    }
  });

  // node_modules/core-js/es/number/index.js
  var require_number = __commonJS({
    "node_modules/core-js/es/number/index.js"(exports2, module2) {
      require_es_number_constructor();
      require_es_number_epsilon();
      require_es_number_is_finite();
      require_es_number_is_integer();
      require_es_number_is_nan();
      require_es_number_is_safe_integer();
      require_es_number_max_safe_integer();
      require_es_number_min_safe_integer();
      require_es_number_parse_float();
      require_es_number_parse_int();
      require_es_number_to_fixed();
      require_es_number_to_precision();
      var path = require_path();
      module2.exports = path.Number;
    }
  });

  // node_modules/core-js/stable/number/index.js
  var require_number2 = __commonJS({
    "node_modules/core-js/stable/number/index.js"(exports2, module2) {
      var parent2 = require_number();
      module2.exports = parent2;
    }
  });

  // node_modules/core-js/modules/esnext.number.from-string.js
  var require_esnext_number_from_string = __commonJS({
    "node_modules/core-js/modules/esnext.number.from-string.js"() {
      "use strict";
      var $2 = require_export();
      var global2 = require_global();
      var uncurryThis = require_function_uncurry_this();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var parseInt2 = require_number_parse_int();
      var INVALID_NUMBER_REPRESENTATION = "Invalid number representation";
      var INVALID_RADIX = "Invalid radix";
      var RangeError = global2.RangeError;
      var SyntaxError2 = global2.SyntaxError;
      var TypeError2 = global2.TypeError;
      var valid = /^[\da-z]+$/;
      var charAt = uncurryThis("".charAt);
      var exec = uncurryThis(valid.exec);
      var numberToString = uncurryThis(1 .toString);
      var stringSlice = uncurryThis("".slice);
      $2({ target: "Number", stat: true }, {
        fromString: function fromString(string, radix) {
          var sign = 1;
          var R, mathNum;
          if (typeof string != "string")
            throw TypeError2(INVALID_NUMBER_REPRESENTATION);
          if (!string.length)
            throw SyntaxError2(INVALID_NUMBER_REPRESENTATION);
          if (charAt(string, 0) == "-") {
            sign = -1;
            string = stringSlice(string, 1);
            if (!string.length)
              throw SyntaxError2(INVALID_NUMBER_REPRESENTATION);
          }
          R = radix === void 0 ? 10 : toIntegerOrInfinity(radix);
          if (R < 2 || R > 36)
            throw RangeError(INVALID_RADIX);
          if (!exec(valid, string) || numberToString(mathNum = parseInt2(string, R), R) !== string) {
            throw SyntaxError2(INVALID_NUMBER_REPRESENTATION);
          }
          return sign * mathNum;
        }
      });
    }
  });

  // node_modules/core-js/internals/numeric-range-iterator.js
  var require_numeric_range_iterator = __commonJS({
    "node_modules/core-js/internals/numeric-range-iterator.js"(exports2, module2) {
      "use strict";
      var global2 = require_global();
      var InternalStateModule = require_internal_state();
      var createIteratorConstructor = require_create_iterator_constructor();
      var isObject2 = require_is_object();
      var defineProperties = require_object_define_properties();
      var DESCRIPTORS = require_descriptors();
      var INCORRECT_RANGE = "Incorrect Number.range arguments";
      var NUMERIC_RANGE_ITERATOR = "NumericRangeIterator";
      var setInternalState = InternalStateModule.set;
      var getInternalState = InternalStateModule.getterFor(NUMERIC_RANGE_ITERATOR);
      var RangeError = global2.RangeError;
      var TypeError2 = global2.TypeError;
      var $RangeIterator = createIteratorConstructor(function NumericRangeIterator(start, end, option, type, zero, one) {
        if (typeof start != type || end !== Infinity && end !== -Infinity && typeof end != type) {
          throw new TypeError2(INCORRECT_RANGE);
        }
        if (start === Infinity || start === -Infinity) {
          throw new RangeError(INCORRECT_RANGE);
        }
        var ifIncrease = end > start;
        var inclusiveEnd = false;
        var step;
        if (option === void 0) {
          step = void 0;
        } else if (isObject2(option)) {
          step = option.step;
          inclusiveEnd = !!option.inclusive;
        } else if (typeof option == type) {
          step = option;
        } else {
          throw new TypeError2(INCORRECT_RANGE);
        }
        if (step == null) {
          step = ifIncrease ? one : -one;
        }
        if (typeof step != type) {
          throw new TypeError2(INCORRECT_RANGE);
        }
        if (step === Infinity || step === -Infinity || step === zero && start !== end) {
          throw new RangeError(INCORRECT_RANGE);
        }
        var hitsEnd = start != start || end != end || step != step || end > start !== step > zero;
        setInternalState(this, {
          type: NUMERIC_RANGE_ITERATOR,
          start,
          end,
          step,
          inclusiveEnd,
          hitsEnd,
          currentCount: zero,
          zero
        });
        if (!DESCRIPTORS) {
          this.start = start;
          this.end = end;
          this.step = step;
          this.inclusive = inclusiveEnd;
        }
      }, NUMERIC_RANGE_ITERATOR, function next() {
        var state = getInternalState(this);
        if (state.hitsEnd)
          return { value: void 0, done: true };
        var start = state.start;
        var end = state.end;
        var step = state.step;
        var currentYieldingValue = start + step * state.currentCount++;
        if (currentYieldingValue === end)
          state.hitsEnd = true;
        var inclusiveEnd = state.inclusiveEnd;
        var endCondition;
        if (end > start) {
          endCondition = inclusiveEnd ? currentYieldingValue > end : currentYieldingValue >= end;
        } else {
          endCondition = inclusiveEnd ? end > currentYieldingValue : end >= currentYieldingValue;
        }
        if (endCondition) {
          return { value: void 0, done: state.hitsEnd = true };
        }
        return { value: currentYieldingValue, done: false };
      });
      var getter = function(fn) {
        return { get: fn, set: function() {
        }, configurable: true, enumerable: false };
      };
      if (DESCRIPTORS) {
        defineProperties($RangeIterator.prototype, {
          start: getter(function() {
            return getInternalState(this).start;
          }),
          end: getter(function() {
            return getInternalState(this).end;
          }),
          inclusive: getter(function() {
            return getInternalState(this).inclusiveEnd;
          }),
          step: getter(function() {
            return getInternalState(this).step;
          })
        });
      }
      module2.exports = $RangeIterator;
    }
  });

  // node_modules/core-js/modules/esnext.number.range.js
  var require_esnext_number_range = __commonJS({
    "node_modules/core-js/modules/esnext.number.range.js"() {
      "use strict";
      var $2 = require_export();
      var NumericRangeIterator = require_numeric_range_iterator();
      $2({ target: "Number", stat: true }, {
        range: function range(start, end, option) {
          return new NumericRangeIterator(start, end, option, "number", 0, 1);
        }
      });
    }
  });

  // node_modules/core-js/features/number/index.js
  var require_number3 = __commonJS({
    "node_modules/core-js/features/number/index.js"(exports2, module2) {
      var parent2 = require_number2();
      module2.exports = parent2;
      require_es_object_to_string();
      require_esnext_number_from_string();
      require_esnext_number_range();
    }
  });

  // node_modules/tslib/tslib.es6.mjs
  function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }
  function __rest(s, e) {
    var t = {};
    for (var p in s)
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  }
  function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value2) {
      return value2 instanceof P ? value2 : new P(function(resolve2) {
        resolve2(value2);
      });
    }
    return new (P || (P = Promise))(function(resolve2, reject2) {
      function fulfilled(value2) {
        try {
          step(generator.next(value2));
        } catch (e) {
          reject2(e);
        }
      }
      function rejected(value2) {
        try {
          step(generator["throw"](value2));
        } catch (e) {
          reject2(e);
        }
      }
      function step(result2) {
        result2.done ? resolve2(result2.value) : adopt(result2.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }
  function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() {
      if (t[0] & 1)
        throw t[1];
      return t[1];
    }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
      return this;
    }), g;
    function verb(n) {
      return function(v) {
        return step([n, v]);
      };
    }
    function step(op) {
      if (f)
        throw new TypeError("Generator is already executing.");
      while (g && (g = 0, op[0] && (_ = 0)), _)
        try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
            return t;
          if (y = 0, t)
            op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2])
                _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
      if (op[0] & 5)
        throw op[1];
      return { value: op[0] ? op[1] : void 0, done: true };
    }
  }
  function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2)
      for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar)
            ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
    return to.concat(ar || Array.prototype.slice.call(from));
  }
  var extendStatics, __assign;
  var init_tslib_es6 = __esm({
    "node_modules/tslib/tslib.es6.mjs"() {
      extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      __assign = function() {
        __assign = Object.assign || function __assign2(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
              if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
          }
          return t;
        };
        return __assign.apply(this, arguments);
      };
    }
  });

  // node_modules/ts-invariant/lib/invariant.js
  function invariant(condition, message) {
    if (!condition) {
      throw new InvariantError(message);
    }
  }
  function wrapConsoleMethod(name2) {
    return function() {
      if (verbosityLevels.indexOf(name2) >= verbosityLevel) {
        var method = console[name2] || console.log;
        return method.apply(console, arguments);
      }
    };
  }
  function setVerbosity(level) {
    var old = verbosityLevels[verbosityLevel];
    verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));
    return old;
  }
  var genericMessage, _a, setPrototypeOf, InvariantError, verbosityLevels, verbosityLevel;
  var init_invariant = __esm({
    "node_modules/ts-invariant/lib/invariant.js"() {
      init_tslib_es6();
      genericMessage = "Invariant Violation";
      _a = Object.setPrototypeOf;
      setPrototypeOf = _a === void 0 ? function(obj, proto) {
        obj.__proto__ = proto;
        return obj;
      } : _a;
      InvariantError = /** @class */
      function(_super) {
        __extends(InvariantError2, _super);
        function InvariantError2(message) {
          if (message === void 0) {
            message = genericMessage;
          }
          var _this = _super.call(this, typeof message === "number" ? genericMessage + ": " + message + " (see https://github.com/apollographql/invariant-packages)" : message) || this;
          _this.framesToPop = 1;
          _this.name = genericMessage;
          setPrototypeOf(_this, InvariantError2.prototype);
          return _this;
        }
        return InvariantError2;
      }(Error);
      verbosityLevels = ["debug", "log", "warn", "error", "silent"];
      verbosityLevel = verbosityLevels.indexOf("log");
      (function(invariant5) {
        invariant5.debug = wrapConsoleMethod("debug");
        invariant5.log = wrapConsoleMethod("log");
        invariant5.warn = wrapConsoleMethod("warn");
        invariant5.error = wrapConsoleMethod("error");
      })(invariant || (invariant = {}));
    }
  });

  // node_modules/@apollo/client/version.js
  var version;
  var init_version = __esm({
    "node_modules/@apollo/client/version.js"() {
      version = "3.8.8";
    }
  });

  // node_modules/@apollo/client/utilities/globals/maybe.js
  function maybe(thunk) {
    try {
      return thunk();
    } catch (_a2) {
    }
  }
  var init_maybe = __esm({
    "node_modules/@apollo/client/utilities/globals/maybe.js"() {
    }
  });

  // node_modules/@apollo/client/utilities/globals/global.js
  var global_default;
  var init_global = __esm({
    "node_modules/@apollo/client/utilities/globals/global.js"() {
      init_maybe();
      global_default = maybe(function() {
        return globalThis;
      }) || maybe(function() {
        return window;
      }) || maybe(function() {
        return self;
      }) || maybe(function() {
        return global;
      }) || // We don't expect the Function constructor ever to be invoked at runtime, as
      // long as at least one of globalThis, window, self, or global is defined, so
      // we are under no obligation to make it easy for static analysis tools to
      // detect syntactic usage of the Function constructor. If you think you can
      // improve your static analysis to detect this obfuscation, think again. This
      // is an arms race you cannot win, at least not in JavaScript.
      maybe(function() {
        return maybe.constructor("return this")();
      });
    }
  });

  // node_modules/@apollo/client/utilities/common/makeUniqueId.js
  function makeUniqueId(prefix) {
    var count = prefixCounts.get(prefix) || 1;
    prefixCounts.set(prefix, count + 1);
    return "".concat(prefix, ":").concat(count, ":").concat(Math.random().toString(36).slice(2));
  }
  var prefixCounts;
  var init_makeUniqueId = __esm({
    "node_modules/@apollo/client/utilities/common/makeUniqueId.js"() {
      prefixCounts = /* @__PURE__ */ new Map();
    }
  });

  // node_modules/@apollo/client/utilities/common/stringifyForDisplay.js
  function stringifyForDisplay(value2, space) {
    if (space === void 0) {
      space = 0;
    }
    var undefId = makeUniqueId("stringifyForDisplay");
    return JSON.stringify(value2, function(key2, value3) {
      return value3 === void 0 ? undefId : value3;
    }, space).split(JSON.stringify(undefId)).join("<undefined>");
  }
  var init_stringifyForDisplay = __esm({
    "node_modules/@apollo/client/utilities/common/stringifyForDisplay.js"() {
      init_makeUniqueId();
    }
  });

  // node_modules/@apollo/client/utilities/globals/invariantWrappers.js
  function wrap(fn) {
    return function(message) {
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      if (typeof message === "number") {
        var arg0 = message;
        message = getHandledErrorMsg(arg0);
        if (!message) {
          message = getFallbackErrorMsg(arg0, args);
          args = [];
        }
      }
      fn.apply(void 0, [message].concat(args));
    };
  }
  function newInvariantError(message) {
    var optionalParams = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      optionalParams[_i - 1] = arguments[_i];
    }
    return new InvariantError(getHandledErrorMsg(message, optionalParams) || getFallbackErrorMsg(message, optionalParams));
  }
  function stringify(arg) {
    return typeof arg == "string" ? arg : stringifyForDisplay(arg, 2).slice(0, 1e3);
  }
  function getHandledErrorMsg(message, messageArgs) {
    if (messageArgs === void 0) {
      messageArgs = [];
    }
    if (!message)
      return;
    return global_default[ApolloErrorMessageHandler] && global_default[ApolloErrorMessageHandler](message, messageArgs.map(stringify));
  }
  function getFallbackErrorMsg(message, messageArgs) {
    if (messageArgs === void 0) {
      messageArgs = [];
    }
    if (!message)
      return;
    return "An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#".concat(encodeURIComponent(JSON.stringify({
      version,
      message,
      args: messageArgs.map(stringify)
    })));
  }
  var invariant2, ApolloErrorMessageHandler;
  var init_invariantWrappers = __esm({
    "node_modules/@apollo/client/utilities/globals/invariantWrappers.js"() {
      init_invariant();
      init_version();
      init_global();
      init_stringifyForDisplay();
      invariant2 = Object.assign(function invariant3(condition, message) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
          args[_i - 2] = arguments[_i];
        }
        if (!condition) {
          invariant(condition, getHandledErrorMsg(message, args) || getFallbackErrorMsg(message, args));
        }
      }, {
        debug: wrap(invariant.debug),
        log: wrap(invariant.log),
        warn: wrap(invariant.warn),
        error: wrap(invariant.error)
      });
      ApolloErrorMessageHandler = Symbol.for("ApolloErrorMessageHandler_" + version);
    }
  });

  // node_modules/@apollo/client/utilities/globals/index.js
  var init_globals = __esm({
    "node_modules/@apollo/client/utilities/globals/index.js"() {
      init_invariantWrappers();
      init_maybe();
      init_global();
    }
  });

  // node_modules/graphql/jsutils/devAssert.mjs
  function devAssert(condition, message) {
    const booleanCondition = Boolean(condition);
    if (!booleanCondition) {
      throw new Error(message);
    }
  }
  var init_devAssert = __esm({
    "node_modules/graphql/jsutils/devAssert.mjs"() {
    }
  });

  // node_modules/graphql/jsutils/isObjectLike.mjs
  function isObjectLike(value2) {
    return typeof value2 == "object" && value2 !== null;
  }
  var init_isObjectLike = __esm({
    "node_modules/graphql/jsutils/isObjectLike.mjs"() {
    }
  });

  // node_modules/graphql/jsutils/invariant.mjs
  function invariant4(condition, message) {
    const booleanCondition = Boolean(condition);
    if (!booleanCondition) {
      throw new Error(
        message != null ? message : "Unexpected invariant triggered."
      );
    }
  }
  var init_invariant2 = __esm({
    "node_modules/graphql/jsutils/invariant.mjs"() {
    }
  });

  // node_modules/graphql/language/location.mjs
  function getLocation(source, position2) {
    let lastLineStart = 0;
    let line = 1;
    for (const match of source.body.matchAll(LineRegExp)) {
      typeof match.index === "number" || invariant4(false);
      if (match.index >= position2) {
        break;
      }
      lastLineStart = match.index + match[0].length;
      line += 1;
    }
    return {
      line,
      column: position2 + 1 - lastLineStart
    };
  }
  var LineRegExp;
  var init_location = __esm({
    "node_modules/graphql/language/location.mjs"() {
      init_invariant2();
      LineRegExp = /\r\n|[\n\r]/g;
    }
  });

  // node_modules/graphql/language/printLocation.mjs
  function printLocation(location) {
    return printSourceLocation(
      location.source,
      getLocation(location.source, location.start)
    );
  }
  function printSourceLocation(source, sourceLocation) {
    const firstLineColumnOffset = source.locationOffset.column - 1;
    const body = "".padStart(firstLineColumnOffset) + source.body;
    const lineIndex = sourceLocation.line - 1;
    const lineOffset = source.locationOffset.line - 1;
    const lineNum = sourceLocation.line + lineOffset;
    const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;
    const columnNum = sourceLocation.column + columnOffset;
    const locationStr = `${source.name}:${lineNum}:${columnNum}
`;
    const lines = body.split(/\r\n|[\n\r]/g);
    const locationLine = lines[lineIndex];
    if (locationLine.length > 120) {
      const subLineIndex = Math.floor(columnNum / 80);
      const subLineColumnNum = columnNum % 80;
      const subLines = [];
      for (let i = 0; i < locationLine.length; i += 80) {
        subLines.push(locationLine.slice(i, i + 80));
      }
      return locationStr + printPrefixedLines([
        [`${lineNum} |`, subLines[0]],
        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ["|", subLine]),
        ["|", "^".padStart(subLineColumnNum)],
        ["|", subLines[subLineIndex + 1]]
      ]);
    }
    return locationStr + printPrefixedLines([
      // Lines specified like this: ["prefix", "string"],
      [`${lineNum - 1} |`, lines[lineIndex - 1]],
      [`${lineNum} |`, locationLine],
      ["|", "^".padStart(columnNum)],
      [`${lineNum + 1} |`, lines[lineIndex + 1]]
    ]);
  }
  function printPrefixedLines(lines) {
    const existingLines = lines.filter(([_, line]) => line !== void 0);
    const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));
    return existingLines.map(([prefix, line]) => prefix.padStart(padLen) + (line ? " " + line : "")).join("\n");
  }
  var init_printLocation = __esm({
    "node_modules/graphql/language/printLocation.mjs"() {
      init_location();
    }
  });

  // node_modules/graphql/error/GraphQLError.mjs
  function toNormalizedOptions(args) {
    const firstArg = args[0];
    if (firstArg == null || "kind" in firstArg || "length" in firstArg) {
      return {
        nodes: firstArg,
        source: args[1],
        positions: args[2],
        path: args[3],
        originalError: args[4],
        extensions: args[5]
      };
    }
    return firstArg;
  }
  function undefinedIfEmpty(array) {
    return array === void 0 || array.length === 0 ? void 0 : array;
  }
  var GraphQLError;
  var init_GraphQLError = __esm({
    "node_modules/graphql/error/GraphQLError.mjs"() {
      init_isObjectLike();
      init_location();
      init_printLocation();
      GraphQLError = class extends Error {
        /**
         * An array of `{ line, column }` locations within the source GraphQL document
         * which correspond to this error.
         *
         * Errors during validation often contain multiple locations, for example to
         * point out two things with the same name. Errors during execution include a
         * single location, the field which produced the error.
         *
         * Enumerable, and appears in the result of JSON.stringify().
         */
        /**
         * An array describing the JSON-path into the execution response which
         * corresponds to this error. Only included for errors during execution.
         *
         * Enumerable, and appears in the result of JSON.stringify().
         */
        /**
         * An array of GraphQL AST Nodes corresponding to this error.
         */
        /**
         * The source GraphQL document for the first location of this error.
         *
         * Note that if this Error represents more than one node, the source may not
         * represent nodes after the first node.
         */
        /**
         * An array of character offsets within the source GraphQL document
         * which correspond to this error.
         */
        /**
         * The original error thrown from a field resolver during execution.
         */
        /**
         * Extension fields to add to the formatted error.
         */
        /**
         * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.
         */
        constructor(message, ...rawArgs) {
          var _this$nodes, _nodeLocations$, _ref;
          const { nodes, source, positions, path, originalError, extensions } = toNormalizedOptions(rawArgs);
          super(message);
          this.name = "GraphQLError";
          this.path = path !== null && path !== void 0 ? path : void 0;
          this.originalError = originalError !== null && originalError !== void 0 ? originalError : void 0;
          this.nodes = undefinedIfEmpty(
            Array.isArray(nodes) ? nodes : nodes ? [nodes] : void 0
          );
          const nodeLocations = undefinedIfEmpty(
            (_this$nodes = this.nodes) === null || _this$nodes === void 0 ? void 0 : _this$nodes.map((node) => node.loc).filter((loc) => loc != null)
          );
          this.source = source !== null && source !== void 0 ? source : nodeLocations === null || nodeLocations === void 0 ? void 0 : (_nodeLocations$ = nodeLocations[0]) === null || _nodeLocations$ === void 0 ? void 0 : _nodeLocations$.source;
          this.positions = positions !== null && positions !== void 0 ? positions : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map((loc) => loc.start);
          this.locations = positions && source ? positions.map((pos) => getLocation(source, pos)) : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map((loc) => getLocation(loc.source, loc.start));
          const originalExtensions = isObjectLike(
            originalError === null || originalError === void 0 ? void 0 : originalError.extensions
          ) ? originalError === null || originalError === void 0 ? void 0 : originalError.extensions : void 0;
          this.extensions = (_ref = extensions !== null && extensions !== void 0 ? extensions : originalExtensions) !== null && _ref !== void 0 ? _ref : /* @__PURE__ */ Object.create(null);
          Object.defineProperties(this, {
            message: {
              writable: true,
              enumerable: true
            },
            name: {
              enumerable: false
            },
            nodes: {
              enumerable: false
            },
            source: {
              enumerable: false
            },
            positions: {
              enumerable: false
            },
            originalError: {
              enumerable: false
            }
          });
          if (originalError !== null && originalError !== void 0 && originalError.stack) {
            Object.defineProperty(this, "stack", {
              value: originalError.stack,
              writable: true,
              configurable: true
            });
          } else if (Error.captureStackTrace) {
            Error.captureStackTrace(this, GraphQLError);
          } else {
            Object.defineProperty(this, "stack", {
              value: Error().stack,
              writable: true,
              configurable: true
            });
          }
        }
        get [Symbol.toStringTag]() {
          return "GraphQLError";
        }
        toString() {
          let output = this.message;
          if (this.nodes) {
            for (const node of this.nodes) {
              if (node.loc) {
                output += "\n\n" + printLocation(node.loc);
              }
            }
          } else if (this.source && this.locations) {
            for (const location of this.locations) {
              output += "\n\n" + printSourceLocation(this.source, location);
            }
          }
          return output;
        }
        toJSON() {
          const formattedError = {
            message: this.message
          };
          if (this.locations != null) {
            formattedError.locations = this.locations;
          }
          if (this.path != null) {
            formattedError.path = this.path;
          }
          if (this.extensions != null && Object.keys(this.extensions).length > 0) {
            formattedError.extensions = this.extensions;
          }
          return formattedError;
        }
      };
    }
  });

  // node_modules/graphql/error/syntaxError.mjs
  function syntaxError(source, position2, description) {
    return new GraphQLError(`Syntax Error: ${description}`, {
      source,
      positions: [position2]
    });
  }
  var init_syntaxError = __esm({
    "node_modules/graphql/error/syntaxError.mjs"() {
      init_GraphQLError();
    }
  });

  // node_modules/graphql/language/ast.mjs
  function isNode(maybeNode) {
    const maybeKind = maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;
    return typeof maybeKind === "string" && kindValues.has(maybeKind);
  }
  var Location, Token, QueryDocumentKeys, kindValues, OperationTypeNode;
  var init_ast = __esm({
    "node_modules/graphql/language/ast.mjs"() {
      Location = class {
        /**
         * The character offset at which this Node begins.
         */
        /**
         * The character offset at which this Node ends.
         */
        /**
         * The Token at which this Node begins.
         */
        /**
         * The Token at which this Node ends.
         */
        /**
         * The Source document the AST represents.
         */
        constructor(startToken, endToken, source) {
          this.start = startToken.start;
          this.end = endToken.end;
          this.startToken = startToken;
          this.endToken = endToken;
          this.source = source;
        }
        get [Symbol.toStringTag]() {
          return "Location";
        }
        toJSON() {
          return {
            start: this.start,
            end: this.end
          };
        }
      };
      Token = class {
        /**
         * The kind of Token.
         */
        /**
         * The character offset at which this Node begins.
         */
        /**
         * The character offset at which this Node ends.
         */
        /**
         * The 1-indexed line number on which this Token appears.
         */
        /**
         * The 1-indexed column number at which this Token begins.
         */
        /**
         * For non-punctuation tokens, represents the interpreted value of the token.
         *
         * Note: is undefined for punctuation tokens, but typed as string for
         * convenience in the parser.
         */
        /**
         * Tokens exist as nodes in a double-linked-list amongst all tokens
         * including ignored tokens. <SOF> is always the first node and <EOF>
         * the last.
         */
        constructor(kind, start, end, line, column, value2) {
          this.kind = kind;
          this.start = start;
          this.end = end;
          this.line = line;
          this.column = column;
          this.value = value2;
          this.prev = null;
          this.next = null;
        }
        get [Symbol.toStringTag]() {
          return "Token";
        }
        toJSON() {
          return {
            kind: this.kind,
            value: this.value,
            line: this.line,
            column: this.column
          };
        }
      };
      QueryDocumentKeys = {
        Name: [],
        Document: ["definitions"],
        OperationDefinition: [
          "name",
          "variableDefinitions",
          "directives",
          "selectionSet"
        ],
        VariableDefinition: ["variable", "type", "defaultValue", "directives"],
        Variable: ["name"],
        SelectionSet: ["selections"],
        Field: ["alias", "name", "arguments", "directives", "selectionSet"],
        Argument: ["name", "value"],
        FragmentSpread: ["name", "directives"],
        InlineFragment: ["typeCondition", "directives", "selectionSet"],
        FragmentDefinition: [
          "name",
          // Note: fragment variable definitions are deprecated and will removed in v17.0.0
          "variableDefinitions",
          "typeCondition",
          "directives",
          "selectionSet"
        ],
        IntValue: [],
        FloatValue: [],
        StringValue: [],
        BooleanValue: [],
        NullValue: [],
        EnumValue: [],
        ListValue: ["values"],
        ObjectValue: ["fields"],
        ObjectField: ["name", "value"],
        Directive: ["name", "arguments"],
        NamedType: ["name"],
        ListType: ["type"],
        NonNullType: ["type"],
        SchemaDefinition: ["description", "directives", "operationTypes"],
        OperationTypeDefinition: ["type"],
        ScalarTypeDefinition: ["description", "name", "directives"],
        ObjectTypeDefinition: [
          "description",
          "name",
          "interfaces",
          "directives",
          "fields"
        ],
        FieldDefinition: ["description", "name", "arguments", "type", "directives"],
        InputValueDefinition: [
          "description",
          "name",
          "type",
          "defaultValue",
          "directives"
        ],
        InterfaceTypeDefinition: [
          "description",
          "name",
          "interfaces",
          "directives",
          "fields"
        ],
        UnionTypeDefinition: ["description", "name", "directives", "types"],
        EnumTypeDefinition: ["description", "name", "directives", "values"],
        EnumValueDefinition: ["description", "name", "directives"],
        InputObjectTypeDefinition: ["description", "name", "directives", "fields"],
        DirectiveDefinition: ["description", "name", "arguments", "locations"],
        SchemaExtension: ["directives", "operationTypes"],
        ScalarTypeExtension: ["name", "directives"],
        ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
        InterfaceTypeExtension: ["name", "interfaces", "directives", "fields"],
        UnionTypeExtension: ["name", "directives", "types"],
        EnumTypeExtension: ["name", "directives", "values"],
        InputObjectTypeExtension: ["name", "directives", "fields"]
      };
      kindValues = new Set(Object.keys(QueryDocumentKeys));
      (function(OperationTypeNode2) {
        OperationTypeNode2["QUERY"] = "query";
        OperationTypeNode2["MUTATION"] = "mutation";
        OperationTypeNode2["SUBSCRIPTION"] = "subscription";
      })(OperationTypeNode || (OperationTypeNode = {}));
    }
  });

  // node_modules/graphql/language/directiveLocation.mjs
  var DirectiveLocation;
  var init_directiveLocation = __esm({
    "node_modules/graphql/language/directiveLocation.mjs"() {
      (function(DirectiveLocation2) {
        DirectiveLocation2["QUERY"] = "QUERY";
        DirectiveLocation2["MUTATION"] = "MUTATION";
        DirectiveLocation2["SUBSCRIPTION"] = "SUBSCRIPTION";
        DirectiveLocation2["FIELD"] = "FIELD";
        DirectiveLocation2["FRAGMENT_DEFINITION"] = "FRAGMENT_DEFINITION";
        DirectiveLocation2["FRAGMENT_SPREAD"] = "FRAGMENT_SPREAD";
        DirectiveLocation2["INLINE_FRAGMENT"] = "INLINE_FRAGMENT";
        DirectiveLocation2["VARIABLE_DEFINITION"] = "VARIABLE_DEFINITION";
        DirectiveLocation2["SCHEMA"] = "SCHEMA";
        DirectiveLocation2["SCALAR"] = "SCALAR";
        DirectiveLocation2["OBJECT"] = "OBJECT";
        DirectiveLocation2["FIELD_DEFINITION"] = "FIELD_DEFINITION";
        DirectiveLocation2["ARGUMENT_DEFINITION"] = "ARGUMENT_DEFINITION";
        DirectiveLocation2["INTERFACE"] = "INTERFACE";
        DirectiveLocation2["UNION"] = "UNION";
        DirectiveLocation2["ENUM"] = "ENUM";
        DirectiveLocation2["ENUM_VALUE"] = "ENUM_VALUE";
        DirectiveLocation2["INPUT_OBJECT"] = "INPUT_OBJECT";
        DirectiveLocation2["INPUT_FIELD_DEFINITION"] = "INPUT_FIELD_DEFINITION";
      })(DirectiveLocation || (DirectiveLocation = {}));
    }
  });

  // node_modules/graphql/language/kinds.mjs
  var Kind;
  var init_kinds = __esm({
    "node_modules/graphql/language/kinds.mjs"() {
      (function(Kind2) {
        Kind2["NAME"] = "Name";
        Kind2["DOCUMENT"] = "Document";
        Kind2["OPERATION_DEFINITION"] = "OperationDefinition";
        Kind2["VARIABLE_DEFINITION"] = "VariableDefinition";
        Kind2["SELECTION_SET"] = "SelectionSet";
        Kind2["FIELD"] = "Field";
        Kind2["ARGUMENT"] = "Argument";
        Kind2["FRAGMENT_SPREAD"] = "FragmentSpread";
        Kind2["INLINE_FRAGMENT"] = "InlineFragment";
        Kind2["FRAGMENT_DEFINITION"] = "FragmentDefinition";
        Kind2["VARIABLE"] = "Variable";
        Kind2["INT"] = "IntValue";
        Kind2["FLOAT"] = "FloatValue";
        Kind2["STRING"] = "StringValue";
        Kind2["BOOLEAN"] = "BooleanValue";
        Kind2["NULL"] = "NullValue";
        Kind2["ENUM"] = "EnumValue";
        Kind2["LIST"] = "ListValue";
        Kind2["OBJECT"] = "ObjectValue";
        Kind2["OBJECT_FIELD"] = "ObjectField";
        Kind2["DIRECTIVE"] = "Directive";
        Kind2["NAMED_TYPE"] = "NamedType";
        Kind2["LIST_TYPE"] = "ListType";
        Kind2["NON_NULL_TYPE"] = "NonNullType";
        Kind2["SCHEMA_DEFINITION"] = "SchemaDefinition";
        Kind2["OPERATION_TYPE_DEFINITION"] = "OperationTypeDefinition";
        Kind2["SCALAR_TYPE_DEFINITION"] = "ScalarTypeDefinition";
        Kind2["OBJECT_TYPE_DEFINITION"] = "ObjectTypeDefinition";
        Kind2["FIELD_DEFINITION"] = "FieldDefinition";
        Kind2["INPUT_VALUE_DEFINITION"] = "InputValueDefinition";
        Kind2["INTERFACE_TYPE_DEFINITION"] = "InterfaceTypeDefinition";
        Kind2["UNION_TYPE_DEFINITION"] = "UnionTypeDefinition";
        Kind2["ENUM_TYPE_DEFINITION"] = "EnumTypeDefinition";
        Kind2["ENUM_VALUE_DEFINITION"] = "EnumValueDefinition";
        Kind2["INPUT_OBJECT_TYPE_DEFINITION"] = "InputObjectTypeDefinition";
        Kind2["DIRECTIVE_DEFINITION"] = "DirectiveDefinition";
        Kind2["SCHEMA_EXTENSION"] = "SchemaExtension";
        Kind2["SCALAR_TYPE_EXTENSION"] = "ScalarTypeExtension";
        Kind2["OBJECT_TYPE_EXTENSION"] = "ObjectTypeExtension";
        Kind2["INTERFACE_TYPE_EXTENSION"] = "InterfaceTypeExtension";
        Kind2["UNION_TYPE_EXTENSION"] = "UnionTypeExtension";
        Kind2["ENUM_TYPE_EXTENSION"] = "EnumTypeExtension";
        Kind2["INPUT_OBJECT_TYPE_EXTENSION"] = "InputObjectTypeExtension";
      })(Kind || (Kind = {}));
    }
  });

  // node_modules/graphql/language/characterClasses.mjs
  function isWhiteSpace(code) {
    return code === 9 || code === 32;
  }
  function isDigit(code) {
    return code >= 48 && code <= 57;
  }
  function isLetter(code) {
    return code >= 97 && code <= 122 || // A-Z
    code >= 65 && code <= 90;
  }
  function isNameStart(code) {
    return isLetter(code) || code === 95;
  }
  function isNameContinue(code) {
    return isLetter(code) || isDigit(code) || code === 95;
  }
  var init_characterClasses = __esm({
    "node_modules/graphql/language/characterClasses.mjs"() {
    }
  });

  // node_modules/graphql/language/blockString.mjs
  function dedentBlockStringLines(lines) {
    var _firstNonEmptyLine2;
    let commonIndent = Number.MAX_SAFE_INTEGER;
    let firstNonEmptyLine = null;
    let lastNonEmptyLine = -1;
    for (let i = 0; i < lines.length; ++i) {
      var _firstNonEmptyLine;
      const line = lines[i];
      const indent2 = leadingWhitespace(line);
      if (indent2 === line.length) {
        continue;
      }
      firstNonEmptyLine = (_firstNonEmptyLine = firstNonEmptyLine) !== null && _firstNonEmptyLine !== void 0 ? _firstNonEmptyLine : i;
      lastNonEmptyLine = i;
      if (i !== 0 && indent2 < commonIndent) {
        commonIndent = indent2;
      }
    }
    return lines.map((line, i) => i === 0 ? line : line.slice(commonIndent)).slice(
      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null && _firstNonEmptyLine2 !== void 0 ? _firstNonEmptyLine2 : 0,
      lastNonEmptyLine + 1
    );
  }
  function leadingWhitespace(str) {
    let i = 0;
    while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {
      ++i;
    }
    return i;
  }
  function printBlockString(value2, options) {
    const escapedValue = value2.replace(/"""/g, '\\"""');
    const lines = escapedValue.split(/\r\n|[\n\r]/g);
    const isSingleLine = lines.length === 1;
    const forceLeadingNewLine = lines.length > 1 && lines.slice(1).every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0)));
    const hasTrailingTripleQuotes = escapedValue.endsWith('\\"""');
    const hasTrailingQuote = value2.endsWith('"') && !hasTrailingTripleQuotes;
    const hasTrailingSlash = value2.endsWith("\\");
    const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;
    const printAsMultipleLines = !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability
    (!isSingleLine || value2.length > 70 || forceTrailingNewline || forceLeadingNewLine || hasTrailingTripleQuotes);
    let result2 = "";
    const skipLeadingNewLine = isSingleLine && isWhiteSpace(value2.charCodeAt(0));
    if (printAsMultipleLines && !skipLeadingNewLine || forceLeadingNewLine) {
      result2 += "\n";
    }
    result2 += escapedValue;
    if (printAsMultipleLines || forceTrailingNewline) {
      result2 += "\n";
    }
    return '"""' + result2 + '"""';
  }
  var init_blockString = __esm({
    "node_modules/graphql/language/blockString.mjs"() {
      init_characterClasses();
    }
  });

  // node_modules/graphql/language/tokenKind.mjs
  var TokenKind;
  var init_tokenKind = __esm({
    "node_modules/graphql/language/tokenKind.mjs"() {
      (function(TokenKind2) {
        TokenKind2["SOF"] = "<SOF>";
        TokenKind2["EOF"] = "<EOF>";
        TokenKind2["BANG"] = "!";
        TokenKind2["DOLLAR"] = "$";
        TokenKind2["AMP"] = "&";
        TokenKind2["PAREN_L"] = "(";
        TokenKind2["PAREN_R"] = ")";
        TokenKind2["SPREAD"] = "...";
        TokenKind2["COLON"] = ":";
        TokenKind2["EQUALS"] = "=";
        TokenKind2["AT"] = "@";
        TokenKind2["BRACKET_L"] = "[";
        TokenKind2["BRACKET_R"] = "]";
        TokenKind2["BRACE_L"] = "{";
        TokenKind2["PIPE"] = "|";
        TokenKind2["BRACE_R"] = "}";
        TokenKind2["NAME"] = "Name";
        TokenKind2["INT"] = "Int";
        TokenKind2["FLOAT"] = "Float";
        TokenKind2["STRING"] = "String";
        TokenKind2["BLOCK_STRING"] = "BlockString";
        TokenKind2["COMMENT"] = "Comment";
      })(TokenKind || (TokenKind = {}));
    }
  });

  // node_modules/graphql/language/lexer.mjs
  function isPunctuatorTokenKind(kind) {
    return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;
  }
  function isUnicodeScalarValue(code) {
    return code >= 0 && code <= 55295 || code >= 57344 && code <= 1114111;
  }
  function isSupplementaryCodePoint(body, location) {
    return isLeadingSurrogate(body.charCodeAt(location)) && isTrailingSurrogate(body.charCodeAt(location + 1));
  }
  function isLeadingSurrogate(code) {
    return code >= 55296 && code <= 56319;
  }
  function isTrailingSurrogate(code) {
    return code >= 56320 && code <= 57343;
  }
  function printCodePointAt(lexer, location) {
    const code = lexer.source.body.codePointAt(location);
    if (code === void 0) {
      return TokenKind.EOF;
    } else if (code >= 32 && code <= 126) {
      const char = String.fromCodePoint(code);
      return char === '"' ? `'"'` : `"${char}"`;
    }
    return "U+" + code.toString(16).toUpperCase().padStart(4, "0");
  }
  function createToken(lexer, kind, start, end, value2) {
    const line = lexer.line;
    const col = 1 + start - lexer.lineStart;
    return new Token(kind, start, end, line, col, value2);
  }
  function readNextToken(lexer, start) {
    const body = lexer.source.body;
    const bodyLength = body.length;
    let position2 = start;
    while (position2 < bodyLength) {
      const code = body.charCodeAt(position2);
      switch (code) {
        case 65279:
        case 9:
        case 32:
        case 44:
          ++position2;
          continue;
        case 10:
          ++position2;
          ++lexer.line;
          lexer.lineStart = position2;
          continue;
        case 13:
          if (body.charCodeAt(position2 + 1) === 10) {
            position2 += 2;
          } else {
            ++position2;
          }
          ++lexer.line;
          lexer.lineStart = position2;
          continue;
        case 35:
          return readComment(lexer, position2);
        case 33:
          return createToken(lexer, TokenKind.BANG, position2, position2 + 1);
        case 36:
          return createToken(lexer, TokenKind.DOLLAR, position2, position2 + 1);
        case 38:
          return createToken(lexer, TokenKind.AMP, position2, position2 + 1);
        case 40:
          return createToken(lexer, TokenKind.PAREN_L, position2, position2 + 1);
        case 41:
          return createToken(lexer, TokenKind.PAREN_R, position2, position2 + 1);
        case 46:
          if (body.charCodeAt(position2 + 1) === 46 && body.charCodeAt(position2 + 2) === 46) {
            return createToken(lexer, TokenKind.SPREAD, position2, position2 + 3);
          }
          break;
        case 58:
          return createToken(lexer, TokenKind.COLON, position2, position2 + 1);
        case 61:
          return createToken(lexer, TokenKind.EQUALS, position2, position2 + 1);
        case 64:
          return createToken(lexer, TokenKind.AT, position2, position2 + 1);
        case 91:
          return createToken(lexer, TokenKind.BRACKET_L, position2, position2 + 1);
        case 93:
          return createToken(lexer, TokenKind.BRACKET_R, position2, position2 + 1);
        case 123:
          return createToken(lexer, TokenKind.BRACE_L, position2, position2 + 1);
        case 124:
          return createToken(lexer, TokenKind.PIPE, position2, position2 + 1);
        case 125:
          return createToken(lexer, TokenKind.BRACE_R, position2, position2 + 1);
        case 34:
          if (body.charCodeAt(position2 + 1) === 34 && body.charCodeAt(position2 + 2) === 34) {
            return readBlockString(lexer, position2);
          }
          return readString(lexer, position2);
      }
      if (isDigit(code) || code === 45) {
        return readNumber(lexer, position2, code);
      }
      if (isNameStart(code)) {
        return readName(lexer, position2);
      }
      throw syntaxError(
        lexer.source,
        position2,
        code === 39 ? `Unexpected single quote character ('), did you mean to use a double quote (")?` : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position2) ? `Unexpected character: ${printCodePointAt(lexer, position2)}.` : `Invalid character: ${printCodePointAt(lexer, position2)}.`
      );
    }
    return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);
  }
  function readComment(lexer, start) {
    const body = lexer.source.body;
    const bodyLength = body.length;
    let position2 = start + 1;
    while (position2 < bodyLength) {
      const code = body.charCodeAt(position2);
      if (code === 10 || code === 13) {
        break;
      }
      if (isUnicodeScalarValue(code)) {
        ++position2;
      } else if (isSupplementaryCodePoint(body, position2)) {
        position2 += 2;
      } else {
        break;
      }
    }
    return createToken(
      lexer,
      TokenKind.COMMENT,
      start,
      position2,
      body.slice(start + 1, position2)
    );
  }
  function readNumber(lexer, start, firstCode) {
    const body = lexer.source.body;
    let position2 = start;
    let code = firstCode;
    let isFloat = false;
    if (code === 45) {
      code = body.charCodeAt(++position2);
    }
    if (code === 48) {
      code = body.charCodeAt(++position2);
      if (isDigit(code)) {
        throw syntaxError(
          lexer.source,
          position2,
          `Invalid number, unexpected digit after 0: ${printCodePointAt(
            lexer,
            position2
          )}.`
        );
      }
    } else {
      position2 = readDigits(lexer, position2, code);
      code = body.charCodeAt(position2);
    }
    if (code === 46) {
      isFloat = true;
      code = body.charCodeAt(++position2);
      position2 = readDigits(lexer, position2, code);
      code = body.charCodeAt(position2);
    }
    if (code === 69 || code === 101) {
      isFloat = true;
      code = body.charCodeAt(++position2);
      if (code === 43 || code === 45) {
        code = body.charCodeAt(++position2);
      }
      position2 = readDigits(lexer, position2, code);
      code = body.charCodeAt(position2);
    }
    if (code === 46 || isNameStart(code)) {
      throw syntaxError(
        lexer.source,
        position2,
        `Invalid number, expected digit but got: ${printCodePointAt(
          lexer,
          position2
        )}.`
      );
    }
    return createToken(
      lexer,
      isFloat ? TokenKind.FLOAT : TokenKind.INT,
      start,
      position2,
      body.slice(start, position2)
    );
  }
  function readDigits(lexer, start, firstCode) {
    if (!isDigit(firstCode)) {
      throw syntaxError(
        lexer.source,
        start,
        `Invalid number, expected digit but got: ${printCodePointAt(
          lexer,
          start
        )}.`
      );
    }
    const body = lexer.source.body;
    let position2 = start + 1;
    while (isDigit(body.charCodeAt(position2))) {
      ++position2;
    }
    return position2;
  }
  function readString(lexer, start) {
    const body = lexer.source.body;
    const bodyLength = body.length;
    let position2 = start + 1;
    let chunkStart = position2;
    let value2 = "";
    while (position2 < bodyLength) {
      const code = body.charCodeAt(position2);
      if (code === 34) {
        value2 += body.slice(chunkStart, position2);
        return createToken(lexer, TokenKind.STRING, start, position2 + 1, value2);
      }
      if (code === 92) {
        value2 += body.slice(chunkStart, position2);
        const escape5 = body.charCodeAt(position2 + 1) === 117 ? body.charCodeAt(position2 + 2) === 123 ? readEscapedUnicodeVariableWidth(lexer, position2) : readEscapedUnicodeFixedWidth(lexer, position2) : readEscapedCharacter(lexer, position2);
        value2 += escape5.value;
        position2 += escape5.size;
        chunkStart = position2;
        continue;
      }
      if (code === 10 || code === 13) {
        break;
      }
      if (isUnicodeScalarValue(code)) {
        ++position2;
      } else if (isSupplementaryCodePoint(body, position2)) {
        position2 += 2;
      } else {
        throw syntaxError(
          lexer.source,
          position2,
          `Invalid character within String: ${printCodePointAt(
            lexer,
            position2
          )}.`
        );
      }
    }
    throw syntaxError(lexer.source, position2, "Unterminated string.");
  }
  function readEscapedUnicodeVariableWidth(lexer, position2) {
    const body = lexer.source.body;
    let point = 0;
    let size2 = 3;
    while (size2 < 12) {
      const code = body.charCodeAt(position2 + size2++);
      if (code === 125) {
        if (size2 < 5 || !isUnicodeScalarValue(point)) {
          break;
        }
        return {
          value: String.fromCodePoint(point),
          size: size2
        };
      }
      point = point << 4 | readHexDigit(code);
      if (point < 0) {
        break;
      }
    }
    throw syntaxError(
      lexer.source,
      position2,
      `Invalid Unicode escape sequence: "${body.slice(
        position2,
        position2 + size2
      )}".`
    );
  }
  function readEscapedUnicodeFixedWidth(lexer, position2) {
    const body = lexer.source.body;
    const code = read16BitHexCode(body, position2 + 2);
    if (isUnicodeScalarValue(code)) {
      return {
        value: String.fromCodePoint(code),
        size: 6
      };
    }
    if (isLeadingSurrogate(code)) {
      if (body.charCodeAt(position2 + 6) === 92 && body.charCodeAt(position2 + 7) === 117) {
        const trailingCode = read16BitHexCode(body, position2 + 8);
        if (isTrailingSurrogate(trailingCode)) {
          return {
            value: String.fromCodePoint(code, trailingCode),
            size: 12
          };
        }
      }
    }
    throw syntaxError(
      lexer.source,
      position2,
      `Invalid Unicode escape sequence: "${body.slice(position2, position2 + 6)}".`
    );
  }
  function read16BitHexCode(body, position2) {
    return readHexDigit(body.charCodeAt(position2)) << 12 | readHexDigit(body.charCodeAt(position2 + 1)) << 8 | readHexDigit(body.charCodeAt(position2 + 2)) << 4 | readHexDigit(body.charCodeAt(position2 + 3));
  }
  function readHexDigit(code) {
    return code >= 48 && code <= 57 ? code - 48 : code >= 65 && code <= 70 ? code - 55 : code >= 97 && code <= 102 ? code - 87 : -1;
  }
  function readEscapedCharacter(lexer, position2) {
    const body = lexer.source.body;
    const code = body.charCodeAt(position2 + 1);
    switch (code) {
      case 34:
        return {
          value: '"',
          size: 2
        };
      case 92:
        return {
          value: "\\",
          size: 2
        };
      case 47:
        return {
          value: "/",
          size: 2
        };
      case 98:
        return {
          value: "\b",
          size: 2
        };
      case 102:
        return {
          value: "\f",
          size: 2
        };
      case 110:
        return {
          value: "\n",
          size: 2
        };
      case 114:
        return {
          value: "\r",
          size: 2
        };
      case 116:
        return {
          value: "	",
          size: 2
        };
    }
    throw syntaxError(
      lexer.source,
      position2,
      `Invalid character escape sequence: "${body.slice(
        position2,
        position2 + 2
      )}".`
    );
  }
  function readBlockString(lexer, start) {
    const body = lexer.source.body;
    const bodyLength = body.length;
    let lineStart = lexer.lineStart;
    let position2 = start + 3;
    let chunkStart = position2;
    let currentLine = "";
    const blockLines = [];
    while (position2 < bodyLength) {
      const code = body.charCodeAt(position2);
      if (code === 34 && body.charCodeAt(position2 + 1) === 34 && body.charCodeAt(position2 + 2) === 34) {
        currentLine += body.slice(chunkStart, position2);
        blockLines.push(currentLine);
        const token = createToken(
          lexer,
          TokenKind.BLOCK_STRING,
          start,
          position2 + 3,
          // Return a string of the lines joined with U+000A.
          dedentBlockStringLines(blockLines).join("\n")
        );
        lexer.line += blockLines.length - 1;
        lexer.lineStart = lineStart;
        return token;
      }
      if (code === 92 && body.charCodeAt(position2 + 1) === 34 && body.charCodeAt(position2 + 2) === 34 && body.charCodeAt(position2 + 3) === 34) {
        currentLine += body.slice(chunkStart, position2);
        chunkStart = position2 + 1;
        position2 += 4;
        continue;
      }
      if (code === 10 || code === 13) {
        currentLine += body.slice(chunkStart, position2);
        blockLines.push(currentLine);
        if (code === 13 && body.charCodeAt(position2 + 1) === 10) {
          position2 += 2;
        } else {
          ++position2;
        }
        currentLine = "";
        chunkStart = position2;
        lineStart = position2;
        continue;
      }
      if (isUnicodeScalarValue(code)) {
        ++position2;
      } else if (isSupplementaryCodePoint(body, position2)) {
        position2 += 2;
      } else {
        throw syntaxError(
          lexer.source,
          position2,
          `Invalid character within String: ${printCodePointAt(
            lexer,
            position2
          )}.`
        );
      }
    }
    throw syntaxError(lexer.source, position2, "Unterminated string.");
  }
  function readName(lexer, start) {
    const body = lexer.source.body;
    const bodyLength = body.length;
    let position2 = start + 1;
    while (position2 < bodyLength) {
      const code = body.charCodeAt(position2);
      if (isNameContinue(code)) {
        ++position2;
      } else {
        break;
      }
    }
    return createToken(
      lexer,
      TokenKind.NAME,
      start,
      position2,
      body.slice(start, position2)
    );
  }
  var Lexer;
  var init_lexer = __esm({
    "node_modules/graphql/language/lexer.mjs"() {
      init_syntaxError();
      init_ast();
      init_blockString();
      init_characterClasses();
      init_tokenKind();
      Lexer = class {
        /**
         * The previously focused non-ignored token.
         */
        /**
         * The currently focused non-ignored token.
         */
        /**
         * The (1-indexed) line containing the current token.
         */
        /**
         * The character offset at which the current line begins.
         */
        constructor(source) {
          const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);
          this.source = source;
          this.lastToken = startOfFileToken;
          this.token = startOfFileToken;
          this.line = 1;
          this.lineStart = 0;
        }
        get [Symbol.toStringTag]() {
          return "Lexer";
        }
        /**
         * Advances the token stream to the next non-ignored token.
         */
        advance() {
          this.lastToken = this.token;
          const token = this.token = this.lookahead();
          return token;
        }
        /**
         * Looks ahead and returns the next non-ignored token, but does not change
         * the state of Lexer.
         */
        lookahead() {
          let token = this.token;
          if (token.kind !== TokenKind.EOF) {
            do {
              if (token.next) {
                token = token.next;
              } else {
                const nextToken = readNextToken(this, token.end);
                token.next = nextToken;
                nextToken.prev = token;
                token = nextToken;
              }
            } while (token.kind === TokenKind.COMMENT);
          }
          return token;
        }
      };
    }
  });

  // node_modules/graphql/jsutils/inspect.mjs
  function inspect(value2) {
    return formatValue(value2, []);
  }
  function formatValue(value2, seenValues) {
    switch (typeof value2) {
      case "string":
        return JSON.stringify(value2);
      case "function":
        return value2.name ? `[function ${value2.name}]` : "[function]";
      case "object":
        return formatObjectValue(value2, seenValues);
      default:
        return String(value2);
    }
  }
  function formatObjectValue(value2, previouslySeenValues) {
    if (value2 === null) {
      return "null";
    }
    if (previouslySeenValues.includes(value2)) {
      return "[Circular]";
    }
    const seenValues = [...previouslySeenValues, value2];
    if (isJSONable(value2)) {
      const jsonValue = value2.toJSON();
      if (jsonValue !== value2) {
        return typeof jsonValue === "string" ? jsonValue : formatValue(jsonValue, seenValues);
      }
    } else if (Array.isArray(value2)) {
      return formatArray(value2, seenValues);
    }
    return formatObject(value2, seenValues);
  }
  function isJSONable(value2) {
    return typeof value2.toJSON === "function";
  }
  function formatObject(object, seenValues) {
    const entries = Object.entries(object);
    if (entries.length === 0) {
      return "{}";
    }
    if (seenValues.length > MAX_RECURSIVE_DEPTH) {
      return "[" + getObjectTag(object) + "]";
    }
    const properties = entries.map(
      ([key2, value2]) => key2 + ": " + formatValue(value2, seenValues)
    );
    return "{ " + properties.join(", ") + " }";
  }
  function formatArray(array, seenValues) {
    if (array.length === 0) {
      return "[]";
    }
    if (seenValues.length > MAX_RECURSIVE_DEPTH) {
      return "[Array]";
    }
    const len = Math.min(MAX_ARRAY_LENGTH, array.length);
    const remaining = array.length - len;
    const items = [];
    for (let i = 0; i < len; ++i) {
      items.push(formatValue(array[i], seenValues));
    }
    if (remaining === 1) {
      items.push("... 1 more item");
    } else if (remaining > 1) {
      items.push(`... ${remaining} more items`);
    }
    return "[" + items.join(", ") + "]";
  }
  function getObjectTag(object) {
    const tag = Object.prototype.toString.call(object).replace(/^\[object /, "").replace(/]$/, "");
    if (tag === "Object" && typeof object.constructor === "function") {
      const name2 = object.constructor.name;
      if (typeof name2 === "string" && name2 !== "") {
        return name2;
      }
    }
    return tag;
  }
  var MAX_ARRAY_LENGTH, MAX_RECURSIVE_DEPTH;
  var init_inspect = __esm({
    "node_modules/graphql/jsutils/inspect.mjs"() {
      MAX_ARRAY_LENGTH = 10;
      MAX_RECURSIVE_DEPTH = 2;
    }
  });

  // node_modules/graphql/jsutils/instanceOf.mjs
  var instanceOf;
  var init_instanceOf = __esm({
    "node_modules/graphql/jsutils/instanceOf.mjs"() {
      init_inspect();
      instanceOf = /* c8 ignore next 6 */
      // FIXME: https://github.com/graphql/graphql-js/issues/2317
      globalThis.process && true ? function instanceOf2(value2, constructor) {
        return value2 instanceof constructor;
      } : function instanceOf3(value2, constructor) {
        if (value2 instanceof constructor) {
          return true;
        }
        if (typeof value2 === "object" && value2 !== null) {
          var _value$constructor;
          const className = constructor.prototype[Symbol.toStringTag];
          const valueClassName = (
            // We still need to support constructor's name to detect conflicts with older versions of this library.
            Symbol.toStringTag in value2 ? value2[Symbol.toStringTag] : (_value$constructor = value2.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name
          );
          if (className === valueClassName) {
            const stringifiedValue = inspect(value2);
            throw new Error(`Cannot use ${className} "${stringifiedValue}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`);
          }
        }
        return false;
      };
    }
  });

  // node_modules/graphql/language/source.mjs
  function isSource(source) {
    return instanceOf(source, Source);
  }
  var Source;
  var init_source = __esm({
    "node_modules/graphql/language/source.mjs"() {
      init_devAssert();
      init_inspect();
      init_instanceOf();
      Source = class {
        constructor(body, name2 = "GraphQL request", locationOffset = {
          line: 1,
          column: 1
        }) {
          typeof body === "string" || devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);
          this.body = body;
          this.name = name2;
          this.locationOffset = locationOffset;
          this.locationOffset.line > 0 || devAssert(
            false,
            "line in locationOffset is 1-indexed and must be positive."
          );
          this.locationOffset.column > 0 || devAssert(
            false,
            "column in locationOffset is 1-indexed and must be positive."
          );
        }
        get [Symbol.toStringTag]() {
          return "Source";
        }
      };
    }
  });

  // node_modules/graphql/language/parser.mjs
  function parse(source, options) {
    const parser = new Parser(source, options);
    return parser.parseDocument();
  }
  function getTokenDesc(token) {
    const value2 = token.value;
    return getTokenKindDesc(token.kind) + (value2 != null ? ` "${value2}"` : "");
  }
  function getTokenKindDesc(kind) {
    return isPunctuatorTokenKind(kind) ? `"${kind}"` : kind;
  }
  var Parser;
  var init_parser = __esm({
    "node_modules/graphql/language/parser.mjs"() {
      init_syntaxError();
      init_ast();
      init_directiveLocation();
      init_kinds();
      init_lexer();
      init_source();
      init_tokenKind();
      Parser = class {
        constructor(source, options = {}) {
          const sourceObj = isSource(source) ? source : new Source(source);
          this._lexer = new Lexer(sourceObj);
          this._options = options;
          this._tokenCounter = 0;
        }
        /**
         * Converts a name lex token into a name parse node.
         */
        parseName() {
          const token = this.expectToken(TokenKind.NAME);
          return this.node(token, {
            kind: Kind.NAME,
            value: token.value
          });
        }
        // Implements the parsing rules in the Document section.
        /**
         * Document : Definition+
         */
        parseDocument() {
          return this.node(this._lexer.token, {
            kind: Kind.DOCUMENT,
            definitions: this.many(
              TokenKind.SOF,
              this.parseDefinition,
              TokenKind.EOF
            )
          });
        }
        /**
         * Definition :
         *   - ExecutableDefinition
         *   - TypeSystemDefinition
         *   - TypeSystemExtension
         *
         * ExecutableDefinition :
         *   - OperationDefinition
         *   - FragmentDefinition
         *
         * TypeSystemDefinition :
         *   - SchemaDefinition
         *   - TypeDefinition
         *   - DirectiveDefinition
         *
         * TypeDefinition :
         *   - ScalarTypeDefinition
         *   - ObjectTypeDefinition
         *   - InterfaceTypeDefinition
         *   - UnionTypeDefinition
         *   - EnumTypeDefinition
         *   - InputObjectTypeDefinition
         */
        parseDefinition() {
          if (this.peek(TokenKind.BRACE_L)) {
            return this.parseOperationDefinition();
          }
          const hasDescription = this.peekDescription();
          const keywordToken = hasDescription ? this._lexer.lookahead() : this._lexer.token;
          if (keywordToken.kind === TokenKind.NAME) {
            switch (keywordToken.value) {
              case "schema":
                return this.parseSchemaDefinition();
              case "scalar":
                return this.parseScalarTypeDefinition();
              case "type":
                return this.parseObjectTypeDefinition();
              case "interface":
                return this.parseInterfaceTypeDefinition();
              case "union":
                return this.parseUnionTypeDefinition();
              case "enum":
                return this.parseEnumTypeDefinition();
              case "input":
                return this.parseInputObjectTypeDefinition();
              case "directive":
                return this.parseDirectiveDefinition();
            }
            if (hasDescription) {
              throw syntaxError(
                this._lexer.source,
                this._lexer.token.start,
                "Unexpected description, descriptions are supported only on type definitions."
              );
            }
            switch (keywordToken.value) {
              case "query":
              case "mutation":
              case "subscription":
                return this.parseOperationDefinition();
              case "fragment":
                return this.parseFragmentDefinition();
              case "extend":
                return this.parseTypeSystemExtension();
            }
          }
          throw this.unexpected(keywordToken);
        }
        // Implements the parsing rules in the Operations section.
        /**
         * OperationDefinition :
         *  - SelectionSet
         *  - OperationType Name? VariableDefinitions? Directives? SelectionSet
         */
        parseOperationDefinition() {
          const start = this._lexer.token;
          if (this.peek(TokenKind.BRACE_L)) {
            return this.node(start, {
              kind: Kind.OPERATION_DEFINITION,
              operation: OperationTypeNode.QUERY,
              name: void 0,
              variableDefinitions: [],
              directives: [],
              selectionSet: this.parseSelectionSet()
            });
          }
          const operation = this.parseOperationType();
          let name2;
          if (this.peek(TokenKind.NAME)) {
            name2 = this.parseName();
          }
          return this.node(start, {
            kind: Kind.OPERATION_DEFINITION,
            operation,
            name: name2,
            variableDefinitions: this.parseVariableDefinitions(),
            directives: this.parseDirectives(false),
            selectionSet: this.parseSelectionSet()
          });
        }
        /**
         * OperationType : one of query mutation subscription
         */
        parseOperationType() {
          const operationToken = this.expectToken(TokenKind.NAME);
          switch (operationToken.value) {
            case "query":
              return OperationTypeNode.QUERY;
            case "mutation":
              return OperationTypeNode.MUTATION;
            case "subscription":
              return OperationTypeNode.SUBSCRIPTION;
          }
          throw this.unexpected(operationToken);
        }
        /**
         * VariableDefinitions : ( VariableDefinition+ )
         */
        parseVariableDefinitions() {
          return this.optionalMany(
            TokenKind.PAREN_L,
            this.parseVariableDefinition,
            TokenKind.PAREN_R
          );
        }
        /**
         * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?
         */
        parseVariableDefinition() {
          return this.node(this._lexer.token, {
            kind: Kind.VARIABLE_DEFINITION,
            variable: this.parseVariable(),
            type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),
            defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseConstValueLiteral() : void 0,
            directives: this.parseConstDirectives()
          });
        }
        /**
         * Variable : $ Name
         */
        parseVariable() {
          const start = this._lexer.token;
          this.expectToken(TokenKind.DOLLAR);
          return this.node(start, {
            kind: Kind.VARIABLE,
            name: this.parseName()
          });
        }
        /**
         * ```
         * SelectionSet : { Selection+ }
         * ```
         */
        parseSelectionSet() {
          return this.node(this._lexer.token, {
            kind: Kind.SELECTION_SET,
            selections: this.many(
              TokenKind.BRACE_L,
              this.parseSelection,
              TokenKind.BRACE_R
            )
          });
        }
        /**
         * Selection :
         *   - Field
         *   - FragmentSpread
         *   - InlineFragment
         */
        parseSelection() {
          return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();
        }
        /**
         * Field : Alias? Name Arguments? Directives? SelectionSet?
         *
         * Alias : Name :
         */
        parseField() {
          const start = this._lexer.token;
          const nameOrAlias = this.parseName();
          let alias;
          let name2;
          if (this.expectOptionalToken(TokenKind.COLON)) {
            alias = nameOrAlias;
            name2 = this.parseName();
          } else {
            name2 = nameOrAlias;
          }
          return this.node(start, {
            kind: Kind.FIELD,
            alias,
            name: name2,
            arguments: this.parseArguments(false),
            directives: this.parseDirectives(false),
            selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : void 0
          });
        }
        /**
         * Arguments[Const] : ( Argument[?Const]+ )
         */
        parseArguments(isConst) {
          const item = isConst ? this.parseConstArgument : this.parseArgument;
          return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);
        }
        /**
         * Argument[Const] : Name : Value[?Const]
         */
        parseArgument(isConst = false) {
          const start = this._lexer.token;
          const name2 = this.parseName();
          this.expectToken(TokenKind.COLON);
          return this.node(start, {
            kind: Kind.ARGUMENT,
            name: name2,
            value: this.parseValueLiteral(isConst)
          });
        }
        parseConstArgument() {
          return this.parseArgument(true);
        }
        // Implements the parsing rules in the Fragments section.
        /**
         * Corresponds to both FragmentSpread and InlineFragment in the spec.
         *
         * FragmentSpread : ... FragmentName Directives?
         *
         * InlineFragment : ... TypeCondition? Directives? SelectionSet
         */
        parseFragment() {
          const start = this._lexer.token;
          this.expectToken(TokenKind.SPREAD);
          const hasTypeCondition = this.expectOptionalKeyword("on");
          if (!hasTypeCondition && this.peek(TokenKind.NAME)) {
            return this.node(start, {
              kind: Kind.FRAGMENT_SPREAD,
              name: this.parseFragmentName(),
              directives: this.parseDirectives(false)
            });
          }
          return this.node(start, {
            kind: Kind.INLINE_FRAGMENT,
            typeCondition: hasTypeCondition ? this.parseNamedType() : void 0,
            directives: this.parseDirectives(false),
            selectionSet: this.parseSelectionSet()
          });
        }
        /**
         * FragmentDefinition :
         *   - fragment FragmentName on TypeCondition Directives? SelectionSet
         *
         * TypeCondition : NamedType
         */
        parseFragmentDefinition() {
          const start = this._lexer.token;
          this.expectKeyword("fragment");
          if (this._options.allowLegacyFragmentVariables === true) {
            return this.node(start, {
              kind: Kind.FRAGMENT_DEFINITION,
              name: this.parseFragmentName(),
              variableDefinitions: this.parseVariableDefinitions(),
              typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
              directives: this.parseDirectives(false),
              selectionSet: this.parseSelectionSet()
            });
          }
          return this.node(start, {
            kind: Kind.FRAGMENT_DEFINITION,
            name: this.parseFragmentName(),
            typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
            directives: this.parseDirectives(false),
            selectionSet: this.parseSelectionSet()
          });
        }
        /**
         * FragmentName : Name but not `on`
         */
        parseFragmentName() {
          if (this._lexer.token.value === "on") {
            throw this.unexpected();
          }
          return this.parseName();
        }
        // Implements the parsing rules in the Values section.
        /**
         * Value[Const] :
         *   - [~Const] Variable
         *   - IntValue
         *   - FloatValue
         *   - StringValue
         *   - BooleanValue
         *   - NullValue
         *   - EnumValue
         *   - ListValue[?Const]
         *   - ObjectValue[?Const]
         *
         * BooleanValue : one of `true` `false`
         *
         * NullValue : `null`
         *
         * EnumValue : Name but not `true`, `false` or `null`
         */
        parseValueLiteral(isConst) {
          const token = this._lexer.token;
          switch (token.kind) {
            case TokenKind.BRACKET_L:
              return this.parseList(isConst);
            case TokenKind.BRACE_L:
              return this.parseObject(isConst);
            case TokenKind.INT:
              this.advanceLexer();
              return this.node(token, {
                kind: Kind.INT,
                value: token.value
              });
            case TokenKind.FLOAT:
              this.advanceLexer();
              return this.node(token, {
                kind: Kind.FLOAT,
                value: token.value
              });
            case TokenKind.STRING:
            case TokenKind.BLOCK_STRING:
              return this.parseStringLiteral();
            case TokenKind.NAME:
              this.advanceLexer();
              switch (token.value) {
                case "true":
                  return this.node(token, {
                    kind: Kind.BOOLEAN,
                    value: true
                  });
                case "false":
                  return this.node(token, {
                    kind: Kind.BOOLEAN,
                    value: false
                  });
                case "null":
                  return this.node(token, {
                    kind: Kind.NULL
                  });
                default:
                  return this.node(token, {
                    kind: Kind.ENUM,
                    value: token.value
                  });
              }
            case TokenKind.DOLLAR:
              if (isConst) {
                this.expectToken(TokenKind.DOLLAR);
                if (this._lexer.token.kind === TokenKind.NAME) {
                  const varName = this._lexer.token.value;
                  throw syntaxError(
                    this._lexer.source,
                    token.start,
                    `Unexpected variable "$${varName}" in constant value.`
                  );
                } else {
                  throw this.unexpected(token);
                }
              }
              return this.parseVariable();
            default:
              throw this.unexpected();
          }
        }
        parseConstValueLiteral() {
          return this.parseValueLiteral(true);
        }
        parseStringLiteral() {
          const token = this._lexer.token;
          this.advanceLexer();
          return this.node(token, {
            kind: Kind.STRING,
            value: token.value,
            block: token.kind === TokenKind.BLOCK_STRING
          });
        }
        /**
         * ListValue[Const] :
         *   - [ ]
         *   - [ Value[?Const]+ ]
         */
        parseList(isConst) {
          const item = () => this.parseValueLiteral(isConst);
          return this.node(this._lexer.token, {
            kind: Kind.LIST,
            values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R)
          });
        }
        /**
         * ```
         * ObjectValue[Const] :
         *   - { }
         *   - { ObjectField[?Const]+ }
         * ```
         */
        parseObject(isConst) {
          const item = () => this.parseObjectField(isConst);
          return this.node(this._lexer.token, {
            kind: Kind.OBJECT,
            fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R)
          });
        }
        /**
         * ObjectField[Const] : Name : Value[?Const]
         */
        parseObjectField(isConst) {
          const start = this._lexer.token;
          const name2 = this.parseName();
          this.expectToken(TokenKind.COLON);
          return this.node(start, {
            kind: Kind.OBJECT_FIELD,
            name: name2,
            value: this.parseValueLiteral(isConst)
          });
        }
        // Implements the parsing rules in the Directives section.
        /**
         * Directives[Const] : Directive[?Const]+
         */
        parseDirectives(isConst) {
          const directives = [];
          while (this.peek(TokenKind.AT)) {
            directives.push(this.parseDirective(isConst));
          }
          return directives;
        }
        parseConstDirectives() {
          return this.parseDirectives(true);
        }
        /**
         * ```
         * Directive[Const] : @ Name Arguments[?Const]?
         * ```
         */
        parseDirective(isConst) {
          const start = this._lexer.token;
          this.expectToken(TokenKind.AT);
          return this.node(start, {
            kind: Kind.DIRECTIVE,
            name: this.parseName(),
            arguments: this.parseArguments(isConst)
          });
        }
        // Implements the parsing rules in the Types section.
        /**
         * Type :
         *   - NamedType
         *   - ListType
         *   - NonNullType
         */
        parseTypeReference() {
          const start = this._lexer.token;
          let type;
          if (this.expectOptionalToken(TokenKind.BRACKET_L)) {
            const innerType = this.parseTypeReference();
            this.expectToken(TokenKind.BRACKET_R);
            type = this.node(start, {
              kind: Kind.LIST_TYPE,
              type: innerType
            });
          } else {
            type = this.parseNamedType();
          }
          if (this.expectOptionalToken(TokenKind.BANG)) {
            return this.node(start, {
              kind: Kind.NON_NULL_TYPE,
              type
            });
          }
          return type;
        }
        /**
         * NamedType : Name
         */
        parseNamedType() {
          return this.node(this._lexer.token, {
            kind: Kind.NAMED_TYPE,
            name: this.parseName()
          });
        }
        // Implements the parsing rules in the Type Definition section.
        peekDescription() {
          return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);
        }
        /**
         * Description : StringValue
         */
        parseDescription() {
          if (this.peekDescription()) {
            return this.parseStringLiteral();
          }
        }
        /**
         * ```
         * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }
         * ```
         */
        parseSchemaDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          this.expectKeyword("schema");
          const directives = this.parseConstDirectives();
          const operationTypes = this.many(
            TokenKind.BRACE_L,
            this.parseOperationTypeDefinition,
            TokenKind.BRACE_R
          );
          return this.node(start, {
            kind: Kind.SCHEMA_DEFINITION,
            description,
            directives,
            operationTypes
          });
        }
        /**
         * OperationTypeDefinition : OperationType : NamedType
         */
        parseOperationTypeDefinition() {
          const start = this._lexer.token;
          const operation = this.parseOperationType();
          this.expectToken(TokenKind.COLON);
          const type = this.parseNamedType();
          return this.node(start, {
            kind: Kind.OPERATION_TYPE_DEFINITION,
            operation,
            type
          });
        }
        /**
         * ScalarTypeDefinition : Description? scalar Name Directives[Const]?
         */
        parseScalarTypeDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          this.expectKeyword("scalar");
          const name2 = this.parseName();
          const directives = this.parseConstDirectives();
          return this.node(start, {
            kind: Kind.SCALAR_TYPE_DEFINITION,
            description,
            name: name2,
            directives
          });
        }
        /**
         * ObjectTypeDefinition :
         *   Description?
         *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?
         */
        parseObjectTypeDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          this.expectKeyword("type");
          const name2 = this.parseName();
          const interfaces2 = this.parseImplementsInterfaces();
          const directives = this.parseConstDirectives();
          const fields = this.parseFieldsDefinition();
          return this.node(start, {
            kind: Kind.OBJECT_TYPE_DEFINITION,
            description,
            name: name2,
            interfaces: interfaces2,
            directives,
            fields
          });
        }
        /**
         * ImplementsInterfaces :
         *   - implements `&`? NamedType
         *   - ImplementsInterfaces & NamedType
         */
        parseImplementsInterfaces() {
          return this.expectOptionalKeyword("implements") ? this.delimitedMany(TokenKind.AMP, this.parseNamedType) : [];
        }
        /**
         * ```
         * FieldsDefinition : { FieldDefinition+ }
         * ```
         */
        parseFieldsDefinition() {
          return this.optionalMany(
            TokenKind.BRACE_L,
            this.parseFieldDefinition,
            TokenKind.BRACE_R
          );
        }
        /**
         * FieldDefinition :
         *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?
         */
        parseFieldDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          const name2 = this.parseName();
          const args = this.parseArgumentDefs();
          this.expectToken(TokenKind.COLON);
          const type = this.parseTypeReference();
          const directives = this.parseConstDirectives();
          return this.node(start, {
            kind: Kind.FIELD_DEFINITION,
            description,
            name: name2,
            arguments: args,
            type,
            directives
          });
        }
        /**
         * ArgumentsDefinition : ( InputValueDefinition+ )
         */
        parseArgumentDefs() {
          return this.optionalMany(
            TokenKind.PAREN_L,
            this.parseInputValueDef,
            TokenKind.PAREN_R
          );
        }
        /**
         * InputValueDefinition :
         *   - Description? Name : Type DefaultValue? Directives[Const]?
         */
        parseInputValueDef() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          const name2 = this.parseName();
          this.expectToken(TokenKind.COLON);
          const type = this.parseTypeReference();
          let defaultValue;
          if (this.expectOptionalToken(TokenKind.EQUALS)) {
            defaultValue = this.parseConstValueLiteral();
          }
          const directives = this.parseConstDirectives();
          return this.node(start, {
            kind: Kind.INPUT_VALUE_DEFINITION,
            description,
            name: name2,
            type,
            defaultValue,
            directives
          });
        }
        /**
         * InterfaceTypeDefinition :
         *   - Description? interface Name Directives[Const]? FieldsDefinition?
         */
        parseInterfaceTypeDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          this.expectKeyword("interface");
          const name2 = this.parseName();
          const interfaces2 = this.parseImplementsInterfaces();
          const directives = this.parseConstDirectives();
          const fields = this.parseFieldsDefinition();
          return this.node(start, {
            kind: Kind.INTERFACE_TYPE_DEFINITION,
            description,
            name: name2,
            interfaces: interfaces2,
            directives,
            fields
          });
        }
        /**
         * UnionTypeDefinition :
         *   - Description? union Name Directives[Const]? UnionMemberTypes?
         */
        parseUnionTypeDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          this.expectKeyword("union");
          const name2 = this.parseName();
          const directives = this.parseConstDirectives();
          const types = this.parseUnionMemberTypes();
          return this.node(start, {
            kind: Kind.UNION_TYPE_DEFINITION,
            description,
            name: name2,
            directives,
            types
          });
        }
        /**
         * UnionMemberTypes :
         *   - = `|`? NamedType
         *   - UnionMemberTypes | NamedType
         */
        parseUnionMemberTypes() {
          return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];
        }
        /**
         * EnumTypeDefinition :
         *   - Description? enum Name Directives[Const]? EnumValuesDefinition?
         */
        parseEnumTypeDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          this.expectKeyword("enum");
          const name2 = this.parseName();
          const directives = this.parseConstDirectives();
          const values2 = this.parseEnumValuesDefinition();
          return this.node(start, {
            kind: Kind.ENUM_TYPE_DEFINITION,
            description,
            name: name2,
            directives,
            values: values2
          });
        }
        /**
         * ```
         * EnumValuesDefinition : { EnumValueDefinition+ }
         * ```
         */
        parseEnumValuesDefinition() {
          return this.optionalMany(
            TokenKind.BRACE_L,
            this.parseEnumValueDefinition,
            TokenKind.BRACE_R
          );
        }
        /**
         * EnumValueDefinition : Description? EnumValue Directives[Const]?
         */
        parseEnumValueDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          const name2 = this.parseEnumValueName();
          const directives = this.parseConstDirectives();
          return this.node(start, {
            kind: Kind.ENUM_VALUE_DEFINITION,
            description,
            name: name2,
            directives
          });
        }
        /**
         * EnumValue : Name but not `true`, `false` or `null`
         */
        parseEnumValueName() {
          if (this._lexer.token.value === "true" || this._lexer.token.value === "false" || this._lexer.token.value === "null") {
            throw syntaxError(
              this._lexer.source,
              this._lexer.token.start,
              `${getTokenDesc(
                this._lexer.token
              )} is reserved and cannot be used for an enum value.`
            );
          }
          return this.parseName();
        }
        /**
         * InputObjectTypeDefinition :
         *   - Description? input Name Directives[Const]? InputFieldsDefinition?
         */
        parseInputObjectTypeDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          this.expectKeyword("input");
          const name2 = this.parseName();
          const directives = this.parseConstDirectives();
          const fields = this.parseInputFieldsDefinition();
          return this.node(start, {
            kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,
            description,
            name: name2,
            directives,
            fields
          });
        }
        /**
         * ```
         * InputFieldsDefinition : { InputValueDefinition+ }
         * ```
         */
        parseInputFieldsDefinition() {
          return this.optionalMany(
            TokenKind.BRACE_L,
            this.parseInputValueDef,
            TokenKind.BRACE_R
          );
        }
        /**
         * TypeSystemExtension :
         *   - SchemaExtension
         *   - TypeExtension
         *
         * TypeExtension :
         *   - ScalarTypeExtension
         *   - ObjectTypeExtension
         *   - InterfaceTypeExtension
         *   - UnionTypeExtension
         *   - EnumTypeExtension
         *   - InputObjectTypeDefinition
         */
        parseTypeSystemExtension() {
          const keywordToken = this._lexer.lookahead();
          if (keywordToken.kind === TokenKind.NAME) {
            switch (keywordToken.value) {
              case "schema":
                return this.parseSchemaExtension();
              case "scalar":
                return this.parseScalarTypeExtension();
              case "type":
                return this.parseObjectTypeExtension();
              case "interface":
                return this.parseInterfaceTypeExtension();
              case "union":
                return this.parseUnionTypeExtension();
              case "enum":
                return this.parseEnumTypeExtension();
              case "input":
                return this.parseInputObjectTypeExtension();
            }
          }
          throw this.unexpected(keywordToken);
        }
        /**
         * ```
         * SchemaExtension :
         *  - extend schema Directives[Const]? { OperationTypeDefinition+ }
         *  - extend schema Directives[Const]
         * ```
         */
        parseSchemaExtension() {
          const start = this._lexer.token;
          this.expectKeyword("extend");
          this.expectKeyword("schema");
          const directives = this.parseConstDirectives();
          const operationTypes = this.optionalMany(
            TokenKind.BRACE_L,
            this.parseOperationTypeDefinition,
            TokenKind.BRACE_R
          );
          if (directives.length === 0 && operationTypes.length === 0) {
            throw this.unexpected();
          }
          return this.node(start, {
            kind: Kind.SCHEMA_EXTENSION,
            directives,
            operationTypes
          });
        }
        /**
         * ScalarTypeExtension :
         *   - extend scalar Name Directives[Const]
         */
        parseScalarTypeExtension() {
          const start = this._lexer.token;
          this.expectKeyword("extend");
          this.expectKeyword("scalar");
          const name2 = this.parseName();
          const directives = this.parseConstDirectives();
          if (directives.length === 0) {
            throw this.unexpected();
          }
          return this.node(start, {
            kind: Kind.SCALAR_TYPE_EXTENSION,
            name: name2,
            directives
          });
        }
        /**
         * ObjectTypeExtension :
         *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
         *  - extend type Name ImplementsInterfaces? Directives[Const]
         *  - extend type Name ImplementsInterfaces
         */
        parseObjectTypeExtension() {
          const start = this._lexer.token;
          this.expectKeyword("extend");
          this.expectKeyword("type");
          const name2 = this.parseName();
          const interfaces2 = this.parseImplementsInterfaces();
          const directives = this.parseConstDirectives();
          const fields = this.parseFieldsDefinition();
          if (interfaces2.length === 0 && directives.length === 0 && fields.length === 0) {
            throw this.unexpected();
          }
          return this.node(start, {
            kind: Kind.OBJECT_TYPE_EXTENSION,
            name: name2,
            interfaces: interfaces2,
            directives,
            fields
          });
        }
        /**
         * InterfaceTypeExtension :
         *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
         *  - extend interface Name ImplementsInterfaces? Directives[Const]
         *  - extend interface Name ImplementsInterfaces
         */
        parseInterfaceTypeExtension() {
          const start = this._lexer.token;
          this.expectKeyword("extend");
          this.expectKeyword("interface");
          const name2 = this.parseName();
          const interfaces2 = this.parseImplementsInterfaces();
          const directives = this.parseConstDirectives();
          const fields = this.parseFieldsDefinition();
          if (interfaces2.length === 0 && directives.length === 0 && fields.length === 0) {
            throw this.unexpected();
          }
          return this.node(start, {
            kind: Kind.INTERFACE_TYPE_EXTENSION,
            name: name2,
            interfaces: interfaces2,
            directives,
            fields
          });
        }
        /**
         * UnionTypeExtension :
         *   - extend union Name Directives[Const]? UnionMemberTypes
         *   - extend union Name Directives[Const]
         */
        parseUnionTypeExtension() {
          const start = this._lexer.token;
          this.expectKeyword("extend");
          this.expectKeyword("union");
          const name2 = this.parseName();
          const directives = this.parseConstDirectives();
          const types = this.parseUnionMemberTypes();
          if (directives.length === 0 && types.length === 0) {
            throw this.unexpected();
          }
          return this.node(start, {
            kind: Kind.UNION_TYPE_EXTENSION,
            name: name2,
            directives,
            types
          });
        }
        /**
         * EnumTypeExtension :
         *   - extend enum Name Directives[Const]? EnumValuesDefinition
         *   - extend enum Name Directives[Const]
         */
        parseEnumTypeExtension() {
          const start = this._lexer.token;
          this.expectKeyword("extend");
          this.expectKeyword("enum");
          const name2 = this.parseName();
          const directives = this.parseConstDirectives();
          const values2 = this.parseEnumValuesDefinition();
          if (directives.length === 0 && values2.length === 0) {
            throw this.unexpected();
          }
          return this.node(start, {
            kind: Kind.ENUM_TYPE_EXTENSION,
            name: name2,
            directives,
            values: values2
          });
        }
        /**
         * InputObjectTypeExtension :
         *   - extend input Name Directives[Const]? InputFieldsDefinition
         *   - extend input Name Directives[Const]
         */
        parseInputObjectTypeExtension() {
          const start = this._lexer.token;
          this.expectKeyword("extend");
          this.expectKeyword("input");
          const name2 = this.parseName();
          const directives = this.parseConstDirectives();
          const fields = this.parseInputFieldsDefinition();
          if (directives.length === 0 && fields.length === 0) {
            throw this.unexpected();
          }
          return this.node(start, {
            kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,
            name: name2,
            directives,
            fields
          });
        }
        /**
         * ```
         * DirectiveDefinition :
         *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations
         * ```
         */
        parseDirectiveDefinition() {
          const start = this._lexer.token;
          const description = this.parseDescription();
          this.expectKeyword("directive");
          this.expectToken(TokenKind.AT);
          const name2 = this.parseName();
          const args = this.parseArgumentDefs();
          const repeatable = this.expectOptionalKeyword("repeatable");
          this.expectKeyword("on");
          const locations = this.parseDirectiveLocations();
          return this.node(start, {
            kind: Kind.DIRECTIVE_DEFINITION,
            description,
            name: name2,
            arguments: args,
            repeatable,
            locations
          });
        }
        /**
         * DirectiveLocations :
         *   - `|`? DirectiveLocation
         *   - DirectiveLocations | DirectiveLocation
         */
        parseDirectiveLocations() {
          return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);
        }
        /*
         * DirectiveLocation :
         *   - ExecutableDirectiveLocation
         *   - TypeSystemDirectiveLocation
         *
         * ExecutableDirectiveLocation : one of
         *   `QUERY`
         *   `MUTATION`
         *   `SUBSCRIPTION`
         *   `FIELD`
         *   `FRAGMENT_DEFINITION`
         *   `FRAGMENT_SPREAD`
         *   `INLINE_FRAGMENT`
         *
         * TypeSystemDirectiveLocation : one of
         *   `SCHEMA`
         *   `SCALAR`
         *   `OBJECT`
         *   `FIELD_DEFINITION`
         *   `ARGUMENT_DEFINITION`
         *   `INTERFACE`
         *   `UNION`
         *   `ENUM`
         *   `ENUM_VALUE`
         *   `INPUT_OBJECT`
         *   `INPUT_FIELD_DEFINITION`
         */
        parseDirectiveLocation() {
          const start = this._lexer.token;
          const name2 = this.parseName();
          if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name2.value)) {
            return name2;
          }
          throw this.unexpected(start);
        }
        // Core parsing utility functions
        /**
         * Returns a node that, if configured to do so, sets a "loc" field as a
         * location object, used to identify the place in the source that created a
         * given parsed object.
         */
        node(startToken, node) {
          if (this._options.noLocation !== true) {
            node.loc = new Location(
              startToken,
              this._lexer.lastToken,
              this._lexer.source
            );
          }
          return node;
        }
        /**
         * Determines if the next token is of a given kind
         */
        peek(kind) {
          return this._lexer.token.kind === kind;
        }
        /**
         * If the next token is of the given kind, return that token after advancing the lexer.
         * Otherwise, do not change the parser state and throw an error.
         */
        expectToken(kind) {
          const token = this._lexer.token;
          if (token.kind === kind) {
            this.advanceLexer();
            return token;
          }
          throw syntaxError(
            this._lexer.source,
            token.start,
            `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`
          );
        }
        /**
         * If the next token is of the given kind, return "true" after advancing the lexer.
         * Otherwise, do not change the parser state and return "false".
         */
        expectOptionalToken(kind) {
          const token = this._lexer.token;
          if (token.kind === kind) {
            this.advanceLexer();
            return true;
          }
          return false;
        }
        /**
         * If the next token is a given keyword, advance the lexer.
         * Otherwise, do not change the parser state and throw an error.
         */
        expectKeyword(value2) {
          const token = this._lexer.token;
          if (token.kind === TokenKind.NAME && token.value === value2) {
            this.advanceLexer();
          } else {
            throw syntaxError(
              this._lexer.source,
              token.start,
              `Expected "${value2}", found ${getTokenDesc(token)}.`
            );
          }
        }
        /**
         * If the next token is a given keyword, return "true" after advancing the lexer.
         * Otherwise, do not change the parser state and return "false".
         */
        expectOptionalKeyword(value2) {
          const token = this._lexer.token;
          if (token.kind === TokenKind.NAME && token.value === value2) {
            this.advanceLexer();
            return true;
          }
          return false;
        }
        /**
         * Helper function for creating an error when an unexpected lexed token is encountered.
         */
        unexpected(atToken) {
          const token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;
          return syntaxError(
            this._lexer.source,
            token.start,
            `Unexpected ${getTokenDesc(token)}.`
          );
        }
        /**
         * Returns a possibly empty list of parse nodes, determined by the parseFn.
         * This list begins with a lex token of openKind and ends with a lex token of closeKind.
         * Advances the parser to the next lex token after the closing token.
         */
        any(openKind, parseFn, closeKind) {
          this.expectToken(openKind);
          const nodes = [];
          while (!this.expectOptionalToken(closeKind)) {
            nodes.push(parseFn.call(this));
          }
          return nodes;
        }
        /**
         * Returns a list of parse nodes, determined by the parseFn.
         * It can be empty only if open token is missing otherwise it will always return non-empty list
         * that begins with a lex token of openKind and ends with a lex token of closeKind.
         * Advances the parser to the next lex token after the closing token.
         */
        optionalMany(openKind, parseFn, closeKind) {
          if (this.expectOptionalToken(openKind)) {
            const nodes = [];
            do {
              nodes.push(parseFn.call(this));
            } while (!this.expectOptionalToken(closeKind));
            return nodes;
          }
          return [];
        }
        /**
         * Returns a non-empty list of parse nodes, determined by the parseFn.
         * This list begins with a lex token of openKind and ends with a lex token of closeKind.
         * Advances the parser to the next lex token after the closing token.
         */
        many(openKind, parseFn, closeKind) {
          this.expectToken(openKind);
          const nodes = [];
          do {
            nodes.push(parseFn.call(this));
          } while (!this.expectOptionalToken(closeKind));
          return nodes;
        }
        /**
         * Returns a non-empty list of parse nodes, determined by the parseFn.
         * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.
         * Advances the parser to the next lex token after last item in the list.
         */
        delimitedMany(delimiterKind, parseFn) {
          this.expectOptionalToken(delimiterKind);
          const nodes = [];
          do {
            nodes.push(parseFn.call(this));
          } while (this.expectOptionalToken(delimiterKind));
          return nodes;
        }
        advanceLexer() {
          const { maxTokens } = this._options;
          const token = this._lexer.advance();
          if (maxTokens !== void 0 && token.kind !== TokenKind.EOF) {
            ++this._tokenCounter;
            if (this._tokenCounter > maxTokens) {
              throw syntaxError(
                this._lexer.source,
                token.start,
                `Document contains more that ${maxTokens} tokens. Parsing aborted.`
              );
            }
          }
        }
      };
    }
  });

  // node_modules/graphql/language/printString.mjs
  function printString(str) {
    return `"${str.replace(escapedRegExp, escapedReplacer)}"`;
  }
  function escapedReplacer(str) {
    return escapeSequences[str.charCodeAt(0)];
  }
  var escapedRegExp, escapeSequences;
  var init_printString = __esm({
    "node_modules/graphql/language/printString.mjs"() {
      escapedRegExp = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;
      escapeSequences = [
        "\\u0000",
        "\\u0001",
        "\\u0002",
        "\\u0003",
        "\\u0004",
        "\\u0005",
        "\\u0006",
        "\\u0007",
        "\\b",
        "\\t",
        "\\n",
        "\\u000B",
        "\\f",
        "\\r",
        "\\u000E",
        "\\u000F",
        "\\u0010",
        "\\u0011",
        "\\u0012",
        "\\u0013",
        "\\u0014",
        "\\u0015",
        "\\u0016",
        "\\u0017",
        "\\u0018",
        "\\u0019",
        "\\u001A",
        "\\u001B",
        "\\u001C",
        "\\u001D",
        "\\u001E",
        "\\u001F",
        "",
        "",
        '\\"',
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        // 2F
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        // 3F
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        // 4F
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "\\\\",
        "",
        "",
        "",
        // 5F
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        // 6F
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "\\u007F",
        "\\u0080",
        "\\u0081",
        "\\u0082",
        "\\u0083",
        "\\u0084",
        "\\u0085",
        "\\u0086",
        "\\u0087",
        "\\u0088",
        "\\u0089",
        "\\u008A",
        "\\u008B",
        "\\u008C",
        "\\u008D",
        "\\u008E",
        "\\u008F",
        "\\u0090",
        "\\u0091",
        "\\u0092",
        "\\u0093",
        "\\u0094",
        "\\u0095",
        "\\u0096",
        "\\u0097",
        "\\u0098",
        "\\u0099",
        "\\u009A",
        "\\u009B",
        "\\u009C",
        "\\u009D",
        "\\u009E",
        "\\u009F"
      ];
    }
  });

  // node_modules/graphql/language/visitor.mjs
  function visit(root2, visitor, visitorKeys = QueryDocumentKeys) {
    const enterLeaveMap = /* @__PURE__ */ new Map();
    for (const kind of Object.values(Kind)) {
      enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));
    }
    let stack = void 0;
    let inArray = Array.isArray(root2);
    let keys = [root2];
    let index2 = -1;
    let edits = [];
    let node = root2;
    let key2 = void 0;
    let parent2 = void 0;
    const path = [];
    const ancestors = [];
    do {
      index2++;
      const isLeaving = index2 === keys.length;
      const isEdited = isLeaving && edits.length !== 0;
      if (isLeaving) {
        key2 = ancestors.length === 0 ? void 0 : path[path.length - 1];
        node = parent2;
        parent2 = ancestors.pop();
        if (isEdited) {
          if (inArray) {
            node = node.slice();
            let editOffset = 0;
            for (const [editKey, editValue] of edits) {
              const arrayKey = editKey - editOffset;
              if (editValue === null) {
                node.splice(arrayKey, 1);
                editOffset++;
              } else {
                node[arrayKey] = editValue;
              }
            }
          } else {
            node = Object.defineProperties(
              {},
              Object.getOwnPropertyDescriptors(node)
            );
            for (const [editKey, editValue] of edits) {
              node[editKey] = editValue;
            }
          }
        }
        index2 = stack.index;
        keys = stack.keys;
        edits = stack.edits;
        inArray = stack.inArray;
        stack = stack.prev;
      } else if (parent2) {
        key2 = inArray ? index2 : keys[index2];
        node = parent2[key2];
        if (node === null || node === void 0) {
          continue;
        }
        path.push(key2);
      }
      let result2;
      if (!Array.isArray(node)) {
        var _enterLeaveMap$get, _enterLeaveMap$get2;
        isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);
        const visitFn = isLeaving ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get === void 0 ? void 0 : _enterLeaveMap$get.leave : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get2 === void 0 ? void 0 : _enterLeaveMap$get2.enter;
        result2 = visitFn === null || visitFn === void 0 ? void 0 : visitFn.call(visitor, node, key2, parent2, path, ancestors);
        if (result2 === BREAK) {
          break;
        }
        if (result2 === false) {
          if (!isLeaving) {
            path.pop();
            continue;
          }
        } else if (result2 !== void 0) {
          edits.push([key2, result2]);
          if (!isLeaving) {
            if (isNode(result2)) {
              node = result2;
            } else {
              path.pop();
              continue;
            }
          }
        }
      }
      if (result2 === void 0 && isEdited) {
        edits.push([key2, node]);
      }
      if (isLeaving) {
        path.pop();
      } else {
        var _node$kind;
        stack = {
          inArray,
          index: index2,
          keys,
          edits,
          prev: stack
        };
        inArray = Array.isArray(node);
        keys = inArray ? node : (_node$kind = visitorKeys[node.kind]) !== null && _node$kind !== void 0 ? _node$kind : [];
        index2 = -1;
        edits = [];
        if (parent2) {
          ancestors.push(parent2);
        }
        parent2 = node;
      }
    } while (stack !== void 0);
    if (edits.length !== 0) {
      return edits[edits.length - 1][1];
    }
    return root2;
  }
  function getEnterLeaveForKind(visitor, kind) {
    const kindVisitor = visitor[kind];
    if (typeof kindVisitor === "object") {
      return kindVisitor;
    } else if (typeof kindVisitor === "function") {
      return {
        enter: kindVisitor,
        leave: void 0
      };
    }
    return {
      enter: visitor.enter,
      leave: visitor.leave
    };
  }
  var BREAK;
  var init_visitor = __esm({
    "node_modules/graphql/language/visitor.mjs"() {
      init_devAssert();
      init_inspect();
      init_ast();
      init_kinds();
      BREAK = Object.freeze({});
    }
  });

  // node_modules/graphql/language/printer.mjs
  function print(ast) {
    return visit(ast, printDocASTReducer);
  }
  function join(maybeArray, separator = "") {
    var _maybeArray$filter$jo;
    return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter((x) => x).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : "";
  }
  function block(array) {
    return wrap2("{\n", indent(join(array, "\n")), "\n}");
  }
  function wrap2(start, maybeString, end = "") {
    return maybeString != null && maybeString !== "" ? start + maybeString + end : "";
  }
  function indent(str) {
    return wrap2("  ", str.replace(/\n/g, "\n  "));
  }
  function hasMultilineItems(maybeArray) {
    var _maybeArray$some;
    return (_maybeArray$some = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some((str) => str.includes("\n"))) !== null && _maybeArray$some !== void 0 ? _maybeArray$some : false;
  }
  var MAX_LINE_LENGTH, printDocASTReducer;
  var init_printer = __esm({
    "node_modules/graphql/language/printer.mjs"() {
      init_blockString();
      init_printString();
      init_visitor();
      MAX_LINE_LENGTH = 80;
      printDocASTReducer = {
        Name: {
          leave: (node) => node.value
        },
        Variable: {
          leave: (node) => "$" + node.name
        },
        // Document
        Document: {
          leave: (node) => join(node.definitions, "\n\n")
        },
        OperationDefinition: {
          leave(node) {
            const varDefs = wrap2("(", join(node.variableDefinitions, ", "), ")");
            const prefix = join(
              [
                node.operation,
                join([node.name, varDefs]),
                join(node.directives, " ")
              ],
              " "
            );
            return (prefix === "query" ? "" : prefix + " ") + node.selectionSet;
          }
        },
        VariableDefinition: {
          leave: ({ variable, type, defaultValue, directives }) => variable + ": " + type + wrap2(" = ", defaultValue) + wrap2(" ", join(directives, " "))
        },
        SelectionSet: {
          leave: ({ selections }) => block(selections)
        },
        Field: {
          leave({ alias, name: name2, arguments: args, directives, selectionSet }) {
            const prefix = wrap2("", alias, ": ") + name2;
            let argsLine = prefix + wrap2("(", join(args, ", "), ")");
            if (argsLine.length > MAX_LINE_LENGTH) {
              argsLine = prefix + wrap2("(\n", indent(join(args, "\n")), "\n)");
            }
            return join([argsLine, join(directives, " "), selectionSet], " ");
          }
        },
        Argument: {
          leave: ({ name: name2, value: value2 }) => name2 + ": " + value2
        },
        // Fragments
        FragmentSpread: {
          leave: ({ name: name2, directives }) => "..." + name2 + wrap2(" ", join(directives, " "))
        },
        InlineFragment: {
          leave: ({ typeCondition, directives, selectionSet }) => join(
            [
              "...",
              wrap2("on ", typeCondition),
              join(directives, " "),
              selectionSet
            ],
            " "
          )
        },
        FragmentDefinition: {
          leave: ({ name: name2, typeCondition, variableDefinitions, directives, selectionSet }) => (
            // or removed in the future.
            `fragment ${name2}${wrap2("(", join(variableDefinitions, ", "), ")")} on ${typeCondition} ${wrap2("", join(directives, " "), " ")}` + selectionSet
          )
        },
        // Value
        IntValue: {
          leave: ({ value: value2 }) => value2
        },
        FloatValue: {
          leave: ({ value: value2 }) => value2
        },
        StringValue: {
          leave: ({ value: value2, block: isBlockString }) => isBlockString ? printBlockString(value2) : printString(value2)
        },
        BooleanValue: {
          leave: ({ value: value2 }) => value2 ? "true" : "false"
        },
        NullValue: {
          leave: () => "null"
        },
        EnumValue: {
          leave: ({ value: value2 }) => value2
        },
        ListValue: {
          leave: ({ values: values2 }) => "[" + join(values2, ", ") + "]"
        },
        ObjectValue: {
          leave: ({ fields }) => "{" + join(fields, ", ") + "}"
        },
        ObjectField: {
          leave: ({ name: name2, value: value2 }) => name2 + ": " + value2
        },
        // Directive
        Directive: {
          leave: ({ name: name2, arguments: args }) => "@" + name2 + wrap2("(", join(args, ", "), ")")
        },
        // Type
        NamedType: {
          leave: ({ name: name2 }) => name2
        },
        ListType: {
          leave: ({ type }) => "[" + type + "]"
        },
        NonNullType: {
          leave: ({ type }) => type + "!"
        },
        // Type System Definitions
        SchemaDefinition: {
          leave: ({ description, directives, operationTypes }) => wrap2("", description, "\n") + join(["schema", join(directives, " "), block(operationTypes)], " ")
        },
        OperationTypeDefinition: {
          leave: ({ operation, type }) => operation + ": " + type
        },
        ScalarTypeDefinition: {
          leave: ({ description, name: name2, directives }) => wrap2("", description, "\n") + join(["scalar", name2, join(directives, " ")], " ")
        },
        ObjectTypeDefinition: {
          leave: ({ description, name: name2, interfaces: interfaces2, directives, fields }) => wrap2("", description, "\n") + join(
            [
              "type",
              name2,
              wrap2("implements ", join(interfaces2, " & ")),
              join(directives, " "),
              block(fields)
            ],
            " "
          )
        },
        FieldDefinition: {
          leave: ({ description, name: name2, arguments: args, type, directives }) => wrap2("", description, "\n") + name2 + (hasMultilineItems(args) ? wrap2("(\n", indent(join(args, "\n")), "\n)") : wrap2("(", join(args, ", "), ")")) + ": " + type + wrap2(" ", join(directives, " "))
        },
        InputValueDefinition: {
          leave: ({ description, name: name2, type, defaultValue, directives }) => wrap2("", description, "\n") + join(
            [name2 + ": " + type, wrap2("= ", defaultValue), join(directives, " ")],
            " "
          )
        },
        InterfaceTypeDefinition: {
          leave: ({ description, name: name2, interfaces: interfaces2, directives, fields }) => wrap2("", description, "\n") + join(
            [
              "interface",
              name2,
              wrap2("implements ", join(interfaces2, " & ")),
              join(directives, " "),
              block(fields)
            ],
            " "
          )
        },
        UnionTypeDefinition: {
          leave: ({ description, name: name2, directives, types }) => wrap2("", description, "\n") + join(
            ["union", name2, join(directives, " "), wrap2("= ", join(types, " | "))],
            " "
          )
        },
        EnumTypeDefinition: {
          leave: ({ description, name: name2, directives, values: values2 }) => wrap2("", description, "\n") + join(["enum", name2, join(directives, " "), block(values2)], " ")
        },
        EnumValueDefinition: {
          leave: ({ description, name: name2, directives }) => wrap2("", description, "\n") + join([name2, join(directives, " ")], " ")
        },
        InputObjectTypeDefinition: {
          leave: ({ description, name: name2, directives, fields }) => wrap2("", description, "\n") + join(["input", name2, join(directives, " "), block(fields)], " ")
        },
        DirectiveDefinition: {
          leave: ({ description, name: name2, arguments: args, repeatable, locations }) => wrap2("", description, "\n") + "directive @" + name2 + (hasMultilineItems(args) ? wrap2("(\n", indent(join(args, "\n")), "\n)") : wrap2("(", join(args, ", "), ")")) + (repeatable ? " repeatable" : "") + " on " + join(locations, " | ")
        },
        SchemaExtension: {
          leave: ({ directives, operationTypes }) => join(
            ["extend schema", join(directives, " "), block(operationTypes)],
            " "
          )
        },
        ScalarTypeExtension: {
          leave: ({ name: name2, directives }) => join(["extend scalar", name2, join(directives, " ")], " ")
        },
        ObjectTypeExtension: {
          leave: ({ name: name2, interfaces: interfaces2, directives, fields }) => join(
            [
              "extend type",
              name2,
              wrap2("implements ", join(interfaces2, " & ")),
              join(directives, " "),
              block(fields)
            ],
            " "
          )
        },
        InterfaceTypeExtension: {
          leave: ({ name: name2, interfaces: interfaces2, directives, fields }) => join(
            [
              "extend interface",
              name2,
              wrap2("implements ", join(interfaces2, " & ")),
              join(directives, " "),
              block(fields)
            ],
            " "
          )
        },
        UnionTypeExtension: {
          leave: ({ name: name2, directives, types }) => join(
            [
              "extend union",
              name2,
              join(directives, " "),
              wrap2("= ", join(types, " | "))
            ],
            " "
          )
        },
        EnumTypeExtension: {
          leave: ({ name: name2, directives, values: values2 }) => join(["extend enum", name2, join(directives, " "), block(values2)], " ")
        },
        InputObjectTypeExtension: {
          leave: ({ name: name2, directives, fields }) => join(["extend input", name2, join(directives, " "), block(fields)], " ")
        }
      };
    }
  });

  // node_modules/graphql/language/predicates.mjs
  function isSelectionNode(node) {
    return node.kind === Kind.FIELD || node.kind === Kind.FRAGMENT_SPREAD || node.kind === Kind.INLINE_FRAGMENT;
  }
  var init_predicates = __esm({
    "node_modules/graphql/language/predicates.mjs"() {
      init_kinds();
    }
  });

  // node_modules/graphql/language/index.mjs
  var init_language = __esm({
    "node_modules/graphql/language/index.mjs"() {
      init_kinds();
      init_parser();
      init_printer();
      init_visitor();
      init_predicates();
    }
  });

  // node_modules/graphql/index.mjs
  var init_graphql = __esm({
    "node_modules/graphql/index.mjs"() {
      init_language();
    }
  });

  // node_modules/@apollo/client/utilities/graphql/directives.js
  function shouldInclude(_a2, variables) {
    var directives = _a2.directives;
    if (!directives || !directives.length) {
      return true;
    }
    return getInclusionDirectives(directives).every(function(_a3) {
      var directive = _a3.directive, ifArgument = _a3.ifArgument;
      var evaledValue = false;
      if (ifArgument.value.kind === "Variable") {
        evaledValue = variables && variables[ifArgument.value.name.value];
        invariant2(evaledValue !== void 0, 66, directive.name.value);
      } else {
        evaledValue = ifArgument.value.value;
      }
      return directive.name.value === "skip" ? !evaledValue : evaledValue;
    });
  }
  function hasDirectives(names, root2, all) {
    var nameSet = new Set(names);
    var uniqueCount = nameSet.size;
    visit(root2, {
      Directive: function(node) {
        if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {
          return BREAK;
        }
      }
    });
    return all ? !nameSet.size : nameSet.size < uniqueCount;
  }
  function hasClientExports(document2) {
    return document2 && hasDirectives(["client", "export"], document2, true);
  }
  function isInclusionDirective(_a2) {
    var value2 = _a2.name.value;
    return value2 === "skip" || value2 === "include";
  }
  function getInclusionDirectives(directives) {
    var result2 = [];
    if (directives && directives.length) {
      directives.forEach(function(directive) {
        if (!isInclusionDirective(directive))
          return;
        var directiveArguments = directive.arguments;
        var directiveName = directive.name.value;
        invariant2(directiveArguments && directiveArguments.length === 1, 67, directiveName);
        var ifArgument = directiveArguments[0];
        invariant2(ifArgument.name && ifArgument.name.value === "if", 68, directiveName);
        var ifValue = ifArgument.value;
        invariant2(ifValue && (ifValue.kind === "Variable" || ifValue.kind === "BooleanValue"), 69, directiveName);
        result2.push({ directive, ifArgument });
      });
    }
    return result2;
  }
  var init_directives = __esm({
    "node_modules/@apollo/client/utilities/graphql/directives.js"() {
      init_globals();
      init_graphql();
    }
  });

  // node_modules/@wry/trie/lib/index.js
  function isObjRef(value2) {
    switch (typeof value2) {
      case "object":
        if (value2 === null)
          break;
      case "function":
        return true;
    }
    return false;
  }
  var defaultMakeData, forEach2, slice, hasOwnProperty, Trie;
  var init_lib = __esm({
    "node_modules/@wry/trie/lib/index.js"() {
      defaultMakeData = () => /* @__PURE__ */ Object.create(null);
      ({ forEach: forEach2, slice } = Array.prototype);
      ({ hasOwnProperty } = Object.prototype);
      Trie = class {
        constructor(weakness = true, makeData = defaultMakeData) {
          this.weakness = weakness;
          this.makeData = makeData;
        }
        lookup() {
          return this.lookupArray(arguments);
        }
        lookupArray(array) {
          let node = this;
          forEach2.call(array, (key2) => node = node.getChildTrie(key2));
          return hasOwnProperty.call(node, "data") ? node.data : node.data = this.makeData(slice.call(array));
        }
        peek() {
          return this.peekArray(arguments);
        }
        peekArray(array) {
          let node = this;
          for (let i = 0, len = array.length; node && i < len; ++i) {
            const map = node.mapFor(array[i], false);
            node = map && map.get(array[i]);
          }
          return node && node.data;
        }
        remove() {
          return this.removeArray(arguments);
        }
        removeArray(array) {
          let data2;
          if (array.length) {
            const head = array[0];
            const map = this.mapFor(head, false);
            const child = map && map.get(head);
            if (child) {
              data2 = child.removeArray(slice.call(array, 1));
              if (!child.data && !child.weak && !(child.strong && child.strong.size)) {
                map.delete(head);
              }
            }
          } else {
            data2 = this.data;
            delete this.data;
          }
          return data2;
        }
        getChildTrie(key2) {
          const map = this.mapFor(key2, true);
          let child = map.get(key2);
          if (!child)
            map.set(key2, child = new Trie(this.weakness, this.makeData));
          return child;
        }
        mapFor(key2, create5) {
          return this.weakness && isObjRef(key2) ? this.weak || (create5 ? this.weak = /* @__PURE__ */ new WeakMap() : void 0) : this.strong || (create5 ? this.strong = /* @__PURE__ */ new Map() : void 0);
        }
      };
    }
  });

  // node_modules/@apollo/client/utilities/common/canUse.js
  var canUseWeakMap, canUseWeakSet, canUseSymbol, canUseAsyncIteratorSymbol, canUseDOM, usingJSDOM;
  var init_canUse = __esm({
    "node_modules/@apollo/client/utilities/common/canUse.js"() {
      init_globals();
      canUseWeakMap = typeof WeakMap === "function" && maybe(function() {
        return navigator.product;
      }) !== "ReactNative";
      canUseWeakSet = typeof WeakSet === "function";
      canUseSymbol = typeof Symbol === "function" && typeof Symbol.for === "function";
      canUseAsyncIteratorSymbol = canUseSymbol && Symbol.asyncIterator;
      canUseDOM = typeof maybe(function() {
        return window.document.createElement;
      }) === "function";
      usingJSDOM = // Following advice found in this comment from @domenic (maintainer of jsdom):
      // https://github.com/jsdom/jsdom/issues/1537#issuecomment-229405327
      //
      // Since we control the version of Jest and jsdom used when running Apollo
      // Client tests, and that version is recent enought to include " jsdom/x.y.z"
      // at the end of the user agent string, I believe this case is all we need to
      // check. Testing for "Node.js" was recommended for backwards compatibility
      // with older version of jsdom, but we don't have that problem.
      maybe(function() {
        return navigator.userAgent.indexOf("jsdom") >= 0;
      }) || false;
    }
  });

  // node_modules/@apollo/client/utilities/common/objects.js
  function isNonNullObject(obj) {
    return obj !== null && typeof obj === "object";
  }
  var init_objects = __esm({
    "node_modules/@apollo/client/utilities/common/objects.js"() {
    }
  });

  // node_modules/@apollo/client/utilities/graphql/fragments.js
  function getFragmentQueryDocument(document2, fragmentName) {
    var actualFragmentName = fragmentName;
    var fragments = [];
    document2.definitions.forEach(function(definition) {
      if (definition.kind === "OperationDefinition") {
        throw newInvariantError(
          70,
          definition.operation,
          definition.name ? " named '".concat(definition.name.value, "'") : ""
        );
      }
      if (definition.kind === "FragmentDefinition") {
        fragments.push(definition);
      }
    });
    if (typeof actualFragmentName === "undefined") {
      invariant2(fragments.length === 1, 71, fragments.length);
      actualFragmentName = fragments[0].name.value;
    }
    var query = __assign(__assign({}, document2), { definitions: __spreadArray([
      {
        kind: "OperationDefinition",
        // OperationTypeNode is an enum
        operation: "query",
        selectionSet: {
          kind: "SelectionSet",
          selections: [
            {
              kind: "FragmentSpread",
              name: {
                kind: "Name",
                value: actualFragmentName
              }
            }
          ]
        }
      }
    ], document2.definitions, true) });
    return query;
  }
  function createFragmentMap(fragments) {
    if (fragments === void 0) {
      fragments = [];
    }
    var symTable = {};
    fragments.forEach(function(fragment) {
      symTable[fragment.name.value] = fragment;
    });
    return symTable;
  }
  function getFragmentFromSelection(selection, fragmentMap) {
    switch (selection.kind) {
      case "InlineFragment":
        return selection;
      case "FragmentSpread": {
        var fragmentName = selection.name.value;
        if (typeof fragmentMap === "function") {
          return fragmentMap(fragmentName);
        }
        var fragment = fragmentMap && fragmentMap[fragmentName];
        invariant2(fragment, 72, fragmentName);
        return fragment || null;
      }
      default:
        return null;
    }
  }
  var init_fragments = __esm({
    "node_modules/@apollo/client/utilities/graphql/fragments.js"() {
      init_tslib_es6();
      init_globals();
    }
  });

  // node_modules/@apollo/client/utilities/graphql/storeUtils.js
  function makeReference(id) {
    return { __ref: String(id) };
  }
  function isReference(obj) {
    return Boolean(obj && typeof obj === "object" && typeof obj.__ref === "string");
  }
  function isDocumentNode(value2) {
    return isNonNullObject(value2) && value2.kind === "Document" && Array.isArray(value2.definitions);
  }
  function isStringValue(value2) {
    return value2.kind === "StringValue";
  }
  function isBooleanValue(value2) {
    return value2.kind === "BooleanValue";
  }
  function isIntValue(value2) {
    return value2.kind === "IntValue";
  }
  function isFloatValue(value2) {
    return value2.kind === "FloatValue";
  }
  function isVariable(value2) {
    return value2.kind === "Variable";
  }
  function isObjectValue(value2) {
    return value2.kind === "ObjectValue";
  }
  function isListValue(value2) {
    return value2.kind === "ListValue";
  }
  function isEnumValue(value2) {
    return value2.kind === "EnumValue";
  }
  function isNullValue(value2) {
    return value2.kind === "NullValue";
  }
  function valueToObjectRepresentation(argObj, name2, value2, variables) {
    if (isIntValue(value2) || isFloatValue(value2)) {
      argObj[name2.value] = Number(value2.value);
    } else if (isBooleanValue(value2) || isStringValue(value2)) {
      argObj[name2.value] = value2.value;
    } else if (isObjectValue(value2)) {
      var nestedArgObj_1 = {};
      value2.fields.map(function(obj) {
        return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);
      });
      argObj[name2.value] = nestedArgObj_1;
    } else if (isVariable(value2)) {
      var variableValue = (variables || {})[value2.name.value];
      argObj[name2.value] = variableValue;
    } else if (isListValue(value2)) {
      argObj[name2.value] = value2.values.map(function(listValue) {
        var nestedArgArrayObj = {};
        valueToObjectRepresentation(nestedArgArrayObj, name2, listValue, variables);
        return nestedArgArrayObj[name2.value];
      });
    } else if (isEnumValue(value2)) {
      argObj[name2.value] = value2.value;
    } else if (isNullValue(value2)) {
      argObj[name2.value] = null;
    } else {
      throw newInvariantError(81, name2.value, value2.kind);
    }
  }
  function storeKeyNameFromField(field, variables) {
    var directivesObj = null;
    if (field.directives) {
      directivesObj = {};
      field.directives.forEach(function(directive) {
        directivesObj[directive.name.value] = {};
        if (directive.arguments) {
          directive.arguments.forEach(function(_a2) {
            var name2 = _a2.name, value2 = _a2.value;
            return valueToObjectRepresentation(directivesObj[directive.name.value], name2, value2, variables);
          });
        }
      });
    }
    var argObj = null;
    if (field.arguments && field.arguments.length) {
      argObj = {};
      field.arguments.forEach(function(_a2) {
        var name2 = _a2.name, value2 = _a2.value;
        return valueToObjectRepresentation(argObj, name2, value2, variables);
      });
    }
    return getStoreKeyName(field.name.value, argObj, directivesObj);
  }
  function stringifyReplacer(_key, value2) {
    if (isNonNullObject(value2) && !Array.isArray(value2)) {
      value2 = Object.keys(value2).sort().reduce(function(copy, key2) {
        copy[key2] = value2[key2];
        return copy;
      }, {});
    }
    return value2;
  }
  function argumentsObjectFromField(field, variables) {
    if (field.arguments && field.arguments.length) {
      var argObj_1 = {};
      field.arguments.forEach(function(_a2) {
        var name2 = _a2.name, value2 = _a2.value;
        return valueToObjectRepresentation(argObj_1, name2, value2, variables);
      });
      return argObj_1;
    }
    return null;
  }
  function resultKeyNameFromField(field) {
    return field.alias ? field.alias.value : field.name.value;
  }
  function getTypenameFromResult(result2, selectionSet, fragmentMap) {
    var fragments;
    for (var _i = 0, _a2 = selectionSet.selections; _i < _a2.length; _i++) {
      var selection = _a2[_i];
      if (isField(selection)) {
        if (selection.name.value === "__typename") {
          return result2[resultKeyNameFromField(selection)];
        }
      } else if (fragments) {
        fragments.push(selection);
      } else {
        fragments = [selection];
      }
    }
    if (typeof result2.__typename === "string") {
      return result2.__typename;
    }
    if (fragments) {
      for (var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++) {
        var selection = fragments_1[_b];
        var typename = getTypenameFromResult(result2, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);
        if (typeof typename === "string") {
          return typename;
        }
      }
    }
  }
  function isField(selection) {
    return selection.kind === "Field";
  }
  function isInlineFragment(selection) {
    return selection.kind === "InlineFragment";
  }
  var KNOWN_DIRECTIVES, getStoreKeyName, stringify2;
  var init_storeUtils = __esm({
    "node_modules/@apollo/client/utilities/graphql/storeUtils.js"() {
      init_globals();
      init_objects();
      init_fragments();
      KNOWN_DIRECTIVES = [
        "connection",
        "include",
        "skip",
        "client",
        "rest",
        "export",
        "nonreactive"
      ];
      getStoreKeyName = Object.assign(function(fieldName, args, directives) {
        if (args && directives && directives["connection"] && directives["connection"]["key"]) {
          if (directives["connection"]["filter"] && directives["connection"]["filter"].length > 0) {
            var filterKeys = directives["connection"]["filter"] ? directives["connection"]["filter"] : [];
            filterKeys.sort();
            var filteredArgs_1 = {};
            filterKeys.forEach(function(key2) {
              filteredArgs_1[key2] = args[key2];
            });
            return "".concat(directives["connection"]["key"], "(").concat(stringify2(filteredArgs_1), ")");
          } else {
            return directives["connection"]["key"];
          }
        }
        var completeFieldName = fieldName;
        if (args) {
          var stringifiedArgs = stringify2(args);
          completeFieldName += "(".concat(stringifiedArgs, ")");
        }
        if (directives) {
          Object.keys(directives).forEach(function(key2) {
            if (KNOWN_DIRECTIVES.indexOf(key2) !== -1)
              return;
            if (directives[key2] && Object.keys(directives[key2]).length) {
              completeFieldName += "@".concat(key2, "(").concat(stringify2(directives[key2]), ")");
            } else {
              completeFieldName += "@".concat(key2);
            }
          });
        }
        return completeFieldName;
      }, {
        setStringify: function(s) {
          var previous = stringify2;
          stringify2 = s;
          return previous;
        }
      });
      stringify2 = function defaultStringify(value2) {
        return JSON.stringify(value2, stringifyReplacer);
      };
    }
  });

  // node_modules/@apollo/client/utilities/graphql/getFromAST.js
  function checkDocument(doc) {
    invariant2(doc && doc.kind === "Document", 73);
    var operations = doc.definitions.filter(function(d) {
      return d.kind !== "FragmentDefinition";
    }).map(function(definition) {
      if (definition.kind !== "OperationDefinition") {
        throw newInvariantError(74, definition.kind);
      }
      return definition;
    });
    invariant2(operations.length <= 1, 75, operations.length);
    return doc;
  }
  function getOperationDefinition(doc) {
    checkDocument(doc);
    return doc.definitions.filter(function(definition) {
      return definition.kind === "OperationDefinition";
    })[0];
  }
  function getOperationName(doc) {
    return doc.definitions.filter(function(definition) {
      return definition.kind === "OperationDefinition" && !!definition.name;
    }).map(function(x) {
      return x.name.value;
    })[0] || null;
  }
  function getFragmentDefinitions(doc) {
    return doc.definitions.filter(function(definition) {
      return definition.kind === "FragmentDefinition";
    });
  }
  function getQueryDefinition(doc) {
    var queryDef = getOperationDefinition(doc);
    invariant2(queryDef && queryDef.operation === "query", 76);
    return queryDef;
  }
  function getFragmentDefinition(doc) {
    invariant2(doc.kind === "Document", 77);
    invariant2(doc.definitions.length <= 1, 78);
    var fragmentDef = doc.definitions[0];
    invariant2(fragmentDef.kind === "FragmentDefinition", 79);
    return fragmentDef;
  }
  function getMainDefinition(queryDoc) {
    checkDocument(queryDoc);
    var fragmentDefinition;
    for (var _i = 0, _a2 = queryDoc.definitions; _i < _a2.length; _i++) {
      var definition = _a2[_i];
      if (definition.kind === "OperationDefinition") {
        var operation = definition.operation;
        if (operation === "query" || operation === "mutation" || operation === "subscription") {
          return definition;
        }
      }
      if (definition.kind === "FragmentDefinition" && !fragmentDefinition) {
        fragmentDefinition = definition;
      }
    }
    if (fragmentDefinition) {
      return fragmentDefinition;
    }
    throw newInvariantError(80);
  }
  function getDefaultValues(definition) {
    var defaultValues = /* @__PURE__ */ Object.create(null);
    var defs = definition && definition.variableDefinitions;
    if (defs && defs.length) {
      defs.forEach(function(def) {
        if (def.defaultValue) {
          valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);
        }
      });
    }
    return defaultValues;
  }
  var init_getFromAST = __esm({
    "node_modules/@apollo/client/utilities/graphql/getFromAST.js"() {
      init_globals();
      init_storeUtils();
    }
  });

  // node_modules/@apollo/client/utilities/graphql/DocumentTransform.js
  function identity(document2) {
    return document2;
  }
  var DocumentTransform;
  var init_DocumentTransform = __esm({
    "node_modules/@apollo/client/utilities/graphql/DocumentTransform.js"() {
      init_lib();
      init_canUse();
      init_getFromAST();
      init_globals();
      DocumentTransform = /** @class */
      function() {
        function DocumentTransform2(transform3, options) {
          if (options === void 0) {
            options = /* @__PURE__ */ Object.create(null);
          }
          this.resultCache = canUseWeakSet ? /* @__PURE__ */ new WeakSet() : /* @__PURE__ */ new Set();
          this.transform = transform3;
          if (options.getCacheKey) {
            this.getCacheKey = options.getCacheKey;
          }
          if (options.cache !== false) {
            this.stableCacheKeys = new Trie(canUseWeakMap, function(key2) {
              return { key: key2 };
            });
          }
        }
        DocumentTransform2.prototype.getCacheKey = function(document2) {
          return [document2];
        };
        DocumentTransform2.identity = function() {
          return new DocumentTransform2(identity, { cache: false });
        };
        DocumentTransform2.split = function(predicate, left, right) {
          if (right === void 0) {
            right = DocumentTransform2.identity();
          }
          return new DocumentTransform2(
            function(document2) {
              var documentTransform = predicate(document2) ? left : right;
              return documentTransform.transformDocument(document2);
            },
            // Reasonably assume both `left` and `right` transforms handle their own caching
            { cache: false }
          );
        };
        DocumentTransform2.prototype.transformDocument = function(document2) {
          if (this.resultCache.has(document2)) {
            return document2;
          }
          var cacheEntry = this.getStableCacheEntry(document2);
          if (cacheEntry && cacheEntry.value) {
            return cacheEntry.value;
          }
          checkDocument(document2);
          var transformedDocument = this.transform(document2);
          this.resultCache.add(transformedDocument);
          if (cacheEntry) {
            cacheEntry.value = transformedDocument;
          }
          return transformedDocument;
        };
        DocumentTransform2.prototype.concat = function(otherTransform) {
          var _this = this;
          return new DocumentTransform2(
            function(document2) {
              return otherTransform.transformDocument(_this.transformDocument(document2));
            },
            // Reasonably assume both transforms handle their own caching
            { cache: false }
          );
        };
        DocumentTransform2.prototype.getStableCacheEntry = function(document2) {
          if (!this.stableCacheKeys)
            return;
          var cacheKeys = this.getCacheKey(document2);
          if (cacheKeys) {
            invariant2(Array.isArray(cacheKeys), 65);
            return this.stableCacheKeys.lookupArray(cacheKeys);
          }
        };
        return DocumentTransform2;
      }();
    }
  });

  // node_modules/@apollo/client/utilities/graphql/print.js
  var printCache, print2;
  var init_print = __esm({
    "node_modules/@apollo/client/utilities/graphql/print.js"() {
      init_graphql();
      init_canUse();
      printCache = canUseWeakMap ? /* @__PURE__ */ new WeakMap() : void 0;
      print2 = function(ast) {
        var result2;
        result2 = printCache === null || printCache === void 0 ? void 0 : printCache.get(ast);
        if (!result2) {
          result2 = print(ast);
          printCache === null || printCache === void 0 ? void 0 : printCache.set(ast, result2);
        }
        return result2;
      };
    }
  });

  // node_modules/@apollo/client/utilities/common/arrays.js
  function isNonEmptyArray(value2) {
    return Array.isArray(value2) && value2.length > 0;
  }
  var isArray;
  var init_arrays = __esm({
    "node_modules/@apollo/client/utilities/common/arrays.js"() {
      isArray = Array.isArray;
    }
  });

  // node_modules/@apollo/client/utilities/graphql/transform.js
  function isEmpty2(op, fragmentMap) {
    return !op || op.selectionSet.selections.every(function(selection) {
      return selection.kind === Kind.FRAGMENT_SPREAD && isEmpty2(fragmentMap[selection.name.value], fragmentMap);
    });
  }
  function nullIfDocIsEmpty(doc) {
    return isEmpty2(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc))) ? null : doc;
  }
  function getDirectiveMatcher(configs) {
    var names = /* @__PURE__ */ new Map();
    var tests = /* @__PURE__ */ new Map();
    configs.forEach(function(directive) {
      if (directive) {
        if (directive.name) {
          names.set(directive.name, directive);
        } else if (directive.test) {
          tests.set(directive.test, directive);
        }
      }
    });
    return function(directive) {
      var config = names.get(directive.name.value);
      if (!config && tests.size) {
        tests.forEach(function(testConfig, test2) {
          if (test2(directive)) {
            config = testConfig;
          }
        });
      }
      return config;
    };
  }
  function makeInUseGetterFunction(defaultKey) {
    var map = /* @__PURE__ */ new Map();
    return function inUseGetterFunction(key2) {
      if (key2 === void 0) {
        key2 = defaultKey;
      }
      var inUse = map.get(key2);
      if (!inUse) {
        map.set(key2, inUse = {
          // Variable and fragment spread names used directly within this
          // operation or fragment definition, as identified by key. These sets
          // will be populated during the first traversal of the document in
          // removeDirectivesFromDocument below.
          variables: /* @__PURE__ */ new Set(),
          fragmentSpreads: /* @__PURE__ */ new Set()
        });
      }
      return inUse;
    };
  }
  function removeDirectivesFromDocument(directives, doc) {
    checkDocument(doc);
    var getInUseByOperationName = makeInUseGetterFunction("");
    var getInUseByFragmentName = makeInUseGetterFunction("");
    var getInUse = function(ancestors) {
      for (var p = 0, ancestor = void 0; p < ancestors.length && (ancestor = ancestors[p]); ++p) {
        if (isArray(ancestor))
          continue;
        if (ancestor.kind === Kind.OPERATION_DEFINITION) {
          return getInUseByOperationName(ancestor.name && ancestor.name.value);
        }
        if (ancestor.kind === Kind.FRAGMENT_DEFINITION) {
          return getInUseByFragmentName(ancestor.name.value);
        }
      }
      return null;
    };
    var operationCount = 0;
    for (var i = doc.definitions.length - 1; i >= 0; --i) {
      if (doc.definitions[i].kind === Kind.OPERATION_DEFINITION) {
        ++operationCount;
      }
    }
    var directiveMatcher = getDirectiveMatcher(directives);
    var shouldRemoveField = function(nodeDirectives) {
      return isNonEmptyArray(nodeDirectives) && nodeDirectives.map(directiveMatcher).some(function(config) {
        return config && config.remove;
      });
    };
    var originalFragmentDefsByPath = /* @__PURE__ */ new Map();
    var firstVisitMadeChanges = false;
    var fieldOrInlineFragmentVisitor = {
      enter: function(node) {
        if (shouldRemoveField(node.directives)) {
          firstVisitMadeChanges = true;
          return null;
        }
      }
    };
    var docWithoutDirectiveSubtrees = visit(doc, {
      // These two AST node types share the same implementation, defined above.
      Field: fieldOrInlineFragmentVisitor,
      InlineFragment: fieldOrInlineFragmentVisitor,
      VariableDefinition: {
        enter: function() {
          return false;
        }
      },
      Variable: {
        enter: function(node, _key, _parent, _path, ancestors) {
          var inUse = getInUse(ancestors);
          if (inUse) {
            inUse.variables.add(node.name.value);
          }
        }
      },
      FragmentSpread: {
        enter: function(node, _key, _parent, _path, ancestors) {
          if (shouldRemoveField(node.directives)) {
            firstVisitMadeChanges = true;
            return null;
          }
          var inUse = getInUse(ancestors);
          if (inUse) {
            inUse.fragmentSpreads.add(node.name.value);
          }
        }
      },
      FragmentDefinition: {
        enter: function(node, _key, _parent, path) {
          originalFragmentDefsByPath.set(JSON.stringify(path), node);
        },
        leave: function(node, _key, _parent, path) {
          var originalNode = originalFragmentDefsByPath.get(JSON.stringify(path));
          if (node === originalNode) {
            return node;
          }
          if (
            // This logic applies only if the document contains one or more
            // operations, since removing all fragments from a document containing
            // only fragments makes the document useless.
            operationCount > 0 && node.selectionSet.selections.every(function(selection) {
              return selection.kind === Kind.FIELD && selection.name.value === "__typename";
            })
          ) {
            getInUseByFragmentName(node.name.value).removed = true;
            firstVisitMadeChanges = true;
            return null;
          }
        }
      },
      Directive: {
        leave: function(node) {
          if (directiveMatcher(node)) {
            firstVisitMadeChanges = true;
            return null;
          }
        }
      }
    });
    if (!firstVisitMadeChanges) {
      return doc;
    }
    var populateTransitiveVars = function(inUse) {
      if (!inUse.transitiveVars) {
        inUse.transitiveVars = new Set(inUse.variables);
        if (!inUse.removed) {
          inUse.fragmentSpreads.forEach(function(childFragmentName) {
            populateTransitiveVars(getInUseByFragmentName(childFragmentName)).transitiveVars.forEach(function(varName) {
              inUse.transitiveVars.add(varName);
            });
          });
        }
      }
      return inUse;
    };
    var allFragmentNamesUsed = /* @__PURE__ */ new Set();
    docWithoutDirectiveSubtrees.definitions.forEach(function(def) {
      if (def.kind === Kind.OPERATION_DEFINITION) {
        populateTransitiveVars(getInUseByOperationName(def.name && def.name.value)).fragmentSpreads.forEach(function(childFragmentName) {
          allFragmentNamesUsed.add(childFragmentName);
        });
      } else if (def.kind === Kind.FRAGMENT_DEFINITION && // If there are no operations in the document, then all fragment
      // definitions count as usages of their own fragment names. This heuristic
      // prevents accidentally removing all fragment definitions from the
      // document just because it contains no operations that use the fragments.
      operationCount === 0 && !getInUseByFragmentName(def.name.value).removed) {
        allFragmentNamesUsed.add(def.name.value);
      }
    });
    allFragmentNamesUsed.forEach(function(fragmentName) {
      populateTransitiveVars(getInUseByFragmentName(fragmentName)).fragmentSpreads.forEach(function(childFragmentName) {
        allFragmentNamesUsed.add(childFragmentName);
      });
    });
    var fragmentWillBeRemoved = function(fragmentName) {
      return !!// A fragment definition will be removed if there are no spreads that refer
      // to it, or the fragment was explicitly removed because it had no fields
      // other than __typename.
      (!allFragmentNamesUsed.has(fragmentName) || getInUseByFragmentName(fragmentName).removed);
    };
    var enterVisitor = {
      enter: function(node) {
        if (fragmentWillBeRemoved(node.name.value)) {
          return null;
        }
      }
    };
    return nullIfDocIsEmpty(visit(docWithoutDirectiveSubtrees, {
      // If the fragment is going to be removed, then leaving any dangling
      // FragmentSpread nodes with the same name would be a mistake.
      FragmentSpread: enterVisitor,
      // This is where the fragment definition is actually removed.
      FragmentDefinition: enterVisitor,
      OperationDefinition: {
        leave: function(node) {
          if (node.variableDefinitions) {
            var usedVariableNames_1 = populateTransitiveVars(
              // If an operation is anonymous, we use the empty string as its key.
              getInUseByOperationName(node.name && node.name.value)
            ).transitiveVars;
            if (usedVariableNames_1.size < node.variableDefinitions.length) {
              return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function(varDef) {
                return usedVariableNames_1.has(varDef.variable.name.value);
              }) });
            }
          }
        }
      }
    }));
  }
  function buildQueryFromSelectionSet(document2) {
    var definition = getMainDefinition(document2);
    var definitionOperation = definition.operation;
    if (definitionOperation === "query") {
      return document2;
    }
    var modifiedDoc = visit(document2, {
      OperationDefinition: {
        enter: function(node) {
          return __assign(__assign({}, node), { operation: "query" });
        }
      }
    });
    return modifiedDoc;
  }
  function removeClientSetsFromDocument(document2) {
    checkDocument(document2);
    var modifiedDoc = removeDirectivesFromDocument([
      {
        test: function(directive) {
          return directive.name.value === "client";
        },
        remove: true
      }
    ], document2);
    return modifiedDoc;
  }
  var TYPENAME_FIELD, addTypenameToDocument;
  var init_transform = __esm({
    "node_modules/@apollo/client/utilities/graphql/transform.js"() {
      init_tslib_es6();
      init_globals();
      init_graphql();
      init_getFromAST();
      init_storeUtils();
      init_fragments();
      init_arrays();
      TYPENAME_FIELD = {
        kind: Kind.FIELD,
        name: {
          kind: Kind.NAME,
          value: "__typename"
        }
      };
      addTypenameToDocument = Object.assign(function(doc) {
        return visit(doc, {
          SelectionSet: {
            enter: function(node, _key, parent2) {
              if (parent2 && parent2.kind === Kind.OPERATION_DEFINITION) {
                return;
              }
              var selections = node.selections;
              if (!selections) {
                return;
              }
              var skip = selections.some(function(selection) {
                return isField(selection) && (selection.name.value === "__typename" || selection.name.value.lastIndexOf("__", 0) === 0);
              });
              if (skip) {
                return;
              }
              var field = parent2;
              if (isField(field) && field.directives && field.directives.some(function(d) {
                return d.name.value === "export";
              })) {
                return;
              }
              return __assign(__assign({}, node), { selections: __spreadArray(__spreadArray([], selections, true), [TYPENAME_FIELD], false) });
            }
          }
        });
      }, {
        added: function(field) {
          return field === TYPENAME_FIELD;
        }
      });
    }
  });

  // node_modules/@apollo/client/utilities/common/mergeDeep.js
  function mergeDeep() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      sources[_i] = arguments[_i];
    }
    return mergeDeepArray(sources);
  }
  function mergeDeepArray(sources) {
    var target = sources[0] || {};
    var count = sources.length;
    if (count > 1) {
      var merger = new DeepMerger();
      for (var i = 1; i < count; ++i) {
        target = merger.merge(target, sources[i]);
      }
    }
    return target;
  }
  var hasOwnProperty2, defaultReconciler, DeepMerger;
  var init_mergeDeep = __esm({
    "node_modules/@apollo/client/utilities/common/mergeDeep.js"() {
      init_tslib_es6();
      init_objects();
      hasOwnProperty2 = Object.prototype.hasOwnProperty;
      defaultReconciler = function(target, source, property2) {
        return this.merge(target[property2], source[property2]);
      };
      DeepMerger = /** @class */
      function() {
        function DeepMerger2(reconciler) {
          if (reconciler === void 0) {
            reconciler = defaultReconciler;
          }
          this.reconciler = reconciler;
          this.isObject = isNonNullObject;
          this.pastCopies = /* @__PURE__ */ new Set();
        }
        DeepMerger2.prototype.merge = function(target, source) {
          var _this = this;
          var context = [];
          for (var _i = 2; _i < arguments.length; _i++) {
            context[_i - 2] = arguments[_i];
          }
          if (isNonNullObject(source) && isNonNullObject(target)) {
            Object.keys(source).forEach(function(sourceKey) {
              if (hasOwnProperty2.call(target, sourceKey)) {
                var targetValue = target[sourceKey];
                if (source[sourceKey] !== targetValue) {
                  var result2 = _this.reconciler.apply(_this, __spreadArray([
                    target,
                    source,
                    sourceKey
                  ], context, false));
                  if (result2 !== targetValue) {
                    target = _this.shallowCopyForMerge(target);
                    target[sourceKey] = result2;
                  }
                }
              } else {
                target = _this.shallowCopyForMerge(target);
                target[sourceKey] = source[sourceKey];
              }
            });
            return target;
          }
          return source;
        };
        DeepMerger2.prototype.shallowCopyForMerge = function(value2) {
          if (isNonNullObject(value2)) {
            if (!this.pastCopies.has(value2)) {
              if (Array.isArray(value2)) {
                value2 = value2.slice(0);
              } else {
                value2 = __assign({ __proto__: Object.getPrototypeOf(value2) }, value2);
              }
              this.pastCopies.add(value2);
            }
          }
          return value2;
        };
        return DeepMerger2;
      }();
    }
  });

  // node_modules/zen-observable-ts/module.js
  function _createForOfIteratorHelperLoose(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
    if (it)
      return (it = it.call(o)).next.bind(it);
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      return function() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  }
  function getMethod(obj, key2) {
    var value2 = obj[key2];
    if (value2 == null)
      return void 0;
    if (typeof value2 !== "function")
      throw new TypeError(value2 + " is not a function");
    return value2;
  }
  function getSpecies(obj) {
    var ctor = obj.constructor;
    if (ctor !== void 0) {
      ctor = ctor[SymbolSpecies];
      if (ctor === null) {
        ctor = void 0;
      }
    }
    return ctor !== void 0 ? ctor : Observable;
  }
  function isObservable(x) {
    return x instanceof Observable;
  }
  function hostReportError(e) {
    if (hostReportError.log) {
      hostReportError.log(e);
    } else {
      setTimeout(function() {
        throw e;
      });
    }
  }
  function enqueue(fn) {
    Promise.resolve().then(function() {
      try {
        fn();
      } catch (e) {
        hostReportError(e);
      }
    });
  }
  function cleanupSubscription(subscription) {
    var cleanup = subscription._cleanup;
    if (cleanup === void 0)
      return;
    subscription._cleanup = void 0;
    if (!cleanup) {
      return;
    }
    try {
      if (typeof cleanup === "function") {
        cleanup();
      } else {
        var unsubscribe = getMethod(cleanup, "unsubscribe");
        if (unsubscribe) {
          unsubscribe.call(cleanup);
        }
      }
    } catch (e) {
      hostReportError(e);
    }
  }
  function closeSubscription(subscription) {
    subscription._observer = void 0;
    subscription._queue = void 0;
    subscription._state = "closed";
  }
  function flushSubscription(subscription) {
    var queue = subscription._queue;
    if (!queue) {
      return;
    }
    subscription._queue = void 0;
    subscription._state = "ready";
    for (var i = 0; i < queue.length; ++i) {
      notifySubscription(subscription, queue[i].type, queue[i].value);
      if (subscription._state === "closed")
        break;
    }
  }
  function notifySubscription(subscription, type, value2) {
    subscription._state = "running";
    var observer = subscription._observer;
    try {
      var m = getMethod(observer, type);
      switch (type) {
        case "next":
          if (m)
            m.call(observer, value2);
          break;
        case "error":
          closeSubscription(subscription);
          if (m)
            m.call(observer, value2);
          else
            throw value2;
          break;
        case "complete":
          closeSubscription(subscription);
          if (m)
            m.call(observer);
          break;
      }
    } catch (e) {
      hostReportError(e);
    }
    if (subscription._state === "closed")
      cleanupSubscription(subscription);
    else if (subscription._state === "running")
      subscription._state = "ready";
  }
  function onNotify(subscription, type, value2) {
    if (subscription._state === "closed")
      return;
    if (subscription._state === "buffering") {
      subscription._queue.push({
        type,
        value: value2
      });
      return;
    }
    if (subscription._state !== "ready") {
      subscription._state = "buffering";
      subscription._queue = [{
        type,
        value: value2
      }];
      enqueue(function() {
        return flushSubscription(subscription);
      });
      return;
    }
    notifySubscription(subscription, type, value2);
  }
  var hasSymbols, hasSymbol, getSymbol, SymbolIterator, SymbolObservable, SymbolSpecies, Subscription, SubscriptionObserver, Observable;
  var init_module = __esm({
    "node_modules/zen-observable-ts/module.js"() {
      hasSymbols = function() {
        return typeof Symbol === "function";
      };
      hasSymbol = function(name2) {
        return hasSymbols() && Boolean(Symbol[name2]);
      };
      getSymbol = function(name2) {
        return hasSymbol(name2) ? Symbol[name2] : "@@" + name2;
      };
      if (hasSymbols() && !hasSymbol("observable")) {
        Symbol.observable = Symbol("observable");
      }
      SymbolIterator = getSymbol("iterator");
      SymbolObservable = getSymbol("observable");
      SymbolSpecies = getSymbol("species");
      Subscription = /* @__PURE__ */ function() {
        function Subscription2(observer, subscriber) {
          this._cleanup = void 0;
          this._observer = observer;
          this._queue = void 0;
          this._state = "initializing";
          var subscriptionObserver = new SubscriptionObserver(this);
          try {
            this._cleanup = subscriber.call(void 0, subscriptionObserver);
          } catch (e) {
            subscriptionObserver.error(e);
          }
          if (this._state === "initializing")
            this._state = "ready";
        }
        var _proto = Subscription2.prototype;
        _proto.unsubscribe = function unsubscribe() {
          if (this._state !== "closed") {
            closeSubscription(this);
            cleanupSubscription(this);
          }
        };
        _createClass(Subscription2, [{
          key: "closed",
          get: function() {
            return this._state === "closed";
          }
        }]);
        return Subscription2;
      }();
      SubscriptionObserver = /* @__PURE__ */ function() {
        function SubscriptionObserver2(subscription) {
          this._subscription = subscription;
        }
        var _proto2 = SubscriptionObserver2.prototype;
        _proto2.next = function next(value2) {
          onNotify(this._subscription, "next", value2);
        };
        _proto2.error = function error(value2) {
          onNotify(this._subscription, "error", value2);
        };
        _proto2.complete = function complete() {
          onNotify(this._subscription, "complete");
        };
        _createClass(SubscriptionObserver2, [{
          key: "closed",
          get: function() {
            return this._subscription._state === "closed";
          }
        }]);
        return SubscriptionObserver2;
      }();
      Observable = /* @__PURE__ */ function() {
        function Observable2(subscriber) {
          if (!(this instanceof Observable2))
            throw new TypeError("Observable cannot be called as a function");
          if (typeof subscriber !== "function")
            throw new TypeError("Observable initializer must be a function");
          this._subscriber = subscriber;
        }
        var _proto3 = Observable2.prototype;
        _proto3.subscribe = function subscribe(observer) {
          if (typeof observer !== "object" || observer === null) {
            observer = {
              next: observer,
              error: arguments[1],
              complete: arguments[2]
            };
          }
          return new Subscription(observer, this._subscriber);
        };
        _proto3.forEach = function forEach6(fn) {
          var _this = this;
          return new Promise(function(resolve2, reject2) {
            if (typeof fn !== "function") {
              reject2(new TypeError(fn + " is not a function"));
              return;
            }
            function done() {
              subscription.unsubscribe();
              resolve2();
            }
            var subscription = _this.subscribe({
              next: function(value2) {
                try {
                  fn(value2, done);
                } catch (e) {
                  reject2(e);
                  subscription.unsubscribe();
                }
              },
              error: reject2,
              complete: resolve2
            });
          });
        };
        _proto3.map = function map(fn) {
          var _this2 = this;
          if (typeof fn !== "function")
            throw new TypeError(fn + " is not a function");
          var C = getSpecies(this);
          return new C(function(observer) {
            return _this2.subscribe({
              next: function(value2) {
                try {
                  value2 = fn(value2);
                } catch (e) {
                  return observer.error(e);
                }
                observer.next(value2);
              },
              error: function(e) {
                observer.error(e);
              },
              complete: function() {
                observer.complete();
              }
            });
          });
        };
        _proto3.filter = function filter(fn) {
          var _this3 = this;
          if (typeof fn !== "function")
            throw new TypeError(fn + " is not a function");
          var C = getSpecies(this);
          return new C(function(observer) {
            return _this3.subscribe({
              next: function(value2) {
                try {
                  if (!fn(value2))
                    return;
                } catch (e) {
                  return observer.error(e);
                }
                observer.next(value2);
              },
              error: function(e) {
                observer.error(e);
              },
              complete: function() {
                observer.complete();
              }
            });
          });
        };
        _proto3.reduce = function reduce3(fn) {
          var _this4 = this;
          if (typeof fn !== "function")
            throw new TypeError(fn + " is not a function");
          var C = getSpecies(this);
          var hasSeed = arguments.length > 1;
          var hasValue = false;
          var seed = arguments[1];
          var acc = seed;
          return new C(function(observer) {
            return _this4.subscribe({
              next: function(value2) {
                var first = !hasValue;
                hasValue = true;
                if (!first || hasSeed) {
                  try {
                    acc = fn(acc, value2);
                  } catch (e) {
                    return observer.error(e);
                  }
                } else {
                  acc = value2;
                }
              },
              error: function(e) {
                observer.error(e);
              },
              complete: function() {
                if (!hasValue && !hasSeed)
                  return observer.error(new TypeError("Cannot reduce an empty sequence"));
                observer.next(acc);
                observer.complete();
              }
            });
          });
        };
        _proto3.concat = function concat2() {
          var _this5 = this;
          for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
            sources[_key] = arguments[_key];
          }
          var C = getSpecies(this);
          return new C(function(observer) {
            var subscription;
            var index2 = 0;
            function startNext(next) {
              subscription = next.subscribe({
                next: function(v) {
                  observer.next(v);
                },
                error: function(e) {
                  observer.error(e);
                },
                complete: function() {
                  if (index2 === sources.length) {
                    subscription = void 0;
                    observer.complete();
                  } else {
                    startNext(C.from(sources[index2++]));
                  }
                }
              });
            }
            startNext(_this5);
            return function() {
              if (subscription) {
                subscription.unsubscribe();
                subscription = void 0;
              }
            };
          });
        };
        _proto3.flatMap = function flatMap2(fn) {
          var _this6 = this;
          if (typeof fn !== "function")
            throw new TypeError(fn + " is not a function");
          var C = getSpecies(this);
          return new C(function(observer) {
            var subscriptions = [];
            var outer = _this6.subscribe({
              next: function(value2) {
                if (fn) {
                  try {
                    value2 = fn(value2);
                  } catch (e) {
                    return observer.error(e);
                  }
                }
                var inner = C.from(value2).subscribe({
                  next: function(value3) {
                    observer.next(value3);
                  },
                  error: function(e) {
                    observer.error(e);
                  },
                  complete: function() {
                    var i = subscriptions.indexOf(inner);
                    if (i >= 0)
                      subscriptions.splice(i, 1);
                    completeIfDone();
                  }
                });
                subscriptions.push(inner);
              },
              error: function(e) {
                observer.error(e);
              },
              complete: function() {
                completeIfDone();
              }
            });
            function completeIfDone() {
              if (outer.closed && subscriptions.length === 0)
                observer.complete();
            }
            return function() {
              subscriptions.forEach(function(s) {
                return s.unsubscribe();
              });
              outer.unsubscribe();
            };
          });
        };
        _proto3[SymbolObservable] = function() {
          return this;
        };
        Observable2.from = function from(x) {
          var C = typeof this === "function" ? this : Observable2;
          if (x == null)
            throw new TypeError(x + " is not an object");
          var method = getMethod(x, SymbolObservable);
          if (method) {
            var observable = method.call(x);
            if (Object(observable) !== observable)
              throw new TypeError(observable + " is not an object");
            if (isObservable(observable) && observable.constructor === C)
              return observable;
            return new C(function(observer) {
              return observable.subscribe(observer);
            });
          }
          if (hasSymbol("iterator")) {
            method = getMethod(x, SymbolIterator);
            if (method) {
              return new C(function(observer) {
                enqueue(function() {
                  if (observer.closed)
                    return;
                  for (var _iterator = _createForOfIteratorHelperLoose(method.call(x)), _step; !(_step = _iterator()).done; ) {
                    var item = _step.value;
                    observer.next(item);
                    if (observer.closed)
                      return;
                  }
                  observer.complete();
                });
              });
            }
          }
          if (Array.isArray(x)) {
            return new C(function(observer) {
              enqueue(function() {
                if (observer.closed)
                  return;
                for (var i = 0; i < x.length; ++i) {
                  observer.next(x[i]);
                  if (observer.closed)
                    return;
                }
                observer.complete();
              });
            });
          }
          throw new TypeError(x + " is not observable");
        };
        Observable2.of = function of() {
          for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            items[_key2] = arguments[_key2];
          }
          var C = typeof this === "function" ? this : Observable2;
          return new C(function(observer) {
            enqueue(function() {
              if (observer.closed)
                return;
              for (var i = 0; i < items.length; ++i) {
                observer.next(items[i]);
                if (observer.closed)
                  return;
              }
              observer.complete();
            });
          });
        };
        _createClass(Observable2, null, [{
          key: SymbolSpecies,
          get: function() {
            return this;
          }
        }]);
        return Observable2;
      }();
      if (hasSymbols()) {
        Object.defineProperty(Observable, Symbol("extensions"), {
          value: {
            symbol: SymbolObservable,
            hostReportError
          },
          configurable: true
        });
      }
    }
  });

  // node_modules/symbol-observable/es/ponyfill.js
  function symbolObservablePonyfill(root2) {
    var result2;
    var Symbol2 = root2.Symbol;
    if (typeof Symbol2 === "function") {
      if (Symbol2.observable) {
        result2 = Symbol2.observable;
      } else {
        if (typeof Symbol2.for === "function") {
          result2 = Symbol2.for("https://github.com/benlesh/symbol-observable");
        } else {
          result2 = Symbol2("https://github.com/benlesh/symbol-observable");
        }
        try {
          Symbol2.observable = result2;
        } catch (err) {
        }
      }
    } else {
      result2 = "@@observable";
    }
    return result2;
  }
  var init_ponyfill = __esm({
    "node_modules/symbol-observable/es/ponyfill.js"() {
    }
  });

  // node_modules/symbol-observable/es/index.js
  var root, result;
  var init_es = __esm({
    "node_modules/symbol-observable/es/index.js"() {
      init_ponyfill();
      if (typeof self !== "undefined") {
        root = self;
      } else if (typeof window !== "undefined") {
        root = window;
      } else if (typeof global !== "undefined") {
        root = global;
      } else if (typeof module !== "undefined") {
        root = module;
      } else {
        root = Function("return this")();
      }
      result = symbolObservablePonyfill(root);
    }
  });

  // node_modules/@apollo/client/utilities/observables/Observable.js
  var prototype, fakeObsSymbol;
  var init_Observable = __esm({
    "node_modules/@apollo/client/utilities/observables/Observable.js"() {
      init_module();
      init_es();
      prototype = Observable.prototype;
      fakeObsSymbol = "@@observable";
      if (!prototype[fakeObsSymbol]) {
        prototype[fakeObsSymbol] = function() {
          return this;
        };
      }
    }
  });

  // node_modules/@apollo/client/utilities/common/cloneDeep.js
  function cloneDeep(value2) {
    return cloneDeepHelper(value2);
  }
  function cloneDeepHelper(val2, seen) {
    switch (toString.call(val2)) {
      case "[object Array]": {
        seen = seen || /* @__PURE__ */ new Map();
        if (seen.has(val2))
          return seen.get(val2);
        var copy_1 = val2.slice(0);
        seen.set(val2, copy_1);
        copy_1.forEach(function(child, i) {
          copy_1[i] = cloneDeepHelper(child, seen);
        });
        return copy_1;
      }
      case "[object Object]": {
        seen = seen || /* @__PURE__ */ new Map();
        if (seen.has(val2))
          return seen.get(val2);
        var copy_2 = Object.create(Object.getPrototypeOf(val2));
        seen.set(val2, copy_2);
        Object.keys(val2).forEach(function(key2) {
          copy_2[key2] = cloneDeepHelper(val2[key2], seen);
        });
        return copy_2;
      }
      default:
        return val2;
    }
  }
  var toString;
  var init_cloneDeep = __esm({
    "node_modules/@apollo/client/utilities/common/cloneDeep.js"() {
      toString = Object.prototype.toString;
    }
  });

  // node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js
  function maybeDeepFreeze(obj) {
    if (false) {
      deepFreeze(obj);
    }
    return obj;
  }
  var init_maybeDeepFreeze = __esm({
    "node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js"() {
    }
  });

  // node_modules/@apollo/client/utilities/observables/iteration.js
  function iterateObserversSafely(observers, method, argument) {
    var observersWithMethod = [];
    observers.forEach(function(obs) {
      return obs[method] && observersWithMethod.push(obs);
    });
    observersWithMethod.forEach(function(obs) {
      return obs[method](argument);
    });
  }
  var init_iteration = __esm({
    "node_modules/@apollo/client/utilities/observables/iteration.js"() {
    }
  });

  // node_modules/@apollo/client/utilities/observables/asyncMap.js
  function asyncMap(observable, mapFn, catchFn) {
    return new Observable(function(observer) {
      var promiseQueue = {
        // Normally we would initialize promiseQueue to Promise.resolve(), but
        // in this case, for backwards compatibility, we need to be careful to
        // invoke the first callback synchronously.
        then: function(callback) {
          return new Promise(function(resolve2) {
            return resolve2(callback());
          });
        }
      };
      function makeCallback(examiner, key2) {
        return function(arg) {
          if (examiner) {
            var both = function() {
              return observer.closed ? (
                /* will be swallowed */
                0
              ) : examiner(arg);
            };
            promiseQueue = promiseQueue.then(both, both).then(function(result2) {
              return observer.next(result2);
            }, function(error) {
              return observer.error(error);
            });
          } else {
            observer[key2](arg);
          }
        };
      }
      var handler = {
        next: makeCallback(mapFn, "next"),
        error: makeCallback(catchFn, "error"),
        complete: function() {
          promiseQueue.then(function() {
            return observer.complete();
          });
        }
      };
      var sub2 = observable.subscribe(handler);
      return function() {
        return sub2.unsubscribe();
      };
    });
  }
  var init_asyncMap = __esm({
    "node_modules/@apollo/client/utilities/observables/asyncMap.js"() {
      init_Observable();
    }
  });

  // node_modules/@apollo/client/utilities/observables/subclassing.js
  function fixObservableSubclass(subclass) {
    function set3(key2) {
      Object.defineProperty(subclass, key2, { value: Observable });
    }
    if (canUseSymbol && Symbol.species) {
      set3(Symbol.species);
    }
    set3("@@species");
    return subclass;
  }
  var init_subclassing = __esm({
    "node_modules/@apollo/client/utilities/observables/subclassing.js"() {
      init_Observable();
      init_canUse();
    }
  });

  // node_modules/@apollo/client/utilities/observables/Concast.js
  function isPromiseLike(value2) {
    return value2 && typeof value2.then === "function";
  }
  var Concast;
  var init_Concast = __esm({
    "node_modules/@apollo/client/utilities/observables/Concast.js"() {
      init_tslib_es6();
      init_Observable();
      init_iteration();
      init_subclassing();
      Concast = /** @class */
      function(_super) {
        __extends(Concast2, _super);
        function Concast2(sources) {
          var _this = _super.call(this, function(observer) {
            _this.addObserver(observer);
            return function() {
              return _this.removeObserver(observer);
            };
          }) || this;
          _this.observers = /* @__PURE__ */ new Set();
          _this.promise = new Promise(function(resolve2, reject2) {
            _this.resolve = resolve2;
            _this.reject = reject2;
          });
          _this.handlers = {
            next: function(result2) {
              if (_this.sub !== null) {
                _this.latest = ["next", result2];
                _this.notify("next", result2);
                iterateObserversSafely(_this.observers, "next", result2);
              }
            },
            error: function(error) {
              var sub2 = _this.sub;
              if (sub2 !== null) {
                if (sub2)
                  setTimeout(function() {
                    return sub2.unsubscribe();
                  });
                _this.sub = null;
                _this.latest = ["error", error];
                _this.reject(error);
                _this.notify("error", error);
                iterateObserversSafely(_this.observers, "error", error);
              }
            },
            complete: function() {
              var _a2 = _this, sub2 = _a2.sub, _b = _a2.sources, sources2 = _b === void 0 ? [] : _b;
              if (sub2 !== null) {
                var value2 = sources2.shift();
                if (!value2) {
                  if (sub2)
                    setTimeout(function() {
                      return sub2.unsubscribe();
                    });
                  _this.sub = null;
                  if (_this.latest && _this.latest[0] === "next") {
                    _this.resolve(_this.latest[1]);
                  } else {
                    _this.resolve();
                  }
                  _this.notify("complete");
                  iterateObserversSafely(_this.observers, "complete");
                } else if (isPromiseLike(value2)) {
                  value2.then(function(obs) {
                    return _this.sub = obs.subscribe(_this.handlers);
                  });
                } else {
                  _this.sub = value2.subscribe(_this.handlers);
                }
              }
            }
          };
          _this.nextResultListeners = /* @__PURE__ */ new Set();
          _this.cancel = function(reason) {
            _this.reject(reason);
            _this.sources = [];
            _this.handlers.complete();
          };
          _this.promise.catch(function(_) {
          });
          if (typeof sources === "function") {
            sources = [new Observable(sources)];
          }
          if (isPromiseLike(sources)) {
            sources.then(function(iterable) {
              return _this.start(iterable);
            }, _this.handlers.error);
          } else {
            _this.start(sources);
          }
          return _this;
        }
        Concast2.prototype.start = function(sources) {
          if (this.sub !== void 0)
            return;
          this.sources = Array.from(sources);
          this.handlers.complete();
        };
        Concast2.prototype.deliverLastMessage = function(observer) {
          if (this.latest) {
            var nextOrError = this.latest[0];
            var method = observer[nextOrError];
            if (method) {
              method.call(observer, this.latest[1]);
            }
            if (this.sub === null && nextOrError === "next" && observer.complete) {
              observer.complete();
            }
          }
        };
        Concast2.prototype.addObserver = function(observer) {
          if (!this.observers.has(observer)) {
            this.deliverLastMessage(observer);
            this.observers.add(observer);
          }
        };
        Concast2.prototype.removeObserver = function(observer) {
          if (this.observers.delete(observer) && this.observers.size < 1) {
            this.handlers.complete();
          }
        };
        Concast2.prototype.notify = function(method, arg) {
          var nextResultListeners = this.nextResultListeners;
          if (nextResultListeners.size) {
            this.nextResultListeners = /* @__PURE__ */ new Set();
            nextResultListeners.forEach(function(listener) {
              return listener(method, arg);
            });
          }
        };
        Concast2.prototype.beforeNext = function(callback) {
          var called = false;
          this.nextResultListeners.add(function(method, arg) {
            if (!called) {
              called = true;
              callback(method, arg);
            }
          });
        };
        return Concast2;
      }(Observable);
      fixObservableSubclass(Concast);
    }
  });

  // node_modules/@apollo/client/utilities/common/incrementalResult.js
  function isExecutionPatchIncrementalResult(value2) {
    return "incremental" in value2;
  }
  function isExecutionPatchInitialResult(value2) {
    return "hasNext" in value2 && "data" in value2;
  }
  function isExecutionPatchResult(value2) {
    return isExecutionPatchIncrementalResult(value2) || isExecutionPatchInitialResult(value2);
  }
  function isApolloPayloadResult(value2) {
    return isNonNullObject(value2) && "payload" in value2;
  }
  function mergeIncrementalData(prevResult, result2) {
    var mergedData = prevResult;
    var merger = new DeepMerger();
    if (isExecutionPatchIncrementalResult(result2) && isNonEmptyArray(result2.incremental)) {
      result2.incremental.forEach(function(_a2) {
        var data2 = _a2.data, path = _a2.path;
        for (var i = path.length - 1; i >= 0; --i) {
          var key2 = path[i];
          var isNumericKey = !isNaN(+key2);
          var parent_1 = isNumericKey ? [] : {};
          parent_1[key2] = data2;
          data2 = parent_1;
        }
        mergedData = merger.merge(mergedData, data2);
      });
    }
    return mergedData;
  }
  var init_incrementalResult = __esm({
    "node_modules/@apollo/client/utilities/common/incrementalResult.js"() {
      init_objects();
      init_arrays();
      init_mergeDeep();
    }
  });

  // node_modules/@apollo/client/utilities/common/errorHandling.js
  function graphQLResultHasError(result2) {
    var errors = getGraphQLErrorsFromResult(result2);
    return isNonEmptyArray(errors);
  }
  function getGraphQLErrorsFromResult(result2) {
    var graphQLErrors = isNonEmptyArray(result2.errors) ? result2.errors.slice(0) : [];
    if (isExecutionPatchIncrementalResult(result2) && isNonEmptyArray(result2.incremental)) {
      result2.incremental.forEach(function(incrementalResult) {
        if (incrementalResult.errors) {
          graphQLErrors.push.apply(graphQLErrors, incrementalResult.errors);
        }
      });
    }
    return graphQLErrors;
  }
  var init_errorHandling = __esm({
    "node_modules/@apollo/client/utilities/common/errorHandling.js"() {
      init_arrays();
      init_incrementalResult();
    }
  });

  // node_modules/@apollo/client/utilities/common/compact.js
  function compact() {
    var objects = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      objects[_i] = arguments[_i];
    }
    var result2 = /* @__PURE__ */ Object.create(null);
    objects.forEach(function(obj) {
      if (!obj)
        return;
      Object.keys(obj).forEach(function(key2) {
        var value2 = obj[key2];
        if (value2 !== void 0) {
          result2[key2] = value2;
        }
      });
    });
    return result2;
  }
  var init_compact = __esm({
    "node_modules/@apollo/client/utilities/common/compact.js"() {
    }
  });

  // node_modules/@apollo/client/utilities/common/mergeOptions.js
  function mergeOptions(defaults, options) {
    return compact(defaults, options, options.variables && {
      variables: compact(__assign(__assign({}, defaults && defaults.variables), options.variables))
    });
  }
  var init_mergeOptions = __esm({
    "node_modules/@apollo/client/utilities/common/mergeOptions.js"() {
      init_tslib_es6();
      init_compact();
    }
  });

  // node_modules/@apollo/client/utilities/types/IsStrictlyAny.js
  var init_IsStrictlyAny = __esm({
    "node_modules/@apollo/client/utilities/types/IsStrictlyAny.js"() {
    }
  });

  // node_modules/@apollo/client/utilities/index.js
  var init_utilities = __esm({
    "node_modules/@apollo/client/utilities/index.js"() {
      init_globals();
      init_directives();
      init_DocumentTransform();
      init_fragments();
      init_getFromAST();
      init_print();
      init_storeUtils();
      init_transform();
      init_Observable();
      init_mergeDeep();
      init_cloneDeep();
      init_maybeDeepFreeze();
      init_iteration();
      init_asyncMap();
      init_Concast();
      init_subclassing();
      init_arrays();
      init_objects();
      init_errorHandling();
      init_canUse();
      init_compact();
      init_makeUniqueId();
      init_stringifyForDisplay();
      init_mergeOptions();
      init_incrementalResult();
      init_IsStrictlyAny();
    }
  });

  // node_modules/@apollo/client/link/utils/fromError.js
  function fromError(errorValue) {
    return new Observable(function(observer) {
      observer.error(errorValue);
    });
  }
  var init_fromError = __esm({
    "node_modules/@apollo/client/link/utils/fromError.js"() {
      init_utilities();
    }
  });

  // node_modules/@apollo/client/link/utils/throwServerError.js
  var throwServerError;
  var init_throwServerError = __esm({
    "node_modules/@apollo/client/link/utils/throwServerError.js"() {
      throwServerError = function(response, result2, message) {
        var error = new Error(message);
        error.name = "ServerError";
        error.response = response;
        error.statusCode = response.status;
        error.result = result2;
        throw error;
      };
    }
  });

  // node_modules/@apollo/client/link/utils/validateOperation.js
  function validateOperation(operation) {
    var OPERATION_FIELDS = [
      "query",
      "operationName",
      "variables",
      "extensions",
      "context"
    ];
    for (var _i = 0, _a2 = Object.keys(operation); _i < _a2.length; _i++) {
      var key2 = _a2[_i];
      if (OPERATION_FIELDS.indexOf(key2) < 0) {
        throw newInvariantError(43, key2);
      }
    }
    return operation;
  }
  var init_validateOperation = __esm({
    "node_modules/@apollo/client/link/utils/validateOperation.js"() {
      init_globals();
    }
  });

  // node_modules/@apollo/client/link/utils/createOperation.js
  function createOperation(starting, operation) {
    var context = __assign({}, starting);
    var setContext = function(next) {
      if (typeof next === "function") {
        context = __assign(__assign({}, context), next(context));
      } else {
        context = __assign(__assign({}, context), next);
      }
    };
    var getContext = function() {
      return __assign({}, context);
    };
    Object.defineProperty(operation, "setContext", {
      enumerable: false,
      value: setContext
    });
    Object.defineProperty(operation, "getContext", {
      enumerable: false,
      value: getContext
    });
    return operation;
  }
  var init_createOperation = __esm({
    "node_modules/@apollo/client/link/utils/createOperation.js"() {
      init_tslib_es6();
    }
  });

  // node_modules/@apollo/client/link/utils/transformOperation.js
  function transformOperation(operation) {
    var transformedOperation = {
      variables: operation.variables || {},
      extensions: operation.extensions || {},
      operationName: operation.operationName,
      query: operation.query
    };
    if (!transformedOperation.operationName) {
      transformedOperation.operationName = typeof transformedOperation.query !== "string" ? getOperationName(transformedOperation.query) || void 0 : "";
    }
    return transformedOperation;
  }
  var init_transformOperation = __esm({
    "node_modules/@apollo/client/link/utils/transformOperation.js"() {
      init_utilities();
    }
  });

  // node_modules/@apollo/client/link/utils/filterOperationVariables.js
  function filterOperationVariables(variables, query) {
    var result2 = __assign({}, variables);
    var unusedNames = new Set(Object.keys(variables));
    visit(query, {
      Variable: function(node, _key, parent2) {
        if (parent2 && parent2.kind !== "VariableDefinition") {
          unusedNames.delete(node.name.value);
        }
      }
    });
    unusedNames.forEach(function(name2) {
      delete result2[name2];
    });
    return result2;
  }
  var init_filterOperationVariables = __esm({
    "node_modules/@apollo/client/link/utils/filterOperationVariables.js"() {
      init_tslib_es6();
      init_graphql();
    }
  });

  // node_modules/@apollo/client/link/utils/index.js
  var init_utils = __esm({
    "node_modules/@apollo/client/link/utils/index.js"() {
      init_globals();
      init_fromError();
      init_throwServerError();
      init_validateOperation();
      init_createOperation();
      init_transformOperation();
      init_filterOperationVariables();
    }
  });

  // node_modules/@apollo/client/link/core/ApolloLink.js
  function passthrough(op, forward) {
    return forward ? forward(op) : Observable.of();
  }
  function toLink(handler) {
    return typeof handler === "function" ? new ApolloLink(handler) : handler;
  }
  function isTerminating(link) {
    return link.request.length <= 1;
  }
  var ApolloLink;
  var init_ApolloLink = __esm({
    "node_modules/@apollo/client/link/core/ApolloLink.js"() {
      init_globals();
      init_utilities();
      init_utils();
      ApolloLink = /** @class */
      function() {
        function ApolloLink2(request) {
          if (request)
            this.request = request;
        }
        ApolloLink2.empty = function() {
          return new ApolloLink2(function() {
            return Observable.of();
          });
        };
        ApolloLink2.from = function(links) {
          if (links.length === 0)
            return ApolloLink2.empty();
          return links.map(toLink).reduce(function(x, y) {
            return x.concat(y);
          });
        };
        ApolloLink2.split = function(test2, left, right) {
          var leftLink = toLink(left);
          var rightLink = toLink(right || new ApolloLink2(passthrough));
          if (isTerminating(leftLink) && isTerminating(rightLink)) {
            return new ApolloLink2(function(operation) {
              return test2(operation) ? leftLink.request(operation) || Observable.of() : rightLink.request(operation) || Observable.of();
            });
          } else {
            return new ApolloLink2(function(operation, forward) {
              return test2(operation) ? leftLink.request(operation, forward) || Observable.of() : rightLink.request(operation, forward) || Observable.of();
            });
          }
        };
        ApolloLink2.execute = function(link, operation) {
          return link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of();
        };
        ApolloLink2.concat = function(first, second) {
          var firstLink = toLink(first);
          if (isTerminating(firstLink)) {
            return firstLink;
          }
          var nextLink = toLink(second);
          if (isTerminating(nextLink)) {
            return new ApolloLink2(function(operation) {
              return firstLink.request(operation, function(op) {
                return nextLink.request(op) || Observable.of();
              }) || Observable.of();
            });
          } else {
            return new ApolloLink2(function(operation, forward) {
              return firstLink.request(operation, function(op) {
                return nextLink.request(op, forward) || Observable.of();
              }) || Observable.of();
            });
          }
        };
        ApolloLink2.prototype.split = function(test2, left, right) {
          return this.concat(ApolloLink2.split(test2, left, right || new ApolloLink2(passthrough)));
        };
        ApolloLink2.prototype.concat = function(next) {
          return ApolloLink2.concat(this, next);
        };
        ApolloLink2.prototype.request = function(operation, forward) {
          throw newInvariantError(36);
        };
        ApolloLink2.prototype.onError = function(error, observer) {
          if (observer && observer.error) {
            observer.error(error);
            return false;
          }
          throw error;
        };
        ApolloLink2.prototype.setOnError = function(fn) {
          this.onError = fn;
          return this;
        };
        return ApolloLink2;
      }();
    }
  });

  // node_modules/@apollo/client/link/core/execute.js
  var execute;
  var init_execute = __esm({
    "node_modules/@apollo/client/link/core/execute.js"() {
      init_ApolloLink();
      execute = ApolloLink.execute;
    }
  });

  // node_modules/@apollo/client/link/core/types.js
  var init_types = __esm({
    "node_modules/@apollo/client/link/core/types.js"() {
    }
  });

  // node_modules/@apollo/client/link/core/index.js
  var init_core = __esm({
    "node_modules/@apollo/client/link/core/index.js"() {
      init_globals();
      init_execute();
      init_ApolloLink();
      init_types();
    }
  });

  // node_modules/@apollo/client/link/http/iterators/async.js
  function asyncIterator(source) {
    var _a2;
    var iterator = source[Symbol.asyncIterator]();
    return _a2 = {
      next: function() {
        return iterator.next();
      }
    }, _a2[Symbol.asyncIterator] = function() {
      return this;
    }, _a2;
  }
  var init_async = __esm({
    "node_modules/@apollo/client/link/http/iterators/async.js"() {
    }
  });

  // node_modules/@apollo/client/link/http/iterators/nodeStream.js
  function nodeStreamIterator(stream) {
    var cleanup = null;
    var error = null;
    var done = false;
    var data2 = [];
    var waiting = [];
    function onData(chunk) {
      if (error)
        return;
      if (waiting.length) {
        var shiftedArr = waiting.shift();
        if (Array.isArray(shiftedArr) && shiftedArr[0]) {
          return shiftedArr[0]({ value: chunk, done: false });
        }
      }
      data2.push(chunk);
    }
    function onError2(err) {
      error = err;
      var all = waiting.slice();
      all.forEach(function(pair) {
        pair[1](err);
      });
      !cleanup || cleanup();
    }
    function onEnd() {
      done = true;
      var all = waiting.slice();
      all.forEach(function(pair) {
        pair[0]({ value: void 0, done: true });
      });
      !cleanup || cleanup();
    }
    cleanup = function() {
      cleanup = null;
      stream.removeListener("data", onData);
      stream.removeListener("error", onError2);
      stream.removeListener("end", onEnd);
      stream.removeListener("finish", onEnd);
      stream.removeListener("close", onEnd);
    };
    stream.on("data", onData);
    stream.on("error", onError2);
    stream.on("end", onEnd);
    stream.on("finish", onEnd);
    stream.on("close", onEnd);
    function getNext() {
      return new Promise(function(resolve2, reject2) {
        if (error)
          return reject2(error);
        if (data2.length)
          return resolve2({ value: data2.shift(), done: false });
        if (done)
          return resolve2({ value: void 0, done: true });
        waiting.push([resolve2, reject2]);
      });
    }
    var iterator = {
      next: function() {
        return getNext();
      }
    };
    if (canUseAsyncIteratorSymbol) {
      iterator[Symbol.asyncIterator] = function() {
        return this;
      };
    }
    return iterator;
  }
  var init_nodeStream = __esm({
    "node_modules/@apollo/client/link/http/iterators/nodeStream.js"() {
      init_utilities();
    }
  });

  // node_modules/@apollo/client/link/http/iterators/promise.js
  function promiseIterator(promise) {
    var resolved = false;
    var iterator = {
      next: function() {
        if (resolved)
          return Promise.resolve({
            value: void 0,
            done: true
          });
        resolved = true;
        return new Promise(function(resolve2, reject2) {
          promise.then(function(value2) {
            resolve2({ value: value2, done: false });
          }).catch(reject2);
        });
      }
    };
    if (canUseAsyncIteratorSymbol) {
      iterator[Symbol.asyncIterator] = function() {
        return this;
      };
    }
    return iterator;
  }
  var init_promise = __esm({
    "node_modules/@apollo/client/link/http/iterators/promise.js"() {
      init_utilities();
    }
  });

  // node_modules/@apollo/client/link/http/iterators/reader.js
  function readerIterator(reader) {
    var iterator = {
      next: function() {
        return reader.read();
      }
    };
    if (canUseAsyncIteratorSymbol) {
      iterator[Symbol.asyncIterator] = function() {
        return this;
      };
    }
    return iterator;
  }
  var init_reader = __esm({
    "node_modules/@apollo/client/link/http/iterators/reader.js"() {
      init_utilities();
    }
  });

  // node_modules/@apollo/client/link/http/responseIterator.js
  function isNodeResponse(value2) {
    return !!value2.body;
  }
  function isReadableStream(value2) {
    return !!value2.getReader;
  }
  function isAsyncIterableIterator(value2) {
    return !!(canUseAsyncIteratorSymbol && value2[Symbol.asyncIterator]);
  }
  function isStreamableBlob(value2) {
    return !!value2.stream;
  }
  function isBlob(value2) {
    return !!value2.arrayBuffer;
  }
  function isNodeReadableStream(value2) {
    return !!value2.pipe;
  }
  function responseIterator(response) {
    var body = response;
    if (isNodeResponse(response))
      body = response.body;
    if (isAsyncIterableIterator(body))
      return asyncIterator(body);
    if (isReadableStream(body))
      return readerIterator(body.getReader());
    if (isStreamableBlob(body)) {
      return readerIterator(body.stream().getReader());
    }
    if (isBlob(body))
      return promiseIterator(body.arrayBuffer());
    if (isNodeReadableStream(body))
      return nodeStreamIterator(body);
    throw new Error("Unknown body type for responseIterator. Please pass a streamable response.");
  }
  var init_responseIterator = __esm({
    "node_modules/@apollo/client/link/http/responseIterator.js"() {
      init_utilities();
      init_async();
      init_nodeStream();
      init_promise();
      init_reader();
    }
  });

  // node_modules/@apollo/client/errors/index.js
  function graphQLResultHasProtocolErrors(result2) {
    if (result2.extensions) {
      return Array.isArray(result2.extensions[PROTOCOL_ERRORS_SYMBOL]);
    }
    return false;
  }
  function isApolloError(err) {
    return err.hasOwnProperty("graphQLErrors");
  }
  var PROTOCOL_ERRORS_SYMBOL, generateErrorMessage, ApolloError;
  var init_errors = __esm({
    "node_modules/@apollo/client/errors/index.js"() {
      init_tslib_es6();
      init_globals();
      init_utilities();
      PROTOCOL_ERRORS_SYMBOL = Symbol();
      generateErrorMessage = function(err) {
        var errors = __spreadArray(__spreadArray(__spreadArray([], err.graphQLErrors, true), err.clientErrors, true), err.protocolErrors, true);
        if (err.networkError)
          errors.push(err.networkError);
        return errors.map(function(err2) {
          return isNonNullObject(err2) && err2.message || "Error message not found.";
        }).join("\n");
      };
      ApolloError = /** @class */
      function(_super) {
        __extends(ApolloError2, _super);
        function ApolloError2(_a2) {
          var graphQLErrors = _a2.graphQLErrors, protocolErrors = _a2.protocolErrors, clientErrors = _a2.clientErrors, networkError = _a2.networkError, errorMessage = _a2.errorMessage, extraInfo = _a2.extraInfo;
          var _this = _super.call(this, errorMessage) || this;
          _this.name = "ApolloError";
          _this.graphQLErrors = graphQLErrors || [];
          _this.protocolErrors = protocolErrors || [];
          _this.clientErrors = clientErrors || [];
          _this.networkError = networkError || null;
          _this.message = errorMessage || generateErrorMessage(_this);
          _this.extraInfo = extraInfo;
          _this.__proto__ = ApolloError2.prototype;
          return _this;
        }
        return ApolloError2;
      }(Error);
    }
  });

  // node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js
  function readMultipartBody(response, nextValue) {
    var _a2;
    return __awaiter(this, void 0, void 0, function() {
      var decoder, contentType, delimiter, boundaryVal, boundary, buffer, iterator, running, _b, value2, done, chunk, searchFrom, bi, message, i, headers, contentType_1, body, result2, next;
      var _c, _d;
      return __generator(this, function(_e) {
        switch (_e.label) {
          case 0:
            if (TextDecoder === void 0) {
              throw new Error("TextDecoder must be defined in the environment: please import a polyfill.");
            }
            decoder = new TextDecoder("utf-8");
            contentType = (_a2 = response.headers) === null || _a2 === void 0 ? void 0 : _a2.get("content-type");
            delimiter = "boundary=";
            boundaryVal = (contentType === null || contentType === void 0 ? void 0 : contentType.includes(delimiter)) ? contentType === null || contentType === void 0 ? void 0 : contentType.substring((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(delimiter)) + delimiter.length).replace(/['"]/g, "").replace(/\;(.*)/gm, "").trim() : "-";
            boundary = "\r\n--".concat(boundaryVal);
            buffer = "";
            iterator = responseIterator(response);
            running = true;
            _e.label = 1;
          case 1:
            if (!running)
              return [3, 3];
            return [4, iterator.next()];
          case 2:
            _b = _e.sent(), value2 = _b.value, done = _b.done;
            chunk = typeof value2 === "string" ? value2 : decoder.decode(value2);
            searchFrom = buffer.length - boundary.length + 1;
            running = !done;
            buffer += chunk;
            bi = buffer.indexOf(boundary, searchFrom);
            while (bi > -1) {
              message = void 0;
              _c = [
                buffer.slice(0, bi),
                buffer.slice(bi + boundary.length)
              ], message = _c[0], buffer = _c[1];
              i = message.indexOf("\r\n\r\n");
              headers = parseHeaders(message.slice(0, i));
              contentType_1 = headers["content-type"];
              if (contentType_1 && contentType_1.toLowerCase().indexOf("application/json") === -1) {
                throw new Error("Unsupported patch content type: application/json is required.");
              }
              body = message.slice(i);
              if (body) {
                result2 = parseJsonBody(response, body);
                if (Object.keys(result2).length > 1 || "data" in result2 || "incremental" in result2 || "errors" in result2 || "payload" in result2) {
                  if (isApolloPayloadResult(result2)) {
                    next = {};
                    if ("payload" in result2) {
                      next = __assign({}, result2.payload);
                    }
                    if ("errors" in result2) {
                      next = __assign(__assign({}, next), { extensions: __assign(__assign({}, "extensions" in next ? next.extensions : null), (_d = {}, _d[PROTOCOL_ERRORS_SYMBOL] = result2.errors, _d)) });
                    }
                    nextValue(next);
                  } else {
                    nextValue(result2);
                  }
                } else if (
                  // If the chunk contains only a "hasNext: false", we can call
                  // observer.complete() immediately.
                  Object.keys(result2).length === 1 && "hasNext" in result2 && !result2.hasNext
                ) {
                  return [
                    2
                    /*return*/
                  ];
                }
              }
              bi = buffer.indexOf(boundary);
            }
            return [3, 1];
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }
  function parseHeaders(headerText) {
    var headersInit = {};
    headerText.split("\n").forEach(function(line) {
      var i = line.indexOf(":");
      if (i > -1) {
        var name_1 = line.slice(0, i).trim().toLowerCase();
        var value2 = line.slice(i + 1).trim();
        headersInit[name_1] = value2;
      }
    });
    return headersInit;
  }
  function parseJsonBody(response, bodyText) {
    if (response.status >= 300) {
      var getResult = function() {
        try {
          return JSON.parse(bodyText);
        } catch (err) {
          return bodyText;
        }
      };
      throwServerError(response, getResult(), "Response not successful: Received status code ".concat(response.status));
    }
    try {
      return JSON.parse(bodyText);
    } catch (err) {
      var parseError = err;
      parseError.name = "ServerParseError";
      parseError.response = response;
      parseError.statusCode = response.status;
      parseError.bodyText = bodyText;
      throw parseError;
    }
  }
  function handleError(err, observer) {
    if (err.result && err.result.errors && err.result.data) {
      observer.next(err.result);
    }
    observer.error(err);
  }
  function parseAndCheckHttpResponse(operations) {
    return function(response) {
      return response.text().then(function(bodyText) {
        return parseJsonBody(response, bodyText);
      }).then(function(result2) {
        if (response.status >= 300) {
          throwServerError(response, result2, "Response not successful: Received status code ".concat(response.status));
        }
        if (!Array.isArray(result2) && !hasOwnProperty3.call(result2, "data") && !hasOwnProperty3.call(result2, "errors")) {
          throwServerError(response, result2, "Server response was missing for query '".concat(Array.isArray(operations) ? operations.map(function(op) {
            return op.operationName;
          }) : operations.operationName, "'."));
        }
        return result2;
      });
    };
  }
  var hasOwnProperty3;
  var init_parseAndCheckHttpResponse = __esm({
    "node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js"() {
      init_tslib_es6();
      init_responseIterator();
      init_utils();
      init_errors();
      init_incrementalResult();
      hasOwnProperty3 = Object.prototype.hasOwnProperty;
    }
  });

  // node_modules/@apollo/client/link/http/serializeFetchParameter.js
  var serializeFetchParameter;
  var init_serializeFetchParameter = __esm({
    "node_modules/@apollo/client/link/http/serializeFetchParameter.js"() {
      init_globals();
      serializeFetchParameter = function(p, label) {
        var serialized;
        try {
          serialized = JSON.stringify(p);
        } catch (e) {
          var parseError = newInvariantError(39, label, e.message);
          parseError.parseError = e;
          throw parseError;
        }
        return serialized;
      };
    }
  });

  // node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js
  function selectHttpOptionsAndBodyInternal(operation, printer) {
    var configs = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      configs[_i - 2] = arguments[_i];
    }
    var options = {};
    var http = {};
    configs.forEach(function(config) {
      options = __assign(__assign(__assign({}, options), config.options), { headers: __assign(__assign({}, options.headers), config.headers) });
      if (config.credentials) {
        options.credentials = config.credentials;
      }
      http = __assign(__assign({}, http), config.http);
    });
    if (options.headers) {
      options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);
    }
    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;
    var body = { operationName, variables };
    if (http.includeExtensions)
      body.extensions = extensions;
    if (http.includeQuery)
      body.query = printer(query, print2);
    return {
      options,
      body
    };
  }
  function removeDuplicateHeaders(headers, preserveHeaderCase) {
    if (!preserveHeaderCase) {
      var normalizedHeaders_1 = /* @__PURE__ */ Object.create(null);
      Object.keys(Object(headers)).forEach(function(name2) {
        normalizedHeaders_1[name2.toLowerCase()] = headers[name2];
      });
      return normalizedHeaders_1;
    }
    var headerData = /* @__PURE__ */ Object.create(null);
    Object.keys(Object(headers)).forEach(function(name2) {
      headerData[name2.toLowerCase()] = {
        originalName: name2,
        value: headers[name2]
      };
    });
    var normalizedHeaders = /* @__PURE__ */ Object.create(null);
    Object.keys(headerData).forEach(function(name2) {
      normalizedHeaders[headerData[name2].originalName] = headerData[name2].value;
    });
    return normalizedHeaders;
  }
  var defaultHttpOptions, defaultHeaders, defaultOptions, fallbackHttpConfig, defaultPrinter;
  var init_selectHttpOptionsAndBody = __esm({
    "node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js"() {
      init_tslib_es6();
      init_utilities();
      defaultHttpOptions = {
        includeQuery: true,
        includeExtensions: false,
        preserveHeaderCase: false
      };
      defaultHeaders = {
        // headers are case insensitive (https://stackoverflow.com/a/5259004)
        accept: "*/*",
        // The content-type header describes the type of the body of the request, and
        // so it typically only is sent with requests that actually have bodies. One
        // could imagine that Apollo Client would remove this header when constructing
        // a GET request (which has no body), but we historically have not done that.
        // This means that browsers will preflight all Apollo Client requests (even
        // GET requests). Apollo Server's CSRF prevention feature (introduced in
        // AS3.7) takes advantage of this fact and does not block requests with this
        // header. If you want to drop this header from GET requests, then you should
        // probably replace it with a `apollo-require-preflight` header, or servers
        // with CSRF prevention enabled might block your GET request. See
        // https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf
        // for more details.
        "content-type": "application/json"
      };
      defaultOptions = {
        method: "POST"
      };
      fallbackHttpConfig = {
        http: defaultHttpOptions,
        headers: defaultHeaders,
        options: defaultOptions
      };
      defaultPrinter = function(ast, printer) {
        return printer(ast);
      };
    }
  });

  // node_modules/@apollo/client/link/http/checkFetcher.js
  var checkFetcher;
  var init_checkFetcher = __esm({
    "node_modules/@apollo/client/link/http/checkFetcher.js"() {
      init_globals();
      checkFetcher = function(fetcher) {
        if (!fetcher && typeof fetch === "undefined") {
          throw newInvariantError(37);
        }
      };
    }
  });

  // node_modules/@apollo/client/link/http/selectURI.js
  var selectURI;
  var init_selectURI = __esm({
    "node_modules/@apollo/client/link/http/selectURI.js"() {
      selectURI = function(operation, fallbackURI) {
        var context = operation.getContext();
        var contextURI = context.uri;
        if (contextURI) {
          return contextURI;
        } else if (typeof fallbackURI === "function") {
          return fallbackURI(operation);
        } else {
          return fallbackURI || "/graphql";
        }
      };
    }
  });

  // node_modules/@apollo/client/link/http/rewriteURIForGET.js
  function rewriteURIForGET(chosenURI, body) {
    var queryParams = [];
    var addQueryParam = function(key2, value2) {
      queryParams.push("".concat(key2, "=").concat(encodeURIComponent(value2)));
    };
    if ("query" in body) {
      addQueryParam("query", body.query);
    }
    if (body.operationName) {
      addQueryParam("operationName", body.operationName);
    }
    if (body.variables) {
      var serializedVariables = void 0;
      try {
        serializedVariables = serializeFetchParameter(body.variables, "Variables map");
      } catch (parseError) {
        return { parseError };
      }
      addQueryParam("variables", serializedVariables);
    }
    if (body.extensions) {
      var serializedExtensions = void 0;
      try {
        serializedExtensions = serializeFetchParameter(body.extensions, "Extensions map");
      } catch (parseError) {
        return { parseError };
      }
      addQueryParam("extensions", serializedExtensions);
    }
    var fragment = "", preFragment = chosenURI;
    var fragmentStart = chosenURI.indexOf("#");
    if (fragmentStart !== -1) {
      fragment = chosenURI.substr(fragmentStart);
      preFragment = chosenURI.substr(0, fragmentStart);
    }
    var queryParamsPrefix = preFragment.indexOf("?") === -1 ? "?" : "&";
    var newURI = preFragment + queryParamsPrefix + queryParams.join("&") + fragment;
    return { newURI };
  }
  var init_rewriteURIForGET = __esm({
    "node_modules/@apollo/client/link/http/rewriteURIForGET.js"() {
      init_serializeFetchParameter();
    }
  });

  // node_modules/@apollo/client/link/http/createHttpLink.js
  var backupFetch, createHttpLink;
  var init_createHttpLink = __esm({
    "node_modules/@apollo/client/link/http/createHttpLink.js"() {
      init_tslib_es6();
      init_globals();
      init_core();
      init_utilities();
      init_serializeFetchParameter();
      init_selectURI();
      init_parseAndCheckHttpResponse();
      init_selectHttpOptionsAndBody();
      init_rewriteURIForGET();
      init_utils();
      init_utilities();
      backupFetch = maybe(function() {
        return fetch;
      });
      createHttpLink = function(linkOptions) {
        if (linkOptions === void 0) {
          linkOptions = {};
        }
        var _a2 = linkOptions.uri, uri = _a2 === void 0 ? "/graphql" : _a2, preferredFetch = linkOptions.fetch, _b = linkOptions.print, print3 = _b === void 0 ? defaultPrinter : _b, includeExtensions = linkOptions.includeExtensions, preserveHeaderCase = linkOptions.preserveHeaderCase, useGETForQueries = linkOptions.useGETForQueries, _c = linkOptions.includeUnusedVariables, includeUnusedVariables = _c === void 0 ? false : _c, requestOptions = __rest(linkOptions, ["uri", "fetch", "print", "includeExtensions", "preserveHeaderCase", "useGETForQueries", "includeUnusedVariables"]);
        if (false) {
          checkFetcher(preferredFetch || backupFetch);
        }
        var linkConfig = {
          http: { includeExtensions, preserveHeaderCase },
          options: requestOptions.fetchOptions,
          credentials: requestOptions.credentials,
          headers: requestOptions.headers
        };
        return new ApolloLink(function(operation) {
          var chosenURI = selectURI(operation, uri);
          var context = operation.getContext();
          var clientAwarenessHeaders = {};
          if (context.clientAwareness) {
            var _a3 = context.clientAwareness, name_1 = _a3.name, version2 = _a3.version;
            if (name_1) {
              clientAwarenessHeaders["apollographql-client-name"] = name_1;
            }
            if (version2) {
              clientAwarenessHeaders["apollographql-client-version"] = version2;
            }
          }
          var contextHeaders = __assign(__assign({}, clientAwarenessHeaders), context.headers);
          var contextConfig = {
            http: context.http,
            options: context.fetchOptions,
            credentials: context.credentials,
            headers: contextHeaders
          };
          if (hasDirectives(["client"], operation.query)) {
            var transformedQuery = removeClientSetsFromDocument(operation.query);
            if (!transformedQuery) {
              return fromError(new Error("HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`."));
            }
            operation.query = transformedQuery;
          }
          var _b2 = selectHttpOptionsAndBodyInternal(operation, print3, fallbackHttpConfig, linkConfig, contextConfig), options = _b2.options, body = _b2.body;
          if (body.variables && !includeUnusedVariables) {
            body.variables = filterOperationVariables(body.variables, operation.query);
          }
          var controller;
          if (!options.signal && typeof AbortController !== "undefined") {
            controller = new AbortController();
            options.signal = controller.signal;
          }
          var definitionIsMutation = function(d) {
            return d.kind === "OperationDefinition" && d.operation === "mutation";
          };
          var definitionIsSubscription = function(d) {
            return d.kind === "OperationDefinition" && d.operation === "subscription";
          };
          var isSubscription = definitionIsSubscription(getMainDefinition(operation.query));
          var hasDefer = hasDirectives(["defer"], operation.query);
          if (useGETForQueries && !operation.query.definitions.some(definitionIsMutation)) {
            options.method = "GET";
          }
          if (hasDefer || isSubscription) {
            options.headers = options.headers || {};
            var acceptHeader = "multipart/mixed;";
            if (isSubscription && hasDefer) {
            }
            if (isSubscription) {
              acceptHeader += "boundary=graphql;subscriptionSpec=1.0,application/json";
            } else if (hasDefer) {
              acceptHeader += "deferSpec=20220824,application/json";
            }
            options.headers.accept = acceptHeader;
          }
          if (options.method === "GET") {
            var _c2 = rewriteURIForGET(chosenURI, body), newURI = _c2.newURI, parseError = _c2.parseError;
            if (parseError) {
              return fromError(parseError);
            }
            chosenURI = newURI;
          } else {
            try {
              options.body = serializeFetchParameter(body, "Payload");
            } catch (parseError2) {
              return fromError(parseError2);
            }
          }
          return new Observable(function(observer) {
            var currentFetch = preferredFetch || maybe(function() {
              return fetch;
            }) || backupFetch;
            var observerNext = observer.next.bind(observer);
            currentFetch(chosenURI, options).then(function(response) {
              var _a4;
              operation.setContext({ response });
              var ctype = (_a4 = response.headers) === null || _a4 === void 0 ? void 0 : _a4.get("content-type");
              if (ctype !== null && /^multipart\/mixed/i.test(ctype)) {
                return readMultipartBody(response, observerNext);
              } else {
                return parseAndCheckHttpResponse(operation)(response).then(observerNext);
              }
            }).then(function() {
              controller = void 0;
              observer.complete();
            }).catch(function(err) {
              controller = void 0;
              handleError(err, observer);
            });
            return function() {
              if (controller)
                controller.abort();
            };
          });
        });
      };
    }
  });

  // node_modules/@apollo/client/link/http/HttpLink.js
  var HttpLink;
  var init_HttpLink = __esm({
    "node_modules/@apollo/client/link/http/HttpLink.js"() {
      init_tslib_es6();
      init_core();
      init_createHttpLink();
      HttpLink = /** @class */
      function(_super) {
        __extends(HttpLink2, _super);
        function HttpLink2(options) {
          if (options === void 0) {
            options = {};
          }
          var _this = _super.call(this, createHttpLink(options).request) || this;
          _this.options = options;
          return _this;
        }
        return HttpLink2;
      }(ApolloLink);
    }
  });

  // node_modules/@apollo/client/link/http/index.js
  var init_http = __esm({
    "node_modules/@apollo/client/link/http/index.js"() {
      init_globals();
      init_parseAndCheckHttpResponse();
      init_serializeFetchParameter();
      init_selectHttpOptionsAndBody();
      init_checkFetcher();
      init_selectURI();
      init_HttpLink();
    }
  });

  // node_modules/@wry/equality/lib/index.js
  function equal(a, b) {
    try {
      return check(a, b);
    } finally {
      previousComparisons.clear();
    }
  }
  function check(a, b) {
    if (a === b) {
      return true;
    }
    const aTag = toString2.call(a);
    const bTag = toString2.call(b);
    if (aTag !== bTag) {
      return false;
    }
    switch (aTag) {
      case "[object Array]":
        if (a.length !== b.length)
          return false;
      case "[object Object]": {
        if (previouslyCompared(a, b))
          return true;
        const aKeys = definedKeys(a);
        const bKeys = definedKeys(b);
        const keyCount = aKeys.length;
        if (keyCount !== bKeys.length)
          return false;
        for (let k = 0; k < keyCount; ++k) {
          if (!hasOwnProperty4.call(b, aKeys[k])) {
            return false;
          }
        }
        for (let k = 0; k < keyCount; ++k) {
          const key2 = aKeys[k];
          if (!check(a[key2], b[key2])) {
            return false;
          }
        }
        return true;
      }
      case "[object Error]":
        return a.name === b.name && a.message === b.message;
      case "[object Number]":
        if (a !== a)
          return b !== b;
      case "[object Boolean]":
      case "[object Date]":
        return +a === +b;
      case "[object RegExp]":
      case "[object String]":
        return a == `${b}`;
      case "[object Map]":
      case "[object Set]": {
        if (a.size !== b.size)
          return false;
        if (previouslyCompared(a, b))
          return true;
        const aIterator = a.entries();
        const isMap2 = aTag === "[object Map]";
        while (true) {
          const info = aIterator.next();
          if (info.done)
            break;
          const [aKey, aValue] = info.value;
          if (!b.has(aKey)) {
            return false;
          }
          if (isMap2 && !check(aValue, b.get(aKey))) {
            return false;
          }
        }
        return true;
      }
      case "[object Uint16Array]":
      case "[object Uint8Array]":
      case "[object Uint32Array]":
      case "[object Int32Array]":
      case "[object Int8Array]":
      case "[object Int16Array]":
      case "[object ArrayBuffer]":
        a = new Uint8Array(a);
        b = new Uint8Array(b);
      case "[object DataView]": {
        let len = a.byteLength;
        if (len === b.byteLength) {
          while (len-- && a[len] === b[len]) {
          }
        }
        return len === -1;
      }
      case "[object AsyncFunction]":
      case "[object GeneratorFunction]":
      case "[object AsyncGeneratorFunction]":
      case "[object Function]": {
        const aCode = fnToStr.call(a);
        if (aCode !== fnToStr.call(b)) {
          return false;
        }
        return !endsWith(aCode, nativeCodeSuffix);
      }
    }
    return false;
  }
  function definedKeys(obj) {
    return Object.keys(obj).filter(isDefinedKey, obj);
  }
  function isDefinedKey(key2) {
    return this[key2] !== void 0;
  }
  function endsWith(full, suffix) {
    const fromIndex = full.length - suffix.length;
    return fromIndex >= 0 && full.indexOf(suffix, fromIndex) === fromIndex;
  }
  function previouslyCompared(a, b) {
    let bSet = previousComparisons.get(a);
    if (bSet) {
      if (bSet.has(b))
        return true;
    } else {
      previousComparisons.set(a, bSet = /* @__PURE__ */ new Set());
    }
    bSet.add(b);
    return false;
  }
  var toString2, hasOwnProperty4, fnToStr, previousComparisons, lib_default, nativeCodeSuffix;
  var init_lib2 = __esm({
    "node_modules/@wry/equality/lib/index.js"() {
      ({ toString: toString2, hasOwnProperty: hasOwnProperty4 } = Object.prototype);
      fnToStr = Function.prototype.toString;
      previousComparisons = /* @__PURE__ */ new Map();
      lib_default = equal;
      nativeCodeSuffix = "{ [native code] }";
    }
  });

  // node_modules/optimism/node_modules/@wry/trie/lib/index.js
  function isObjRef2(value2) {
    switch (typeof value2) {
      case "object":
        if (value2 === null)
          break;
      case "function":
        return true;
    }
    return false;
  }
  var defaultMakeData2, forEach3, slice2, hasOwnProperty5, Trie2;
  var init_lib3 = __esm({
    "node_modules/optimism/node_modules/@wry/trie/lib/index.js"() {
      defaultMakeData2 = () => /* @__PURE__ */ Object.create(null);
      ({ forEach: forEach3, slice: slice2 } = Array.prototype);
      ({ hasOwnProperty: hasOwnProperty5 } = Object.prototype);
      Trie2 = class {
        constructor(weakness = true, makeData = defaultMakeData2) {
          this.weakness = weakness;
          this.makeData = makeData;
        }
        lookup(...array) {
          return this.lookupArray(array);
        }
        lookupArray(array) {
          let node = this;
          forEach3.call(array, (key2) => node = node.getChildTrie(key2));
          return hasOwnProperty5.call(node, "data") ? node.data : node.data = this.makeData(slice2.call(array));
        }
        peek(...array) {
          return this.peekArray(array);
        }
        peekArray(array) {
          let node = this;
          for (let i = 0, len = array.length; node && i < len; ++i) {
            const map = this.weakness && isObjRef2(array[i]) ? node.weak : node.strong;
            node = map && map.get(array[i]);
          }
          return node && node.data;
        }
        getChildTrie(key2) {
          const map = this.weakness && isObjRef2(key2) ? this.weak || (this.weak = /* @__PURE__ */ new WeakMap()) : this.strong || (this.strong = /* @__PURE__ */ new Map());
          let child = map.get(key2);
          if (!child)
            map.set(key2, child = new Trie2(this.weakness, this.makeData));
          return child;
        }
      };
    }
  });

  // node_modules/@wry/caches/lib/strong.js
  function defaultDispose() {
  }
  var StrongCache;
  var init_strong = __esm({
    "node_modules/@wry/caches/lib/strong.js"() {
      StrongCache = class {
        constructor(max = Infinity, dispose = defaultDispose) {
          this.max = max;
          this.dispose = dispose;
          this.map = /* @__PURE__ */ new Map();
          this.newest = null;
          this.oldest = null;
        }
        has(key2) {
          return this.map.has(key2);
        }
        get(key2) {
          const node = this.getNode(key2);
          return node && node.value;
        }
        get size() {
          return this.map.size;
        }
        getNode(key2) {
          const node = this.map.get(key2);
          if (node && node !== this.newest) {
            const { older, newer } = node;
            if (newer) {
              newer.older = older;
            }
            if (older) {
              older.newer = newer;
            }
            node.older = this.newest;
            node.older.newer = node;
            node.newer = null;
            this.newest = node;
            if (node === this.oldest) {
              this.oldest = newer;
            }
          }
          return node;
        }
        set(key2, value2) {
          let node = this.getNode(key2);
          if (node) {
            return node.value = value2;
          }
          node = {
            key: key2,
            value: value2,
            newer: null,
            older: this.newest
          };
          if (this.newest) {
            this.newest.newer = node;
          }
          this.newest = node;
          this.oldest = this.oldest || node;
          this.map.set(key2, node);
          return node.value;
        }
        clean() {
          while (this.oldest && this.map.size > this.max) {
            this.delete(this.oldest.key);
          }
        }
        delete(key2) {
          const node = this.map.get(key2);
          if (node) {
            if (node === this.newest) {
              this.newest = node.older;
            }
            if (node === this.oldest) {
              this.oldest = node.newer;
            }
            if (node.newer) {
              node.newer.older = node.older;
            }
            if (node.older) {
              node.older.newer = node.newer;
            }
            this.map.delete(key2);
            this.dispose(node.value, key2);
            return true;
          }
          return false;
        }
      };
    }
  });

  // node_modules/@wry/caches/lib/index.js
  var init_lib4 = __esm({
    "node_modules/@wry/caches/lib/index.js"() {
      init_strong();
    }
  });

  // node_modules/@wry/context/lib/slot.js
  function maybe2(fn) {
    try {
      return fn();
    } catch (ignored) {
    }
  }
  var currentContext, MISSING_VALUE, idCounter, makeSlotClass, globalKey, host, globalHost, Slot;
  var init_slot = __esm({
    "node_modules/@wry/context/lib/slot.js"() {
      currentContext = null;
      MISSING_VALUE = {};
      idCounter = 1;
      makeSlotClass = () => class Slot {
        constructor() {
          this.id = [
            "slot",
            idCounter++,
            Date.now(),
            Math.random().toString(36).slice(2)
          ].join(":");
        }
        hasValue() {
          for (let context = currentContext; context; context = context.parent) {
            if (this.id in context.slots) {
              const value2 = context.slots[this.id];
              if (value2 === MISSING_VALUE)
                break;
              if (context !== currentContext) {
                currentContext.slots[this.id] = value2;
              }
              return true;
            }
          }
          if (currentContext) {
            currentContext.slots[this.id] = MISSING_VALUE;
          }
          return false;
        }
        getValue() {
          if (this.hasValue()) {
            return currentContext.slots[this.id];
          }
        }
        withValue(value2, callback, args, thisArg) {
          const slots = {
            __proto__: null,
            [this.id]: value2
          };
          const parent2 = currentContext;
          currentContext = { parent: parent2, slots };
          try {
            return callback.apply(thisArg, args);
          } finally {
            currentContext = parent2;
          }
        }
        // Capture the current context and wrap a callback function so that it
        // reestablishes the captured context when called.
        static bind(callback) {
          const context = currentContext;
          return function() {
            const saved = currentContext;
            try {
              currentContext = context;
              return callback.apply(this, arguments);
            } finally {
              currentContext = saved;
            }
          };
        }
        // Immediately run a callback function without any captured context.
        static noContext(callback, args, thisArg) {
          if (currentContext) {
            const saved = currentContext;
            try {
              currentContext = null;
              return callback.apply(thisArg, args);
            } finally {
              currentContext = saved;
            }
          } else {
            return callback.apply(thisArg, args);
          }
        }
      };
      globalKey = "@wry/context:Slot";
      host = // Prefer globalThis when available.
      // https://github.com/benjamn/wryware/issues/347
      maybe2(() => globalThis) || // Fall back to global, which works in Node.js and may be converted by some
      // bundlers to the appropriate identifier (window, self, ...) depending on the
      // bundling target. https://github.com/endojs/endo/issues/576#issuecomment-1178515224
      maybe2(() => global) || // Otherwise, use a dummy host that's local to this module. We used to fall
      // back to using the Array constructor as a namespace, but that was flagged in
      // https://github.com/benjamn/wryware/issues/347, and can be avoided.
      /* @__PURE__ */ Object.create(null);
      globalHost = host;
      Slot = globalHost[globalKey] || // Earlier versions of this package stored the globalKey property on the Array
      // constructor, so we check there as well, to prevent Slot class duplication.
      Array[globalKey] || function(Slot2) {
        try {
          Object.defineProperty(globalHost, globalKey, {
            value: Slot2,
            enumerable: false,
            writable: false,
            // When it was possible for globalHost to be the Array constructor (a
            // legacy Slot dedup strategy), it was important for the property to be
            // configurable:true so it could be deleted. That does not seem to be as
            // important when globalHost is the global object, but I don't want to
            // cause similar problems again, and configurable:true seems safest.
            // https://github.com/endojs/endo/issues/576#issuecomment-1178274008
            configurable: true
          });
        } finally {
          return Slot2;
        }
      }(makeSlotClass());
    }
  });

  // node_modules/@wry/context/lib/index.js
  var bind, noContext;
  var init_lib5 = __esm({
    "node_modules/@wry/context/lib/index.js"() {
      init_slot();
      ({ bind, noContext } = Slot);
    }
  });

  // node_modules/optimism/lib/context.js
  var parentEntrySlot;
  var init_context = __esm({
    "node_modules/optimism/lib/context.js"() {
      init_lib5();
      init_lib5();
      parentEntrySlot = new Slot();
    }
  });

  // node_modules/optimism/lib/helpers.js
  function maybeUnsubscribe(entryOrDep) {
    const { unsubscribe } = entryOrDep;
    if (typeof unsubscribe === "function") {
      entryOrDep.unsubscribe = void 0;
      unsubscribe();
    }
  }
  var hasOwnProperty6, arrayFromSet;
  var init_helpers = __esm({
    "node_modules/optimism/lib/helpers.js"() {
      ({ hasOwnProperty: hasOwnProperty6 } = Object.prototype);
      arrayFromSet = Array.from || function(set3) {
        const array = [];
        set3.forEach((item) => array.push(item));
        return array;
      };
    }
  });

  // node_modules/optimism/lib/entry.js
  function assert(condition, optionalMessage) {
    if (!condition) {
      throw new Error(optionalMessage || "assertion failure");
    }
  }
  function valueIs(a, b) {
    const len = a.length;
    return (
      // Unknown values are not equal to each other.
      len > 0 && // Both values must be ordinary (or both exceptional) to be equal.
      len === b.length && // The underlying value or exception must be the same.
      a[len - 1] === b[len - 1]
    );
  }
  function valueGet(value2) {
    switch (value2.length) {
      case 0:
        throw new Error("unknown value");
      case 1:
        return value2[0];
      case 2:
        throw value2[1];
    }
  }
  function valueCopy(value2) {
    return value2.slice(0);
  }
  function rememberParent(child) {
    const parent2 = parentEntrySlot.getValue();
    if (parent2) {
      child.parents.add(parent2);
      if (!parent2.childValues.has(child)) {
        parent2.childValues.set(child, []);
      }
      if (mightBeDirty(child)) {
        reportDirtyChild(parent2, child);
      } else {
        reportCleanChild(parent2, child);
      }
      return parent2;
    }
  }
  function reallyRecompute(entry, args) {
    forgetChildren(entry);
    parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);
    if (maybeSubscribe(entry, args)) {
      setClean(entry);
    }
    return valueGet(entry.value);
  }
  function recomputeNewValue(entry, args) {
    entry.recomputing = true;
    const { normalizeResult } = entry;
    let oldValueCopy;
    if (normalizeResult && entry.value.length === 1) {
      oldValueCopy = valueCopy(entry.value);
    }
    entry.value.length = 0;
    try {
      entry.value[0] = entry.fn.apply(null, args);
      if (normalizeResult && oldValueCopy && !valueIs(oldValueCopy, entry.value)) {
        try {
          entry.value[0] = normalizeResult(entry.value[0], oldValueCopy[0]);
        } catch (_a2) {
        }
      }
    } catch (e) {
      entry.value[1] = e;
    }
    entry.recomputing = false;
  }
  function mightBeDirty(entry) {
    return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);
  }
  function setClean(entry) {
    entry.dirty = false;
    if (mightBeDirty(entry)) {
      return;
    }
    reportClean(entry);
  }
  function reportDirty(child) {
    eachParent(child, reportDirtyChild);
  }
  function reportClean(child) {
    eachParent(child, reportCleanChild);
  }
  function eachParent(child, callback) {
    const parentCount = child.parents.size;
    if (parentCount) {
      const parents = arrayFromSet(child.parents);
      for (let i = 0; i < parentCount; ++i) {
        callback(parents[i], child);
      }
    }
  }
  function reportDirtyChild(parent2, child) {
    assert(parent2.childValues.has(child));
    assert(mightBeDirty(child));
    const parentWasClean = !mightBeDirty(parent2);
    if (!parent2.dirtyChildren) {
      parent2.dirtyChildren = emptySetPool.pop() || /* @__PURE__ */ new Set();
    } else if (parent2.dirtyChildren.has(child)) {
      return;
    }
    parent2.dirtyChildren.add(child);
    if (parentWasClean) {
      reportDirty(parent2);
    }
  }
  function reportCleanChild(parent2, child) {
    assert(parent2.childValues.has(child));
    assert(!mightBeDirty(child));
    const childValue = parent2.childValues.get(child);
    if (childValue.length === 0) {
      parent2.childValues.set(child, valueCopy(child.value));
    } else if (!valueIs(childValue, child.value)) {
      parent2.setDirty();
    }
    removeDirtyChild(parent2, child);
    if (mightBeDirty(parent2)) {
      return;
    }
    reportClean(parent2);
  }
  function removeDirtyChild(parent2, child) {
    const dc = parent2.dirtyChildren;
    if (dc) {
      dc.delete(child);
      if (dc.size === 0) {
        if (emptySetPool.length < POOL_TARGET_SIZE) {
          emptySetPool.push(dc);
        }
        parent2.dirtyChildren = null;
      }
    }
  }
  function forgetChildren(parent2) {
    if (parent2.childValues.size > 0) {
      parent2.childValues.forEach((_value, child) => {
        forgetChild(parent2, child);
      });
    }
    parent2.forgetDeps();
    assert(parent2.dirtyChildren === null);
  }
  function forgetChild(parent2, child) {
    child.parents.delete(parent2);
    parent2.childValues.delete(child);
    removeDirtyChild(parent2, child);
  }
  function maybeSubscribe(entry, args) {
    if (typeof entry.subscribe === "function") {
      try {
        maybeUnsubscribe(entry);
        entry.unsubscribe = entry.subscribe.apply(null, args);
      } catch (e) {
        entry.setDirty();
        return false;
      }
    }
    return true;
  }
  var emptySetPool, POOL_TARGET_SIZE, Entry;
  var init_entry = __esm({
    "node_modules/optimism/lib/entry.js"() {
      init_context();
      init_helpers();
      emptySetPool = [];
      POOL_TARGET_SIZE = 100;
      Entry = class {
        constructor(fn) {
          this.fn = fn;
          this.parents = /* @__PURE__ */ new Set();
          this.childValues = /* @__PURE__ */ new Map();
          this.dirtyChildren = null;
          this.dirty = true;
          this.recomputing = false;
          this.value = [];
          this.deps = null;
          ++Entry.count;
        }
        peek() {
          if (this.value.length === 1 && !mightBeDirty(this)) {
            rememberParent(this);
            return this.value[0];
          }
        }
        // This is the most important method of the Entry API, because it
        // determines whether the cached this.value can be returned immediately,
        // or must be recomputed. The overall performance of the caching system
        // depends on the truth of the following observations: (1) this.dirty is
        // usually false, (2) this.dirtyChildren is usually null/empty, and thus
        // (3) valueGet(this.value) is usually returned without recomputation.
        recompute(args) {
          assert(!this.recomputing, "already recomputing");
          rememberParent(this);
          return mightBeDirty(this) ? reallyRecompute(this, args) : valueGet(this.value);
        }
        setDirty() {
          if (this.dirty)
            return;
          this.dirty = true;
          reportDirty(this);
          maybeUnsubscribe(this);
        }
        dispose() {
          this.setDirty();
          forgetChildren(this);
          eachParent(this, (parent2, child) => {
            parent2.setDirty();
            forgetChild(parent2, this);
          });
        }
        forget() {
          this.dispose();
        }
        dependOn(dep2) {
          dep2.add(this);
          if (!this.deps) {
            this.deps = emptySetPool.pop() || /* @__PURE__ */ new Set();
          }
          this.deps.add(dep2);
        }
        forgetDeps() {
          if (this.deps) {
            arrayFromSet(this.deps).forEach((dep2) => dep2.delete(this));
            this.deps.clear();
            emptySetPool.push(this.deps);
            this.deps = null;
          }
        }
      };
      Entry.count = 0;
    }
  });

  // node_modules/optimism/lib/dep.js
  function dep(options) {
    const depsByKey = /* @__PURE__ */ new Map();
    const subscribe = options && options.subscribe;
    function depend(key2) {
      const parent2 = parentEntrySlot.getValue();
      if (parent2) {
        let dep2 = depsByKey.get(key2);
        if (!dep2) {
          depsByKey.set(key2, dep2 = /* @__PURE__ */ new Set());
        }
        parent2.dependOn(dep2);
        if (typeof subscribe === "function") {
          maybeUnsubscribe(dep2);
          dep2.unsubscribe = subscribe(key2);
        }
      }
    }
    depend.dirty = function dirty(key2, entryMethodName) {
      const dep2 = depsByKey.get(key2);
      if (dep2) {
        const m = entryMethodName && hasOwnProperty6.call(EntryMethods, entryMethodName) ? entryMethodName : "setDirty";
        arrayFromSet(dep2).forEach((entry) => entry[m]());
        depsByKey.delete(key2);
        maybeUnsubscribe(dep2);
      }
    };
    return depend;
  }
  var EntryMethods;
  var init_dep = __esm({
    "node_modules/optimism/lib/dep.js"() {
      init_context();
      init_helpers();
      EntryMethods = {
        setDirty: true,
        dispose: true,
        forget: true
        // Fully remove parent Entry from LRU cache and computation graph
      };
    }
  });

  // node_modules/optimism/lib/index.js
  function defaultMakeCacheKey(...args) {
    const trie = defaultKeyTrie || (defaultKeyTrie = new Trie2(typeof WeakMap === "function"));
    return trie.lookupArray(args);
  }
  function wrap3(originalFunction, { max = Math.pow(2, 16), keyArgs, makeCacheKey = defaultMakeCacheKey, normalizeResult, subscribe, cache: cacheOption = StrongCache } = /* @__PURE__ */ Object.create(null)) {
    const cache2 = typeof cacheOption === "function" ? new cacheOption(max, (entry) => entry.dispose()) : cacheOption;
    const optimistic = function() {
      const key2 = makeCacheKey.apply(null, keyArgs ? keyArgs.apply(null, arguments) : arguments);
      if (key2 === void 0) {
        return originalFunction.apply(null, arguments);
      }
      let entry = cache2.get(key2);
      if (!entry) {
        cache2.set(key2, entry = new Entry(originalFunction));
        entry.normalizeResult = normalizeResult;
        entry.subscribe = subscribe;
        entry.forget = () => cache2.delete(key2);
      }
      const value2 = entry.recompute(Array.prototype.slice.call(arguments));
      cache2.set(key2, entry);
      caches.add(cache2);
      if (!parentEntrySlot.hasValue()) {
        caches.forEach((cache3) => cache3.clean());
        caches.clear();
      }
      return value2;
    };
    Object.defineProperty(optimistic, "size", {
      get: () => cache2.size,
      configurable: false,
      enumerable: false
    });
    Object.freeze(optimistic.options = {
      max,
      keyArgs,
      makeCacheKey,
      normalizeResult,
      subscribe,
      cache: cache2
    });
    function dirtyKey(key2) {
      const entry = key2 && cache2.get(key2);
      if (entry) {
        entry.setDirty();
      }
    }
    optimistic.dirtyKey = dirtyKey;
    optimistic.dirty = function dirty() {
      dirtyKey(makeCacheKey.apply(null, arguments));
    };
    function peekKey(key2) {
      const entry = key2 && cache2.get(key2);
      if (entry) {
        return entry.peek();
      }
    }
    optimistic.peekKey = peekKey;
    optimistic.peek = function peek() {
      return peekKey(makeCacheKey.apply(null, arguments));
    };
    function forgetKey(key2) {
      return key2 ? cache2.delete(key2) : false;
    }
    optimistic.forgetKey = forgetKey;
    optimistic.forget = function forget() {
      return forgetKey(makeCacheKey.apply(null, arguments));
    };
    optimistic.makeCacheKey = makeCacheKey;
    optimistic.getKey = keyArgs ? function getKey() {
      return makeCacheKey.apply(null, keyArgs.apply(null, arguments));
    } : makeCacheKey;
    return Object.freeze(optimistic);
  }
  var defaultKeyTrie, caches;
  var init_lib6 = __esm({
    "node_modules/optimism/lib/index.js"() {
      init_lib3();
      init_lib4();
      init_entry();
      init_context();
      init_context();
      init_dep();
      caches = /* @__PURE__ */ new Set();
    }
  });

  // node_modules/@apollo/client/cache/core/cache.js
  var ApolloCache;
  var init_cache = __esm({
    "node_modules/@apollo/client/cache/core/cache.js"() {
      init_tslib_es6();
      init_lib6();
      init_utilities();
      ApolloCache = /** @class */
      function() {
        function ApolloCache2() {
          this.assumeImmutableResults = false;
          this.getFragmentDoc = wrap3(getFragmentQueryDocument);
        }
        ApolloCache2.prototype.batch = function(options) {
          var _this = this;
          var optimisticId = typeof options.optimistic === "string" ? options.optimistic : options.optimistic === false ? null : void 0;
          var updateResult;
          this.performTransaction(function() {
            return updateResult = options.update(_this);
          }, optimisticId);
          return updateResult;
        };
        ApolloCache2.prototype.recordOptimisticTransaction = function(transaction, optimisticId) {
          this.performTransaction(transaction, optimisticId);
        };
        ApolloCache2.prototype.transformDocument = function(document2) {
          return document2;
        };
        ApolloCache2.prototype.transformForLink = function(document2) {
          return document2;
        };
        ApolloCache2.prototype.identify = function(object) {
          return;
        };
        ApolloCache2.prototype.gc = function() {
          return [];
        };
        ApolloCache2.prototype.modify = function(options) {
          return false;
        };
        ApolloCache2.prototype.readQuery = function(options, optimistic) {
          if (optimistic === void 0) {
            optimistic = !!options.optimistic;
          }
          return this.read(__assign(__assign({}, options), { rootId: options.id || "ROOT_QUERY", optimistic }));
        };
        ApolloCache2.prototype.readFragment = function(options, optimistic) {
          if (optimistic === void 0) {
            optimistic = !!options.optimistic;
          }
          return this.read(__assign(__assign({}, options), { query: this.getFragmentDoc(options.fragment, options.fragmentName), rootId: options.id, optimistic }));
        };
        ApolloCache2.prototype.writeQuery = function(_a2) {
          var id = _a2.id, data2 = _a2.data, options = __rest(_a2, ["id", "data"]);
          return this.write(Object.assign(options, {
            dataId: id || "ROOT_QUERY",
            result: data2
          }));
        };
        ApolloCache2.prototype.writeFragment = function(_a2) {
          var id = _a2.id, data2 = _a2.data, fragment = _a2.fragment, fragmentName = _a2.fragmentName, options = __rest(_a2, ["id", "data", "fragment", "fragmentName"]);
          return this.write(Object.assign(options, {
            query: this.getFragmentDoc(fragment, fragmentName),
            dataId: id,
            result: data2
          }));
        };
        ApolloCache2.prototype.updateQuery = function(options, update) {
          return this.batch({
            update: function(cache2) {
              var value2 = cache2.readQuery(options);
              var data2 = update(value2);
              if (data2 === void 0 || data2 === null)
                return value2;
              cache2.writeQuery(__assign(__assign({}, options), { data: data2 }));
              return data2;
            }
          });
        };
        ApolloCache2.prototype.updateFragment = function(options, update) {
          return this.batch({
            update: function(cache2) {
              var value2 = cache2.readFragment(options);
              var data2 = update(value2);
              if (data2 === void 0 || data2 === null)
                return value2;
              cache2.writeFragment(__assign(__assign({}, options), { data: data2 }));
              return data2;
            }
          });
        };
        return ApolloCache2;
      }();
    }
  });

  // node_modules/@apollo/client/cache/core/types/common.js
  var MissingFieldError;
  var init_common = __esm({
    "node_modules/@apollo/client/cache/core/types/common.js"() {
      init_tslib_es6();
      MissingFieldError = /** @class */
      function(_super) {
        __extends(MissingFieldError2, _super);
        function MissingFieldError2(message, path, query, variables) {
          var _a2;
          var _this = _super.call(this, message) || this;
          _this.message = message;
          _this.path = path;
          _this.query = query;
          _this.variables = variables;
          if (Array.isArray(_this.path)) {
            _this.missing = _this.message;
            for (var i = _this.path.length - 1; i >= 0; --i) {
              _this.missing = (_a2 = {}, _a2[_this.path[i]] = _this.missing, _a2);
            }
          } else {
            _this.missing = _this.path;
          }
          _this.__proto__ = MissingFieldError2.prototype;
          return _this;
        }
        return MissingFieldError2;
      }(Error);
    }
  });

  // node_modules/@apollo/client/cache/inmemory/helpers.js
  function isNullish(value2) {
    return value2 === null || value2 === void 0;
  }
  function defaultDataIdFromObject(_a2, context) {
    var __typename = _a2.__typename, id = _a2.id, _id = _a2._id;
    if (typeof __typename === "string") {
      if (context) {
        context.keyObject = !isNullish(id) ? { id } : !isNullish(_id) ? { _id } : void 0;
      }
      if (isNullish(id) && !isNullish(_id)) {
        id = _id;
      }
      if (!isNullish(id)) {
        return "".concat(__typename, ":").concat(typeof id === "number" || typeof id === "string" ? id : JSON.stringify(id));
      }
    }
  }
  function normalizeConfig(config) {
    return compact(defaultConfig, config);
  }
  function shouldCanonizeResults(config) {
    var value2 = config.canonizeResults;
    return value2 === void 0 ? defaultConfig.canonizeResults : value2;
  }
  function fieldNameFromStoreName(storeFieldName) {
    var match = storeFieldName.match(TypeOrFieldNameRegExp);
    return match ? match[0] : storeFieldName;
  }
  function selectionSetMatchesResult(selectionSet, result2, variables) {
    if (isNonNullObject(result2)) {
      return isArray(result2) ? result2.every(function(item) {
        return selectionSetMatchesResult(selectionSet, item, variables);
      }) : selectionSet.selections.every(function(field) {
        if (isField(field) && shouldInclude(field, variables)) {
          var key2 = resultKeyNameFromField(field);
          return hasOwn.call(result2, key2) && (!field.selectionSet || selectionSetMatchesResult(field.selectionSet, result2[key2], variables));
        }
        return true;
      });
    }
    return false;
  }
  function storeValueIsStoreObject(value2) {
    return isNonNullObject(value2) && !isReference(value2) && !isArray(value2);
  }
  function makeProcessedFieldsMerger() {
    return new DeepMerger();
  }
  function extractFragmentContext(document2, fragments) {
    var fragmentMap = createFragmentMap(getFragmentDefinitions(document2));
    return {
      fragmentMap,
      lookupFragment: function(name2) {
        var def = fragmentMap[name2];
        if (!def && fragments) {
          def = fragments.lookup(name2);
        }
        return def || null;
      }
    };
  }
  var hasOwn, defaultConfig, TypeOrFieldNameRegExp;
  var init_helpers2 = __esm({
    "node_modules/@apollo/client/cache/inmemory/helpers.js"() {
      init_utilities();
      hasOwn = Object.prototype.hasOwnProperty;
      defaultConfig = {
        dataIdFromObject: defaultDataIdFromObject,
        addTypename: true,
        resultCaching: true,
        // Thanks to the shouldCanonizeResults helper, this should be the only line
        // you have to change to reenable canonization by default in the future.
        canonizeResults: false
      };
      TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;
    }
  });

  // node_modules/@apollo/client/cache/inmemory/entityStore.js
  function makeDepKey(dataId, storeFieldName) {
    return storeFieldName + "#" + dataId;
  }
  function maybeDependOnExistenceOfEntity(store, entityId) {
    if (supportsResultCaching(store)) {
      store.group.depend(entityId, "__exists");
    }
  }
  function storeObjectReconciler(existingObject, incomingObject, property2) {
    var existingValue = existingObject[property2];
    var incomingValue = incomingObject[property2];
    return equal(existingValue, incomingValue) ? existingValue : incomingValue;
  }
  function supportsResultCaching(store) {
    return !!(store instanceof EntityStore && store.group.caching);
  }
  var DELETE, delModifier, INVALIDATE, EntityStore, CacheGroup, Layer, Stump;
  var init_entityStore = __esm({
    "node_modules/@apollo/client/cache/inmemory/entityStore.js"() {
      init_tslib_es6();
      init_globals();
      init_lib6();
      init_lib2();
      init_lib();
      init_utilities();
      init_helpers2();
      DELETE = /* @__PURE__ */ Object.create(null);
      delModifier = function() {
        return DELETE;
      };
      INVALIDATE = /* @__PURE__ */ Object.create(null);
      EntityStore = /** @class */
      function() {
        function EntityStore2(policies, group) {
          var _this = this;
          this.policies = policies;
          this.group = group;
          this.data = /* @__PURE__ */ Object.create(null);
          this.rootIds = /* @__PURE__ */ Object.create(null);
          this.refs = /* @__PURE__ */ Object.create(null);
          this.getFieldValue = function(objectOrReference, storeFieldName) {
            return maybeDeepFreeze(isReference(objectOrReference) ? _this.get(objectOrReference.__ref, storeFieldName) : objectOrReference && objectOrReference[storeFieldName]);
          };
          this.canRead = function(objOrRef) {
            return isReference(objOrRef) ? _this.has(objOrRef.__ref) : typeof objOrRef === "object";
          };
          this.toReference = function(objOrIdOrRef, mergeIntoStore) {
            if (typeof objOrIdOrRef === "string") {
              return makeReference(objOrIdOrRef);
            }
            if (isReference(objOrIdOrRef)) {
              return objOrIdOrRef;
            }
            var id = _this.policies.identify(objOrIdOrRef)[0];
            if (id) {
              var ref = makeReference(id);
              if (mergeIntoStore) {
                _this.merge(id, objOrIdOrRef);
              }
              return ref;
            }
          };
        }
        EntityStore2.prototype.toObject = function() {
          return __assign({}, this.data);
        };
        EntityStore2.prototype.has = function(dataId) {
          return this.lookup(dataId, true) !== void 0;
        };
        EntityStore2.prototype.get = function(dataId, fieldName) {
          this.group.depend(dataId, fieldName);
          if (hasOwn.call(this.data, dataId)) {
            var storeObject = this.data[dataId];
            if (storeObject && hasOwn.call(storeObject, fieldName)) {
              return storeObject[fieldName];
            }
          }
          if (fieldName === "__typename" && hasOwn.call(this.policies.rootTypenamesById, dataId)) {
            return this.policies.rootTypenamesById[dataId];
          }
          if (this instanceof Layer) {
            return this.parent.get(dataId, fieldName);
          }
        };
        EntityStore2.prototype.lookup = function(dataId, dependOnExistence) {
          if (dependOnExistence)
            this.group.depend(dataId, "__exists");
          if (hasOwn.call(this.data, dataId)) {
            return this.data[dataId];
          }
          if (this instanceof Layer) {
            return this.parent.lookup(dataId, dependOnExistence);
          }
          if (this.policies.rootTypenamesById[dataId]) {
            return /* @__PURE__ */ Object.create(null);
          }
        };
        EntityStore2.prototype.merge = function(older, newer) {
          var _this = this;
          var dataId;
          if (isReference(older))
            older = older.__ref;
          if (isReference(newer))
            newer = newer.__ref;
          var existing = typeof older === "string" ? this.lookup(dataId = older) : older;
          var incoming = typeof newer === "string" ? this.lookup(dataId = newer) : newer;
          if (!incoming)
            return;
          invariant2(typeof dataId === "string", 1);
          var merged = new DeepMerger(storeObjectReconciler).merge(existing, incoming);
          this.data[dataId] = merged;
          if (merged !== existing) {
            delete this.refs[dataId];
            if (this.group.caching) {
              var fieldsToDirty_1 = /* @__PURE__ */ Object.create(null);
              if (!existing)
                fieldsToDirty_1.__exists = 1;
              Object.keys(incoming).forEach(function(storeFieldName) {
                if (!existing || existing[storeFieldName] !== merged[storeFieldName]) {
                  fieldsToDirty_1[storeFieldName] = 1;
                  var fieldName = fieldNameFromStoreName(storeFieldName);
                  if (fieldName !== storeFieldName && !_this.policies.hasKeyArgs(merged.__typename, fieldName)) {
                    fieldsToDirty_1[fieldName] = 1;
                  }
                  if (merged[storeFieldName] === void 0 && !(_this instanceof Layer)) {
                    delete merged[storeFieldName];
                  }
                }
              });
              if (fieldsToDirty_1.__typename && !(existing && existing.__typename) && // Since we return default root __typename strings
              // automatically from store.get, we don't need to dirty the
              // ROOT_QUERY.__typename field if merged.__typename is equal
              // to the default string (usually "Query").
              this.policies.rootTypenamesById[dataId] === merged.__typename) {
                delete fieldsToDirty_1.__typename;
              }
              Object.keys(fieldsToDirty_1).forEach(function(fieldName) {
                return _this.group.dirty(dataId, fieldName);
              });
            }
          }
        };
        EntityStore2.prototype.modify = function(dataId, fields) {
          var _this = this;
          var storeObject = this.lookup(dataId);
          if (storeObject) {
            var changedFields_1 = /* @__PURE__ */ Object.create(null);
            var needToMerge_1 = false;
            var allDeleted_1 = true;
            var sharedDetails_1 = {
              DELETE,
              INVALIDATE,
              isReference,
              toReference: this.toReference,
              canRead: this.canRead,
              readField: function(fieldNameOrOptions, from) {
                return _this.policies.readField(typeof fieldNameOrOptions === "string" ? {
                  fieldName: fieldNameOrOptions,
                  from: from || makeReference(dataId)
                } : fieldNameOrOptions, { store: _this });
              }
            };
            Object.keys(storeObject).forEach(function(storeFieldName) {
              var fieldName = fieldNameFromStoreName(storeFieldName);
              var fieldValue = storeObject[storeFieldName];
              if (fieldValue === void 0)
                return;
              var modify = typeof fields === "function" ? fields : fields[storeFieldName] || fields[fieldName];
              if (modify) {
                var newValue = modify === delModifier ? DELETE : modify(maybeDeepFreeze(fieldValue), __assign(__assign({}, sharedDetails_1), { fieldName, storeFieldName, storage: _this.getStorage(dataId, storeFieldName) }));
                if (newValue === INVALIDATE) {
                  _this.group.dirty(dataId, storeFieldName);
                } else {
                  if (newValue === DELETE)
                    newValue = void 0;
                  if (newValue !== fieldValue) {
                    changedFields_1[storeFieldName] = newValue;
                    needToMerge_1 = true;
                    fieldValue = newValue;
                    if (false) {
                      var checkReference = function(ref) {
                        if (_this.lookup(ref.__ref) === void 0) {
                          return true;
                        }
                      };
                      if (isReference(newValue)) {
                        checkReference(newValue);
                      } else if (Array.isArray(newValue)) {
                        var seenReference = false;
                        var someNonReference = void 0;
                        for (var _i = 0, newValue_1 = newValue; _i < newValue_1.length; _i++) {
                          var value2 = newValue_1[_i];
                          if (isReference(value2)) {
                            seenReference = true;
                            if (checkReference(value2))
                              break;
                          } else {
                            if (typeof value2 === "object" && !!value2) {
                              var id = _this.policies.identify(value2)[0];
                              if (id) {
                                someNonReference = value2;
                              }
                            }
                          }
                          if (seenReference && someNonReference !== void 0) {
                            break;
                          }
                        }
                      }
                    }
                  }
                }
              }
              if (fieldValue !== void 0) {
                allDeleted_1 = false;
              }
            });
            if (needToMerge_1) {
              this.merge(dataId, changedFields_1);
              if (allDeleted_1) {
                if (this instanceof Layer) {
                  this.data[dataId] = void 0;
                } else {
                  delete this.data[dataId];
                }
                this.group.dirty(dataId, "__exists");
              }
              return true;
            }
          }
          return false;
        };
        EntityStore2.prototype.delete = function(dataId, fieldName, args) {
          var _a2;
          var storeObject = this.lookup(dataId);
          if (storeObject) {
            var typename = this.getFieldValue(storeObject, "__typename");
            var storeFieldName = fieldName && args ? this.policies.getStoreFieldName({ typename, fieldName, args }) : fieldName;
            return this.modify(dataId, storeFieldName ? (_a2 = {}, _a2[storeFieldName] = delModifier, _a2) : delModifier);
          }
          return false;
        };
        EntityStore2.prototype.evict = function(options, limit) {
          var evicted = false;
          if (options.id) {
            if (hasOwn.call(this.data, options.id)) {
              evicted = this.delete(options.id, options.fieldName, options.args);
            }
            if (this instanceof Layer && this !== limit) {
              evicted = this.parent.evict(options, limit) || evicted;
            }
            if (options.fieldName || evicted) {
              this.group.dirty(options.id, options.fieldName || "__exists");
            }
          }
          return evicted;
        };
        EntityStore2.prototype.clear = function() {
          this.replace(null);
        };
        EntityStore2.prototype.extract = function() {
          var _this = this;
          var obj = this.toObject();
          var extraRootIds = [];
          this.getRootIdSet().forEach(function(id) {
            if (!hasOwn.call(_this.policies.rootTypenamesById, id)) {
              extraRootIds.push(id);
            }
          });
          if (extraRootIds.length) {
            obj.__META = { extraRootIds: extraRootIds.sort() };
          }
          return obj;
        };
        EntityStore2.prototype.replace = function(newData) {
          var _this = this;
          Object.keys(this.data).forEach(function(dataId) {
            if (!(newData && hasOwn.call(newData, dataId))) {
              _this.delete(dataId);
            }
          });
          if (newData) {
            var __META = newData.__META, rest_1 = __rest(newData, ["__META"]);
            Object.keys(rest_1).forEach(function(dataId) {
              _this.merge(dataId, rest_1[dataId]);
            });
            if (__META) {
              __META.extraRootIds.forEach(this.retain, this);
            }
          }
        };
        EntityStore2.prototype.retain = function(rootId) {
          return this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1;
        };
        EntityStore2.prototype.release = function(rootId) {
          if (this.rootIds[rootId] > 0) {
            var count = --this.rootIds[rootId];
            if (!count)
              delete this.rootIds[rootId];
            return count;
          }
          return 0;
        };
        EntityStore2.prototype.getRootIdSet = function(ids) {
          if (ids === void 0) {
            ids = /* @__PURE__ */ new Set();
          }
          Object.keys(this.rootIds).forEach(ids.add, ids);
          if (this instanceof Layer) {
            this.parent.getRootIdSet(ids);
          } else {
            Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);
          }
          return ids;
        };
        EntityStore2.prototype.gc = function() {
          var _this = this;
          var ids = this.getRootIdSet();
          var snapshot = this.toObject();
          ids.forEach(function(id) {
            if (hasOwn.call(snapshot, id)) {
              Object.keys(_this.findChildRefIds(id)).forEach(ids.add, ids);
              delete snapshot[id];
            }
          });
          var idsToRemove = Object.keys(snapshot);
          if (idsToRemove.length) {
            var root_1 = this;
            while (root_1 instanceof Layer)
              root_1 = root_1.parent;
            idsToRemove.forEach(function(id) {
              return root_1.delete(id);
            });
          }
          return idsToRemove;
        };
        EntityStore2.prototype.findChildRefIds = function(dataId) {
          if (!hasOwn.call(this.refs, dataId)) {
            var found_1 = this.refs[dataId] = /* @__PURE__ */ Object.create(null);
            var root2 = this.data[dataId];
            if (!root2)
              return found_1;
            var workSet_1 = /* @__PURE__ */ new Set([root2]);
            workSet_1.forEach(function(obj) {
              if (isReference(obj)) {
                found_1[obj.__ref] = true;
              }
              if (isNonNullObject(obj)) {
                Object.keys(obj).forEach(function(key2) {
                  var child = obj[key2];
                  if (isNonNullObject(child)) {
                    workSet_1.add(child);
                  }
                });
              }
            });
          }
          return this.refs[dataId];
        };
        EntityStore2.prototype.makeCacheKey = function() {
          return this.group.keyMaker.lookupArray(arguments);
        };
        return EntityStore2;
      }();
      CacheGroup = /** @class */
      function() {
        function CacheGroup2(caching, parent2) {
          if (parent2 === void 0) {
            parent2 = null;
          }
          this.caching = caching;
          this.parent = parent2;
          this.d = null;
          this.resetCaching();
        }
        CacheGroup2.prototype.resetCaching = function() {
          this.d = this.caching ? dep() : null;
          this.keyMaker = new Trie(canUseWeakMap);
        };
        CacheGroup2.prototype.depend = function(dataId, storeFieldName) {
          if (this.d) {
            this.d(makeDepKey(dataId, storeFieldName));
            var fieldName = fieldNameFromStoreName(storeFieldName);
            if (fieldName !== storeFieldName) {
              this.d(makeDepKey(dataId, fieldName));
            }
            if (this.parent) {
              this.parent.depend(dataId, storeFieldName);
            }
          }
        };
        CacheGroup2.prototype.dirty = function(dataId, storeFieldName) {
          if (this.d) {
            this.d.dirty(
              makeDepKey(dataId, storeFieldName),
              // When storeFieldName === "__exists", that means the entity identified
              // by dataId has either disappeared from the cache or was newly added,
              // so the result caching system would do well to "forget everything it
              // knows" about that object. To achieve that kind of invalidation, we
              // not only dirty the associated result cache entry, but also remove it
              // completely from the dependency graph. For the optimism implementation
              // details, see https://github.com/benjamn/optimism/pull/195.
              storeFieldName === "__exists" ? "forget" : "setDirty"
            );
          }
        };
        return CacheGroup2;
      }();
      (function(EntityStore2) {
        var Root = (
          /** @class */
          function(_super) {
            __extends(Root2, _super);
            function Root2(_a2) {
              var policies = _a2.policies, _b = _a2.resultCaching, resultCaching = _b === void 0 ? true : _b, seed = _a2.seed;
              var _this = _super.call(this, policies, new CacheGroup(resultCaching)) || this;
              _this.stump = new Stump(_this);
              _this.storageTrie = new Trie(canUseWeakMap);
              if (seed)
                _this.replace(seed);
              return _this;
            }
            Root2.prototype.addLayer = function(layerId, replay) {
              return this.stump.addLayer(layerId, replay);
            };
            Root2.prototype.removeLayer = function() {
              return this;
            };
            Root2.prototype.getStorage = function() {
              return this.storageTrie.lookupArray(arguments);
            };
            return Root2;
          }(EntityStore2)
        );
        EntityStore2.Root = Root;
      })(EntityStore || (EntityStore = {}));
      Layer = /** @class */
      function(_super) {
        __extends(Layer2, _super);
        function Layer2(id, parent2, replay, group) {
          var _this = _super.call(this, parent2.policies, group) || this;
          _this.id = id;
          _this.parent = parent2;
          _this.replay = replay;
          _this.group = group;
          replay(_this);
          return _this;
        }
        Layer2.prototype.addLayer = function(layerId, replay) {
          return new Layer2(layerId, this, replay, this.group);
        };
        Layer2.prototype.removeLayer = function(layerId) {
          var _this = this;
          var parent2 = this.parent.removeLayer(layerId);
          if (layerId === this.id) {
            if (this.group.caching) {
              Object.keys(this.data).forEach(function(dataId) {
                var ownStoreObject = _this.data[dataId];
                var parentStoreObject = parent2["lookup"](dataId);
                if (!parentStoreObject) {
                  _this.delete(dataId);
                } else if (!ownStoreObject) {
                  _this.group.dirty(dataId, "__exists");
                  Object.keys(parentStoreObject).forEach(function(storeFieldName) {
                    _this.group.dirty(dataId, storeFieldName);
                  });
                } else if (ownStoreObject !== parentStoreObject) {
                  Object.keys(ownStoreObject).forEach(function(storeFieldName) {
                    if (!equal(ownStoreObject[storeFieldName], parentStoreObject[storeFieldName])) {
                      _this.group.dirty(dataId, storeFieldName);
                    }
                  });
                }
              });
            }
            return parent2;
          }
          if (parent2 === this.parent)
            return this;
          return parent2.addLayer(this.id, this.replay);
        };
        Layer2.prototype.toObject = function() {
          return __assign(__assign({}, this.parent.toObject()), this.data);
        };
        Layer2.prototype.findChildRefIds = function(dataId) {
          var fromParent = this.parent.findChildRefIds(dataId);
          return hasOwn.call(this.data, dataId) ? __assign(__assign({}, fromParent), _super.prototype.findChildRefIds.call(this, dataId)) : fromParent;
        };
        Layer2.prototype.getStorage = function() {
          var p = this.parent;
          while (p.parent)
            p = p.parent;
          return p.getStorage.apply(
            p,
            // @ts-expect-error
            arguments
          );
        };
        return Layer2;
      }(EntityStore);
      Stump = /** @class */
      function(_super) {
        __extends(Stump2, _super);
        function Stump2(root2) {
          return _super.call(this, "EntityStore.Stump", root2, function() {
          }, new CacheGroup(root2.group.caching, root2.group)) || this;
        }
        Stump2.prototype.removeLayer = function() {
          return this;
        };
        Stump2.prototype.merge = function(older, newer) {
          return this.parent.merge(older, newer);
        };
        return Stump2;
      }(Layer);
    }
  });

  // node_modules/@apollo/client/cache/inmemory/object-canon.js
  function shallowCopy(value2) {
    if (isNonNullObject(value2)) {
      return isArray(value2) ? value2.slice(0) : __assign({ __proto__: Object.getPrototypeOf(value2) }, value2);
    }
    return value2;
  }
  function resetCanonicalStringify() {
    stringifyCanon = new ObjectCanon();
    stringifyCache = new (canUseWeakMap ? WeakMap : Map)();
  }
  var ObjectCanon, canonicalStringify, stringifyCanon, stringifyCache;
  var init_object_canon = __esm({
    "node_modules/@apollo/client/cache/inmemory/object-canon.js"() {
      init_tslib_es6();
      init_lib();
      init_utilities();
      init_helpers2();
      ObjectCanon = /** @class */
      function() {
        function ObjectCanon2() {
          this.known = new (canUseWeakSet ? WeakSet : Set)();
          this.pool = new Trie(canUseWeakMap);
          this.passes = /* @__PURE__ */ new WeakMap();
          this.keysByJSON = /* @__PURE__ */ new Map();
          this.empty = this.admit({});
        }
        ObjectCanon2.prototype.isKnown = function(value2) {
          return isNonNullObject(value2) && this.known.has(value2);
        };
        ObjectCanon2.prototype.pass = function(value2) {
          if (isNonNullObject(value2)) {
            var copy = shallowCopy(value2);
            this.passes.set(copy, value2);
            return copy;
          }
          return value2;
        };
        ObjectCanon2.prototype.admit = function(value2) {
          var _this = this;
          if (isNonNullObject(value2)) {
            var original = this.passes.get(value2);
            if (original)
              return original;
            var proto = Object.getPrototypeOf(value2);
            switch (proto) {
              case Array.prototype: {
                if (this.known.has(value2))
                  return value2;
                var array = value2.map(this.admit, this);
                var node = this.pool.lookupArray(array);
                if (!node.array) {
                  this.known.add(node.array = array);
                  if (false) {
                    Object.freeze(array);
                  }
                }
                return node.array;
              }
              case null:
              case Object.prototype: {
                if (this.known.has(value2))
                  return value2;
                var proto_1 = Object.getPrototypeOf(value2);
                var array_1 = [proto_1];
                var keys = this.sortedKeys(value2);
                array_1.push(keys.json);
                var firstValueIndex_1 = array_1.length;
                keys.sorted.forEach(function(key2) {
                  array_1.push(_this.admit(value2[key2]));
                });
                var node = this.pool.lookupArray(array_1);
                if (!node.object) {
                  var obj_1 = node.object = Object.create(proto_1);
                  this.known.add(obj_1);
                  keys.sorted.forEach(function(key2, i) {
                    obj_1[key2] = array_1[firstValueIndex_1 + i];
                  });
                  if (false) {
                    Object.freeze(obj_1);
                  }
                }
                return node.object;
              }
            }
          }
          return value2;
        };
        ObjectCanon2.prototype.sortedKeys = function(obj) {
          var keys = Object.keys(obj);
          var node = this.pool.lookupArray(keys);
          if (!node.keys) {
            keys.sort();
            var json = JSON.stringify(keys);
            if (!(node.keys = this.keysByJSON.get(json))) {
              this.keysByJSON.set(json, node.keys = { sorted: keys, json });
            }
          }
          return node.keys;
        };
        return ObjectCanon2;
      }();
      canonicalStringify = Object.assign(function(value2) {
        if (isNonNullObject(value2)) {
          if (stringifyCanon === void 0) {
            resetCanonicalStringify();
          }
          var canonical = stringifyCanon.admit(value2);
          var json = stringifyCache.get(canonical);
          if (json === void 0) {
            stringifyCache.set(canonical, json = JSON.stringify(canonical));
          }
          return json;
        }
        return JSON.stringify(value2);
      }, {
        reset: resetCanonicalStringify
      });
    }
  });

  // node_modules/@apollo/client/cache/inmemory/readFromStore.js
  function execSelectionSetKeyArgs(options) {
    return [
      options.selectionSet,
      options.objectOrReference,
      options.context,
      // We split out this property so we can pass different values
      // independently without modifying options.context itself.
      options.context.canonizeResults
    ];
  }
  function firstMissing(tree) {
    try {
      JSON.stringify(tree, function(_, value2) {
        if (typeof value2 === "string")
          throw value2;
        return value2;
      });
    } catch (result2) {
      return result2;
    }
  }
  var StoreReader;
  var init_readFromStore = __esm({
    "node_modules/@apollo/client/cache/inmemory/readFromStore.js"() {
      init_tslib_es6();
      init_globals();
      init_graphql();
      init_lib6();
      init_utilities();
      init_entityStore();
      init_helpers2();
      init_common();
      init_object_canon();
      StoreReader = /** @class */
      function() {
        function StoreReader2(config) {
          var _this = this;
          this.knownResults = new (canUseWeakMap ? WeakMap : Map)();
          this.config = compact(config, {
            addTypename: config.addTypename !== false,
            canonizeResults: shouldCanonizeResults(config)
          });
          this.canon = config.canon || new ObjectCanon();
          this.executeSelectionSet = wrap3(function(options) {
            var _a2;
            var canonizeResults = options.context.canonizeResults;
            var peekArgs = execSelectionSetKeyArgs(options);
            peekArgs[3] = !canonizeResults;
            var other = (_a2 = _this.executeSelectionSet).peek.apply(_a2, peekArgs);
            if (other) {
              if (canonizeResults) {
                return __assign(__assign({}, other), {
                  // If we previously read this result without canonizing it, we can
                  // reuse that result simply by canonizing it now.
                  result: _this.canon.admit(other.result)
                });
              }
              return other;
            }
            maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);
            return _this.execSelectionSetImpl(options);
          }, {
            max: this.config.resultCacheMaxSize,
            keyArgs: execSelectionSetKeyArgs,
            // Note that the parameters of makeCacheKey are determined by the
            // array returned by keyArgs.
            makeCacheKey: function(selectionSet, parent2, context, canonizeResults) {
              if (supportsResultCaching(context.store)) {
                return context.store.makeCacheKey(selectionSet, isReference(parent2) ? parent2.__ref : parent2, context.varString, canonizeResults);
              }
            }
          });
          this.executeSubSelectedArray = wrap3(function(options) {
            maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);
            return _this.execSubSelectedArrayImpl(options);
          }, {
            max: this.config.resultCacheMaxSize,
            makeCacheKey: function(_a2) {
              var field = _a2.field, array = _a2.array, context = _a2.context;
              if (supportsResultCaching(context.store)) {
                return context.store.makeCacheKey(field, array, context.varString);
              }
            }
          });
        }
        StoreReader2.prototype.resetCanon = function() {
          this.canon = new ObjectCanon();
        };
        StoreReader2.prototype.diffQueryAgainstStore = function(_a2) {
          var store = _a2.store, query = _a2.query, _b = _a2.rootId, rootId = _b === void 0 ? "ROOT_QUERY" : _b, variables = _a2.variables, _c = _a2.returnPartialData, returnPartialData = _c === void 0 ? true : _c, _d = _a2.canonizeResults, canonizeResults = _d === void 0 ? this.config.canonizeResults : _d;
          var policies = this.config.cache.policies;
          variables = __assign(__assign({}, getDefaultValues(getQueryDefinition(query))), variables);
          var rootRef = makeReference(rootId);
          var execResult = this.executeSelectionSet({
            selectionSet: getMainDefinition(query).selectionSet,
            objectOrReference: rootRef,
            enclosingRef: rootRef,
            context: __assign({ store, query, policies, variables, varString: canonicalStringify(variables), canonizeResults }, extractFragmentContext(query, this.config.fragments))
          });
          var missing;
          if (execResult.missing) {
            missing = [
              new MissingFieldError(firstMissing(execResult.missing), execResult.missing, query, variables)
            ];
            if (!returnPartialData) {
              throw missing[0];
            }
          }
          return {
            result: execResult.result,
            complete: !missing,
            missing
          };
        };
        StoreReader2.prototype.isFresh = function(result2, parent2, selectionSet, context) {
          if (supportsResultCaching(context.store) && this.knownResults.get(result2) === selectionSet) {
            var latest = this.executeSelectionSet.peek(
              selectionSet,
              parent2,
              context,
              // If result is canonical, then it could only have been previously
              // cached by the canonizing version of executeSelectionSet, so we can
              // avoid checking both possibilities here.
              this.canon.isKnown(result2)
            );
            if (latest && result2 === latest.result) {
              return true;
            }
          }
          return false;
        };
        StoreReader2.prototype.execSelectionSetImpl = function(_a2) {
          var _this = this;
          var selectionSet = _a2.selectionSet, objectOrReference = _a2.objectOrReference, enclosingRef = _a2.enclosingRef, context = _a2.context;
          if (isReference(objectOrReference) && !context.policies.rootTypenamesById[objectOrReference.__ref] && !context.store.has(objectOrReference.__ref)) {
            return {
              result: this.canon.empty,
              missing: "Dangling reference to missing ".concat(objectOrReference.__ref, " object")
            };
          }
          var variables = context.variables, policies = context.policies, store = context.store;
          var typename = store.getFieldValue(objectOrReference, "__typename");
          var objectsToMerge = [];
          var missing;
          var missingMerger = new DeepMerger();
          if (this.config.addTypename && typeof typename === "string" && !policies.rootIdsByTypename[typename]) {
            objectsToMerge.push({ __typename: typename });
          }
          function handleMissing(result3, resultName) {
            var _a3;
            if (result3.missing) {
              missing = missingMerger.merge(missing, (_a3 = {}, _a3[resultName] = result3.missing, _a3));
            }
            return result3.result;
          }
          var workSet = new Set(selectionSet.selections);
          workSet.forEach(function(selection) {
            var _a3, _b;
            if (!shouldInclude(selection, variables))
              return;
            if (isField(selection)) {
              var fieldValue = policies.readField({
                fieldName: selection.name.value,
                field: selection,
                variables: context.variables,
                from: objectOrReference
              }, context);
              var resultName = resultKeyNameFromField(selection);
              if (fieldValue === void 0) {
                if (!addTypenameToDocument.added(selection)) {
                  missing = missingMerger.merge(missing, (_a3 = {}, _a3[resultName] = "Can't find field '".concat(selection.name.value, "' on ").concat(isReference(objectOrReference) ? objectOrReference.__ref + " object" : "object " + JSON.stringify(objectOrReference, null, 2)), _a3));
                }
              } else if (isArray(fieldValue)) {
                fieldValue = handleMissing(_this.executeSubSelectedArray({
                  field: selection,
                  array: fieldValue,
                  enclosingRef,
                  context
                }), resultName);
              } else if (!selection.selectionSet) {
                if (context.canonizeResults) {
                  fieldValue = _this.canon.pass(fieldValue);
                }
              } else if (fieldValue != null) {
                fieldValue = handleMissing(_this.executeSelectionSet({
                  selectionSet: selection.selectionSet,
                  objectOrReference: fieldValue,
                  enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,
                  context
                }), resultName);
              }
              if (fieldValue !== void 0) {
                objectsToMerge.push((_b = {}, _b[resultName] = fieldValue, _b));
              }
            } else {
              var fragment = getFragmentFromSelection(selection, context.lookupFragment);
              if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {
                throw newInvariantError(9, selection.name.value);
              }
              if (fragment && policies.fragmentMatches(fragment, typename)) {
                fragment.selectionSet.selections.forEach(workSet.add, workSet);
              }
            }
          });
          var result2 = mergeDeepArray(objectsToMerge);
          var finalResult = { result: result2, missing };
          var frozen = context.canonizeResults ? this.canon.admit(finalResult) : maybeDeepFreeze(finalResult);
          if (frozen.result) {
            this.knownResults.set(frozen.result, selectionSet);
          }
          return frozen;
        };
        StoreReader2.prototype.execSubSelectedArrayImpl = function(_a2) {
          var _this = this;
          var field = _a2.field, array = _a2.array, enclosingRef = _a2.enclosingRef, context = _a2.context;
          var missing;
          var missingMerger = new DeepMerger();
          function handleMissing(childResult, i) {
            var _a3;
            if (childResult.missing) {
              missing = missingMerger.merge(missing, (_a3 = {}, _a3[i] = childResult.missing, _a3));
            }
            return childResult.result;
          }
          if (field.selectionSet) {
            array = array.filter(context.store.canRead);
          }
          array = array.map(function(item, i) {
            if (item === null) {
              return null;
            }
            if (isArray(item)) {
              return handleMissing(_this.executeSubSelectedArray({
                field,
                array: item,
                enclosingRef,
                context
              }), i);
            }
            if (field.selectionSet) {
              return handleMissing(_this.executeSelectionSet({
                selectionSet: field.selectionSet,
                objectOrReference: item,
                enclosingRef: isReference(item) ? item : enclosingRef,
                context
              }), i);
            }
            if (false) {
              assertSelectionSetForIdValue(context.store, field, item);
            }
            return item;
          });
          return {
            result: context.canonizeResults ? this.canon.admit(array) : array,
            missing
          };
        };
        return StoreReader2;
      }();
    }
  });

  // node_modules/@apollo/client/cache/inmemory/reactiveVars.js
  function getCacheInfo(cache2) {
    var info = cacheInfoMap.get(cache2);
    if (!info) {
      cacheInfoMap.set(cache2, info = {
        vars: /* @__PURE__ */ new Set(),
        dep: dep()
      });
    }
    return info;
  }
  function forgetCache(cache2) {
    getCacheInfo(cache2).vars.forEach(function(rv) {
      return rv.forgetCache(cache2);
    });
  }
  function recallCache(cache2) {
    getCacheInfo(cache2).vars.forEach(function(rv) {
      return rv.attachCache(cache2);
    });
  }
  function makeVar(value2) {
    var caches2 = /* @__PURE__ */ new Set();
    var listeners = /* @__PURE__ */ new Set();
    var rv = function(newValue) {
      if (arguments.length > 0) {
        if (value2 !== newValue) {
          value2 = newValue;
          caches2.forEach(function(cache3) {
            getCacheInfo(cache3).dep.dirty(rv);
            broadcast(cache3);
          });
          var oldListeners = Array.from(listeners);
          listeners.clear();
          oldListeners.forEach(function(listener) {
            return listener(value2);
          });
        }
      } else {
        var cache2 = cacheSlot.getValue();
        if (cache2) {
          attach(cache2);
          getCacheInfo(cache2).dep(rv);
        }
      }
      return value2;
    };
    rv.onNextChange = function(listener) {
      listeners.add(listener);
      return function() {
        listeners.delete(listener);
      };
    };
    var attach = rv.attachCache = function(cache2) {
      caches2.add(cache2);
      getCacheInfo(cache2).vars.add(rv);
      return rv;
    };
    rv.forgetCache = function(cache2) {
      return caches2.delete(cache2);
    };
    return rv;
  }
  function broadcast(cache2) {
    if (cache2.broadcastWatches) {
      cache2.broadcastWatches();
    }
  }
  var cacheSlot, cacheInfoMap;
  var init_reactiveVars = __esm({
    "node_modules/@apollo/client/cache/inmemory/reactiveVars.js"() {
      init_lib6();
      cacheSlot = new Slot();
      cacheInfoMap = /* @__PURE__ */ new WeakMap();
    }
  });

  // node_modules/@apollo/client/cache/inmemory/key-extractor.js
  function lookupSpecifierInfo(spec) {
    var cacheKey = JSON.stringify(spec);
    return specifierInfoCache[cacheKey] || (specifierInfoCache[cacheKey] = /* @__PURE__ */ Object.create(null));
  }
  function keyFieldsFnFromSpecifier(specifier) {
    var info = lookupSpecifierInfo(specifier);
    return info.keyFieldsFn || (info.keyFieldsFn = function(object, context) {
      var extract = function(from, key2) {
        return context.readField(key2, from);
      };
      var keyObject = context.keyObject = collectSpecifierPaths(specifier, function(schemaKeyPath) {
        var extracted = extractKeyPath(
          context.storeObject,
          schemaKeyPath,
          // Using context.readField to extract paths from context.storeObject
          // allows the extraction to see through Reference objects and respect
          // custom read functions.
          extract
        );
        if (extracted === void 0 && object !== context.storeObject && hasOwn.call(object, schemaKeyPath[0])) {
          extracted = extractKeyPath(object, schemaKeyPath, extractKey);
        }
        invariant2(extracted !== void 0, 4, schemaKeyPath.join("."), object);
        return extracted;
      });
      return "".concat(context.typename, ":").concat(JSON.stringify(keyObject));
    });
  }
  function keyArgsFnFromSpecifier(specifier) {
    var info = lookupSpecifierInfo(specifier);
    return info.keyArgsFn || (info.keyArgsFn = function(args, _a2) {
      var field = _a2.field, variables = _a2.variables, fieldName = _a2.fieldName;
      var collected = collectSpecifierPaths(specifier, function(keyPath) {
        var firstKey = keyPath[0];
        var firstChar = firstKey.charAt(0);
        if (firstChar === "@") {
          if (field && isNonEmptyArray(field.directives)) {
            var directiveName_1 = firstKey.slice(1);
            var d = field.directives.find(function(d2) {
              return d2.name.value === directiveName_1;
            });
            var directiveArgs = d && argumentsObjectFromField(d, variables);
            return directiveArgs && extractKeyPath(
              directiveArgs,
              // If keyPath.length === 1, this code calls extractKeyPath with an
              // empty path, which works because it uses directiveArgs as the
              // extracted value.
              keyPath.slice(1)
            );
          }
          return;
        }
        if (firstChar === "$") {
          var variableName = firstKey.slice(1);
          if (variables && hasOwn.call(variables, variableName)) {
            var varKeyPath = keyPath.slice(0);
            varKeyPath[0] = variableName;
            return extractKeyPath(variables, varKeyPath);
          }
          return;
        }
        if (args) {
          return extractKeyPath(args, keyPath);
        }
      });
      var suffix = JSON.stringify(collected);
      if (args || suffix !== "{}") {
        fieldName += ":" + suffix;
      }
      return fieldName;
    });
  }
  function collectSpecifierPaths(specifier, extractor) {
    var merger = new DeepMerger();
    return getSpecifierPaths(specifier).reduce(function(collected, path) {
      var _a2;
      var toMerge = extractor(path);
      if (toMerge !== void 0) {
        for (var i = path.length - 1; i >= 0; --i) {
          toMerge = (_a2 = {}, _a2[path[i]] = toMerge, _a2);
        }
        collected = merger.merge(collected, toMerge);
      }
      return collected;
    }, /* @__PURE__ */ Object.create(null));
  }
  function getSpecifierPaths(spec) {
    var info = lookupSpecifierInfo(spec);
    if (!info.paths) {
      var paths_1 = info.paths = [];
      var currentPath_1 = [];
      spec.forEach(function(s, i) {
        if (isArray(s)) {
          getSpecifierPaths(s).forEach(function(p) {
            return paths_1.push(currentPath_1.concat(p));
          });
          currentPath_1.length = 0;
        } else {
          currentPath_1.push(s);
          if (!isArray(spec[i + 1])) {
            paths_1.push(currentPath_1.slice(0));
            currentPath_1.length = 0;
          }
        }
      });
    }
    return info.paths;
  }
  function extractKey(object, key2) {
    return object[key2];
  }
  function extractKeyPath(object, path, extract) {
    extract = extract || extractKey;
    return normalize2(path.reduce(function reducer(obj, key2) {
      return isArray(obj) ? obj.map(function(child) {
        return reducer(child, key2);
      }) : obj && extract(obj, key2);
    }, object));
  }
  function normalize2(value2) {
    if (isNonNullObject(value2)) {
      if (isArray(value2)) {
        return value2.map(normalize2);
      }
      return collectSpecifierPaths(Object.keys(value2).sort(), function(path) {
        return extractKeyPath(value2, path);
      });
    }
    return value2;
  }
  var specifierInfoCache;
  var init_key_extractor = __esm({
    "node_modules/@apollo/client/cache/inmemory/key-extractor.js"() {
      init_globals();
      init_utilities();
      init_helpers2();
      specifierInfoCache = /* @__PURE__ */ Object.create(null);
    }
  });

  // node_modules/@apollo/client/cache/inmemory/policies.js
  function argsFromFieldSpecifier(spec) {
    return spec.args !== void 0 ? spec.args : spec.field ? argumentsObjectFromField(spec.field, spec.variables) : null;
  }
  function makeFieldFunctionOptions(policies, objectOrReference, fieldSpec, context, storage) {
    var storeFieldName = policies.getStoreFieldName(fieldSpec);
    var fieldName = fieldNameFromStoreName(storeFieldName);
    var variables = fieldSpec.variables || context.variables;
    var _a2 = context.store, toReference = _a2.toReference, canRead = _a2.canRead;
    return {
      args: argsFromFieldSpecifier(fieldSpec),
      field: fieldSpec.field || null,
      fieldName,
      storeFieldName,
      variables,
      isReference,
      toReference,
      storage,
      cache: policies.cache,
      canRead,
      readField: function() {
        return policies.readField(normalizeReadFieldOptions(arguments, objectOrReference, variables), context);
      },
      mergeObjects: makeMergeObjectsFunction(context.store)
    };
  }
  function normalizeReadFieldOptions(readFieldArgs, objectOrReference, variables) {
    var fieldNameOrOptions = readFieldArgs[0], from = readFieldArgs[1], argc = readFieldArgs.length;
    var options;
    if (typeof fieldNameOrOptions === "string") {
      options = {
        fieldName: fieldNameOrOptions,
        // Default to objectOrReference only when no second argument was
        // passed for the from parameter, not when undefined is explicitly
        // passed as the second argument.
        from: argc > 1 ? from : objectOrReference
      };
    } else {
      options = __assign({}, fieldNameOrOptions);
      if (!hasOwn.call(options, "from")) {
        options.from = objectOrReference;
      }
    }
    if (false) {
    }
    if (void 0 === options.variables) {
      options.variables = variables;
    }
    return options;
  }
  function makeMergeObjectsFunction(store) {
    return function mergeObjects(existing, incoming) {
      if (isArray(existing) || isArray(incoming)) {
        throw newInvariantError(8);
      }
      if (isNonNullObject(existing) && isNonNullObject(incoming)) {
        var eType = store.getFieldValue(existing, "__typename");
        var iType = store.getFieldValue(incoming, "__typename");
        var typesDiffer = eType && iType && eType !== iType;
        if (typesDiffer) {
          return incoming;
        }
        if (isReference(existing) && storeValueIsStoreObject(incoming)) {
          store.merge(existing.__ref, incoming);
          return existing;
        }
        if (storeValueIsStoreObject(existing) && isReference(incoming)) {
          store.merge(existing, incoming.__ref);
          return incoming;
        }
        if (storeValueIsStoreObject(existing) && storeValueIsStoreObject(incoming)) {
          return __assign(__assign({}, existing), incoming);
        }
      }
      return incoming;
    };
  }
  var nullKeyFieldsFn, simpleKeyArgsFn, mergeTrueFn, mergeFalseFn, Policies;
  var init_policies = __esm({
    "node_modules/@apollo/client/cache/inmemory/policies.js"() {
      init_tslib_es6();
      init_globals();
      init_utilities();
      init_helpers2();
      init_reactiveVars();
      init_object_canon();
      init_key_extractor();
      getStoreKeyName.setStringify(canonicalStringify);
      nullKeyFieldsFn = function() {
        return void 0;
      };
      simpleKeyArgsFn = function(_args, context) {
        return context.fieldName;
      };
      mergeTrueFn = function(existing, incoming, _a2) {
        var mergeObjects = _a2.mergeObjects;
        return mergeObjects(existing, incoming);
      };
      mergeFalseFn = function(_, incoming) {
        return incoming;
      };
      Policies = /** @class */
      function() {
        function Policies2(config) {
          this.config = config;
          this.typePolicies = /* @__PURE__ */ Object.create(null);
          this.toBeAdded = /* @__PURE__ */ Object.create(null);
          this.supertypeMap = /* @__PURE__ */ new Map();
          this.fuzzySubtypes = /* @__PURE__ */ new Map();
          this.rootIdsByTypename = /* @__PURE__ */ Object.create(null);
          this.rootTypenamesById = /* @__PURE__ */ Object.create(null);
          this.usingPossibleTypes = false;
          this.config = __assign({ dataIdFromObject: defaultDataIdFromObject }, config);
          this.cache = this.config.cache;
          this.setRootTypename("Query");
          this.setRootTypename("Mutation");
          this.setRootTypename("Subscription");
          if (config.possibleTypes) {
            this.addPossibleTypes(config.possibleTypes);
          }
          if (config.typePolicies) {
            this.addTypePolicies(config.typePolicies);
          }
        }
        Policies2.prototype.identify = function(object, partialContext) {
          var _a2;
          var policies = this;
          var typename = partialContext && (partialContext.typename || ((_a2 = partialContext.storeObject) === null || _a2 === void 0 ? void 0 : _a2.__typename)) || object.__typename;
          if (typename === this.rootTypenamesById.ROOT_QUERY) {
            return ["ROOT_QUERY"];
          }
          var storeObject = partialContext && partialContext.storeObject || object;
          var context = __assign(__assign({}, partialContext), { typename, storeObject, readField: partialContext && partialContext.readField || function() {
            var options = normalizeReadFieldOptions(arguments, storeObject);
            return policies.readField(options, {
              store: policies.cache["data"],
              variables: options.variables
            });
          } });
          var id;
          var policy = typename && this.getTypePolicy(typename);
          var keyFn = policy && policy.keyFn || this.config.dataIdFromObject;
          while (keyFn) {
            var specifierOrId = keyFn(__assign(__assign({}, object), storeObject), context);
            if (isArray(specifierOrId)) {
              keyFn = keyFieldsFnFromSpecifier(specifierOrId);
            } else {
              id = specifierOrId;
              break;
            }
          }
          id = id ? String(id) : void 0;
          return context.keyObject ? [id, context.keyObject] : [id];
        };
        Policies2.prototype.addTypePolicies = function(typePolicies) {
          var _this = this;
          Object.keys(typePolicies).forEach(function(typename) {
            var _a2 = typePolicies[typename], queryType = _a2.queryType, mutationType = _a2.mutationType, subscriptionType = _a2.subscriptionType, incoming = __rest(_a2, ["queryType", "mutationType", "subscriptionType"]);
            if (queryType)
              _this.setRootTypename("Query", typename);
            if (mutationType)
              _this.setRootTypename("Mutation", typename);
            if (subscriptionType)
              _this.setRootTypename("Subscription", typename);
            if (hasOwn.call(_this.toBeAdded, typename)) {
              _this.toBeAdded[typename].push(incoming);
            } else {
              _this.toBeAdded[typename] = [incoming];
            }
          });
        };
        Policies2.prototype.updateTypePolicy = function(typename, incoming) {
          var _this = this;
          var existing = this.getTypePolicy(typename);
          var keyFields = incoming.keyFields, fields = incoming.fields;
          function setMerge(existing2, merge4) {
            existing2.merge = typeof merge4 === "function" ? merge4 : merge4 === true ? mergeTrueFn : merge4 === false ? mergeFalseFn : existing2.merge;
          }
          setMerge(existing, incoming.merge);
          existing.keyFn = // Pass false to disable normalization for this typename.
          keyFields === false ? nullKeyFieldsFn : isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields) : typeof keyFields === "function" ? keyFields : existing.keyFn;
          if (fields) {
            Object.keys(fields).forEach(function(fieldName) {
              var existing2 = _this.getFieldPolicy(typename, fieldName, true);
              var incoming2 = fields[fieldName];
              if (typeof incoming2 === "function") {
                existing2.read = incoming2;
              } else {
                var keyArgs = incoming2.keyArgs, read = incoming2.read, merge4 = incoming2.merge;
                existing2.keyFn = // Pass false to disable argument-based differentiation of
                // field identities.
                keyArgs === false ? simpleKeyArgsFn : isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs) : typeof keyArgs === "function" ? keyArgs : existing2.keyFn;
                if (typeof read === "function") {
                  existing2.read = read;
                }
                setMerge(existing2, merge4);
              }
              if (existing2.read && existing2.merge) {
                existing2.keyFn = existing2.keyFn || simpleKeyArgsFn;
              }
            });
          }
        };
        Policies2.prototype.setRootTypename = function(which, typename) {
          if (typename === void 0) {
            typename = which;
          }
          var rootId = "ROOT_" + which.toUpperCase();
          var old = this.rootTypenamesById[rootId];
          if (typename !== old) {
            invariant2(!old || old === which, 5, which);
            if (old)
              delete this.rootIdsByTypename[old];
            this.rootIdsByTypename[typename] = rootId;
            this.rootTypenamesById[rootId] = typename;
          }
        };
        Policies2.prototype.addPossibleTypes = function(possibleTypes) {
          var _this = this;
          this.usingPossibleTypes = true;
          Object.keys(possibleTypes).forEach(function(supertype) {
            _this.getSupertypeSet(supertype, true);
            possibleTypes[supertype].forEach(function(subtype) {
              _this.getSupertypeSet(subtype, true).add(supertype);
              var match = subtype.match(TypeOrFieldNameRegExp);
              if (!match || match[0] !== subtype) {
                _this.fuzzySubtypes.set(subtype, new RegExp(subtype));
              }
            });
          });
        };
        Policies2.prototype.getTypePolicy = function(typename) {
          var _this = this;
          if (!hasOwn.call(this.typePolicies, typename)) {
            var policy_1 = this.typePolicies[typename] = /* @__PURE__ */ Object.create(null);
            policy_1.fields = /* @__PURE__ */ Object.create(null);
            var supertypes_1 = this.supertypeMap.get(typename);
            if (!supertypes_1 && this.fuzzySubtypes.size) {
              supertypes_1 = this.getSupertypeSet(typename, true);
              this.fuzzySubtypes.forEach(function(regExp, fuzzy) {
                if (regExp.test(typename)) {
                  var fuzzySupertypes = _this.supertypeMap.get(fuzzy);
                  if (fuzzySupertypes) {
                    fuzzySupertypes.forEach(function(supertype) {
                      return supertypes_1.add(supertype);
                    });
                  }
                }
              });
            }
            if (supertypes_1 && supertypes_1.size) {
              supertypes_1.forEach(function(supertype) {
                var _a2 = _this.getTypePolicy(supertype), fields = _a2.fields, rest = __rest(_a2, ["fields"]);
                Object.assign(policy_1, rest);
                Object.assign(policy_1.fields, fields);
              });
            }
          }
          var inbox = this.toBeAdded[typename];
          if (inbox && inbox.length) {
            inbox.splice(0).forEach(function(policy) {
              _this.updateTypePolicy(typename, policy);
            });
          }
          return this.typePolicies[typename];
        };
        Policies2.prototype.getFieldPolicy = function(typename, fieldName, createIfMissing) {
          if (typename) {
            var fieldPolicies = this.getTypePolicy(typename).fields;
            return fieldPolicies[fieldName] || createIfMissing && (fieldPolicies[fieldName] = /* @__PURE__ */ Object.create(null));
          }
        };
        Policies2.prototype.getSupertypeSet = function(subtype, createIfMissing) {
          var supertypeSet = this.supertypeMap.get(subtype);
          if (!supertypeSet && createIfMissing) {
            this.supertypeMap.set(subtype, supertypeSet = /* @__PURE__ */ new Set());
          }
          return supertypeSet;
        };
        Policies2.prototype.fragmentMatches = function(fragment, typename, result2, variables) {
          var _this = this;
          if (!fragment.typeCondition)
            return true;
          if (!typename)
            return false;
          var supertype = fragment.typeCondition.name.value;
          if (typename === supertype)
            return true;
          if (this.usingPossibleTypes && this.supertypeMap.has(supertype)) {
            var typenameSupertypeSet = this.getSupertypeSet(typename, true);
            var workQueue_1 = [typenameSupertypeSet];
            var maybeEnqueue_1 = function(subtype) {
              var supertypeSet2 = _this.getSupertypeSet(subtype, false);
              if (supertypeSet2 && supertypeSet2.size && workQueue_1.indexOf(supertypeSet2) < 0) {
                workQueue_1.push(supertypeSet2);
              }
            };
            var needToCheckFuzzySubtypes = !!(result2 && this.fuzzySubtypes.size);
            var checkingFuzzySubtypes = false;
            for (var i = 0; i < workQueue_1.length; ++i) {
              var supertypeSet = workQueue_1[i];
              if (supertypeSet.has(supertype)) {
                if (!typenameSupertypeSet.has(supertype)) {
                  if (checkingFuzzySubtypes) {
                  }
                  typenameSupertypeSet.add(supertype);
                }
                return true;
              }
              supertypeSet.forEach(maybeEnqueue_1);
              if (needToCheckFuzzySubtypes && // Start checking fuzzy subtypes only after exhausting all
              // non-fuzzy subtypes (after the final iteration of the loop).
              i === workQueue_1.length - 1 && // We could wait to compare fragment.selectionSet to result
              // after we verify the supertype, but this check is often less
              // expensive than that search, and we will have to do the
              // comparison anyway whenever we find a potential match.
              selectionSetMatchesResult(fragment.selectionSet, result2, variables)) {
                needToCheckFuzzySubtypes = false;
                checkingFuzzySubtypes = true;
                this.fuzzySubtypes.forEach(function(regExp, fuzzyString) {
                  var match = typename.match(regExp);
                  if (match && match[0] === typename) {
                    maybeEnqueue_1(fuzzyString);
                  }
                });
              }
            }
          }
          return false;
        };
        Policies2.prototype.hasKeyArgs = function(typename, fieldName) {
          var policy = this.getFieldPolicy(typename, fieldName, false);
          return !!(policy && policy.keyFn);
        };
        Policies2.prototype.getStoreFieldName = function(fieldSpec) {
          var typename = fieldSpec.typename, fieldName = fieldSpec.fieldName;
          var policy = this.getFieldPolicy(typename, fieldName, false);
          var storeFieldName;
          var keyFn = policy && policy.keyFn;
          if (keyFn && typename) {
            var context = {
              typename,
              fieldName,
              field: fieldSpec.field || null,
              variables: fieldSpec.variables
            };
            var args = argsFromFieldSpecifier(fieldSpec);
            while (keyFn) {
              var specifierOrString = keyFn(args, context);
              if (isArray(specifierOrString)) {
                keyFn = keyArgsFnFromSpecifier(specifierOrString);
              } else {
                storeFieldName = specifierOrString || fieldName;
                break;
              }
            }
          }
          if (storeFieldName === void 0) {
            storeFieldName = fieldSpec.field ? storeKeyNameFromField(fieldSpec.field, fieldSpec.variables) : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));
          }
          if (storeFieldName === false) {
            return fieldName;
          }
          return fieldName === fieldNameFromStoreName(storeFieldName) ? storeFieldName : fieldName + ":" + storeFieldName;
        };
        Policies2.prototype.readField = function(options, context) {
          var objectOrReference = options.from;
          if (!objectOrReference)
            return;
          var nameOrField = options.field || options.fieldName;
          if (!nameOrField)
            return;
          if (options.typename === void 0) {
            var typename = context.store.getFieldValue(objectOrReference, "__typename");
            if (typename)
              options.typename = typename;
          }
          var storeFieldName = this.getStoreFieldName(options);
          var fieldName = fieldNameFromStoreName(storeFieldName);
          var existing = context.store.getFieldValue(objectOrReference, storeFieldName);
          var policy = this.getFieldPolicy(options.typename, fieldName, false);
          var read = policy && policy.read;
          if (read) {
            var readOptions = makeFieldFunctionOptions(this, objectOrReference, options, context, context.store.getStorage(isReference(objectOrReference) ? objectOrReference.__ref : objectOrReference, storeFieldName));
            return cacheSlot.withValue(this.cache, read, [
              existing,
              readOptions
            ]);
          }
          return existing;
        };
        Policies2.prototype.getReadFunction = function(typename, fieldName) {
          var policy = this.getFieldPolicy(typename, fieldName, false);
          return policy && policy.read;
        };
        Policies2.prototype.getMergeFunction = function(parentTypename, fieldName, childTypename) {
          var policy = this.getFieldPolicy(parentTypename, fieldName, false);
          var merge4 = policy && policy.merge;
          if (!merge4 && childTypename) {
            policy = this.getTypePolicy(childTypename);
            merge4 = policy && policy.merge;
          }
          return merge4;
        };
        Policies2.prototype.runMergeFunction = function(existing, incoming, _a2, context, storage) {
          var field = _a2.field, typename = _a2.typename, merge4 = _a2.merge;
          if (merge4 === mergeTrueFn) {
            return makeMergeObjectsFunction(context.store)(existing, incoming);
          }
          if (merge4 === mergeFalseFn) {
            return incoming;
          }
          if (context.overwrite) {
            existing = void 0;
          }
          return merge4(existing, incoming, makeFieldFunctionOptions(
            this,
            // Unlike options.readField for read functions, we do not fall
            // back to the current object if no foreignObjOrRef is provided,
            // because it's not clear what the current object should be for
            // merge functions: the (possibly undefined) existing object, or
            // the incoming object? If you think your merge function needs
            // to read sibling fields in order to produce a new value for
            // the current field, you might want to rethink your strategy,
            // because that's a recipe for making merge behavior sensitive
            // to the order in which fields are written into the cache.
            // However, readField(name, ref) is useful for merge functions
            // that need to deduplicate child objects and references.
            void 0,
            {
              typename,
              fieldName: field.name.value,
              field,
              variables: context.variables
            },
            context,
            storage || /* @__PURE__ */ Object.create(null)
          ));
        };
        return Policies2;
      }();
    }
  });

  // node_modules/@apollo/client/cache/inmemory/writeToStore.js
  function getContextFlavor(context, clientOnly, deferred) {
    var key2 = "".concat(clientOnly).concat(deferred);
    var flavored = context.flavors.get(key2);
    if (!flavored) {
      context.flavors.set(key2, flavored = context.clientOnly === clientOnly && context.deferred === deferred ? context : __assign(__assign({}, context), { clientOnly, deferred }));
    }
    return flavored;
  }
  function getChildMergeTree(_a2, name2) {
    var map = _a2.map;
    if (!map.has(name2)) {
      map.set(name2, emptyMergeTreePool.pop() || { map: /* @__PURE__ */ new Map() });
    }
    return map.get(name2);
  }
  function mergeMergeTrees(left, right) {
    if (left === right || !right || mergeTreeIsEmpty(right))
      return left;
    if (!left || mergeTreeIsEmpty(left))
      return right;
    var info = left.info && right.info ? __assign(__assign({}, left.info), right.info) : left.info || right.info;
    var needToMergeMaps = left.map.size && right.map.size;
    var map = needToMergeMaps ? /* @__PURE__ */ new Map() : left.map.size ? left.map : right.map;
    var merged = { info, map };
    if (needToMergeMaps) {
      var remainingRightKeys_1 = new Set(right.map.keys());
      left.map.forEach(function(leftTree, key2) {
        merged.map.set(key2, mergeMergeTrees(leftTree, right.map.get(key2)));
        remainingRightKeys_1.delete(key2);
      });
      remainingRightKeys_1.forEach(function(key2) {
        merged.map.set(key2, mergeMergeTrees(right.map.get(key2), left.map.get(key2)));
      });
    }
    return merged;
  }
  function mergeTreeIsEmpty(tree) {
    return !tree || !(tree.info || tree.map.size);
  }
  function maybeRecycleChildMergeTree(_a2, name2) {
    var map = _a2.map;
    var childTree = map.get(name2);
    if (childTree && mergeTreeIsEmpty(childTree)) {
      emptyMergeTreePool.push(childTree);
      map.delete(name2);
    }
  }
  var StoreWriter, emptyMergeTreePool;
  var init_writeToStore = __esm({
    "node_modules/@apollo/client/cache/inmemory/writeToStore.js"() {
      init_tslib_es6();
      init_globals();
      init_lib2();
      init_lib();
      init_graphql();
      init_utilities();
      init_helpers2();
      init_object_canon();
      init_policies();
      StoreWriter = /** @class */
      function() {
        function StoreWriter2(cache2, reader, fragments) {
          this.cache = cache2;
          this.reader = reader;
          this.fragments = fragments;
        }
        StoreWriter2.prototype.writeToStore = function(store, _a2) {
          var _this = this;
          var query = _a2.query, result2 = _a2.result, dataId = _a2.dataId, variables = _a2.variables, overwrite = _a2.overwrite;
          var operationDefinition = getOperationDefinition(query);
          var merger = makeProcessedFieldsMerger();
          variables = __assign(__assign({}, getDefaultValues(operationDefinition)), variables);
          var context = __assign(__assign({ store, written: /* @__PURE__ */ Object.create(null), merge: function(existing, incoming) {
            return merger.merge(existing, incoming);
          }, variables, varString: canonicalStringify(variables) }, extractFragmentContext(query, this.fragments)), { overwrite: !!overwrite, incomingById: /* @__PURE__ */ new Map(), clientOnly: false, deferred: false, flavors: /* @__PURE__ */ new Map() });
          var ref = this.processSelectionSet({
            result: result2 || /* @__PURE__ */ Object.create(null),
            dataId,
            selectionSet: operationDefinition.selectionSet,
            mergeTree: { map: /* @__PURE__ */ new Map() },
            context
          });
          if (!isReference(ref)) {
            throw newInvariantError(11, result2);
          }
          context.incomingById.forEach(function(_a3, dataId2) {
            var storeObject = _a3.storeObject, mergeTree = _a3.mergeTree, fieldNodeSet = _a3.fieldNodeSet;
            var entityRef = makeReference(dataId2);
            if (mergeTree && mergeTree.map.size) {
              var applied = _this.applyMerges(mergeTree, entityRef, storeObject, context);
              if (isReference(applied)) {
                return;
              }
              storeObject = applied;
            }
            if (false) {
              var fieldsWithSelectionSets_1 = /* @__PURE__ */ Object.create(null);
              fieldNodeSet.forEach(function(field) {
                if (field.selectionSet) {
                  fieldsWithSelectionSets_1[field.name.value] = true;
                }
              });
              var hasSelectionSet_1 = function(storeFieldName) {
                return fieldsWithSelectionSets_1[fieldNameFromStoreName(storeFieldName)] === true;
              };
              var hasMergeFunction_1 = function(storeFieldName) {
                var childTree = mergeTree && mergeTree.map.get(storeFieldName);
                return Boolean(childTree && childTree.info && childTree.info.merge);
              };
              Object.keys(storeObject).forEach(function(storeFieldName) {
                if (hasSelectionSet_1(storeFieldName) && !hasMergeFunction_1(storeFieldName)) {
                  warnAboutDataLoss(entityRef, storeObject, storeFieldName, context.store);
                }
              });
            }
            store.merge(dataId2, storeObject);
          });
          store.retain(ref.__ref);
          return ref;
        };
        StoreWriter2.prototype.processSelectionSet = function(_a2) {
          var _this = this;
          var dataId = _a2.dataId, result2 = _a2.result, selectionSet = _a2.selectionSet, context = _a2.context, mergeTree = _a2.mergeTree;
          var policies = this.cache.policies;
          var incoming = /* @__PURE__ */ Object.create(null);
          var typename = dataId && policies.rootTypenamesById[dataId] || getTypenameFromResult(result2, selectionSet, context.fragmentMap) || dataId && context.store.get(dataId, "__typename");
          if ("string" === typeof typename) {
            incoming.__typename = typename;
          }
          var readField = function() {
            var options = normalizeReadFieldOptions(arguments, incoming, context.variables);
            if (isReference(options.from)) {
              var info = context.incomingById.get(options.from.__ref);
              if (info) {
                var result_1 = policies.readField(__assign(__assign({}, options), { from: info.storeObject }), context);
                if (result_1 !== void 0) {
                  return result_1;
                }
              }
            }
            return policies.readField(options, context);
          };
          var fieldNodeSet = /* @__PURE__ */ new Set();
          this.flattenFields(
            selectionSet,
            result2,
            // This WriteContext will be the default context value for fields returned
            // by the flattenFields method, but some fields may be assigned a modified
            // context, depending on the presence of @client and other directives.
            context,
            typename
          ).forEach(function(context2, field) {
            var _a3;
            var resultFieldKey = resultKeyNameFromField(field);
            var value2 = result2[resultFieldKey];
            fieldNodeSet.add(field);
            if (value2 !== void 0) {
              var storeFieldName = policies.getStoreFieldName({
                typename,
                fieldName: field.name.value,
                field,
                variables: context2.variables
              });
              var childTree = getChildMergeTree(mergeTree, storeFieldName);
              var incomingValue = _this.processFieldValue(
                value2,
                field,
                // Reset context.clientOnly and context.deferred to their default
                // values before processing nested selection sets.
                field.selectionSet ? getContextFlavor(context2, false, false) : context2,
                childTree
              );
              var childTypename = void 0;
              if (field.selectionSet && (isReference(incomingValue) || storeValueIsStoreObject(incomingValue))) {
                childTypename = readField("__typename", incomingValue);
              }
              var merge4 = policies.getMergeFunction(typename, field.name.value, childTypename);
              if (merge4) {
                childTree.info = {
                  // TODO Check compatibility against any existing childTree.field?
                  field,
                  typename,
                  merge: merge4
                };
              } else {
                maybeRecycleChildMergeTree(mergeTree, storeFieldName);
              }
              incoming = context2.merge(incoming, (_a3 = {}, _a3[storeFieldName] = incomingValue, _a3));
            } else if (false) {
            }
          });
          try {
            var _b = policies.identify(result2, {
              typename,
              selectionSet,
              fragmentMap: context.fragmentMap,
              storeObject: incoming,
              readField
            }), id = _b[0], keyObject = _b[1];
            dataId = dataId || id;
            if (keyObject) {
              incoming = context.merge(incoming, keyObject);
            }
          } catch (e) {
            if (!dataId)
              throw e;
          }
          if ("string" === typeof dataId) {
            var dataRef = makeReference(dataId);
            var sets = context.written[dataId] || (context.written[dataId] = []);
            if (sets.indexOf(selectionSet) >= 0)
              return dataRef;
            sets.push(selectionSet);
            if (this.reader && this.reader.isFresh(result2, dataRef, selectionSet, context)) {
              return dataRef;
            }
            var previous_1 = context.incomingById.get(dataId);
            if (previous_1) {
              previous_1.storeObject = context.merge(previous_1.storeObject, incoming);
              previous_1.mergeTree = mergeMergeTrees(previous_1.mergeTree, mergeTree);
              fieldNodeSet.forEach(function(field) {
                return previous_1.fieldNodeSet.add(field);
              });
            } else {
              context.incomingById.set(dataId, {
                storeObject: incoming,
                // Save a reference to mergeTree only if it is not empty, because
                // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and
                // reused for entirely different parts of the result tree.
                mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,
                fieldNodeSet
              });
            }
            return dataRef;
          }
          return incoming;
        };
        StoreWriter2.prototype.processFieldValue = function(value2, field, context, mergeTree) {
          var _this = this;
          if (!field.selectionSet || value2 === null) {
            return false ? cloneDeep(value2) : value2;
          }
          if (isArray(value2)) {
            return value2.map(function(item, i) {
              var value3 = _this.processFieldValue(item, field, context, getChildMergeTree(mergeTree, i));
              maybeRecycleChildMergeTree(mergeTree, i);
              return value3;
            });
          }
          return this.processSelectionSet({
            result: value2,
            selectionSet: field.selectionSet,
            context,
            mergeTree
          });
        };
        StoreWriter2.prototype.flattenFields = function(selectionSet, result2, context, typename) {
          if (typename === void 0) {
            typename = getTypenameFromResult(result2, selectionSet, context.fragmentMap);
          }
          var fieldMap = /* @__PURE__ */ new Map();
          var policies = this.cache.policies;
          var limitingTrie = new Trie(false);
          (function flatten(selectionSet2, inheritedContext) {
            var visitedNode = limitingTrie.lookup(
              selectionSet2,
              // Because we take inheritedClientOnly and inheritedDeferred into
              // consideration here (in addition to selectionSet), it's possible for
              // the same selection set to be flattened more than once, if it appears
              // in the query with different @client and/or @directive configurations.
              inheritedContext.clientOnly,
              inheritedContext.deferred
            );
            if (visitedNode.visited)
              return;
            visitedNode.visited = true;
            selectionSet2.selections.forEach(function(selection) {
              if (!shouldInclude(selection, context.variables))
                return;
              var clientOnly = inheritedContext.clientOnly, deferred = inheritedContext.deferred;
              if (
                // Since the presence of @client or @defer on this field can only
                // cause clientOnly or deferred to become true, we can skip the
                // forEach loop if both clientOnly and deferred are already true.
                !(clientOnly && deferred) && isNonEmptyArray(selection.directives)
              ) {
                selection.directives.forEach(function(dir) {
                  var name2 = dir.name.value;
                  if (name2 === "client")
                    clientOnly = true;
                  if (name2 === "defer") {
                    var args = argumentsObjectFromField(dir, context.variables);
                    if (!args || args.if !== false) {
                      deferred = true;
                    }
                  }
                });
              }
              if (isField(selection)) {
                var existing = fieldMap.get(selection);
                if (existing) {
                  clientOnly = clientOnly && existing.clientOnly;
                  deferred = deferred && existing.deferred;
                }
                fieldMap.set(selection, getContextFlavor(context, clientOnly, deferred));
              } else {
                var fragment = getFragmentFromSelection(selection, context.lookupFragment);
                if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {
                  throw newInvariantError(13, selection.name.value);
                }
                if (fragment && policies.fragmentMatches(fragment, typename, result2, context.variables)) {
                  flatten(fragment.selectionSet, getContextFlavor(context, clientOnly, deferred));
                }
              }
            });
          })(selectionSet, context);
          return fieldMap;
        };
        StoreWriter2.prototype.applyMerges = function(mergeTree, existing, incoming, context, getStorageArgs) {
          var _a2;
          var _this = this;
          if (mergeTree.map.size && !isReference(incoming)) {
            var e_1 = (
              // Items in the same position in different arrays are not
              // necessarily related to each other, so when incoming is an array
              // we process its elements as if there was no existing data.
              !isArray(incoming) && // Likewise, existing must be either a Reference or a StoreObject
              // in order for its fields to be safe to merge with the fields of
              // the incoming object.
              (isReference(existing) || storeValueIsStoreObject(existing)) ? existing : void 0
            );
            var i_1 = incoming;
            if (e_1 && !getStorageArgs) {
              getStorageArgs = [isReference(e_1) ? e_1.__ref : e_1];
            }
            var changedFields_1;
            var getValue_1 = function(from, name2) {
              return isArray(from) ? typeof name2 === "number" ? from[name2] : void 0 : context.store.getFieldValue(from, String(name2));
            };
            mergeTree.map.forEach(function(childTree, storeFieldName) {
              var eVal = getValue_1(e_1, storeFieldName);
              var iVal = getValue_1(i_1, storeFieldName);
              if (void 0 === iVal)
                return;
              if (getStorageArgs) {
                getStorageArgs.push(storeFieldName);
              }
              var aVal = _this.applyMerges(childTree, eVal, iVal, context, getStorageArgs);
              if (aVal !== iVal) {
                changedFields_1 = changedFields_1 || /* @__PURE__ */ new Map();
                changedFields_1.set(storeFieldName, aVal);
              }
              if (getStorageArgs) {
                invariant2(getStorageArgs.pop() === storeFieldName);
              }
            });
            if (changedFields_1) {
              incoming = isArray(i_1) ? i_1.slice(0) : __assign({}, i_1);
              changedFields_1.forEach(function(value2, name2) {
                incoming[name2] = value2;
              });
            }
          }
          if (mergeTree.info) {
            return this.cache.policies.runMergeFunction(existing, incoming, mergeTree.info, context, getStorageArgs && (_a2 = context.store).getStorage.apply(_a2, getStorageArgs));
          }
          return incoming;
        };
        return StoreWriter2;
      }();
      emptyMergeTreePool = [];
    }
  });

  // node_modules/@apollo/client/cache/inmemory/inMemoryCache.js
  var InMemoryCache;
  var init_inMemoryCache = __esm({
    "node_modules/@apollo/client/cache/inmemory/inMemoryCache.js"() {
      init_tslib_es6();
      init_globals();
      init_lib6();
      init_lib2();
      init_cache();
      init_common();
      init_utilities();
      init_readFromStore();
      init_writeToStore();
      init_entityStore();
      init_reactiveVars();
      init_policies();
      init_helpers2();
      init_object_canon();
      InMemoryCache = /** @class */
      function(_super) {
        __extends(InMemoryCache2, _super);
        function InMemoryCache2(config) {
          if (config === void 0) {
            config = {};
          }
          var _this = _super.call(this) || this;
          _this.watches = /* @__PURE__ */ new Set();
          _this.addTypenameTransform = new DocumentTransform(addTypenameToDocument);
          _this.assumeImmutableResults = true;
          _this.makeVar = makeVar;
          _this.txCount = 0;
          _this.config = normalizeConfig(config);
          _this.addTypename = !!_this.config.addTypename;
          _this.policies = new Policies({
            cache: _this,
            dataIdFromObject: _this.config.dataIdFromObject,
            possibleTypes: _this.config.possibleTypes,
            typePolicies: _this.config.typePolicies
          });
          _this.init();
          return _this;
        }
        InMemoryCache2.prototype.init = function() {
          var rootStore = this.data = new EntityStore.Root({
            policies: this.policies,
            resultCaching: this.config.resultCaching
          });
          this.optimisticData = rootStore.stump;
          this.resetResultCache();
        };
        InMemoryCache2.prototype.resetResultCache = function(resetResultIdentities) {
          var _this = this;
          var previousReader = this.storeReader;
          var fragments = this.config.fragments;
          this.storeWriter = new StoreWriter(this, this.storeReader = new StoreReader({
            cache: this,
            addTypename: this.addTypename,
            resultCacheMaxSize: this.config.resultCacheMaxSize,
            canonizeResults: shouldCanonizeResults(this.config),
            canon: resetResultIdentities ? void 0 : previousReader && previousReader.canon,
            fragments
          }), fragments);
          this.maybeBroadcastWatch = wrap3(function(c, options) {
            return _this.broadcastWatch(c, options);
          }, {
            max: this.config.resultCacheMaxSize,
            makeCacheKey: function(c) {
              var store = c.optimistic ? _this.optimisticData : _this.data;
              if (supportsResultCaching(store)) {
                var optimistic = c.optimistic, id = c.id, variables = c.variables;
                return store.makeCacheKey(
                  c.query,
                  // Different watches can have the same query, optimistic
                  // status, rootId, and variables, but if their callbacks are
                  // different, the (identical) result needs to be delivered to
                  // each distinct callback. The easiest way to achieve that
                  // separation is to include c.callback in the cache key for
                  // maybeBroadcastWatch calls. See issue #5733.
                  c.callback,
                  canonicalStringify({ optimistic, id, variables })
                );
              }
            }
          });
          (/* @__PURE__ */ new Set([this.data.group, this.optimisticData.group])).forEach(function(group) {
            return group.resetCaching();
          });
        };
        InMemoryCache2.prototype.restore = function(data2) {
          this.init();
          if (data2)
            this.data.replace(data2);
          return this;
        };
        InMemoryCache2.prototype.extract = function(optimistic) {
          if (optimistic === void 0) {
            optimistic = false;
          }
          return (optimistic ? this.optimisticData : this.data).extract();
        };
        InMemoryCache2.prototype.read = function(options) {
          var _a2 = options.returnPartialData, returnPartialData = _a2 === void 0 ? false : _a2;
          try {
            return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, config: this.config, returnPartialData })).result || null;
          } catch (e) {
            if (e instanceof MissingFieldError) {
              return null;
            }
            throw e;
          }
        };
        InMemoryCache2.prototype.write = function(options) {
          try {
            ++this.txCount;
            return this.storeWriter.writeToStore(this.data, options);
          } finally {
            if (!--this.txCount && options.broadcast !== false) {
              this.broadcastWatches();
            }
          }
        };
        InMemoryCache2.prototype.modify = function(options) {
          if (hasOwn.call(options, "id") && !options.id) {
            return false;
          }
          var store = options.optimistic ? this.optimisticData : this.data;
          try {
            ++this.txCount;
            return store.modify(options.id || "ROOT_QUERY", options.fields);
          } finally {
            if (!--this.txCount && options.broadcast !== false) {
              this.broadcastWatches();
            }
          }
        };
        InMemoryCache2.prototype.diff = function(options) {
          return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, rootId: options.id || "ROOT_QUERY", config: this.config }));
        };
        InMemoryCache2.prototype.watch = function(watch) {
          var _this = this;
          if (!this.watches.size) {
            recallCache(this);
          }
          this.watches.add(watch);
          if (watch.immediate) {
            this.maybeBroadcastWatch(watch);
          }
          return function() {
            if (_this.watches.delete(watch) && !_this.watches.size) {
              forgetCache(_this);
            }
            _this.maybeBroadcastWatch.forget(watch);
          };
        };
        InMemoryCache2.prototype.gc = function(options) {
          canonicalStringify.reset();
          var ids = this.optimisticData.gc();
          if (options && !this.txCount) {
            if (options.resetResultCache) {
              this.resetResultCache(options.resetResultIdentities);
            } else if (options.resetResultIdentities) {
              this.storeReader.resetCanon();
            }
          }
          return ids;
        };
        InMemoryCache2.prototype.retain = function(rootId, optimistic) {
          return (optimistic ? this.optimisticData : this.data).retain(rootId);
        };
        InMemoryCache2.prototype.release = function(rootId, optimistic) {
          return (optimistic ? this.optimisticData : this.data).release(rootId);
        };
        InMemoryCache2.prototype.identify = function(object) {
          if (isReference(object))
            return object.__ref;
          try {
            return this.policies.identify(object)[0];
          } catch (e) {
          }
        };
        InMemoryCache2.prototype.evict = function(options) {
          if (!options.id) {
            if (hasOwn.call(options, "id")) {
              return false;
            }
            options = __assign(__assign({}, options), { id: "ROOT_QUERY" });
          }
          try {
            ++this.txCount;
            return this.optimisticData.evict(options, this.data);
          } finally {
            if (!--this.txCount && options.broadcast !== false) {
              this.broadcastWatches();
            }
          }
        };
        InMemoryCache2.prototype.reset = function(options) {
          var _this = this;
          this.init();
          canonicalStringify.reset();
          if (options && options.discardWatches) {
            this.watches.forEach(function(watch) {
              return _this.maybeBroadcastWatch.forget(watch);
            });
            this.watches.clear();
            forgetCache(this);
          } else {
            this.broadcastWatches();
          }
          return Promise.resolve();
        };
        InMemoryCache2.prototype.removeOptimistic = function(idToRemove) {
          var newOptimisticData = this.optimisticData.removeLayer(idToRemove);
          if (newOptimisticData !== this.optimisticData) {
            this.optimisticData = newOptimisticData;
            this.broadcastWatches();
          }
        };
        InMemoryCache2.prototype.batch = function(options) {
          var _this = this;
          var update = options.update, _a2 = options.optimistic, optimistic = _a2 === void 0 ? true : _a2, removeOptimistic = options.removeOptimistic, onWatchUpdated = options.onWatchUpdated;
          var updateResult;
          var perform = function(layer) {
            var _a3 = _this, data2 = _a3.data, optimisticData = _a3.optimisticData;
            ++_this.txCount;
            if (layer) {
              _this.data = _this.optimisticData = layer;
            }
            try {
              return updateResult = update(_this);
            } finally {
              --_this.txCount;
              _this.data = data2;
              _this.optimisticData = optimisticData;
            }
          };
          var alreadyDirty = /* @__PURE__ */ new Set();
          if (onWatchUpdated && !this.txCount) {
            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function(watch) {
              alreadyDirty.add(watch);
              return false;
            } }));
          }
          if (typeof optimistic === "string") {
            this.optimisticData = this.optimisticData.addLayer(optimistic, perform);
          } else if (optimistic === false) {
            perform(this.data);
          } else {
            perform();
          }
          if (typeof removeOptimistic === "string") {
            this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);
          }
          if (onWatchUpdated && alreadyDirty.size) {
            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function(watch, diff) {
              var result2 = onWatchUpdated.call(this, watch, diff);
              if (result2 !== false) {
                alreadyDirty.delete(watch);
              }
              return result2;
            } }));
            if (alreadyDirty.size) {
              alreadyDirty.forEach(function(watch) {
                return _this.maybeBroadcastWatch.dirty(watch);
              });
            }
          } else {
            this.broadcastWatches(options);
          }
          return updateResult;
        };
        InMemoryCache2.prototype.performTransaction = function(update, optimisticId) {
          return this.batch({
            update,
            optimistic: optimisticId || optimisticId !== null
          });
        };
        InMemoryCache2.prototype.transformDocument = function(document2) {
          return this.addTypenameToDocument(this.addFragmentsToDocument(document2));
        };
        InMemoryCache2.prototype.broadcastWatches = function(options) {
          var _this = this;
          if (!this.txCount) {
            this.watches.forEach(function(c) {
              return _this.maybeBroadcastWatch(c, options);
            });
          }
        };
        InMemoryCache2.prototype.addFragmentsToDocument = function(document2) {
          var fragments = this.config.fragments;
          return fragments ? fragments.transform(document2) : document2;
        };
        InMemoryCache2.prototype.addTypenameToDocument = function(document2) {
          if (this.addTypename) {
            return this.addTypenameTransform.transformDocument(document2);
          }
          return document2;
        };
        InMemoryCache2.prototype.broadcastWatch = function(c, options) {
          var lastDiff = c.lastDiff;
          var diff = this.diff(c);
          if (options) {
            if (c.optimistic && typeof options.optimistic === "string") {
              diff.fromOptimisticTransaction = true;
            }
            if (options.onWatchUpdated && options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {
              return;
            }
          }
          if (!lastDiff || !equal(lastDiff.result, diff.result)) {
            c.callback(c.lastDiff = diff, lastDiff);
          }
        };
        return InMemoryCache2;
      }(ApolloCache);
    }
  });

  // node_modules/@apollo/client/cache/inmemory/types.js
  var init_types2 = __esm({
    "node_modules/@apollo/client/cache/inmemory/types.js"() {
    }
  });

  // node_modules/@apollo/client/cache/index.js
  var init_cache2 = __esm({
    "node_modules/@apollo/client/cache/index.js"() {
      init_globals();
      init_inMemoryCache();
      init_reactiveVars();
      init_object_canon();
      init_types2();
    }
  });

  // node_modules/@apollo/client/core/networkStatus.js
  function isNetworkRequestInFlight(networkStatus) {
    return networkStatus ? networkStatus < 7 : false;
  }
  var NetworkStatus;
  var init_networkStatus = __esm({
    "node_modules/@apollo/client/core/networkStatus.js"() {
      (function(NetworkStatus2) {
        NetworkStatus2[NetworkStatus2["loading"] = 1] = "loading";
        NetworkStatus2[NetworkStatus2["setVariables"] = 2] = "setVariables";
        NetworkStatus2[NetworkStatus2["fetchMore"] = 3] = "fetchMore";
        NetworkStatus2[NetworkStatus2["refetch"] = 4] = "refetch";
        NetworkStatus2[NetworkStatus2["poll"] = 6] = "poll";
        NetworkStatus2[NetworkStatus2["ready"] = 7] = "ready";
        NetworkStatus2[NetworkStatus2["error"] = 8] = "error";
      })(NetworkStatus || (NetworkStatus = {}));
    }
  });

  // node_modules/@apollo/client/core/equalByQuery.js
  function equalByQuery(query, _a2, _b, variables) {
    var aData = _a2.data, aRest = __rest(_a2, ["data"]);
    var bData = _b.data, bRest = __rest(_b, ["data"]);
    return lib_default(aRest, bRest) && equalBySelectionSet(getMainDefinition(query).selectionSet, aData, bData, {
      fragmentMap: createFragmentMap(getFragmentDefinitions(query)),
      variables
    });
  }
  function equalBySelectionSet(selectionSet, aResult, bResult, context) {
    if (aResult === bResult) {
      return true;
    }
    var seenSelections = /* @__PURE__ */ new Set();
    return selectionSet.selections.every(function(selection) {
      if (seenSelections.has(selection))
        return true;
      seenSelections.add(selection);
      if (!shouldInclude(selection, context.variables))
        return true;
      if (selectionHasNonreactiveDirective(selection))
        return true;
      if (isField(selection)) {
        var resultKey = resultKeyNameFromField(selection);
        var aResultChild = aResult && aResult[resultKey];
        var bResultChild = bResult && bResult[resultKey];
        var childSelectionSet = selection.selectionSet;
        if (!childSelectionSet) {
          return lib_default(aResultChild, bResultChild);
        }
        var aChildIsArray = Array.isArray(aResultChild);
        var bChildIsArray = Array.isArray(bResultChild);
        if (aChildIsArray !== bChildIsArray)
          return false;
        if (aChildIsArray && bChildIsArray) {
          var length_1 = aResultChild.length;
          if (bResultChild.length !== length_1) {
            return false;
          }
          for (var i = 0; i < length_1; ++i) {
            if (!equalBySelectionSet(childSelectionSet, aResultChild[i], bResultChild[i], context)) {
              return false;
            }
          }
          return true;
        }
        return equalBySelectionSet(childSelectionSet, aResultChild, bResultChild, context);
      } else {
        var fragment = getFragmentFromSelection(selection, context.fragmentMap);
        if (fragment) {
          if (selectionHasNonreactiveDirective(fragment))
            return true;
          return equalBySelectionSet(
            fragment.selectionSet,
            // Notice that we reuse the same aResult and bResult values here,
            // since the fragment ...spread does not specify a field name, but
            // consists of multiple fields (within the fragment's selection set)
            // that should be applied to the current result value(s).
            aResult,
            bResult,
            context
          );
        }
      }
    });
  }
  function selectionHasNonreactiveDirective(selection) {
    return !!selection.directives && selection.directives.some(directiveIsNonreactive);
  }
  function directiveIsNonreactive(dir) {
    return dir.name.value === "nonreactive";
  }
  var init_equalByQuery = __esm({
    "node_modules/@apollo/client/core/equalByQuery.js"() {
      init_tslib_es6();
      init_lib2();
      init_utilities();
    }
  });

  // node_modules/@apollo/client/core/ObservableQuery.js
  function reobserveCacheFirst(obsQuery) {
    var _a2 = obsQuery.options, fetchPolicy = _a2.fetchPolicy, nextFetchPolicy = _a2.nextFetchPolicy;
    if (fetchPolicy === "cache-and-network" || fetchPolicy === "network-only") {
      return obsQuery.reobserve({
        fetchPolicy: "cache-first",
        // Use a temporary nextFetchPolicy function that replaces itself with the
        // previous nextFetchPolicy value and returns the original fetchPolicy.
        nextFetchPolicy: function(currentFetchPolicy, context) {
          this.nextFetchPolicy = nextFetchPolicy;
          if (typeof this.nextFetchPolicy === "function") {
            return this.nextFetchPolicy(currentFetchPolicy, context);
          }
          return fetchPolicy;
        }
      });
    }
    return obsQuery.reobserve();
  }
  function defaultSubscriptionObserverErrorCallback(error) {
  }
  function skipCacheDataFor(fetchPolicy) {
    return fetchPolicy === "network-only" || fetchPolicy === "no-cache" || fetchPolicy === "standby";
  }
  var assign, hasOwnProperty7, ObservableQuery;
  var init_ObservableQuery = __esm({
    "node_modules/@apollo/client/core/ObservableQuery.js"() {
      init_tslib_es6();
      init_globals();
      init_lib2();
      init_networkStatus();
      init_utilities();
      init_equalByQuery();
      assign = Object.assign;
      hasOwnProperty7 = Object.hasOwnProperty;
      ObservableQuery = /** @class */
      function(_super) {
        __extends(ObservableQuery2, _super);
        function ObservableQuery2(_a2) {
          var queryManager = _a2.queryManager, queryInfo = _a2.queryInfo, options = _a2.options;
          var _this = _super.call(this, function(observer) {
            try {
              var subObserver = observer._subscription._observer;
              if (subObserver && !subObserver.error) {
                subObserver.error = defaultSubscriptionObserverErrorCallback;
              }
            } catch (_a3) {
            }
            var first = !_this.observers.size;
            _this.observers.add(observer);
            var last = _this.last;
            if (last && last.error) {
              observer.error && observer.error(last.error);
            } else if (last && last.result) {
              observer.next && observer.next(last.result);
            }
            if (first) {
              _this.reobserve().catch(function() {
              });
            }
            return function() {
              if (_this.observers.delete(observer) && !_this.observers.size) {
                _this.tearDownQuery();
              }
            };
          }) || this;
          _this.observers = /* @__PURE__ */ new Set();
          _this.subscriptions = /* @__PURE__ */ new Set();
          _this.queryInfo = queryInfo;
          _this.queryManager = queryManager;
          _this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy);
          _this.isTornDown = false;
          var _b = queryManager.defaultOptions.watchQuery, _c = _b === void 0 ? {} : _b, _d = _c.fetchPolicy, defaultFetchPolicy = _d === void 0 ? "cache-first" : _d;
          var _e = options.fetchPolicy, fetchPolicy = _e === void 0 ? defaultFetchPolicy : _e, _f = options.initialFetchPolicy, initialFetchPolicy = _f === void 0 ? fetchPolicy === "standby" ? defaultFetchPolicy : fetchPolicy : _f;
          _this.options = __assign(__assign({}, options), {
            // Remember the initial options.fetchPolicy so we can revert back to this
            // policy when variables change. This information can also be specified
            // (or overridden) by providing options.initialFetchPolicy explicitly.
            initialFetchPolicy,
            // This ensures this.options.fetchPolicy always has a string value, in
            // case options.fetchPolicy was not provided.
            fetchPolicy
          });
          _this.queryId = queryInfo.queryId || queryManager.generateQueryId();
          var opDef = getOperationDefinition(_this.query);
          _this.queryName = opDef && opDef.name && opDef.name.value;
          return _this;
        }
        Object.defineProperty(ObservableQuery2.prototype, "query", {
          // The `query` computed property will always reflect the document transformed
          // by the last run query. `this.options.query` will always reflect the raw
          // untransformed query to ensure document transforms with runtime conditionals
          // are run on the original document.
          get: function() {
            return this.lastQuery || this.options.query;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(ObservableQuery2.prototype, "variables", {
          // Computed shorthand for this.options.variables, preserved for
          // backwards compatibility.
          get: function() {
            return this.options.variables;
          },
          enumerable: false,
          configurable: true
        });
        ObservableQuery2.prototype.result = function() {
          var _this = this;
          return new Promise(function(resolve2, reject2) {
            var observer = {
              next: function(result2) {
                resolve2(result2);
                _this.observers.delete(observer);
                if (!_this.observers.size) {
                  _this.queryManager.removeQuery(_this.queryId);
                }
                setTimeout(function() {
                  subscription.unsubscribe();
                }, 0);
              },
              error: reject2
            };
            var subscription = _this.subscribe(observer);
          });
        };
        ObservableQuery2.prototype.getCurrentResult = function(saveAsLastResult) {
          if (saveAsLastResult === void 0) {
            saveAsLastResult = true;
          }
          var lastResult = this.getLastResult(true);
          var networkStatus = this.queryInfo.networkStatus || lastResult && lastResult.networkStatus || NetworkStatus.ready;
          var result2 = __assign(__assign({}, lastResult), { loading: isNetworkRequestInFlight(networkStatus), networkStatus });
          var _a2 = this.options.fetchPolicy, fetchPolicy = _a2 === void 0 ? "cache-first" : _a2;
          if (
            // These fetch policies should never deliver data from the cache, unless
            // redelivering a previously delivered result.
            skipCacheDataFor(fetchPolicy) || // If this.options.query has @client(always: true) fields, we cannot
            // trust diff.result, since it was read from the cache without running
            // local resolvers (and it's too late to run resolvers now, since we must
            // return a result synchronously).
            this.queryManager.getDocumentInfo(this.query).hasForcedResolvers
          ) {
          } else if (this.waitForOwnResult) {
            this.queryInfo["updateWatch"]();
          } else {
            var diff = this.queryInfo.getDiff();
            if (diff.complete || this.options.returnPartialData) {
              result2.data = diff.result;
            }
            if (equal(result2.data, {})) {
              result2.data = void 0;
            }
            if (diff.complete) {
              delete result2.partial;
              if (diff.complete && result2.networkStatus === NetworkStatus.loading && (fetchPolicy === "cache-first" || fetchPolicy === "cache-only")) {
                result2.networkStatus = NetworkStatus.ready;
                result2.loading = false;
              }
            } else {
              result2.partial = true;
            }
            if (false) {
              logMissingFieldErrors(diff.missing);
            }
          }
          if (saveAsLastResult) {
            this.updateLastResult(result2);
          }
          return result2;
        };
        ObservableQuery2.prototype.isDifferentFromLastResult = function(newResult, variables) {
          if (!this.last) {
            return true;
          }
          var resultIsDifferent = this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ? !equalByQuery(this.query, this.last.result, newResult, this.variables) : !equal(this.last.result, newResult);
          return resultIsDifferent || variables && !equal(this.last.variables, variables);
        };
        ObservableQuery2.prototype.getLast = function(key2, variablesMustMatch) {
          var last = this.last;
          if (last && last[key2] && (!variablesMustMatch || equal(last.variables, this.variables))) {
            return last[key2];
          }
        };
        ObservableQuery2.prototype.getLastResult = function(variablesMustMatch) {
          return this.getLast("result", variablesMustMatch);
        };
        ObservableQuery2.prototype.getLastError = function(variablesMustMatch) {
          return this.getLast("error", variablesMustMatch);
        };
        ObservableQuery2.prototype.resetLastResults = function() {
          delete this.last;
          this.isTornDown = false;
        };
        ObservableQuery2.prototype.resetQueryStoreErrors = function() {
          this.queryManager.resetErrors(this.queryId);
        };
        ObservableQuery2.prototype.refetch = function(variables) {
          var _a2;
          var reobserveOptions = {
            // Always disable polling for refetches.
            pollInterval: 0
          };
          var fetchPolicy = this.options.fetchPolicy;
          if (fetchPolicy === "cache-and-network") {
            reobserveOptions.fetchPolicy = fetchPolicy;
          } else if (fetchPolicy === "no-cache") {
            reobserveOptions.fetchPolicy = "no-cache";
          } else {
            reobserveOptions.fetchPolicy = "network-only";
          }
          if (false) {
            var queryDef = getQueryDefinition(this.query);
            var vars = queryDef.variableDefinitions;
            if (!vars || !vars.some(function(v) {
              return v.variable.name.value === "variables";
            })) {
            }
          }
          if (variables && !equal(this.options.variables, variables)) {
            reobserveOptions.variables = this.options.variables = __assign(__assign({}, this.options.variables), variables);
          }
          this.queryInfo.resetLastWrite();
          return this.reobserve(reobserveOptions, NetworkStatus.refetch);
        };
        ObservableQuery2.prototype.fetchMore = function(fetchMoreOptions) {
          var _this = this;
          var combinedOptions = __assign(__assign({}, fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign(__assign({}, this.options), { query: this.options.query }), fetchMoreOptions), { variables: __assign(__assign({}, this.options.variables), fetchMoreOptions.variables) })), {
            // The fetchMore request goes immediately to the network and does
            // not automatically write its result to the cache (hence no-cache
            // instead of network-only), because we allow the caller of
            // fetchMore to provide an updateQuery callback that determines how
            // the data gets written to the cache.
            fetchPolicy: "no-cache"
          });
          combinedOptions.query = this.transformDocument(combinedOptions.query);
          var qid = this.queryManager.generateQueryId();
          this.lastQuery = fetchMoreOptions.query ? this.transformDocument(this.options.query) : combinedOptions.query;
          var queryInfo = this.queryInfo;
          var originalNetworkStatus = queryInfo.networkStatus;
          queryInfo.networkStatus = NetworkStatus.fetchMore;
          if (combinedOptions.notifyOnNetworkStatusChange) {
            this.observe();
          }
          var updatedQuerySet = /* @__PURE__ */ new Set();
          return this.queryManager.fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore).then(function(fetchMoreResult) {
            _this.queryManager.removeQuery(qid);
            if (queryInfo.networkStatus === NetworkStatus.fetchMore) {
              queryInfo.networkStatus = originalNetworkStatus;
            }
            _this.queryManager.cache.batch({
              update: function(cache2) {
                var updateQuery = fetchMoreOptions.updateQuery;
                if (updateQuery) {
                  cache2.updateQuery({
                    query: _this.query,
                    variables: _this.variables,
                    returnPartialData: true,
                    optimistic: false
                  }, function(previous) {
                    return updateQuery(previous, {
                      fetchMoreResult: fetchMoreResult.data,
                      variables: combinedOptions.variables
                    });
                  });
                } else {
                  cache2.writeQuery({
                    query: combinedOptions.query,
                    variables: combinedOptions.variables,
                    data: fetchMoreResult.data
                  });
                }
              },
              onWatchUpdated: function(watch) {
                updatedQuerySet.add(watch.query);
              }
            });
            return fetchMoreResult;
          }).finally(function() {
            if (!updatedQuerySet.has(_this.query)) {
              reobserveCacheFirst(_this);
            }
          });
        };
        ObservableQuery2.prototype.subscribeToMore = function(options) {
          var _this = this;
          var subscription = this.queryManager.startGraphQLSubscription({
            query: options.document,
            variables: options.variables,
            context: options.context
          }).subscribe({
            next: function(subscriptionData) {
              var updateQuery = options.updateQuery;
              if (updateQuery) {
                _this.updateQuery(function(previous, _a2) {
                  var variables = _a2.variables;
                  return updateQuery(previous, {
                    subscriptionData,
                    variables
                  });
                });
              }
            },
            error: function(err) {
              if (options.onError) {
                options.onError(err);
                return;
              }
            }
          });
          this.subscriptions.add(subscription);
          return function() {
            if (_this.subscriptions.delete(subscription)) {
              subscription.unsubscribe();
            }
          };
        };
        ObservableQuery2.prototype.setOptions = function(newOptions) {
          return this.reobserve(newOptions);
        };
        ObservableQuery2.prototype.silentSetOptions = function(newOptions) {
          var mergedOptions = compact(this.options, newOptions || {});
          assign(this.options, mergedOptions);
        };
        ObservableQuery2.prototype.setVariables = function(variables) {
          if (equal(this.variables, variables)) {
            return this.observers.size ? this.result() : Promise.resolve();
          }
          this.options.variables = variables;
          if (!this.observers.size) {
            return Promise.resolve();
          }
          return this.reobserve({
            // Reset options.fetchPolicy to its original value.
            fetchPolicy: this.options.initialFetchPolicy,
            variables
          }, NetworkStatus.setVariables);
        };
        ObservableQuery2.prototype.updateQuery = function(mapFn) {
          var queryManager = this.queryManager;
          var result2 = queryManager.cache.diff({
            query: this.options.query,
            variables: this.variables,
            returnPartialData: true,
            optimistic: false
          }).result;
          var newResult = mapFn(result2, {
            variables: this.variables
          });
          if (newResult) {
            queryManager.cache.writeQuery({
              query: this.options.query,
              data: newResult,
              variables: this.variables
            });
            queryManager.broadcastQueries();
          }
        };
        ObservableQuery2.prototype.startPolling = function(pollInterval) {
          this.options.pollInterval = pollInterval;
          this.updatePolling();
        };
        ObservableQuery2.prototype.stopPolling = function() {
          this.options.pollInterval = 0;
          this.updatePolling();
        };
        ObservableQuery2.prototype.applyNextFetchPolicy = function(reason, options) {
          if (options.nextFetchPolicy) {
            var _a2 = options.fetchPolicy, fetchPolicy = _a2 === void 0 ? "cache-first" : _a2, _b = options.initialFetchPolicy, initialFetchPolicy = _b === void 0 ? fetchPolicy : _b;
            if (fetchPolicy === "standby") {
            } else if (typeof options.nextFetchPolicy === "function") {
              options.fetchPolicy = options.nextFetchPolicy(fetchPolicy, {
                reason,
                options,
                observable: this,
                initialFetchPolicy
              });
            } else if (reason === "variables-changed") {
              options.fetchPolicy = initialFetchPolicy;
            } else {
              options.fetchPolicy = options.nextFetchPolicy;
            }
          }
          return options.fetchPolicy;
        };
        ObservableQuery2.prototype.fetch = function(options, newNetworkStatus, query) {
          this.queryManager.setObservableQuery(this);
          return this.queryManager["fetchConcastWithInfo"](this.queryId, options, newNetworkStatus, query);
        };
        ObservableQuery2.prototype.updatePolling = function() {
          var _this = this;
          if (this.queryManager.ssrMode) {
            return;
          }
          var _a2 = this, pollingInfo = _a2.pollingInfo, pollInterval = _a2.options.pollInterval;
          if (!pollInterval) {
            if (pollingInfo) {
              clearTimeout(pollingInfo.timeout);
              delete this.pollingInfo;
            }
            return;
          }
          if (pollingInfo && pollingInfo.interval === pollInterval) {
            return;
          }
          invariant2(pollInterval, 22);
          var info = pollingInfo || (this.pollingInfo = {});
          info.interval = pollInterval;
          var maybeFetch = function() {
            if (_this.pollingInfo) {
              if (!isNetworkRequestInFlight(_this.queryInfo.networkStatus)) {
                _this.reobserve({
                  // Most fetchPolicy options don't make sense to use in a polling context, as
                  // users wouldn't want to be polling the cache directly. However, network-only and
                  // no-cache are both useful for when the user wants to control whether or not the
                  // polled results are written to the cache.
                  fetchPolicy: _this.options.initialFetchPolicy === "no-cache" ? "no-cache" : "network-only"
                }, NetworkStatus.poll).then(poll, poll);
              } else {
                poll();
              }
            }
          };
          var poll = function() {
            var info2 = _this.pollingInfo;
            if (info2) {
              clearTimeout(info2.timeout);
              info2.timeout = setTimeout(maybeFetch, info2.interval);
            }
          };
          poll();
        };
        ObservableQuery2.prototype.updateLastResult = function(newResult, variables) {
          if (variables === void 0) {
            variables = this.variables;
          }
          var error = this.getLastError();
          if (error && this.last && !equal(variables, this.last.variables)) {
            error = void 0;
          }
          return this.last = __assign({ result: this.queryManager.assumeImmutableResults ? newResult : cloneDeep(newResult), variables }, error ? { error } : null);
        };
        ObservableQuery2.prototype.reobserveAsConcast = function(newOptions, newNetworkStatus) {
          var _this = this;
          this.isTornDown = false;
          var useDisposableConcast = (
            // Refetching uses a disposable Concast to allow refetches using different
            // options/variables, without permanently altering the options of the
            // original ObservableQuery.
            newNetworkStatus === NetworkStatus.refetch || // The fetchMore method does not actually call the reobserve method, but,
            // if it did, it would definitely use a disposable Concast.
            newNetworkStatus === NetworkStatus.fetchMore || // Polling uses a disposable Concast so the polling options (which force
            // fetchPolicy to be "network-only" or "no-cache") won't override the original options.
            newNetworkStatus === NetworkStatus.poll
          );
          var oldVariables = this.options.variables;
          var oldFetchPolicy = this.options.fetchPolicy;
          var mergedOptions = compact(this.options, newOptions || {});
          var options = useDisposableConcast ? (
            // Disposable Concast fetches receive a shallow copy of this.options
            // (merged with newOptions), leaving this.options unmodified.
            mergedOptions
          ) : assign(this.options, mergedOptions);
          var query = this.transformDocument(options.query);
          this.lastQuery = query;
          if (!useDisposableConcast) {
            this.updatePolling();
            if (newOptions && newOptions.variables && !equal(newOptions.variables, oldVariables) && // Don't mess with the fetchPolicy if it's currently "standby".
            options.fetchPolicy !== "standby" && // If we're changing the fetchPolicy anyway, don't try to change it here
            // using applyNextFetchPolicy. The explicit options.fetchPolicy wins.
            options.fetchPolicy === oldFetchPolicy) {
              this.applyNextFetchPolicy("variables-changed", options);
              if (newNetworkStatus === void 0) {
                newNetworkStatus = NetworkStatus.setVariables;
              }
            }
          }
          this.waitForOwnResult && (this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy));
          var finishWaitingForOwnResult = function() {
            if (_this.concast === concast) {
              _this.waitForOwnResult = false;
            }
          };
          var variables = options.variables && __assign({}, options.variables);
          var _a2 = this.fetch(options, newNetworkStatus, query), concast = _a2.concast, fromLink = _a2.fromLink;
          var observer = {
            next: function(result2) {
              finishWaitingForOwnResult();
              _this.reportResult(result2, variables);
            },
            error: function(error) {
              finishWaitingForOwnResult();
              _this.reportError(error, variables);
            }
          };
          if (!useDisposableConcast && (fromLink || !this.concast)) {
            if (this.concast && this.observer) {
              this.concast.removeObserver(this.observer);
            }
            this.concast = concast;
            this.observer = observer;
          }
          concast.addObserver(observer);
          return concast;
        };
        ObservableQuery2.prototype.reobserve = function(newOptions, newNetworkStatus) {
          return this.reobserveAsConcast(newOptions, newNetworkStatus).promise;
        };
        ObservableQuery2.prototype.resubscribeAfterError = function() {
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          var last = this.last;
          this.resetLastResults();
          var subscription = this.subscribe.apply(this, args);
          this.last = last;
          return subscription;
        };
        ObservableQuery2.prototype.observe = function() {
          this.reportResult(
            // Passing false is important so that this.getCurrentResult doesn't
            // save the fetchMore result as this.lastResult, causing it to be
            // ignored due to the this.isDifferentFromLastResult check in
            // this.reportResult.
            this.getCurrentResult(false),
            this.variables
          );
        };
        ObservableQuery2.prototype.reportResult = function(result2, variables) {
          var lastError = this.getLastError();
          var isDifferent = this.isDifferentFromLastResult(result2, variables);
          if (lastError || !result2.partial || this.options.returnPartialData) {
            this.updateLastResult(result2, variables);
          }
          if (lastError || isDifferent) {
            iterateObserversSafely(this.observers, "next", result2);
          }
        };
        ObservableQuery2.prototype.reportError = function(error, variables) {
          var errorResult = __assign(__assign({}, this.getLastResult()), { error, errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false });
          this.updateLastResult(errorResult, variables);
          iterateObserversSafely(this.observers, "error", this.last.error = error);
        };
        ObservableQuery2.prototype.hasObservers = function() {
          return this.observers.size > 0;
        };
        ObservableQuery2.prototype.tearDownQuery = function() {
          if (this.isTornDown)
            return;
          if (this.concast && this.observer) {
            this.concast.removeObserver(this.observer);
            delete this.concast;
            delete this.observer;
          }
          this.stopPolling();
          this.subscriptions.forEach(function(sub2) {
            return sub2.unsubscribe();
          });
          this.subscriptions.clear();
          this.queryManager.stopQuery(this.queryId);
          this.observers.clear();
          this.isTornDown = true;
        };
        ObservableQuery2.prototype.transformDocument = function(document2) {
          return this.queryManager.transform(document2);
        };
        return ObservableQuery2;
      }(Observable);
      fixObservableSubclass(ObservableQuery);
    }
  });

  // node_modules/@apollo/client/core/LocalState.js
  var LocalState;
  var init_LocalState = __esm({
    "node_modules/@apollo/client/core/LocalState.js"() {
      init_tslib_es6();
      init_globals();
      init_graphql();
      init_utilities();
      init_cache2();
      LocalState = /** @class */
      function() {
        function LocalState2(_a2) {
          var cache2 = _a2.cache, client = _a2.client, resolvers = _a2.resolvers, fragmentMatcher = _a2.fragmentMatcher;
          this.selectionsToResolveCache = /* @__PURE__ */ new WeakMap();
          this.cache = cache2;
          if (client) {
            this.client = client;
          }
          if (resolvers) {
            this.addResolvers(resolvers);
          }
          if (fragmentMatcher) {
            this.setFragmentMatcher(fragmentMatcher);
          }
        }
        LocalState2.prototype.addResolvers = function(resolvers) {
          var _this = this;
          this.resolvers = this.resolvers || {};
          if (Array.isArray(resolvers)) {
            resolvers.forEach(function(resolverGroup) {
              _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);
            });
          } else {
            this.resolvers = mergeDeep(this.resolvers, resolvers);
          }
        };
        LocalState2.prototype.setResolvers = function(resolvers) {
          this.resolvers = {};
          this.addResolvers(resolvers);
        };
        LocalState2.prototype.getResolvers = function() {
          return this.resolvers || {};
        };
        LocalState2.prototype.runResolvers = function(_a2) {
          var document2 = _a2.document, remoteResult = _a2.remoteResult, context = _a2.context, variables = _a2.variables, _b = _a2.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_c) {
              if (document2) {
                return [2, this.resolveDocument(document2, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function(localResult) {
                  return __assign(__assign({}, remoteResult), { data: localResult.result });
                })];
              }
              return [2, remoteResult];
            });
          });
        };
        LocalState2.prototype.setFragmentMatcher = function(fragmentMatcher) {
          this.fragmentMatcher = fragmentMatcher;
        };
        LocalState2.prototype.getFragmentMatcher = function() {
          return this.fragmentMatcher;
        };
        LocalState2.prototype.clientQuery = function(document2) {
          if (hasDirectives(["client"], document2)) {
            if (this.resolvers) {
              return document2;
            }
          }
          return null;
        };
        LocalState2.prototype.serverQuery = function(document2) {
          return removeClientSetsFromDocument(document2);
        };
        LocalState2.prototype.prepareContext = function(context) {
          var cache2 = this.cache;
          return __assign(__assign({}, context), {
            cache: cache2,
            // Getting an entry's cache key is useful for local state resolvers.
            getCacheKey: function(obj) {
              return cache2.identify(obj);
            }
          });
        };
        LocalState2.prototype.addExportedVariables = function(document2, variables, context) {
          if (variables === void 0) {
            variables = {};
          }
          if (context === void 0) {
            context = {};
          }
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a2) {
              if (document2) {
                return [2, this.resolveDocument(document2, this.buildRootValueFromCache(document2, variables) || {}, this.prepareContext(context), variables).then(function(data2) {
                  return __assign(__assign({}, variables), data2.exportedVariables);
                })];
              }
              return [2, __assign({}, variables)];
            });
          });
        };
        LocalState2.prototype.shouldForceResolvers = function(document2) {
          var forceResolvers = false;
          visit(document2, {
            Directive: {
              enter: function(node) {
                if (node.name.value === "client" && node.arguments) {
                  forceResolvers = node.arguments.some(function(arg) {
                    return arg.name.value === "always" && arg.value.kind === "BooleanValue" && arg.value.value === true;
                  });
                  if (forceResolvers) {
                    return BREAK;
                  }
                }
              }
            }
          });
          return forceResolvers;
        };
        LocalState2.prototype.buildRootValueFromCache = function(document2, variables) {
          return this.cache.diff({
            query: buildQueryFromSelectionSet(document2),
            variables,
            returnPartialData: true,
            optimistic: false
          }).result;
        };
        LocalState2.prototype.resolveDocument = function(document2, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {
          if (context === void 0) {
            context = {};
          }
          if (variables === void 0) {
            variables = {};
          }
          if (fragmentMatcher === void 0) {
            fragmentMatcher = function() {
              return true;
            };
          }
          if (onlyRunForcedResolvers === void 0) {
            onlyRunForcedResolvers = false;
          }
          return __awaiter(this, void 0, void 0, function() {
            var mainDefinition, fragments, fragmentMap, selectionsToResolve, definitionOperation, defaultOperationType, _a2, cache2, client, execContext, isClientFieldDescendant;
            return __generator(this, function(_b) {
              mainDefinition = getMainDefinition(document2);
              fragments = getFragmentDefinitions(document2);
              fragmentMap = createFragmentMap(fragments);
              selectionsToResolve = this.collectSelectionsToResolve(mainDefinition, fragmentMap);
              definitionOperation = mainDefinition.operation;
              defaultOperationType = definitionOperation ? definitionOperation.charAt(0).toUpperCase() + definitionOperation.slice(1) : "Query";
              _a2 = this, cache2 = _a2.cache, client = _a2.client;
              execContext = {
                fragmentMap,
                context: __assign(__assign({}, context), { cache: cache2, client }),
                variables,
                fragmentMatcher,
                defaultOperationType,
                exportedVariables: {},
                selectionsToResolve,
                onlyRunForcedResolvers
              };
              isClientFieldDescendant = false;
              return [2, this.resolveSelectionSet(mainDefinition.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function(result2) {
                return {
                  result: result2,
                  exportedVariables: execContext.exportedVariables
                };
              })];
            });
          });
        };
        LocalState2.prototype.resolveSelectionSet = function(selectionSet, isClientFieldDescendant, rootValue, execContext) {
          return __awaiter(this, void 0, void 0, function() {
            var fragmentMap, context, variables, resultsToMerge, execute2;
            var _this = this;
            return __generator(this, function(_a2) {
              fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;
              resultsToMerge = [rootValue];
              execute2 = function(selection) {
                return __awaiter(_this, void 0, void 0, function() {
                  var fragment, typeCondition;
                  return __generator(this, function(_a3) {
                    if (!isClientFieldDescendant && !execContext.selectionsToResolve.has(selection)) {
                      return [
                        2
                        /*return*/
                      ];
                    }
                    if (!shouldInclude(selection, variables)) {
                      return [
                        2
                        /*return*/
                      ];
                    }
                    if (isField(selection)) {
                      return [2, this.resolveField(selection, isClientFieldDescendant, rootValue, execContext).then(function(fieldResult) {
                        var _a4;
                        if (typeof fieldResult !== "undefined") {
                          resultsToMerge.push((_a4 = {}, _a4[resultKeyNameFromField(selection)] = fieldResult, _a4));
                        }
                      })];
                    }
                    if (isInlineFragment(selection)) {
                      fragment = selection;
                    } else {
                      fragment = fragmentMap[selection.name.value];
                      invariant2(fragment, 18, selection.name.value);
                    }
                    if (fragment && fragment.typeCondition) {
                      typeCondition = fragment.typeCondition.name.value;
                      if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {
                        return [2, this.resolveSelectionSet(fragment.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function(fragmentResult) {
                          resultsToMerge.push(fragmentResult);
                        })];
                      }
                    }
                    return [
                      2
                      /*return*/
                    ];
                  });
                });
              };
              return [2, Promise.all(selectionSet.selections.map(execute2)).then(function() {
                return mergeDeepArray(resultsToMerge);
              })];
            });
          });
        };
        LocalState2.prototype.resolveField = function(field, isClientFieldDescendant, rootValue, execContext) {
          return __awaiter(this, void 0, void 0, function() {
            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve2;
            var _this = this;
            return __generator(this, function(_a2) {
              if (!rootValue) {
                return [2, null];
              }
              variables = execContext.variables;
              fieldName = field.name.value;
              aliasedFieldName = resultKeyNameFromField(field);
              aliasUsed = fieldName !== aliasedFieldName;
              defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];
              resultPromise = Promise.resolve(defaultResult);
              if (!execContext.onlyRunForcedResolvers || this.shouldForceResolvers(field)) {
                resolverType = rootValue.__typename || execContext.defaultOperationType;
                resolverMap = this.resolvers && this.resolvers[resolverType];
                if (resolverMap) {
                  resolve2 = resolverMap[aliasUsed ? fieldName : aliasedFieldName];
                  if (resolve2) {
                    resultPromise = Promise.resolve(
                      // In case the resolve function accesses reactive variables,
                      // set cacheSlot to the current cache instance.
                      cacheSlot.withValue(this.cache, resolve2, [
                        rootValue,
                        argumentsObjectFromField(field, variables),
                        execContext.context,
                        { field, fragmentMap: execContext.fragmentMap }
                      ])
                    );
                  }
                }
              }
              return [2, resultPromise.then(function(result2) {
                var _a3, _b;
                if (result2 === void 0) {
                  result2 = defaultResult;
                }
                if (field.directives) {
                  field.directives.forEach(function(directive) {
                    if (directive.name.value === "export" && directive.arguments) {
                      directive.arguments.forEach(function(arg) {
                        if (arg.name.value === "as" && arg.value.kind === "StringValue") {
                          execContext.exportedVariables[arg.value.value] = result2;
                        }
                      });
                    }
                  });
                }
                if (!field.selectionSet) {
                  return result2;
                }
                if (result2 == null) {
                  return result2;
                }
                var isClientField = (_b = (_a3 = field.directives) === null || _a3 === void 0 ? void 0 : _a3.some(function(d) {
                  return d.name.value === "client";
                })) !== null && _b !== void 0 ? _b : false;
                if (Array.isArray(result2)) {
                  return _this.resolveSubSelectedArray(field, isClientFieldDescendant || isClientField, result2, execContext);
                }
                if (field.selectionSet) {
                  return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant || isClientField, result2, execContext);
                }
              })];
            });
          });
        };
        LocalState2.prototype.resolveSubSelectedArray = function(field, isClientFieldDescendant, result2, execContext) {
          var _this = this;
          return Promise.all(result2.map(function(item) {
            if (item === null) {
              return null;
            }
            if (Array.isArray(item)) {
              return _this.resolveSubSelectedArray(field, isClientFieldDescendant, item, execContext);
            }
            if (field.selectionSet) {
              return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant, item, execContext);
            }
          }));
        };
        LocalState2.prototype.collectSelectionsToResolve = function(mainDefinition, fragmentMap) {
          var isSingleASTNode = function(node) {
            return !Array.isArray(node);
          };
          var selectionsToResolveCache = this.selectionsToResolveCache;
          function collectByDefinition(definitionNode) {
            if (!selectionsToResolveCache.has(definitionNode)) {
              var matches_1 = /* @__PURE__ */ new Set();
              selectionsToResolveCache.set(definitionNode, matches_1);
              visit(definitionNode, {
                Directive: function(node, _, __, ___, ancestors) {
                  if (node.name.value === "client") {
                    ancestors.forEach(function(node2) {
                      if (isSingleASTNode(node2) && isSelectionNode(node2)) {
                        matches_1.add(node2);
                      }
                    });
                  }
                },
                FragmentSpread: function(spread, _, __, ___, ancestors) {
                  var fragment = fragmentMap[spread.name.value];
                  invariant2(fragment, 19, spread.name.value);
                  var fragmentSelections = collectByDefinition(fragment);
                  if (fragmentSelections.size > 0) {
                    ancestors.forEach(function(node) {
                      if (isSingleASTNode(node) && isSelectionNode(node)) {
                        matches_1.add(node);
                      }
                    });
                    matches_1.add(spread);
                    fragmentSelections.forEach(function(selection) {
                      matches_1.add(selection);
                    });
                  }
                }
              });
            }
            return selectionsToResolveCache.get(definitionNode);
          }
          return collectByDefinition(mainDefinition);
        };
        return LocalState2;
      }();
    }
  });

  // node_modules/@apollo/client/core/QueryInfo.js
  function wrapDestructiveCacheMethod(cache2, methodName) {
    var original = cache2[methodName];
    if (typeof original === "function") {
      cache2[methodName] = function() {
        destructiveMethodCounts.set(
          cache2,
          // The %1e15 allows the count to wrap around to 0 safely every
          // quadrillion evictions, so there's no risk of overflow. To be
          // clear, this is more of a pedantic principle than something
          // that matters in any conceivable practical scenario.
          (destructiveMethodCounts.get(cache2) + 1) % 1e15
        );
        return original.apply(this, arguments);
      };
    }
  }
  function cancelNotifyTimeout(info) {
    if (info["notifyTimeout"]) {
      clearTimeout(info["notifyTimeout"]);
      info["notifyTimeout"] = void 0;
    }
  }
  function shouldWriteResult(result2, errorPolicy) {
    if (errorPolicy === void 0) {
      errorPolicy = "none";
    }
    var ignoreErrors = errorPolicy === "ignore" || errorPolicy === "all";
    var writeWithErrors = !graphQLResultHasError(result2);
    if (!writeWithErrors && ignoreErrors && result2.data) {
      writeWithErrors = true;
    }
    return writeWithErrors;
  }
  var destructiveMethodCounts, QueryInfo;
  var init_QueryInfo = __esm({
    "node_modules/@apollo/client/core/QueryInfo.js"() {
      init_tslib_es6();
      init_lib2();
      init_utilities();
      init_utilities();
      init_ObservableQuery();
      init_utilities();
      init_networkStatus();
      destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();
      QueryInfo = /** @class */
      function() {
        function QueryInfo2(queryManager, queryId) {
          if (queryId === void 0) {
            queryId = queryManager.generateQueryId();
          }
          this.queryId = queryId;
          this.listeners = /* @__PURE__ */ new Set();
          this.document = null;
          this.lastRequestId = 1;
          this.stopped = false;
          this.dirty = false;
          this.observableQuery = null;
          var cache2 = this.cache = queryManager.cache;
          if (!destructiveMethodCounts.has(cache2)) {
            destructiveMethodCounts.set(cache2, 0);
            wrapDestructiveCacheMethod(cache2, "evict");
            wrapDestructiveCacheMethod(cache2, "modify");
            wrapDestructiveCacheMethod(cache2, "reset");
          }
        }
        QueryInfo2.prototype.init = function(query) {
          var networkStatus = query.networkStatus || NetworkStatus.loading;
          if (this.variables && this.networkStatus !== NetworkStatus.loading && !equal(this.variables, query.variables)) {
            networkStatus = NetworkStatus.setVariables;
          }
          if (!equal(query.variables, this.variables)) {
            this.lastDiff = void 0;
          }
          Object.assign(this, {
            document: query.document,
            variables: query.variables,
            networkError: null,
            graphQLErrors: this.graphQLErrors || [],
            networkStatus
          });
          if (query.observableQuery) {
            this.setObservableQuery(query.observableQuery);
          }
          if (query.lastRequestId) {
            this.lastRequestId = query.lastRequestId;
          }
          return this;
        };
        QueryInfo2.prototype.reset = function() {
          cancelNotifyTimeout(this);
          this.dirty = false;
        };
        QueryInfo2.prototype.getDiff = function() {
          var options = this.getDiffOptions();
          if (this.lastDiff && equal(options, this.lastDiff.options)) {
            return this.lastDiff.diff;
          }
          this.updateWatch(this.variables);
          var oq = this.observableQuery;
          if (oq && oq.options.fetchPolicy === "no-cache") {
            return { complete: false };
          }
          var diff = this.cache.diff(options);
          this.updateLastDiff(diff, options);
          return diff;
        };
        QueryInfo2.prototype.updateLastDiff = function(diff, options) {
          this.lastDiff = diff ? {
            diff,
            options: options || this.getDiffOptions()
          } : void 0;
        };
        QueryInfo2.prototype.getDiffOptions = function(variables) {
          var _a2;
          if (variables === void 0) {
            variables = this.variables;
          }
          return {
            query: this.document,
            variables,
            returnPartialData: true,
            optimistic: true,
            canonizeResults: (_a2 = this.observableQuery) === null || _a2 === void 0 ? void 0 : _a2.options.canonizeResults
          };
        };
        QueryInfo2.prototype.setDiff = function(diff) {
          var _this = this;
          var oldDiff = this.lastDiff && this.lastDiff.diff;
          this.updateLastDiff(diff);
          if (!this.dirty && !equal(oldDiff && oldDiff.result, diff && diff.result)) {
            this.dirty = true;
            if (!this.notifyTimeout) {
              this.notifyTimeout = setTimeout(function() {
                return _this.notify();
              }, 0);
            }
          }
        };
        QueryInfo2.prototype.setObservableQuery = function(oq) {
          var _this = this;
          if (oq === this.observableQuery)
            return;
          if (this.oqListener) {
            this.listeners.delete(this.oqListener);
          }
          this.observableQuery = oq;
          if (oq) {
            oq["queryInfo"] = this;
            this.listeners.add(this.oqListener = function() {
              var diff = _this.getDiff();
              if (diff.fromOptimisticTransaction) {
                oq["observe"]();
              } else {
                reobserveCacheFirst(oq);
              }
            });
          } else {
            delete this.oqListener;
          }
        };
        QueryInfo2.prototype.notify = function() {
          var _this = this;
          cancelNotifyTimeout(this);
          if (this.shouldNotify()) {
            this.listeners.forEach(function(listener) {
              return listener(_this);
            });
          }
          this.dirty = false;
        };
        QueryInfo2.prototype.shouldNotify = function() {
          if (!this.dirty || !this.listeners.size) {
            return false;
          }
          if (isNetworkRequestInFlight(this.networkStatus) && this.observableQuery) {
            var fetchPolicy = this.observableQuery.options.fetchPolicy;
            if (fetchPolicy !== "cache-only" && fetchPolicy !== "cache-and-network") {
              return false;
            }
          }
          return true;
        };
        QueryInfo2.prototype.stop = function() {
          if (!this.stopped) {
            this.stopped = true;
            this.reset();
            this.cancel();
            this.cancel = QueryInfo2.prototype.cancel;
            var oq = this.observableQuery;
            if (oq)
              oq.stopPolling();
          }
        };
        QueryInfo2.prototype.cancel = function() {
        };
        QueryInfo2.prototype.updateWatch = function(variables) {
          var _this = this;
          if (variables === void 0) {
            variables = this.variables;
          }
          var oq = this.observableQuery;
          if (oq && oq.options.fetchPolicy === "no-cache") {
            return;
          }
          var watchOptions = __assign(__assign({}, this.getDiffOptions(variables)), { watcher: this, callback: function(diff) {
            return _this.setDiff(diff);
          } });
          if (!this.lastWatch || !equal(watchOptions, this.lastWatch)) {
            this.cancel();
            this.cancel = this.cache.watch(this.lastWatch = watchOptions);
          }
        };
        QueryInfo2.prototype.resetLastWrite = function() {
          this.lastWrite = void 0;
        };
        QueryInfo2.prototype.shouldWrite = function(result2, variables) {
          var lastWrite = this.lastWrite;
          return !(lastWrite && // If cache.evict has been called since the last time we wrote this
          // data into the cache, there's a chance writing this result into
          // the cache will repair what was evicted.
          lastWrite.dmCount === destructiveMethodCounts.get(this.cache) && equal(variables, lastWrite.variables) && equal(result2.data, lastWrite.result.data));
        };
        QueryInfo2.prototype.markResult = function(result2, document2, options, cacheWriteBehavior) {
          var _this = this;
          var merger = new DeepMerger();
          var graphQLErrors = isNonEmptyArray(result2.errors) ? result2.errors.slice(0) : [];
          this.reset();
          if ("incremental" in result2 && isNonEmptyArray(result2.incremental)) {
            var mergedData = mergeIncrementalData(this.getDiff().result, result2);
            result2.data = mergedData;
          } else if ("hasNext" in result2 && result2.hasNext) {
            var diff = this.getDiff();
            result2.data = merger.merge(diff.result, result2.data);
          }
          this.graphQLErrors = graphQLErrors;
          if (options.fetchPolicy === "no-cache") {
            this.updateLastDiff({ result: result2.data, complete: true }, this.getDiffOptions(options.variables));
          } else if (cacheWriteBehavior !== 0) {
            if (shouldWriteResult(result2, options.errorPolicy)) {
              this.cache.performTransaction(function(cache2) {
                if (_this.shouldWrite(result2, options.variables)) {
                  cache2.writeQuery({
                    query: document2,
                    data: result2.data,
                    variables: options.variables,
                    overwrite: cacheWriteBehavior === 1
                  });
                  _this.lastWrite = {
                    result: result2,
                    variables: options.variables,
                    dmCount: destructiveMethodCounts.get(_this.cache)
                  };
                } else {
                  if (_this.lastDiff && _this.lastDiff.diff.complete) {
                    result2.data = _this.lastDiff.diff.result;
                    return;
                  }
                }
                var diffOptions = _this.getDiffOptions(options.variables);
                var diff2 = cache2.diff(diffOptions);
                if (!_this.stopped && equal(_this.variables, options.variables)) {
                  _this.updateWatch(options.variables);
                }
                _this.updateLastDiff(diff2, diffOptions);
                if (diff2.complete) {
                  result2.data = diff2.result;
                }
              });
            } else {
              this.lastWrite = void 0;
            }
          }
        };
        QueryInfo2.prototype.markReady = function() {
          this.networkError = null;
          return this.networkStatus = NetworkStatus.ready;
        };
        QueryInfo2.prototype.markError = function(error) {
          this.networkStatus = NetworkStatus.error;
          this.lastWrite = void 0;
          this.reset();
          if (error.graphQLErrors) {
            this.graphQLErrors = error.graphQLErrors;
          }
          if (error.networkError) {
            this.networkError = error.networkError;
          }
          return error;
        };
        return QueryInfo2;
      }();
    }
  });

  // node_modules/@apollo/client/core/QueryManager.js
  var hasOwnProperty8, QueryManager;
  var init_QueryManager = __esm({
    "node_modules/@apollo/client/core/QueryManager.js"() {
      init_tslib_es6();
      init_globals();
      init_lib2();
      init_core();
      init_utilities();
      init_cache2();
      init_utilities();
      init_incrementalResult();
      init_errors();
      init_ObservableQuery();
      init_networkStatus();
      init_LocalState();
      init_QueryInfo();
      init_errors();
      init_utilities();
      hasOwnProperty8 = Object.prototype.hasOwnProperty;
      QueryManager = /** @class */
      function() {
        function QueryManager2(_a2) {
          var cache2 = _a2.cache, link = _a2.link, defaultOptions2 = _a2.defaultOptions, documentTransform = _a2.documentTransform, _b = _a2.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, onBroadcast = _a2.onBroadcast, _c = _a2.ssrMode, ssrMode = _c === void 0 ? false : _c, _d = _a2.clientAwareness, clientAwareness = _d === void 0 ? {} : _d, localState = _a2.localState, _e = _a2.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? !!cache2.assumeImmutableResults : _e;
          var _this = this;
          this.clientAwareness = {};
          this.queries = /* @__PURE__ */ new Map();
          this.fetchCancelFns = /* @__PURE__ */ new Map();
          this.transformCache = new (canUseWeakMap ? WeakMap : Map)();
          this.queryIdCounter = 1;
          this.requestIdCounter = 1;
          this.mutationIdCounter = 1;
          this.inFlightLinkObservables = /* @__PURE__ */ new Map();
          var defaultDocumentTransform = new DocumentTransform(
            function(document2) {
              return _this.cache.transformDocument(document2);
            },
            // Allow the apollo cache to manage its own transform caches
            { cache: false }
          );
          this.cache = cache2;
          this.link = link;
          this.defaultOptions = defaultOptions2 || /* @__PURE__ */ Object.create(null);
          this.queryDeduplication = queryDeduplication;
          this.clientAwareness = clientAwareness;
          this.localState = localState || new LocalState({ cache: cache2 });
          this.ssrMode = ssrMode;
          this.assumeImmutableResults = assumeImmutableResults;
          this.documentTransform = documentTransform ? defaultDocumentTransform.concat(documentTransform).concat(defaultDocumentTransform) : defaultDocumentTransform;
          if (this.onBroadcast = onBroadcast) {
            this.mutationStore = /* @__PURE__ */ Object.create(null);
          }
        }
        QueryManager2.prototype.stop = function() {
          var _this = this;
          this.queries.forEach(function(_info, queryId) {
            _this.stopQueryNoBroadcast(queryId);
          });
          this.cancelPendingFetches(newInvariantError(25));
        };
        QueryManager2.prototype.cancelPendingFetches = function(error) {
          this.fetchCancelFns.forEach(function(cancel) {
            return cancel(error);
          });
          this.fetchCancelFns.clear();
        };
        QueryManager2.prototype.mutate = function(_a2) {
          var _b, _c;
          var mutation = _a2.mutation, variables = _a2.variables, optimisticResponse = _a2.optimisticResponse, updateQueries = _a2.updateQueries, _d = _a2.refetchQueries, refetchQueries = _d === void 0 ? [] : _d, _e = _a2.awaitRefetchQueries, awaitRefetchQueries = _e === void 0 ? false : _e, updateWithProxyFn = _a2.update, onQueryUpdated = _a2.onQueryUpdated, _f = _a2.fetchPolicy, fetchPolicy = _f === void 0 ? ((_b = this.defaultOptions.mutate) === null || _b === void 0 ? void 0 : _b.fetchPolicy) || "network-only" : _f, _g = _a2.errorPolicy, errorPolicy = _g === void 0 ? ((_c = this.defaultOptions.mutate) === null || _c === void 0 ? void 0 : _c.errorPolicy) || "none" : _g, keepRootFields = _a2.keepRootFields, context = _a2.context;
          return __awaiter(this, void 0, void 0, function() {
            var mutationId, hasClientExports2, mutationStoreValue, self2;
            return __generator(this, function(_h) {
              switch (_h.label) {
                case 0:
                  invariant2(mutation, 26);
                  invariant2(fetchPolicy === "network-only" || fetchPolicy === "no-cache", 27);
                  mutationId = this.generateMutationId();
                  mutation = this.cache.transformForLink(this.transform(mutation));
                  hasClientExports2 = this.getDocumentInfo(mutation).hasClientExports;
                  variables = this.getVariables(mutation, variables);
                  if (!hasClientExports2)
                    return [3, 2];
                  return [4, this.localState.addExportedVariables(mutation, variables, context)];
                case 1:
                  variables = _h.sent();
                  _h.label = 2;
                case 2:
                  mutationStoreValue = this.mutationStore && (this.mutationStore[mutationId] = {
                    mutation,
                    variables,
                    loading: true,
                    error: null
                  });
                  if (optimisticResponse) {
                    this.markMutationOptimistic(optimisticResponse, {
                      mutationId,
                      document: mutation,
                      variables,
                      fetchPolicy,
                      errorPolicy,
                      context,
                      updateQueries,
                      update: updateWithProxyFn,
                      keepRootFields
                    });
                  }
                  this.broadcastQueries();
                  self2 = this;
                  return [2, new Promise(function(resolve2, reject2) {
                    return asyncMap(self2.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse }), variables, false), function(result2) {
                      if (graphQLResultHasError(result2) && errorPolicy === "none") {
                        throw new ApolloError({
                          graphQLErrors: getGraphQLErrorsFromResult(result2)
                        });
                      }
                      if (mutationStoreValue) {
                        mutationStoreValue.loading = false;
                        mutationStoreValue.error = null;
                      }
                      var storeResult = __assign({}, result2);
                      if (typeof refetchQueries === "function") {
                        refetchQueries = refetchQueries(storeResult);
                      }
                      if (errorPolicy === "ignore" && graphQLResultHasError(storeResult)) {
                        delete storeResult.errors;
                      }
                      return self2.markMutationResult({
                        mutationId,
                        result: storeResult,
                        document: mutation,
                        variables,
                        fetchPolicy,
                        errorPolicy,
                        context,
                        update: updateWithProxyFn,
                        updateQueries,
                        awaitRefetchQueries,
                        refetchQueries,
                        removeOptimistic: optimisticResponse ? mutationId : void 0,
                        onQueryUpdated,
                        keepRootFields
                      });
                    }).subscribe({
                      next: function(storeResult) {
                        self2.broadcastQueries();
                        if (!("hasNext" in storeResult) || storeResult.hasNext === false) {
                          resolve2(storeResult);
                        }
                      },
                      error: function(err) {
                        if (mutationStoreValue) {
                          mutationStoreValue.loading = false;
                          mutationStoreValue.error = err;
                        }
                        if (optimisticResponse) {
                          self2.cache.removeOptimistic(mutationId);
                        }
                        self2.broadcastQueries();
                        reject2(err instanceof ApolloError ? err : new ApolloError({
                          networkError: err
                        }));
                      }
                    });
                  })];
              }
            });
          });
        };
        QueryManager2.prototype.markMutationResult = function(mutation, cache2) {
          var _this = this;
          if (cache2 === void 0) {
            cache2 = this.cache;
          }
          var result2 = mutation.result;
          var cacheWrites = [];
          var skipCache = mutation.fetchPolicy === "no-cache";
          if (!skipCache && shouldWriteResult(result2, mutation.errorPolicy)) {
            if (!isExecutionPatchIncrementalResult(result2)) {
              cacheWrites.push({
                result: result2.data,
                dataId: "ROOT_MUTATION",
                query: mutation.document,
                variables: mutation.variables
              });
            }
            if (isExecutionPatchIncrementalResult(result2) && isNonEmptyArray(result2.incremental)) {
              var diff = cache2.diff({
                id: "ROOT_MUTATION",
                // The cache complains if passed a mutation where it expects a
                // query, so we transform mutations and subscriptions to queries
                // (only once, thanks to this.transformCache).
                query: this.getDocumentInfo(mutation.document).asQuery,
                variables: mutation.variables,
                optimistic: false,
                returnPartialData: true
              });
              var mergedData = void 0;
              if (diff.result) {
                mergedData = mergeIncrementalData(diff.result, result2);
              }
              if (typeof mergedData !== "undefined") {
                result2.data = mergedData;
                cacheWrites.push({
                  result: mergedData,
                  dataId: "ROOT_MUTATION",
                  query: mutation.document,
                  variables: mutation.variables
                });
              }
            }
            var updateQueries_1 = mutation.updateQueries;
            if (updateQueries_1) {
              this.queries.forEach(function(_a2, queryId) {
                var observableQuery = _a2.observableQuery;
                var queryName = observableQuery && observableQuery.queryName;
                if (!queryName || !hasOwnProperty8.call(updateQueries_1, queryName)) {
                  return;
                }
                var updater = updateQueries_1[queryName];
                var _b = _this.queries.get(queryId), document2 = _b.document, variables = _b.variables;
                var _c = cache2.diff({
                  query: document2,
                  variables,
                  returnPartialData: true,
                  optimistic: false
                }), currentQueryResult = _c.result, complete = _c.complete;
                if (complete && currentQueryResult) {
                  var nextQueryResult = updater(currentQueryResult, {
                    mutationResult: result2,
                    queryName: document2 && getOperationName(document2) || void 0,
                    queryVariables: variables
                  });
                  if (nextQueryResult) {
                    cacheWrites.push({
                      result: nextQueryResult,
                      dataId: "ROOT_QUERY",
                      query: document2,
                      variables
                    });
                  }
                }
              });
            }
          }
          if (cacheWrites.length > 0 || mutation.refetchQueries || mutation.update || mutation.onQueryUpdated || mutation.removeOptimistic) {
            var results_1 = [];
            this.refetchQueries({
              updateCache: function(cache3) {
                if (!skipCache) {
                  cacheWrites.forEach(function(write) {
                    return cache3.write(write);
                  });
                }
                var update = mutation.update;
                var isFinalResult = !isExecutionPatchResult(result2) || isExecutionPatchIncrementalResult(result2) && !result2.hasNext;
                if (update) {
                  if (!skipCache) {
                    var diff2 = cache3.diff({
                      id: "ROOT_MUTATION",
                      // The cache complains if passed a mutation where it expects a
                      // query, so we transform mutations and subscriptions to queries
                      // (only once, thanks to this.transformCache).
                      query: _this.getDocumentInfo(mutation.document).asQuery,
                      variables: mutation.variables,
                      optimistic: false,
                      returnPartialData: true
                    });
                    if (diff2.complete) {
                      result2 = __assign(__assign({}, result2), { data: diff2.result });
                      if ("incremental" in result2) {
                        delete result2.incremental;
                      }
                      if ("hasNext" in result2) {
                        delete result2.hasNext;
                      }
                    }
                  }
                  if (isFinalResult) {
                    update(cache3, result2, {
                      context: mutation.context,
                      variables: mutation.variables
                    });
                  }
                }
                if (!skipCache && !mutation.keepRootFields && isFinalResult) {
                  cache3.modify({
                    id: "ROOT_MUTATION",
                    fields: function(value2, _a2) {
                      var fieldName = _a2.fieldName, DELETE2 = _a2.DELETE;
                      return fieldName === "__typename" ? value2 : DELETE2;
                    }
                  });
                }
              },
              include: mutation.refetchQueries,
              // Write the final mutation.result to the root layer of the cache.
              optimistic: false,
              // Remove the corresponding optimistic layer at the same time as we
              // write the final non-optimistic result.
              removeOptimistic: mutation.removeOptimistic,
              // Let the caller of client.mutate optionally determine the refetching
              // behavior for watched queries after the mutation.update function runs.
              // If no onQueryUpdated function was provided for this mutation, pass
              // null instead of undefined to disable the default refetching behavior.
              onQueryUpdated: mutation.onQueryUpdated || null
            }).forEach(function(result3) {
              return results_1.push(result3);
            });
            if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {
              return Promise.all(results_1).then(function() {
                return result2;
              });
            }
          }
          return Promise.resolve(result2);
        };
        QueryManager2.prototype.markMutationOptimistic = function(optimisticResponse, mutation) {
          var _this = this;
          var data2 = typeof optimisticResponse === "function" ? optimisticResponse(mutation.variables) : optimisticResponse;
          return this.cache.recordOptimisticTransaction(function(cache2) {
            try {
              _this.markMutationResult(__assign(__assign({}, mutation), { result: { data: data2 } }), cache2);
            } catch (error) {
            }
          }, mutation.mutationId);
        };
        QueryManager2.prototype.fetchQuery = function(queryId, options, networkStatus) {
          return this.fetchConcastWithInfo(queryId, options, networkStatus).concast.promise;
        };
        QueryManager2.prototype.getQueryStore = function() {
          var store = /* @__PURE__ */ Object.create(null);
          this.queries.forEach(function(info, queryId) {
            store[queryId] = {
              variables: info.variables,
              networkStatus: info.networkStatus,
              networkError: info.networkError,
              graphQLErrors: info.graphQLErrors
            };
          });
          return store;
        };
        QueryManager2.prototype.resetErrors = function(queryId) {
          var queryInfo = this.queries.get(queryId);
          if (queryInfo) {
            queryInfo.networkError = void 0;
            queryInfo.graphQLErrors = [];
          }
        };
        QueryManager2.prototype.transform = function(document2) {
          return this.documentTransform.transformDocument(document2);
        };
        QueryManager2.prototype.getDocumentInfo = function(document2) {
          var transformCache = this.transformCache;
          if (!transformCache.has(document2)) {
            var cacheEntry = {
              // TODO These three calls (hasClientExports, shouldForceResolvers, and
              // usesNonreactiveDirective) are performing independent full traversals
              // of the transformed document. We should consider merging these
              // traversals into a single pass in the future, though the work is
              // cached after the first time.
              hasClientExports: hasClientExports(document2),
              hasForcedResolvers: this.localState.shouldForceResolvers(document2),
              hasNonreactiveDirective: hasDirectives(["nonreactive"], document2),
              clientQuery: this.localState.clientQuery(document2),
              serverQuery: removeDirectivesFromDocument([
                { name: "client", remove: true },
                { name: "connection" },
                { name: "nonreactive" }
              ], document2),
              defaultVars: getDefaultValues(getOperationDefinition(document2)),
              // Transform any mutation or subscription operations to query operations
              // so we can read/write them from/to the cache.
              asQuery: __assign(__assign({}, document2), { definitions: document2.definitions.map(function(def) {
                if (def.kind === "OperationDefinition" && def.operation !== "query") {
                  return __assign(__assign({}, def), { operation: "query" });
                }
                return def;
              }) })
            };
            transformCache.set(document2, cacheEntry);
          }
          return transformCache.get(document2);
        };
        QueryManager2.prototype.getVariables = function(document2, variables) {
          return __assign(__assign({}, this.getDocumentInfo(document2).defaultVars), variables);
        };
        QueryManager2.prototype.watchQuery = function(options) {
          var query = this.transform(options.query);
          options = __assign(__assign({}, options), { variables: this.getVariables(query, options.variables) });
          if (typeof options.notifyOnNetworkStatusChange === "undefined") {
            options.notifyOnNetworkStatusChange = false;
          }
          var queryInfo = new QueryInfo(this);
          var observable = new ObservableQuery({
            queryManager: this,
            queryInfo,
            options
          });
          observable["lastQuery"] = query;
          this.queries.set(observable.queryId, queryInfo);
          queryInfo.init({
            document: query,
            observableQuery: observable,
            variables: observable.variables
          });
          return observable;
        };
        QueryManager2.prototype.query = function(options, queryId) {
          var _this = this;
          if (queryId === void 0) {
            queryId = this.generateQueryId();
          }
          invariant2(options.query, 28);
          invariant2(options.query.kind === "Document", 29);
          invariant2(!options.returnPartialData, 30);
          invariant2(!options.pollInterval, 31);
          return this.fetchQuery(queryId, __assign(__assign({}, options), { query: this.transform(options.query) })).finally(function() {
            return _this.stopQuery(queryId);
          });
        };
        QueryManager2.prototype.generateQueryId = function() {
          return String(this.queryIdCounter++);
        };
        QueryManager2.prototype.generateRequestId = function() {
          return this.requestIdCounter++;
        };
        QueryManager2.prototype.generateMutationId = function() {
          return String(this.mutationIdCounter++);
        };
        QueryManager2.prototype.stopQueryInStore = function(queryId) {
          this.stopQueryInStoreNoBroadcast(queryId);
          this.broadcastQueries();
        };
        QueryManager2.prototype.stopQueryInStoreNoBroadcast = function(queryId) {
          var queryInfo = this.queries.get(queryId);
          if (queryInfo)
            queryInfo.stop();
        };
        QueryManager2.prototype.clearStore = function(options) {
          if (options === void 0) {
            options = {
              discardWatches: true
            };
          }
          this.cancelPendingFetches(newInvariantError(32));
          this.queries.forEach(function(queryInfo) {
            if (queryInfo.observableQuery) {
              queryInfo.networkStatus = NetworkStatus.loading;
            } else {
              queryInfo.stop();
            }
          });
          if (this.mutationStore) {
            this.mutationStore = /* @__PURE__ */ Object.create(null);
          }
          return this.cache.reset(options);
        };
        QueryManager2.prototype.getObservableQueries = function(include) {
          var _this = this;
          if (include === void 0) {
            include = "active";
          }
          var queries = /* @__PURE__ */ new Map();
          var queryNamesAndDocs = /* @__PURE__ */ new Map();
          var legacyQueryOptions = /* @__PURE__ */ new Set();
          if (Array.isArray(include)) {
            include.forEach(function(desc) {
              if (typeof desc === "string") {
                queryNamesAndDocs.set(desc, false);
              } else if (isDocumentNode(desc)) {
                queryNamesAndDocs.set(_this.transform(desc), false);
              } else if (isNonNullObject(desc) && desc.query) {
                legacyQueryOptions.add(desc);
              }
            });
          }
          this.queries.forEach(function(_a2, queryId) {
            var oq = _a2.observableQuery, document2 = _a2.document;
            if (oq) {
              if (include === "all") {
                queries.set(queryId, oq);
                return;
              }
              var queryName = oq.queryName, fetchPolicy = oq.options.fetchPolicy;
              if (fetchPolicy === "standby" || include === "active" && !oq.hasObservers()) {
                return;
              }
              if (include === "active" || queryName && queryNamesAndDocs.has(queryName) || document2 && queryNamesAndDocs.has(document2)) {
                queries.set(queryId, oq);
                if (queryName)
                  queryNamesAndDocs.set(queryName, true);
                if (document2)
                  queryNamesAndDocs.set(document2, true);
              }
            }
          });
          if (legacyQueryOptions.size) {
            legacyQueryOptions.forEach(function(options) {
              var queryId = makeUniqueId("legacyOneTimeQuery");
              var queryInfo = _this.getQuery(queryId).init({
                document: options.query,
                variables: options.variables
              });
              var oq = new ObservableQuery({
                queryManager: _this,
                queryInfo,
                options: __assign(__assign({}, options), { fetchPolicy: "network-only" })
              });
              invariant2(oq.queryId === queryId);
              queryInfo.setObservableQuery(oq);
              queries.set(queryId, oq);
            });
          }
          if (false) {
            queryNamesAndDocs.forEach(function(included, nameOrDoc) {
              if (!included) {
              }
            });
          }
          return queries;
        };
        QueryManager2.prototype.reFetchObservableQueries = function(includeStandby) {
          var _this = this;
          if (includeStandby === void 0) {
            includeStandby = false;
          }
          var observableQueryPromises = [];
          this.getObservableQueries(includeStandby ? "all" : "active").forEach(function(observableQuery, queryId) {
            var fetchPolicy = observableQuery.options.fetchPolicy;
            observableQuery.resetLastResults();
            if (includeStandby || fetchPolicy !== "standby" && fetchPolicy !== "cache-only") {
              observableQueryPromises.push(observableQuery.refetch());
            }
            _this.getQuery(queryId).setDiff(null);
          });
          this.broadcastQueries();
          return Promise.all(observableQueryPromises);
        };
        QueryManager2.prototype.setObservableQuery = function(observableQuery) {
          this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);
        };
        QueryManager2.prototype.startGraphQLSubscription = function(_a2) {
          var _this = this;
          var query = _a2.query, fetchPolicy = _a2.fetchPolicy, _b = _a2.errorPolicy, errorPolicy = _b === void 0 ? "none" : _b, variables = _a2.variables, _c = _a2.context, context = _c === void 0 ? {} : _c;
          query = this.transform(query);
          variables = this.getVariables(query, variables);
          var makeObservable = function(variables2) {
            return _this.getObservableFromLink(query, context, variables2).map(function(result2) {
              if (fetchPolicy !== "no-cache") {
                if (shouldWriteResult(result2, errorPolicy)) {
                  _this.cache.write({
                    query,
                    result: result2.data,
                    dataId: "ROOT_SUBSCRIPTION",
                    variables: variables2
                  });
                }
                _this.broadcastQueries();
              }
              var hasErrors2 = graphQLResultHasError(result2);
              var hasProtocolErrors = graphQLResultHasProtocolErrors(result2);
              if (hasErrors2 || hasProtocolErrors) {
                var errors = {};
                if (hasErrors2) {
                  errors.graphQLErrors = result2.errors;
                }
                if (hasProtocolErrors) {
                  errors.protocolErrors = result2.extensions[PROTOCOL_ERRORS_SYMBOL];
                }
                if (errorPolicy === "none" || hasProtocolErrors) {
                  throw new ApolloError(errors);
                }
              }
              if (errorPolicy === "ignore") {
                delete result2.errors;
              }
              return result2;
            });
          };
          if (this.getDocumentInfo(query).hasClientExports) {
            var observablePromise_1 = this.localState.addExportedVariables(query, variables, context).then(makeObservable);
            return new Observable(function(observer) {
              var sub2 = null;
              observablePromise_1.then(function(observable) {
                return sub2 = observable.subscribe(observer);
              }, observer.error);
              return function() {
                return sub2 && sub2.unsubscribe();
              };
            });
          }
          return makeObservable(variables);
        };
        QueryManager2.prototype.stopQuery = function(queryId) {
          this.stopQueryNoBroadcast(queryId);
          this.broadcastQueries();
        };
        QueryManager2.prototype.stopQueryNoBroadcast = function(queryId) {
          this.stopQueryInStoreNoBroadcast(queryId);
          this.removeQuery(queryId);
        };
        QueryManager2.prototype.removeQuery = function(queryId) {
          this.fetchCancelFns.delete(queryId);
          if (this.queries.has(queryId)) {
            this.getQuery(queryId).stop();
            this.queries.delete(queryId);
          }
        };
        QueryManager2.prototype.broadcastQueries = function() {
          if (this.onBroadcast)
            this.onBroadcast();
          this.queries.forEach(function(info) {
            return info.notify();
          });
        };
        QueryManager2.prototype.getLocalState = function() {
          return this.localState;
        };
        QueryManager2.prototype.getObservableFromLink = function(query, context, variables, deduplication) {
          var _this = this;
          var _a2;
          if (deduplication === void 0) {
            deduplication = (_a2 = context === null || context === void 0 ? void 0 : context.queryDeduplication) !== null && _a2 !== void 0 ? _a2 : this.queryDeduplication;
          }
          var observable;
          var _b = this.getDocumentInfo(query), serverQuery = _b.serverQuery, clientQuery = _b.clientQuery;
          if (serverQuery) {
            var _c = this, inFlightLinkObservables_1 = _c.inFlightLinkObservables, link = _c.link;
            var operation = {
              query: serverQuery,
              variables,
              operationName: getOperationName(serverQuery) || void 0,
              context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication }))
            };
            context = operation.context;
            if (deduplication) {
              var printedServerQuery_1 = print2(serverQuery);
              var byVariables_1 = inFlightLinkObservables_1.get(printedServerQuery_1) || /* @__PURE__ */ new Map();
              inFlightLinkObservables_1.set(printedServerQuery_1, byVariables_1);
              var varJson_1 = canonicalStringify(variables);
              observable = byVariables_1.get(varJson_1);
              if (!observable) {
                var concast = new Concast([
                  execute(link, operation)
                ]);
                byVariables_1.set(varJson_1, observable = concast);
                concast.beforeNext(function() {
                  if (byVariables_1.delete(varJson_1) && byVariables_1.size < 1) {
                    inFlightLinkObservables_1.delete(printedServerQuery_1);
                  }
                });
              }
            } else {
              observable = new Concast([
                execute(link, operation)
              ]);
            }
          } else {
            observable = new Concast([Observable.of({ data: {} })]);
            context = this.prepareContext(context);
          }
          if (clientQuery) {
            observable = asyncMap(observable, function(result2) {
              return _this.localState.runResolvers({
                document: clientQuery,
                remoteResult: result2,
                context,
                variables
              });
            });
          }
          return observable;
        };
        QueryManager2.prototype.getResultsFromLink = function(queryInfo, cacheWriteBehavior, options) {
          var requestId = queryInfo.lastRequestId = this.generateRequestId();
          var linkDocument = this.cache.transformForLink(options.query);
          return asyncMap(this.getObservableFromLink(linkDocument, options.context, options.variables), function(result2) {
            var graphQLErrors = getGraphQLErrorsFromResult(result2);
            var hasErrors2 = graphQLErrors.length > 0;
            if (requestId >= queryInfo.lastRequestId) {
              if (hasErrors2 && options.errorPolicy === "none") {
                throw queryInfo.markError(new ApolloError({
                  graphQLErrors
                }));
              }
              queryInfo.markResult(result2, linkDocument, options, cacheWriteBehavior);
              queryInfo.markReady();
            }
            var aqr = {
              data: result2.data,
              loading: false,
              networkStatus: NetworkStatus.ready
            };
            if (hasErrors2 && options.errorPolicy !== "ignore") {
              aqr.errors = graphQLErrors;
              aqr.networkStatus = NetworkStatus.error;
            }
            return aqr;
          }, function(networkError) {
            var error = isApolloError(networkError) ? networkError : new ApolloError({ networkError });
            if (requestId >= queryInfo.lastRequestId) {
              queryInfo.markError(error);
            }
            throw error;
          });
        };
        QueryManager2.prototype.fetchConcastWithInfo = function(queryId, options, networkStatus, query) {
          var _this = this;
          if (networkStatus === void 0) {
            networkStatus = NetworkStatus.loading;
          }
          if (query === void 0) {
            query = options.query;
          }
          var variables = this.getVariables(query, options.variables);
          var queryInfo = this.getQuery(queryId);
          var defaults = this.defaultOptions.watchQuery;
          var _a2 = options.fetchPolicy, fetchPolicy = _a2 === void 0 ? defaults && defaults.fetchPolicy || "cache-first" : _a2, _b = options.errorPolicy, errorPolicy = _b === void 0 ? defaults && defaults.errorPolicy || "none" : _b, _c = options.returnPartialData, returnPartialData = _c === void 0 ? false : _c, _d = options.notifyOnNetworkStatusChange, notifyOnNetworkStatusChange = _d === void 0 ? false : _d, _e = options.context, context = _e === void 0 ? {} : _e;
          var normalized = Object.assign({}, options, {
            query,
            variables,
            fetchPolicy,
            errorPolicy,
            returnPartialData,
            notifyOnNetworkStatusChange,
            context
          });
          var fromVariables = function(variables2) {
            normalized.variables = variables2;
            var sourcesWithInfo2 = _this.fetchQueryByPolicy(queryInfo, normalized, networkStatus);
            if (
              // If we're in standby, postpone advancing options.fetchPolicy using
              // applyNextFetchPolicy.
              normalized.fetchPolicy !== "standby" && // The "standby" policy currently returns [] from fetchQueryByPolicy, so
              // this is another way to detect when nothing was done/fetched.
              sourcesWithInfo2.sources.length > 0 && queryInfo.observableQuery
            ) {
              queryInfo.observableQuery["applyNextFetchPolicy"]("after-fetch", options);
            }
            return sourcesWithInfo2;
          };
          var cleanupCancelFn = function() {
            return _this.fetchCancelFns.delete(queryId);
          };
          this.fetchCancelFns.set(queryId, function(reason) {
            cleanupCancelFn();
            setTimeout(function() {
              return concast.cancel(reason);
            });
          });
          var concast, containsDataFromLink;
          if (this.getDocumentInfo(normalized.query).hasClientExports) {
            concast = new Concast(this.localState.addExportedVariables(normalized.query, normalized.variables, normalized.context).then(fromVariables).then(function(sourcesWithInfo2) {
              return sourcesWithInfo2.sources;
            }));
            containsDataFromLink = true;
          } else {
            var sourcesWithInfo = fromVariables(normalized.variables);
            containsDataFromLink = sourcesWithInfo.fromLink;
            concast = new Concast(sourcesWithInfo.sources);
          }
          concast.promise.then(cleanupCancelFn, cleanupCancelFn);
          return {
            concast,
            fromLink: containsDataFromLink
          };
        };
        QueryManager2.prototype.refetchQueries = function(_a2) {
          var _this = this;
          var updateCache = _a2.updateCache, include = _a2.include, _b = _a2.optimistic, optimistic = _b === void 0 ? false : _b, _c = _a2.removeOptimistic, removeOptimistic = _c === void 0 ? optimistic ? makeUniqueId("refetchQueries") : void 0 : _c, onQueryUpdated = _a2.onQueryUpdated;
          var includedQueriesById = /* @__PURE__ */ new Map();
          if (include) {
            this.getObservableQueries(include).forEach(function(oq, queryId) {
              includedQueriesById.set(queryId, {
                oq,
                lastDiff: _this.getQuery(queryId).getDiff()
              });
            });
          }
          var results = /* @__PURE__ */ new Map();
          if (updateCache) {
            this.cache.batch({
              update: updateCache,
              // Since you can perform any combination of cache reads and/or writes in
              // the cache.batch update function, its optimistic option can be either
              // a boolean or a string, representing three distinct modes of
              // operation:
              //
              // * false: read/write only the root layer
              // * true: read/write the topmost layer
              // * string: read/write a fresh optimistic layer with that ID string
              //
              // When typeof optimistic === "string", a new optimistic layer will be
              // temporarily created within cache.batch with that string as its ID. If
              // we then pass that same string as the removeOptimistic option, we can
              // make cache.batch immediately remove the optimistic layer after
              // running the updateCache function, triggering only one broadcast.
              //
              // However, the refetchQueries method accepts only true or false for its
              // optimistic option (not string). We interpret true to mean a temporary
              // optimistic layer should be created, to allow efficiently rolling back
              // the effect of the updateCache function, which involves passing a
              // string instead of true as the optimistic option to cache.batch, when
              // refetchQueries receives optimistic: true.
              //
              // In other words, we are deliberately not supporting the use case of
              // writing to an *existing* optimistic layer (using the refetchQueries
              // updateCache function), since that would potentially interfere with
              // other optimistic updates in progress. Instead, you can read/write
              // only the root layer by passing optimistic: false to refetchQueries,
              // or you can read/write a brand new optimistic layer that will be
              // automatically removed by passing optimistic: true.
              optimistic: optimistic && removeOptimistic || false,
              // The removeOptimistic option can also be provided by itself, even if
              // optimistic === false, to remove some previously-added optimistic
              // layer safely and efficiently, like we do in markMutationResult.
              //
              // If an explicit removeOptimistic string is provided with optimistic:
              // true, the removeOptimistic string will determine the ID of the
              // temporary optimistic layer, in case that ever matters.
              removeOptimistic,
              onWatchUpdated: function(watch, diff, lastDiff) {
                var oq = watch.watcher instanceof QueryInfo && watch.watcher.observableQuery;
                if (oq) {
                  if (onQueryUpdated) {
                    includedQueriesById.delete(oq.queryId);
                    var result2 = onQueryUpdated(oq, diff, lastDiff);
                    if (result2 === true) {
                      result2 = oq.refetch();
                    }
                    if (result2 !== false) {
                      results.set(oq, result2);
                    }
                    return result2;
                  }
                  if (onQueryUpdated !== null) {
                    includedQueriesById.set(oq.queryId, { oq, lastDiff, diff });
                  }
                }
              }
            });
          }
          if (includedQueriesById.size) {
            includedQueriesById.forEach(function(_a3, queryId) {
              var oq = _a3.oq, lastDiff = _a3.lastDiff, diff = _a3.diff;
              var result2;
              if (onQueryUpdated) {
                if (!diff) {
                  var info = oq["queryInfo"];
                  info.reset();
                  diff = info.getDiff();
                }
                result2 = onQueryUpdated(oq, diff, lastDiff);
              }
              if (!onQueryUpdated || result2 === true) {
                result2 = oq.refetch();
              }
              if (result2 !== false) {
                results.set(oq, result2);
              }
              if (queryId.indexOf("legacyOneTimeQuery") >= 0) {
                _this.stopQueryNoBroadcast(queryId);
              }
            });
          }
          if (removeOptimistic) {
            this.cache.removeOptimistic(removeOptimistic);
          }
          return results;
        };
        QueryManager2.prototype.fetchQueryByPolicy = function(queryInfo, _a2, networkStatus) {
          var _this = this;
          var query = _a2.query, variables = _a2.variables, fetchPolicy = _a2.fetchPolicy, refetchWritePolicy = _a2.refetchWritePolicy, errorPolicy = _a2.errorPolicy, returnPartialData = _a2.returnPartialData, context = _a2.context, notifyOnNetworkStatusChange = _a2.notifyOnNetworkStatusChange;
          var oldNetworkStatus = queryInfo.networkStatus;
          queryInfo.init({
            document: query,
            variables,
            networkStatus
          });
          var readCache = function() {
            return queryInfo.getDiff();
          };
          var resultsFromCache = function(diff2, networkStatus2) {
            if (networkStatus2 === void 0) {
              networkStatus2 = queryInfo.networkStatus || NetworkStatus.loading;
            }
            var data2 = diff2.result;
            if (false) {
              logMissingFieldErrors(diff2.missing);
            }
            var fromData = function(data3) {
              return Observable.of(__assign({ data: data3, loading: isNetworkRequestInFlight(networkStatus2), networkStatus: networkStatus2 }, diff2.complete ? null : { partial: true }));
            };
            if (data2 && _this.getDocumentInfo(query).hasForcedResolvers) {
              return _this.localState.runResolvers({
                document: query,
                remoteResult: { data: data2 },
                context,
                variables,
                onlyRunForcedResolvers: true
              }).then(function(resolved) {
                return fromData(resolved.data || void 0);
              });
            }
            if (errorPolicy === "none" && networkStatus2 === NetworkStatus.refetch && Array.isArray(diff2.missing)) {
              return fromData(void 0);
            }
            return fromData(data2);
          };
          var cacheWriteBehavior = fetchPolicy === "no-cache" ? 0 : networkStatus === NetworkStatus.refetch && refetchWritePolicy !== "merge" ? 1 : 2;
          var resultsFromLink = function() {
            return _this.getResultsFromLink(queryInfo, cacheWriteBehavior, {
              query,
              variables,
              context,
              fetchPolicy,
              errorPolicy
            });
          };
          var shouldNotify = notifyOnNetworkStatusChange && typeof oldNetworkStatus === "number" && oldNetworkStatus !== networkStatus && isNetworkRequestInFlight(networkStatus);
          switch (fetchPolicy) {
            default:
            case "cache-first": {
              var diff = readCache();
              if (diff.complete) {
                return {
                  fromLink: false,
                  sources: [resultsFromCache(diff, queryInfo.markReady())]
                };
              }
              if (returnPartialData || shouldNotify) {
                return {
                  fromLink: true,
                  sources: [resultsFromCache(diff), resultsFromLink()]
                };
              }
              return { fromLink: true, sources: [resultsFromLink()] };
            }
            case "cache-and-network": {
              var diff = readCache();
              if (diff.complete || returnPartialData || shouldNotify) {
                return {
                  fromLink: true,
                  sources: [resultsFromCache(diff), resultsFromLink()]
                };
              }
              return { fromLink: true, sources: [resultsFromLink()] };
            }
            case "cache-only":
              return {
                fromLink: false,
                sources: [resultsFromCache(readCache(), queryInfo.markReady())]
              };
            case "network-only":
              if (shouldNotify) {
                return {
                  fromLink: true,
                  sources: [resultsFromCache(readCache()), resultsFromLink()]
                };
              }
              return { fromLink: true, sources: [resultsFromLink()] };
            case "no-cache":
              if (shouldNotify) {
                return {
                  fromLink: true,
                  // Note that queryInfo.getDiff() for no-cache queries does not call
                  // cache.diff, but instead returns a { complete: false } stub result
                  // when there is no queryInfo.diff already defined.
                  sources: [resultsFromCache(queryInfo.getDiff()), resultsFromLink()]
                };
              }
              return { fromLink: true, sources: [resultsFromLink()] };
            case "standby":
              return { fromLink: false, sources: [] };
          }
        };
        QueryManager2.prototype.getQuery = function(queryId) {
          if (queryId && !this.queries.has(queryId)) {
            this.queries.set(queryId, new QueryInfo(this, queryId));
          }
          return this.queries.get(queryId);
        };
        QueryManager2.prototype.prepareContext = function(context) {
          if (context === void 0) {
            context = {};
          }
          var newContext = this.localState.prepareContext(context);
          return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });
        };
        return QueryManager2;
      }();
    }
  });

  // node_modules/@apollo/client/core/ApolloClient.js
  var hasSuggestedDevtools, ApolloClient;
  var init_ApolloClient = __esm({
    "node_modules/@apollo/client/core/ApolloClient.js"() {
      init_tslib_es6();
      init_globals();
      init_core();
      init_version();
      init_http();
      init_QueryManager();
      init_LocalState();
      init_utilities();
      hasSuggestedDevtools = false;
      ApolloClient = /** @class */
      function() {
        function ApolloClient2(options) {
          var _this = this;
          this.resetStoreCallbacks = [];
          this.clearStoreCallbacks = [];
          if (!options.cache) {
            throw newInvariantError(15);
          }
          var uri = options.uri, credentials = options.credentials, headers = options.headers, cache2 = options.cache, documentTransform = options.documentTransform, _a2 = options.ssrMode, ssrMode = _a2 === void 0 ? false : _a2, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, _c = options.connectToDevTools, connectToDevTools = _c === void 0 ? typeof window === "object" && !window.__APOLLO_CLIENT__ && false : _c, _d = options.queryDeduplication, queryDeduplication = _d === void 0 ? true : _d, defaultOptions2 = options.defaultOptions, _e = options.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? cache2.assumeImmutableResults : _e, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;
          var link = options.link;
          if (!link) {
            link = uri ? new HttpLink({ uri, credentials, headers }) : ApolloLink.empty();
          }
          this.link = link;
          this.cache = cache2;
          this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;
          this.queryDeduplication = queryDeduplication;
          this.defaultOptions = defaultOptions2 || /* @__PURE__ */ Object.create(null);
          this.typeDefs = typeDefs;
          if (ssrForceFetchDelay) {
            setTimeout(function() {
              return _this.disableNetworkFetches = false;
            }, ssrForceFetchDelay);
          }
          this.watchQuery = this.watchQuery.bind(this);
          this.query = this.query.bind(this);
          this.mutate = this.mutate.bind(this);
          this.resetStore = this.resetStore.bind(this);
          this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);
          this.version = version;
          this.localState = new LocalState({
            cache: cache2,
            client: this,
            resolvers,
            fragmentMatcher
          });
          this.queryManager = new QueryManager({
            cache: this.cache,
            link: this.link,
            defaultOptions: this.defaultOptions,
            documentTransform,
            queryDeduplication,
            ssrMode,
            clientAwareness: {
              name: clientAwarenessName,
              version: clientAwarenessVersion
            },
            localState: this.localState,
            assumeImmutableResults,
            onBroadcast: connectToDevTools ? function() {
              if (_this.devToolsHookCb) {
                _this.devToolsHookCb({
                  action: {},
                  state: {
                    queries: _this.queryManager.getQueryStore(),
                    mutations: _this.queryManager.mutationStore || {}
                  },
                  dataWithOptimisticResults: _this.cache.extract(true)
                });
              }
            } : void 0
          });
          if (connectToDevTools)
            this.connectToDevTools();
        }
        ApolloClient2.prototype.connectToDevTools = function() {
          if (typeof window === "object") {
            var windowWithDevTools = window;
            var devtoolsSymbol = Symbol.for("apollo.devtools");
            (windowWithDevTools[devtoolsSymbol] = windowWithDevTools[devtoolsSymbol] || []).push(this);
            windowWithDevTools.__APOLLO_CLIENT__ = this;
          }
          if (!hasSuggestedDevtools && false) {
            hasSuggestedDevtools = true;
            setTimeout(function() {
              if (typeof window !== "undefined" && window.document && window.top === window.self && !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {
                var nav = window.navigator;
                var ua2 = nav && nav.userAgent;
                var url = void 0;
                if (typeof ua2 === "string") {
                  if (ua2.indexOf("Chrome/") > -1) {
                    url = "https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm";
                  } else if (ua2.indexOf("Firefox/") > -1) {
                    url = "https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/";
                  }
                }
                if (url) {
                }
              }
            }, 1e4);
          }
        };
        Object.defineProperty(ApolloClient2.prototype, "documentTransform", {
          /**
           * The `DocumentTransform` used to modify GraphQL documents before a request
           * is made. If a custom `DocumentTransform` is not provided, this will be the
           * default document transform.
           */
          get: function() {
            return this.queryManager.documentTransform;
          },
          enumerable: false,
          configurable: true
        });
        ApolloClient2.prototype.stop = function() {
          this.queryManager.stop();
        };
        ApolloClient2.prototype.watchQuery = function(options) {
          if (this.defaultOptions.watchQuery) {
            options = mergeOptions(this.defaultOptions.watchQuery, options);
          }
          if (this.disableNetworkFetches && (options.fetchPolicy === "network-only" || options.fetchPolicy === "cache-and-network")) {
            options = __assign(__assign({}, options), { fetchPolicy: "cache-first" });
          }
          return this.queryManager.watchQuery(options);
        };
        ApolloClient2.prototype.query = function(options) {
          if (this.defaultOptions.query) {
            options = mergeOptions(this.defaultOptions.query, options);
          }
          invariant2(options.fetchPolicy !== "cache-and-network", 16);
          if (this.disableNetworkFetches && options.fetchPolicy === "network-only") {
            options = __assign(__assign({}, options), { fetchPolicy: "cache-first" });
          }
          return this.queryManager.query(options);
        };
        ApolloClient2.prototype.mutate = function(options) {
          if (this.defaultOptions.mutate) {
            options = mergeOptions(this.defaultOptions.mutate, options);
          }
          return this.queryManager.mutate(options);
        };
        ApolloClient2.prototype.subscribe = function(options) {
          return this.queryManager.startGraphQLSubscription(options);
        };
        ApolloClient2.prototype.readQuery = function(options, optimistic) {
          if (optimistic === void 0) {
            optimistic = false;
          }
          return this.cache.readQuery(options, optimistic);
        };
        ApolloClient2.prototype.readFragment = function(options, optimistic) {
          if (optimistic === void 0) {
            optimistic = false;
          }
          return this.cache.readFragment(options, optimistic);
        };
        ApolloClient2.prototype.writeQuery = function(options) {
          var ref = this.cache.writeQuery(options);
          if (options.broadcast !== false) {
            this.queryManager.broadcastQueries();
          }
          return ref;
        };
        ApolloClient2.prototype.writeFragment = function(options) {
          var ref = this.cache.writeFragment(options);
          if (options.broadcast !== false) {
            this.queryManager.broadcastQueries();
          }
          return ref;
        };
        ApolloClient2.prototype.__actionHookForDevTools = function(cb) {
          this.devToolsHookCb = cb;
        };
        ApolloClient2.prototype.__requestRaw = function(payload) {
          return execute(this.link, payload);
        };
        ApolloClient2.prototype.resetStore = function() {
          var _this = this;
          return Promise.resolve().then(function() {
            return _this.queryManager.clearStore({
              discardWatches: false
            });
          }).then(function() {
            return Promise.all(_this.resetStoreCallbacks.map(function(fn) {
              return fn();
            }));
          }).then(function() {
            return _this.reFetchObservableQueries();
          });
        };
        ApolloClient2.prototype.clearStore = function() {
          var _this = this;
          return Promise.resolve().then(function() {
            return _this.queryManager.clearStore({
              discardWatches: true
            });
          }).then(function() {
            return Promise.all(_this.clearStoreCallbacks.map(function(fn) {
              return fn();
            }));
          });
        };
        ApolloClient2.prototype.onResetStore = function(cb) {
          var _this = this;
          this.resetStoreCallbacks.push(cb);
          return function() {
            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function(c) {
              return c !== cb;
            });
          };
        };
        ApolloClient2.prototype.onClearStore = function(cb) {
          var _this = this;
          this.clearStoreCallbacks.push(cb);
          return function() {
            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function(c) {
              return c !== cb;
            });
          };
        };
        ApolloClient2.prototype.reFetchObservableQueries = function(includeStandby) {
          return this.queryManager.reFetchObservableQueries(includeStandby);
        };
        ApolloClient2.prototype.refetchQueries = function(options) {
          var map = this.queryManager.refetchQueries(options);
          var queries = [];
          var results = [];
          map.forEach(function(result3, obsQuery) {
            queries.push(obsQuery);
            results.push(result3);
          });
          var result2 = Promise.all(results);
          result2.queries = queries;
          result2.results = results;
          result2.catch(function(error) {
          });
          return result2;
        };
        ApolloClient2.prototype.getObservableQueries = function(include) {
          if (include === void 0) {
            include = "active";
          }
          return this.queryManager.getObservableQueries(include);
        };
        ApolloClient2.prototype.extract = function(optimistic) {
          return this.cache.extract(optimistic);
        };
        ApolloClient2.prototype.restore = function(serializedState) {
          return this.cache.restore(serializedState);
        };
        ApolloClient2.prototype.addResolvers = function(resolvers) {
          this.localState.addResolvers(resolvers);
        };
        ApolloClient2.prototype.setResolvers = function(resolvers) {
          this.localState.setResolvers(resolvers);
        };
        ApolloClient2.prototype.getResolvers = function() {
          return this.localState.getResolvers();
        };
        ApolloClient2.prototype.setLocalStateFragmentMatcher = function(fragmentMatcher) {
          this.localState.setFragmentMatcher(fragmentMatcher);
        };
        ApolloClient2.prototype.setLink = function(newLink) {
          this.link = this.queryManager.link = newLink;
        };
        return ApolloClient2;
      }();
    }
  });

  // node_modules/@apollo/client/core/types.js
  var init_types3 = __esm({
    "node_modules/@apollo/client/core/types.js"() {
    }
  });

  // node_modules/graphql-tag/lib/index.js
  function normalize3(string) {
    return string.replace(/[\s,]+/g, " ").trim();
  }
  function cacheKeyFromLoc(loc) {
    return normalize3(loc.source.body.substring(loc.start, loc.end));
  }
  function processFragments(ast) {
    var seenKeys = /* @__PURE__ */ new Set();
    var definitions = [];
    ast.definitions.forEach(function(fragmentDefinition) {
      if (fragmentDefinition.kind === "FragmentDefinition") {
        var fragmentName = fragmentDefinition.name.value;
        var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);
        var sourceKeySet = fragmentSourceMap.get(fragmentName);
        if (sourceKeySet && !sourceKeySet.has(sourceKey)) {
          if (printFragmentWarnings) {
            console.warn("Warning: fragment with name " + fragmentName + " already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names");
          }
        } else if (!sourceKeySet) {
          fragmentSourceMap.set(fragmentName, sourceKeySet = /* @__PURE__ */ new Set());
        }
        sourceKeySet.add(sourceKey);
        if (!seenKeys.has(sourceKey)) {
          seenKeys.add(sourceKey);
          definitions.push(fragmentDefinition);
        }
      } else {
        definitions.push(fragmentDefinition);
      }
    });
    return __assign(__assign({}, ast), { definitions });
  }
  function stripLoc(doc) {
    var workSet = new Set(doc.definitions);
    workSet.forEach(function(node) {
      if (node.loc)
        delete node.loc;
      Object.keys(node).forEach(function(key2) {
        var value2 = node[key2];
        if (value2 && typeof value2 === "object") {
          workSet.add(value2);
        }
      });
    });
    var loc = doc.loc;
    if (loc) {
      delete loc.startToken;
      delete loc.endToken;
    }
    return doc;
  }
  function parseDocument(source) {
    var cacheKey = normalize3(source);
    if (!docCache.has(cacheKey)) {
      var parsed = parse(source, {
        experimentalFragmentVariables,
        allowLegacyFragmentVariables: experimentalFragmentVariables
      });
      if (!parsed || parsed.kind !== "Document") {
        throw new Error("Not a valid GraphQL document.");
      }
      docCache.set(cacheKey, stripLoc(processFragments(parsed)));
    }
    return docCache.get(cacheKey);
  }
  function gql(literals) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }
    if (typeof literals === "string") {
      literals = [literals];
    }
    var result2 = literals[0];
    args.forEach(function(arg, i) {
      if (arg && arg.kind === "Document") {
        result2 += arg.loc.source.body;
      } else {
        result2 += arg;
      }
      result2 += literals[i + 1];
    });
    return parseDocument(result2);
  }
  function resetCaches() {
    docCache.clear();
    fragmentSourceMap.clear();
  }
  function disableFragmentWarnings() {
    printFragmentWarnings = false;
  }
  function enableExperimentalFragmentVariables() {
    experimentalFragmentVariables = true;
  }
  function disableExperimentalFragmentVariables() {
    experimentalFragmentVariables = false;
  }
  var docCache, fragmentSourceMap, printFragmentWarnings, experimentalFragmentVariables, extras, lib_default2;
  var init_lib7 = __esm({
    "node_modules/graphql-tag/lib/index.js"() {
      init_tslib_es6();
      init_graphql();
      docCache = /* @__PURE__ */ new Map();
      fragmentSourceMap = /* @__PURE__ */ new Map();
      printFragmentWarnings = true;
      experimentalFragmentVariables = false;
      extras = {
        gql,
        resetCaches,
        disableFragmentWarnings,
        enableExperimentalFragmentVariables,
        disableExperimentalFragmentVariables
      };
      (function(gql_1) {
        gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;
      })(gql || (gql = {}));
      gql["default"] = gql;
      lib_default2 = gql;
    }
  });

  // node_modules/@apollo/client/core/index.js
  var init_core2 = __esm({
    "node_modules/@apollo/client/core/index.js"() {
      init_ApolloClient();
      init_types3();
      init_cache2();
      init_types2();
      init_core();
      init_http();
      init_invariant();
      setVerbosity(false ? "log" : "silent");
    }
  });

  // node_modules/react/cjs/react.production.min.js
  var require_react_production_min = __commonJS({
    "node_modules/react/cjs/react.production.min.js"(exports2) {
      "use strict";
      var l = Symbol.for("react.element");
      var n = Symbol.for("react.portal");
      var p = Symbol.for("react.fragment");
      var q = Symbol.for("react.strict_mode");
      var r = Symbol.for("react.profiler");
      var t = Symbol.for("react.provider");
      var u = Symbol.for("react.context");
      var v = Symbol.for("react.forward_ref");
      var w = Symbol.for("react.suspense");
      var x = Symbol.for("react.memo");
      var y = Symbol.for("react.lazy");
      var z = Symbol.iterator;
      function A(a) {
        if (null === a || "object" !== typeof a)
          return null;
        a = z && a[z] || a["@@iterator"];
        return "function" === typeof a ? a : null;
      }
      var B = { isMounted: function() {
        return false;
      }, enqueueForceUpdate: function() {
      }, enqueueReplaceState: function() {
      }, enqueueSetState: function() {
      } };
      var C = Object.assign;
      var D = {};
      function E(a, b, e) {
        this.props = a;
        this.context = b;
        this.refs = D;
        this.updater = e || B;
      }
      E.prototype.isReactComponent = {};
      E.prototype.setState = function(a, b) {
        if ("object" !== typeof a && "function" !== typeof a && null != a)
          throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, a, b, "setState");
      };
      E.prototype.forceUpdate = function(a) {
        this.updater.enqueueForceUpdate(this, a, "forceUpdate");
      };
      function F() {
      }
      F.prototype = E.prototype;
      function G(a, b, e) {
        this.props = a;
        this.context = b;
        this.refs = D;
        this.updater = e || B;
      }
      var H = G.prototype = new F();
      H.constructor = G;
      C(H, E.prototype);
      H.isPureReactComponent = true;
      var I = Array.isArray;
      var J = Object.prototype.hasOwnProperty;
      var K = { current: null };
      var L = { key: true, ref: true, __self: true, __source: true };
      function M(a, b, e) {
        var d, c = {}, k = null, h = null;
        if (null != b)
          for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b)
            J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
        var g = arguments.length - 2;
        if (1 === g)
          c.children = e;
        else if (1 < g) {
          for (var f = Array(g), m = 0; m < g; m++)
            f[m] = arguments[m + 2];
          c.children = f;
        }
        if (a && a.defaultProps)
          for (d in g = a.defaultProps, g)
            void 0 === c[d] && (c[d] = g[d]);
        return { $$typeof: l, type: a, key: k, ref: h, props: c, _owner: K.current };
      }
      function N(a, b) {
        return { $$typeof: l, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
      }
      function O(a) {
        return "object" === typeof a && null !== a && a.$$typeof === l;
      }
      function escape5(a) {
        var b = { "=": "=0", ":": "=2" };
        return "$" + a.replace(/[=:]/g, function(a2) {
          return b[a2];
        });
      }
      var P = /\/+/g;
      function Q(a, b) {
        return "object" === typeof a && null !== a && null != a.key ? escape5("" + a.key) : b.toString(36);
      }
      function R(a, b, e, d, c) {
        var k = typeof a;
        if ("undefined" === k || "boolean" === k)
          a = null;
        var h = false;
        if (null === a)
          h = true;
        else
          switch (k) {
            case "string":
            case "number":
              h = true;
              break;
            case "object":
              switch (a.$$typeof) {
                case l:
                case n:
                  h = true;
              }
          }
        if (h)
          return h = a, c = c(h), a = "" === d ? "." + Q(h, 0) : d, I(c) ? (e = "", null != a && (e = a.replace(P, "$&/") + "/"), R(c, b, e, "", function(a2) {
            return a2;
          })) : null != c && (O(c) && (c = N(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a)), b.push(c)), 1;
        h = 0;
        d = "" === d ? "." : d + ":";
        if (I(a))
          for (var g = 0; g < a.length; g++) {
            k = a[g];
            var f = d + Q(k, g);
            h += R(k, b, e, f, c);
          }
        else if (f = A(a), "function" === typeof f)
          for (a = f.call(a), g = 0; !(k = a.next()).done; )
            k = k.value, f = d + Q(k, g++), h += R(k, b, e, f, c);
        else if ("object" === k)
          throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
        return h;
      }
      function S(a, b, e) {
        if (null == a)
          return a;
        var d = [], c = 0;
        R(a, d, "", "", function(a2) {
          return b.call(e, a2, c++);
        });
        return d;
      }
      function T(a) {
        if (-1 === a._status) {
          var b = a._result;
          b = b();
          b.then(function(b2) {
            if (0 === a._status || -1 === a._status)
              a._status = 1, a._result = b2;
          }, function(b2) {
            if (0 === a._status || -1 === a._status)
              a._status = 2, a._result = b2;
          });
          -1 === a._status && (a._status = 0, a._result = b);
        }
        if (1 === a._status)
          return a._result.default;
        throw a._result;
      }
      var U = { current: null };
      var V = { transition: null };
      var W = { ReactCurrentDispatcher: U, ReactCurrentBatchConfig: V, ReactCurrentOwner: K };
      function X() {
        throw Error("act(...) is not supported in production builds of React.");
      }
      exports2.Children = { map: S, forEach: function(a, b, e) {
        S(a, function() {
          b.apply(this, arguments);
        }, e);
      }, count: function(a) {
        var b = 0;
        S(a, function() {
          b++;
        });
        return b;
      }, toArray: function(a) {
        return S(a, function(a2) {
          return a2;
        }) || [];
      }, only: function(a) {
        if (!O(a))
          throw Error("React.Children.only expected to receive a single React element child.");
        return a;
      } };
      exports2.Component = E;
      exports2.Fragment = p;
      exports2.Profiler = r;
      exports2.PureComponent = G;
      exports2.StrictMode = q;
      exports2.Suspense = w;
      exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
      exports2.act = X;
      exports2.cloneElement = function(a, b, e) {
        if (null === a || void 0 === a)
          throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
        var d = C({}, a.props), c = a.key, k = a.ref, h = a._owner;
        if (null != b) {
          void 0 !== b.ref && (k = b.ref, h = K.current);
          void 0 !== b.key && (c = "" + b.key);
          if (a.type && a.type.defaultProps)
            var g = a.type.defaultProps;
          for (f in b)
            J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
        }
        var f = arguments.length - 2;
        if (1 === f)
          d.children = e;
        else if (1 < f) {
          g = Array(f);
          for (var m = 0; m < f; m++)
            g[m] = arguments[m + 2];
          d.children = g;
        }
        return { $$typeof: l, type: a.type, key: c, ref: k, props: d, _owner: h };
      };
      exports2.createContext = function(a) {
        a = { $$typeof: u, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
        a.Provider = { $$typeof: t, _context: a };
        return a.Consumer = a;
      };
      exports2.createElement = M;
      exports2.createFactory = function(a) {
        var b = M.bind(null, a);
        b.type = a;
        return b;
      };
      exports2.createRef = function() {
        return { current: null };
      };
      exports2.forwardRef = function(a) {
        return { $$typeof: v, render: a };
      };
      exports2.isValidElement = O;
      exports2.lazy = function(a) {
        return { $$typeof: y, _payload: { _status: -1, _result: a }, _init: T };
      };
      exports2.memo = function(a, b) {
        return { $$typeof: x, type: a, compare: void 0 === b ? null : b };
      };
      exports2.startTransition = function(a) {
        var b = V.transition;
        V.transition = {};
        try {
          a();
        } finally {
          V.transition = b;
        }
      };
      exports2.unstable_act = X;
      exports2.useCallback = function(a, b) {
        return U.current.useCallback(a, b);
      };
      exports2.useContext = function(a) {
        return U.current.useContext(a);
      };
      exports2.useDebugValue = function() {
      };
      exports2.useDeferredValue = function(a) {
        return U.current.useDeferredValue(a);
      };
      exports2.useEffect = function(a, b) {
        return U.current.useEffect(a, b);
      };
      exports2.useId = function() {
        return U.current.useId();
      };
      exports2.useImperativeHandle = function(a, b, e) {
        return U.current.useImperativeHandle(a, b, e);
      };
      exports2.useInsertionEffect = function(a, b) {
        return U.current.useInsertionEffect(a, b);
      };
      exports2.useLayoutEffect = function(a, b) {
        return U.current.useLayoutEffect(a, b);
      };
      exports2.useMemo = function(a, b) {
        return U.current.useMemo(a, b);
      };
      exports2.useReducer = function(a, b, e) {
        return U.current.useReducer(a, b, e);
      };
      exports2.useRef = function(a) {
        return U.current.useRef(a);
      };
      exports2.useState = function(a) {
        return U.current.useState(a);
      };
      exports2.useSyncExternalStore = function(a, b, e) {
        return U.current.useSyncExternalStore(a, b, e);
      };
      exports2.useTransition = function() {
        return U.current.useTransition();
      };
      exports2.version = "18.3.1";
    }
  });

  // node_modules/react/index.js
  var require_react = __commonJS({
    "node_modules/react/index.js"(exports2, module2) {
      "use strict";
      if (true) {
        module2.exports = require_react_production_min();
      } else {
        module2.exports = null;
      }
    }
  });

  // node_modules/@apollo/client/react/hooks/useApolloClient.js
  var React;
  var init_useApolloClient = __esm({
    "node_modules/@apollo/client/react/hooks/useApolloClient.js"() {
      init_globals();
      React = __toESM(require_react(), 1);
    }
  });

  // node_modules/@apollo/client/react/hooks/useLazyQuery.js
  var React2;
  var init_useLazyQuery = __esm({
    "node_modules/@apollo/client/react/hooks/useLazyQuery.js"() {
      React2 = __toESM(require_react(), 1);
    }
  });

  // node_modules/@apollo/client/react/hooks/useMutation.js
  var React3;
  var init_useMutation = __esm({
    "node_modules/@apollo/client/react/hooks/useMutation.js"() {
      React3 = __toESM(require_react(), 1);
      init_lib2();
    }
  });

  // node_modules/@apollo/client/react/hooks/useSubscription.js
  var React4;
  var init_useSubscription = __esm({
    "node_modules/@apollo/client/react/hooks/useSubscription.js"() {
      init_globals();
      React4 = __toESM(require_react(), 1);
      init_lib2();
    }
  });

  // node_modules/@apollo/client/react/hooks/useReactiveVar.js
  var React5;
  var init_useReactiveVar = __esm({
    "node_modules/@apollo/client/react/hooks/useReactiveVar.js"() {
      React5 = __toESM(require_react(), 1);
    }
  });

  // node_modules/@apollo/client/react/hooks/useFragment.js
  var React6;
  var init_useFragment = __esm({
    "node_modules/@apollo/client/react/hooks/useFragment.js"() {
      React6 = __toESM(require_react(), 1);
      init_lib2();
    }
  });

  // node_modules/@apollo/client/react/hooks/index.js
  var init_hooks = __esm({
    "node_modules/@apollo/client/react/hooks/index.js"() {
      init_globals();
      init_useApolloClient();
      init_useLazyQuery();
      init_useMutation();
      init_useSubscription();
      init_useReactiveVar();
      init_useFragment();
    }
  });

  // node_modules/@apollo/client/react/types/types.js
  var init_types4 = __esm({
    "node_modules/@apollo/client/react/types/types.js"() {
    }
  });

  // node_modules/@apollo/client/react/index.js
  var init_react = __esm({
    "node_modules/@apollo/client/react/index.js"() {
      init_globals();
      init_hooks();
      init_types4();
    }
  });

  // node_modules/@apollo/client/index.js
  var init_client = __esm({
    "node_modules/@apollo/client/index.js"() {
      init_core2();
      init_react();
    }
  });

  // node_modules/@apollo/client/link/batch/batching.js
  var OperationBatcher;
  var init_batching = __esm({
    "node_modules/@apollo/client/link/batch/batching.js"() {
      init_tslib_es6();
      init_utilities();
      OperationBatcher = /** @class */
      function() {
        function OperationBatcher2(_a2) {
          var batchDebounce = _a2.batchDebounce, batchInterval = _a2.batchInterval, batchMax = _a2.batchMax, batchHandler = _a2.batchHandler, batchKey = _a2.batchKey;
          this.batchesByKey = /* @__PURE__ */ new Map();
          this.scheduledBatchTimerByKey = /* @__PURE__ */ new Map();
          this.batchDebounce = batchDebounce;
          this.batchInterval = batchInterval;
          this.batchMax = batchMax || 0;
          this.batchHandler = batchHandler;
          this.batchKey = batchKey || function() {
            return "";
          };
        }
        OperationBatcher2.prototype.enqueueRequest = function(request) {
          var _this = this;
          var requestCopy = __assign(__assign({}, request), { next: [], error: [], complete: [], subscribers: /* @__PURE__ */ new Set() });
          var key2 = this.batchKey(request.operation);
          if (!requestCopy.observable) {
            requestCopy.observable = new Observable(function(observer) {
              var batch = _this.batchesByKey.get(key2);
              if (!batch)
                _this.batchesByKey.set(key2, batch = /* @__PURE__ */ new Set());
              var isFirstEnqueuedRequest = batch.size === 0;
              var isFirstSubscriber = requestCopy.subscribers.size === 0;
              requestCopy.subscribers.add(observer);
              if (isFirstSubscriber) {
                batch.add(requestCopy);
              }
              if (observer.next) {
                requestCopy.next.push(observer.next.bind(observer));
              }
              if (observer.error) {
                requestCopy.error.push(observer.error.bind(observer));
              }
              if (observer.complete) {
                requestCopy.complete.push(observer.complete.bind(observer));
              }
              if (isFirstEnqueuedRequest || _this.batchDebounce) {
                _this.scheduleQueueConsumption(key2);
              }
              if (batch.size === _this.batchMax) {
                _this.consumeQueue(key2);
              }
              return function() {
                var _a2;
                if (requestCopy.subscribers.delete(observer) && requestCopy.subscribers.size < 1) {
                  if (batch.delete(requestCopy) && batch.size < 1) {
                    _this.consumeQueue(key2);
                    (_a2 = batch.subscription) === null || _a2 === void 0 ? void 0 : _a2.unsubscribe();
                  }
                }
              };
            });
          }
          return requestCopy.observable;
        };
        OperationBatcher2.prototype.consumeQueue = function(key2) {
          if (key2 === void 0) {
            key2 = "";
          }
          var batch = this.batchesByKey.get(key2);
          this.batchesByKey.delete(key2);
          if (!batch || !batch.size) {
            return;
          }
          var operations = [];
          var forwards = [];
          var observables = [];
          var nexts = [];
          var errors = [];
          var completes = [];
          batch.forEach(function(request) {
            operations.push(request.operation);
            forwards.push(request.forward);
            observables.push(request.observable);
            nexts.push(request.next);
            errors.push(request.error);
            completes.push(request.complete);
          });
          var batchedObservable = this.batchHandler(operations, forwards) || Observable.of();
          var onError2 = function(error) {
            errors.forEach(function(rejecters) {
              if (rejecters) {
                rejecters.forEach(function(e) {
                  return e(error);
                });
              }
            });
          };
          batch.subscription = batchedObservable.subscribe({
            next: function(results) {
              if (!Array.isArray(results)) {
                results = [results];
              }
              if (nexts.length !== results.length) {
                var error = new Error("server returned results with length ".concat(results.length, ", expected length of ").concat(nexts.length));
                error.result = results;
                return onError2(error);
              }
              results.forEach(function(result2, index2) {
                if (nexts[index2]) {
                  nexts[index2].forEach(function(next) {
                    return next(result2);
                  });
                }
              });
            },
            error: onError2,
            complete: function() {
              completes.forEach(function(complete) {
                if (complete) {
                  complete.forEach(function(c) {
                    return c();
                  });
                }
              });
            }
          });
          return observables;
        };
        OperationBatcher2.prototype.scheduleQueueConsumption = function(key2) {
          var _this = this;
          clearTimeout(this.scheduledBatchTimerByKey.get(key2));
          this.scheduledBatchTimerByKey.set(key2, setTimeout(function() {
            _this.consumeQueue(key2);
            _this.scheduledBatchTimerByKey.delete(key2);
          }, this.batchInterval));
        };
        return OperationBatcher2;
      }();
    }
  });

  // node_modules/@apollo/client/link/batch/batchLink.js
  var BatchLink;
  var init_batchLink = __esm({
    "node_modules/@apollo/client/link/batch/batchLink.js"() {
      init_tslib_es6();
      init_core();
      init_batching();
      BatchLink = /** @class */
      function(_super) {
        __extends(BatchLink2, _super);
        function BatchLink2(fetchParams) {
          var _this = _super.call(this) || this;
          var _a2 = fetchParams || {}, batchDebounce = _a2.batchDebounce, _b = _a2.batchInterval, batchInterval = _b === void 0 ? 10 : _b, _c = _a2.batchMax, batchMax = _c === void 0 ? 0 : _c, _d = _a2.batchHandler, batchHandler = _d === void 0 ? function() {
            return null;
          } : _d, _e = _a2.batchKey, batchKey = _e === void 0 ? function() {
            return "";
          } : _e;
          _this.batcher = new OperationBatcher({
            batchDebounce,
            batchInterval,
            batchMax,
            batchHandler,
            batchKey
          });
          if (fetchParams.batchHandler.length <= 1) {
            _this.request = function(operation) {
              return _this.batcher.enqueueRequest({ operation });
            };
          }
          return _this;
        }
        BatchLink2.prototype.request = function(operation, forward) {
          return this.batcher.enqueueRequest({
            operation,
            forward
          });
        };
        return BatchLink2;
      }(ApolloLink);
    }
  });

  // node_modules/@apollo/client/link/batch/index.js
  var init_batch = __esm({
    "node_modules/@apollo/client/link/batch/index.js"() {
      init_batchLink();
    }
  });

  // node_modules/@apollo/client/link/batch-http/batchHttpLink.js
  var BatchHttpLink;
  var init_batchHttpLink = __esm({
    "node_modules/@apollo/client/link/batch-http/batchHttpLink.js"() {
      init_tslib_es6();
      init_core();
      init_utilities();
      init_utils();
      init_http();
      init_batch();
      init_filterOperationVariables();
      BatchHttpLink = /** @class */
      function(_super) {
        __extends(BatchHttpLink2, _super);
        function BatchHttpLink2(fetchParams) {
          var _this = _super.call(this) || this;
          var _a2 = fetchParams || {}, _b = _a2.uri, uri = _b === void 0 ? "/graphql" : _b, fetcher = _a2.fetch, _c = _a2.print, print3 = _c === void 0 ? defaultPrinter : _c, includeExtensions = _a2.includeExtensions, preserveHeaderCase = _a2.preserveHeaderCase, batchInterval = _a2.batchInterval, batchDebounce = _a2.batchDebounce, batchMax = _a2.batchMax, batchKey = _a2.batchKey, _d = _a2.includeUnusedVariables, includeUnusedVariables = _d === void 0 ? false : _d, requestOptions = __rest(_a2, ["uri", "fetch", "print", "includeExtensions", "preserveHeaderCase", "batchInterval", "batchDebounce", "batchMax", "batchKey", "includeUnusedVariables"]);
          checkFetcher(fetcher);
          if (!fetcher) {
            fetcher = fetch;
          }
          var linkConfig = {
            http: { includeExtensions, preserveHeaderCase },
            options: requestOptions.fetchOptions,
            credentials: requestOptions.credentials,
            headers: requestOptions.headers
          };
          _this.batchDebounce = batchDebounce;
          _this.batchInterval = batchInterval || 10;
          _this.batchMax = batchMax || 10;
          var batchHandler = function(operations) {
            var chosenURI = selectURI(operations[0], uri);
            var context = operations[0].getContext();
            var clientAwarenessHeaders = {};
            if (context.clientAwareness) {
              var _a3 = context.clientAwareness, name_1 = _a3.name, version2 = _a3.version;
              if (name_1) {
                clientAwarenessHeaders["apollographql-client-name"] = name_1;
              }
              if (version2) {
                clientAwarenessHeaders["apollographql-client-version"] = version2;
              }
            }
            var contextConfig = {
              http: context.http,
              options: context.fetchOptions,
              credentials: context.credentials,
              headers: __assign(__assign({}, clientAwarenessHeaders), context.headers)
            };
            var queries = operations.map(function(_a4) {
              var query = _a4.query;
              if (hasDirectives(["client"], query)) {
                return removeClientSetsFromDocument(query);
              }
              return query;
            });
            if (queries.some(function(query) {
              return !query;
            })) {
              return fromError(new Error("BatchHttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or enable the `transformOptions.removeClientFields` option."));
            }
            var optsAndBody = operations.map(function(operation, index2) {
              var result2 = selectHttpOptionsAndBodyInternal(__assign(__assign({}, operation), { query: queries[index2] }), print3, fallbackHttpConfig, linkConfig, contextConfig);
              if (result2.body.variables && !includeUnusedVariables) {
                result2.body.variables = filterOperationVariables(result2.body.variables, operation.query);
              }
              return result2;
            });
            var loadedBody = optsAndBody.map(function(_a4) {
              var body = _a4.body;
              return body;
            });
            var options = optsAndBody[0].options;
            if (options.method === "GET") {
              return fromError(new Error("apollo-link-batch-http does not support GET requests"));
            }
            try {
              options.body = serializeFetchParameter(loadedBody, "Payload");
            } catch (parseError) {
              return fromError(parseError);
            }
            var controller;
            if (!options.signal && typeof AbortController !== "undefined") {
              controller = new AbortController();
              options.signal = controller.signal;
            }
            return new Observable(function(observer) {
              fetcher(chosenURI, options).then(function(response) {
                operations.forEach(function(operation) {
                  return operation.setContext({ response });
                });
                return response;
              }).then(parseAndCheckHttpResponse(operations)).then(function(result2) {
                controller = void 0;
                observer.next(result2);
                observer.complete();
                return result2;
              }).catch(function(err) {
                controller = void 0;
                if (err.result && err.result.errors && err.result.data) {
                  observer.next(err.result);
                }
                observer.error(err);
              });
              return function() {
                if (controller)
                  controller.abort();
              };
            });
          };
          batchKey = batchKey || function(operation) {
            var context = operation.getContext();
            var contextConfig = {
              http: context.http,
              options: context.fetchOptions,
              credentials: context.credentials,
              headers: context.headers
            };
            return selectURI(operation, uri) + JSON.stringify(contextConfig);
          };
          _this.batcher = new BatchLink({
            batchDebounce: _this.batchDebounce,
            batchInterval: _this.batchInterval,
            batchMax: _this.batchMax,
            batchKey,
            batchHandler
          });
          return _this;
        }
        BatchHttpLink2.prototype.request = function(operation) {
          return this.batcher.request(operation);
        };
        return BatchHttpLink2;
      }(ApolloLink);
    }
  });

  // node_modules/@apollo/client/link/batch-http/index.js
  var init_batch_http = __esm({
    "node_modules/@apollo/client/link/batch-http/index.js"() {
      init_batchHttpLink();
    }
  });

  // node_modules/@apollo/client/link/error/index.js
  function onError(errorHandler) {
    return new ApolloLink(function(operation, forward) {
      return new Observable(function(observer) {
        var sub2;
        var retriedSub;
        var retriedResult;
        try {
          sub2 = forward(operation).subscribe({
            next: function(result2) {
              if (result2.errors) {
                retriedResult = errorHandler({
                  graphQLErrors: result2.errors,
                  response: result2,
                  operation,
                  forward
                });
                if (retriedResult) {
                  retriedSub = retriedResult.subscribe({
                    next: observer.next.bind(observer),
                    error: observer.error.bind(observer),
                    complete: observer.complete.bind(observer)
                  });
                  return;
                }
              }
              observer.next(result2);
            },
            error: function(networkError) {
              retriedResult = errorHandler({
                operation,
                networkError,
                //Network errors can return GraphQL errors on for example a 403
                graphQLErrors: networkError && networkError.result && networkError.result.errors,
                forward
              });
              if (retriedResult) {
                retriedSub = retriedResult.subscribe({
                  next: observer.next.bind(observer),
                  error: observer.error.bind(observer),
                  complete: observer.complete.bind(observer)
                });
                return;
              }
              observer.error(networkError);
            },
            complete: function() {
              if (!retriedResult) {
                observer.complete.bind(observer)();
              }
            }
          });
        } catch (e) {
          errorHandler({ networkError: e, operation, forward });
          observer.error(e);
        }
        return function() {
          if (sub2)
            sub2.unsubscribe();
          if (retriedSub)
            sub2.unsubscribe();
        };
      });
    });
  }
  var ErrorLink;
  var init_error = __esm({
    "node_modules/@apollo/client/link/error/index.js"() {
      init_tslib_es6();
      init_utilities();
      init_core();
      ErrorLink = /** @class */
      function(_super) {
        __extends(ErrorLink2, _super);
        function ErrorLink2(errorHandler) {
          var _this = _super.call(this) || this;
          _this.link = onError(errorHandler);
          return _this;
        }
        ErrorLink2.prototype.request = function(operation, forward) {
          return this.link.request(operation, forward);
        };
        return ErrorLink2;
      }(ApolloLink);
    }
  });

  // packages/utilities/apolloClient/customFetchers/fetchWithCsrf.ts
  function fetchWithCsrf(uri, options) {
    if (window.Webflow.env("design") || window.Webflow.env("preview")) {
      return fetch(uri, options);
    }
    const localCsrvCookie = getLocalCsrfCookie();
    const requestHeaders = options?.headers || {};
    return new Promise(
      (resolve2, reject2) => {
        if (hasFetchedCsrfCookie && localCsrvCookie) {
          requestHeaders["X-Wf-Csrf"] = localCsrvCookie;
          resolve2(
            fetch(uri, {
              ...options,
              headers: requestHeaders
            })
          );
        } else {
          fetch(WF_CSRF_URI, {
            method: "POST",
            credentials: "include",
            headers: { "X-Requested-With": "XMLHttpRequest" }
          }).then(() => {
            const newWfCsrfCookie = getLocalCsrfCookie();
            if (newWfCsrfCookie) {
              hasFetchedCsrfCookie = true;
              requestHeaders["X-Wf-Csrf"] = newWfCsrfCookie;
              resolve2(
                fetch(uri, {
                  ...options,
                  headers: requestHeaders
                })
              );
            } else {
              reject2(new Error("Did not receive CSRF token"));
            }
          }).catch((err) => reject2(err));
        }
      }
    );
  }
  function getLocalCsrfCookie() {
    const wfCsrfCookieArray = document.cookie.match(WF_CSRF_COOKIE_REGEX);
    return wfCsrfCookieArray ? wfCsrfCookieArray.pop() : null;
  }
  var WF_CSRF_COOKIE_REGEX, WF_CSRF_URI, hasFetchedCsrfCookie;
  var init_fetchWithCsrf = __esm({
    "packages/utilities/apolloClient/customFetchers/fetchWithCsrf.ts"() {
      "use strict";
      WF_CSRF_COOKIE_REGEX = "(^|;)\\s*wf-csrf\\s*=\\s*([^;]+)";
      WF_CSRF_URI = "/.wf_graphql/csrf";
      hasFetchedCsrfCookie = false;
    }
  });

  // node_modules/@apollo/client/link/retry/delayFunction.js
  function buildDelayFunction(delayOptions) {
    var _a2 = delayOptions || {}, _b = _a2.initial, initial = _b === void 0 ? 300 : _b, _c = _a2.jitter, jitter = _c === void 0 ? true : _c, _d = _a2.max, max = _d === void 0 ? Infinity : _d;
    var baseDelay = jitter ? initial : initial / 2;
    return function delayFunction(count) {
      var delay = Math.min(max, baseDelay * Math.pow(2, count));
      if (jitter) {
        delay = Math.random() * delay;
      }
      return delay;
    };
  }
  var init_delayFunction = __esm({
    "node_modules/@apollo/client/link/retry/delayFunction.js"() {
    }
  });

  // node_modules/@apollo/client/link/retry/retryFunction.js
  function buildRetryFunction(retryOptions) {
    var _a2 = retryOptions || {}, retryIf = _a2.retryIf, _b = _a2.max, max = _b === void 0 ? 5 : _b;
    return function retryFunction(count, operation, error) {
      if (count >= max)
        return false;
      return retryIf ? retryIf(error, operation) : !!error;
    };
  }
  var init_retryFunction = __esm({
    "node_modules/@apollo/client/link/retry/retryFunction.js"() {
    }
  });

  // node_modules/@apollo/client/link/retry/retryLink.js
  var RetryableOperation, RetryLink;
  var init_retryLink = __esm({
    "node_modules/@apollo/client/link/retry/retryLink.js"() {
      init_tslib_es6();
      init_core();
      init_utilities();
      init_delayFunction();
      init_retryFunction();
      RetryableOperation = /** @class */
      function() {
        function RetryableOperation2(operation, nextLink, delayFor, retryIf) {
          var _this = this;
          this.operation = operation;
          this.nextLink = nextLink;
          this.delayFor = delayFor;
          this.retryIf = retryIf;
          this.retryCount = 0;
          this.values = [];
          this.complete = false;
          this.canceled = false;
          this.observers = [];
          this.currentSubscription = null;
          this.onNext = function(value2) {
            _this.values.push(value2);
            for (var _i = 0, _a2 = _this.observers; _i < _a2.length; _i++) {
              var observer = _a2[_i];
              if (!observer)
                continue;
              observer.next(value2);
            }
          };
          this.onComplete = function() {
            _this.complete = true;
            for (var _i = 0, _a2 = _this.observers; _i < _a2.length; _i++) {
              var observer = _a2[_i];
              if (!observer)
                continue;
              observer.complete();
            }
          };
          this.onError = function(error) {
            return __awaiter(_this, void 0, void 0, function() {
              var shouldRetry, _i, _a2, observer;
              return __generator(this, function(_b) {
                switch (_b.label) {
                  case 0:
                    this.retryCount += 1;
                    return [4, this.retryIf(this.retryCount, this.operation, error)];
                  case 1:
                    shouldRetry = _b.sent();
                    if (shouldRetry) {
                      this.scheduleRetry(this.delayFor(this.retryCount, this.operation, error));
                      return [
                        2
                        /*return*/
                      ];
                    }
                    this.error = error;
                    for (_i = 0, _a2 = this.observers; _i < _a2.length; _i++) {
                      observer = _a2[_i];
                      if (!observer)
                        continue;
                      observer.error(error);
                    }
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          };
        }
        RetryableOperation2.prototype.subscribe = function(observer) {
          if (this.canceled) {
            throw new Error("Subscribing to a retryable link that was canceled is not supported");
          }
          this.observers.push(observer);
          for (var _i = 0, _a2 = this.values; _i < _a2.length; _i++) {
            var value2 = _a2[_i];
            observer.next(value2);
          }
          if (this.complete) {
            observer.complete();
          } else if (this.error) {
            observer.error(this.error);
          }
        };
        RetryableOperation2.prototype.unsubscribe = function(observer) {
          var index2 = this.observers.indexOf(observer);
          if (index2 < 0) {
            throw new Error("RetryLink BUG! Attempting to unsubscribe unknown observer!");
          }
          this.observers[index2] = null;
          if (this.observers.every(function(o) {
            return o === null;
          })) {
            this.cancel();
          }
        };
        RetryableOperation2.prototype.start = function() {
          if (this.currentSubscription)
            return;
          this.try();
        };
        RetryableOperation2.prototype.cancel = function() {
          if (this.currentSubscription) {
            this.currentSubscription.unsubscribe();
          }
          clearTimeout(this.timerId);
          this.timerId = void 0;
          this.currentSubscription = null;
          this.canceled = true;
        };
        RetryableOperation2.prototype.try = function() {
          this.currentSubscription = this.nextLink(this.operation).subscribe({
            next: this.onNext,
            error: this.onError,
            complete: this.onComplete
          });
        };
        RetryableOperation2.prototype.scheduleRetry = function(delay) {
          var _this = this;
          if (this.timerId) {
            throw new Error("RetryLink BUG! Encountered overlapping retries");
          }
          this.timerId = setTimeout(function() {
            _this.timerId = void 0;
            _this.try();
          }, delay);
        };
        return RetryableOperation2;
      }();
      RetryLink = /** @class */
      function(_super) {
        __extends(RetryLink2, _super);
        function RetryLink2(options) {
          var _this = _super.call(this) || this;
          var _a2 = options || {}, attempts = _a2.attempts, delay = _a2.delay;
          _this.delayFor = typeof delay === "function" ? delay : buildDelayFunction(delay);
          _this.retryIf = typeof attempts === "function" ? attempts : buildRetryFunction(attempts);
          return _this;
        }
        RetryLink2.prototype.request = function(operation, nextLink) {
          var retryable = new RetryableOperation(operation, nextLink, this.delayFor, this.retryIf);
          retryable.start();
          return new Observable(function(observer) {
            retryable.subscribe(observer);
            return function() {
              retryable.unsubscribe(observer);
            };
          });
        };
        return RetryLink2;
      }(ApolloLink);
    }
  });

  // node_modules/@apollo/client/link/retry/index.js
  var init_retry = __esm({
    "node_modules/@apollo/client/link/retry/index.js"() {
      init_retryLink();
    }
  });

  // packages/utilities/apolloClient/helpers.ts
  var ERROR_METRIC_NAME, createRetryLink;
  var init_helpers3 = __esm({
    "packages/utilities/apolloClient/helpers.ts"() {
      "use strict";
      init_retry();
      ERROR_METRIC_NAME = "webflow.renderer.apollo.request.error";
      createRetryLink = ({
        maxAttempts = 1,
        retryOnCorsErrors = true,
        retriedServerErrors = "all",
        metricsLogger
      }) => {
        return new RetryLink({
          attempts: (count, operation, error) => {
            const tags = [];
            let ret = false;
            if (count >= maxAttempts) {
              tags.push("max_attempts:true");
            } else {
              tags.push("max_attempts:false");
              if (error && (retriedServerErrors === "all" && error.statusCode >= 500 || retriedServerErrors === "bad-gateway" && error.statusCode === 502)) {
                tags.push("reason:server_error");
                tags.push(`status_code:${error.statusCode}`);
                ret = true;
              } else if (retryOnCorsErrors && error && error.result && error.result.code === "BadCrossOriginRequest") {
                tags.push("reason:cors_error");
                ret = true;
              }
            }
            tags.push(`attempt:${count}`, `retry:${ret}`);
            metricsLogger?.logDistributionMetric(ERROR_METRIC_NAME, 1, ...tags);
            return ret;
          },
          delay: (count) => {
            return count * 500 + Math.random() * 500;
          }
        });
      };
    }
  });

  // packages/utilities/apolloClient/createApolloClient.ts
  var createApolloClient, buildApolloClientUri;
  var init_createApolloClient = __esm({
    "packages/utilities/apolloClient/createApolloClient.ts"() {
      "use strict";
      init_client();
      init_batch_http();
      init_error();
      init_fetchWithCsrf();
      init_helpers3();
      createApolloClient = ({
        origin = "",
        path,
        publicationId,
        previewKey,
        ssrMode = false,
        credentials = "same-origin",
        headers = {},
        useCsrf = false,
        retryConfig,
        onError: onError2,
        disableBatching = false
      }) => {
        const uri = buildApolloClientUri({ origin, path, publicationId, previewKey });
        const requestHeaders = {
          Accept: "application/json"
        };
        Object.keys(headers).forEach((headerKey) => {
          requestHeaders[headerKey] = headers[headerKey];
        });
        const batchLinkArgs = {
          uri,
          headers: requestHeaders,
          credentials
        };
        if (disableBatching) {
          batchLinkArgs.batchMax = 1;
          batchLinkArgs.batchInterval = 0;
        }
        if (useCsrf) {
          batchLinkArgs.fetch = fetchWithCsrf;
        }
        const batchLink = new BatchHttpLink(batchLinkArgs);
        const links = [];
        if (retryConfig) {
          links.push(createRetryLink(retryConfig));
        }
        if (onError2) {
          links.push(onError(onError2));
        }
        const apolloClient2 = new ApolloClient({
          link: ApolloLink.from([...links, batchLink]),
          cache: new InMemoryCache({
            dataIdFromObject: (object) => {
              switch (object.__typename) {
                case "sku_props":
                  return void 0;
                case "commerce_subscription": {
                  return object._id;
                }
                case "collections":
                  return object.__typename;
                default: {
                  if (object.cmsLocaleId) {
                    return `${object.id}_${object.cmsLocaleId}`;
                  }
                  return object.id;
                }
              }
            }
          }),
          ssrMode
        });
        return apolloClient2;
      };
      buildApolloClientUri = ({
        origin = "",
        path,
        publicationId,
        previewKey
      }) => {
        const params = [];
        if (publicationId) {
          params.push(`pub=${publicationId}`);
        }
        if (previewKey) {
          params.push(`preview=${previewKey}`);
        }
        const cleanPath = `${origin}${path}`.replace(/([^:])\/\/+/g, "$1/");
        return `${cleanPath}${params.length ? `?${params.join("&")}` : ""}`;
      };
    }
  });

  // packages/utilities/apolloClient/index.ts
  var init_apolloClient = __esm({
    "packages/utilities/apolloClient/index.ts"() {
      "use strict";
      init_createApolloClient();
      init_helpers3();
    }
  });

  // packages/shared/render/plugins/Commerce/modules/eventHandlerProxyWithApolloClient.ts
  var enumeratePrototypeProps, createEventProxy, EventHandlerProxyWithApolloClient;
  var init_eventHandlerProxyWithApolloClient = __esm({
    "packages/shared/render/plugins/Commerce/modules/eventHandlerProxyWithApolloClient.ts"() {
      "use strict";
      enumeratePrototypeProps = (obj, propNames = []) => {
        if (obj == null) {
          return propNames;
        }
        return propNames.concat(enumeratePrototypeProps(Object.getPrototypeOf(obj))).concat(Object.keys(obj));
      };
      createEventProxy = (event, currentTarget) => {
        const propertyDefinitions = enumeratePrototypeProps(event).filter((propName) => propName !== "currentTarget").reduce((proxies, propName) => {
          proxies[propName] = // @ts-expect-error Object.keys is "unsound", always infers `string` as output
          typeof event[propName] === "function" ? (
            // Proxy all the event methods so they will act on the original event:
            // @ts-expect-error Object.keys is "unsound", always infers `string` as output
            { value: (...args) => event[propName](...args) }
          ) : (
            // Proxy static props/getters because invoking them directly may result in "Illegal invokation" error.
            // @ts-expect-error Object.keys is "unsound", always infers `string` as output
            { get: () => event[propName] }
          );
          return proxies;
        }, {});
        const retargetedEvent = Object.create(event, {
          // set currentTarget to the matched node:
          currentTarget: { value: currentTarget },
          ...propertyDefinitions
        });
        return retargetedEvent;
      };
      EventHandlerProxyWithApolloClient = class {
        apolloClient;
        stripeStore;
        eventHandlers;
        constructor(apolloClient2, stripeStore2) {
          this.eventHandlers = {};
          this.apolloClient = apolloClient2;
          this.stripeStore = stripeStore2;
        }
        on = (eventName, eventMatcher, handler) => {
          const existingHandlers = this.eventHandlers[eventName] instanceof Array ? this.eventHandlers[eventName] : [];
          this.eventHandlers[eventName] = [
            ...existingHandlers,
            this.createHandlerProxy(eventName, eventMatcher, handler)
          ];
          return this;
        };
        createHandlerProxy = (eventName, eventMatcher, handler) => (event) => {
          const match = eventMatcher(event);
          const eventProxy = match instanceof Element ? createEventProxy(event, match) : event;
          if (match) {
            handler(eventProxy, this.apolloClient, this.stripeStore);
          }
        };
        attachHandlers = (target) => {
          Object.keys(this.eventHandlers).forEach((eventName) => {
            const handlerProxies = this.eventHandlers[eventName];
            handlerProxies.forEach(
              (handlerProxy2) => target.addEventListener(eventName, handlerProxy2, true)
            );
          });
          return this;
        };
        removeHandlers = (target) => {
          Object.keys(this.eventHandlers).forEach((eventName) => {
            const handlerProxies = this.eventHandlers[eventName];
            handlerProxies.forEach(
              (handlerProxy2) => target.removeEventListener(eventName, handlerProxy2, true)
            );
          });
          return this;
        };
      };
    }
  });

  // node_modules/lodash/_baseSlice.js
  var require_baseSlice = __commonJS({
    "node_modules/lodash/_baseSlice.js"(exports2, module2) {
      function baseSlice(array, start, end) {
        var index2 = -1, length2 = array.length;
        if (start < 0) {
          start = -start > length2 ? 0 : length2 + start;
        }
        end = end > length2 ? length2 : end;
        if (end < 0) {
          end += length2;
        }
        length2 = start > end ? 0 : end - start >>> 0;
        start >>>= 0;
        var result2 = Array(length2);
        while (++index2 < length2) {
          result2[index2] = array[index2 + start];
        }
        return result2;
      }
      module2.exports = baseSlice;
    }
  });

  // node_modules/lodash/_castSlice.js
  var require_castSlice = __commonJS({
    "node_modules/lodash/_castSlice.js"(exports2, module2) {
      var baseSlice = require_baseSlice();
      function castSlice(array, start, end) {
        var length2 = array.length;
        end = end === void 0 ? length2 : end;
        return !start && end >= length2 ? array : baseSlice(array, start, end);
      }
      module2.exports = castSlice;
    }
  });

  // node_modules/lodash/_asciiToArray.js
  var require_asciiToArray = __commonJS({
    "node_modules/lodash/_asciiToArray.js"(exports2, module2) {
      function asciiToArray(string) {
        return string.split("");
      }
      module2.exports = asciiToArray;
    }
  });

  // node_modules/lodash/_unicodeToArray.js
  var require_unicodeToArray = __commonJS({
    "node_modules/lodash/_unicodeToArray.js"(exports2, module2) {
      var rsAstralRange = "\\ud800-\\udfff";
      var rsComboMarksRange = "\\u0300-\\u036f";
      var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
      var rsComboSymbolsRange = "\\u20d0-\\u20ff";
      var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
      var rsVarRange = "\\ufe0e\\ufe0f";
      var rsAstral = "[" + rsAstralRange + "]";
      var rsCombo = "[" + rsComboRange + "]";
      var rsFitz = "\\ud83c[\\udffb-\\udfff]";
      var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
      var rsNonAstral = "[^" + rsAstralRange + "]";
      var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
      var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
      var rsZWJ = "\\u200d";
      var reOptMod = rsModifier + "?";
      var rsOptVar = "[" + rsVarRange + "]?";
      var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
      var rsSeq = rsOptVar + reOptMod + rsOptJoin;
      var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      module2.exports = unicodeToArray;
    }
  });

  // node_modules/lodash/_stringToArray.js
  var require_stringToArray = __commonJS({
    "node_modules/lodash/_stringToArray.js"(exports2, module2) {
      var asciiToArray = require_asciiToArray();
      var hasUnicode = require_hasUnicode();
      var unicodeToArray = require_unicodeToArray();
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      module2.exports = stringToArray;
    }
  });

  // node_modules/lodash/_createCaseFirst.js
  var require_createCaseFirst = __commonJS({
    "node_modules/lodash/_createCaseFirst.js"(exports2, module2) {
      var castSlice = require_castSlice();
      var hasUnicode = require_hasUnicode();
      var stringToArray = require_stringToArray();
      var toString3 = require_toString();
      function createCaseFirst(methodName) {
        return function(string) {
          string = toString3(string);
          var strSymbols = hasUnicode(string) ? stringToArray(string) : void 0;
          var chr = strSymbols ? strSymbols[0] : string.charAt(0);
          var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
          return chr[methodName]() + trailing;
        };
      }
      module2.exports = createCaseFirst;
    }
  });

  // node_modules/lodash/upperFirst.js
  var require_upperFirst = __commonJS({
    "node_modules/lodash/upperFirst.js"(exports2, module2) {
      var createCaseFirst = require_createCaseFirst();
      var upperFirst = createCaseFirst("toUpperCase");
      module2.exports = upperFirst;
    }
  });

  // node_modules/lodash/capitalize.js
  var require_capitalize = __commonJS({
    "node_modules/lodash/capitalize.js"(exports2, module2) {
      var toString3 = require_toString();
      var upperFirst = require_upperFirst();
      function capitalize(string) {
        return upperFirst(toString3(string).toLowerCase());
      }
      module2.exports = capitalize;
    }
  });

  // node_modules/lodash/_basePropertyOf.js
  var require_basePropertyOf = __commonJS({
    "node_modules/lodash/_basePropertyOf.js"(exports2, module2) {
      function basePropertyOf(object) {
        return function(key2) {
          return object == null ? void 0 : object[key2];
        };
      }
      module2.exports = basePropertyOf;
    }
  });

  // node_modules/lodash/_deburrLetter.js
  var require_deburrLetter = __commonJS({
    "node_modules/lodash/_deburrLetter.js"(exports2, module2) {
      var basePropertyOf = require_basePropertyOf();
      var deburredLetters = {
        // Latin-1 Supplement block.
        "\xC0": "A",
        "\xC1": "A",
        "\xC2": "A",
        "\xC3": "A",
        "\xC4": "A",
        "\xC5": "A",
        "\xE0": "a",
        "\xE1": "a",
        "\xE2": "a",
        "\xE3": "a",
        "\xE4": "a",
        "\xE5": "a",
        "\xC7": "C",
        "\xE7": "c",
        "\xD0": "D",
        "\xF0": "d",
        "\xC8": "E",
        "\xC9": "E",
        "\xCA": "E",
        "\xCB": "E",
        "\xE8": "e",
        "\xE9": "e",
        "\xEA": "e",
        "\xEB": "e",
        "\xCC": "I",
        "\xCD": "I",
        "\xCE": "I",
        "\xCF": "I",
        "\xEC": "i",
        "\xED": "i",
        "\xEE": "i",
        "\xEF": "i",
        "\xD1": "N",
        "\xF1": "n",
        "\xD2": "O",
        "\xD3": "O",
        "\xD4": "O",
        "\xD5": "O",
        "\xD6": "O",
        "\xD8": "O",
        "\xF2": "o",
        "\xF3": "o",
        "\xF4": "o",
        "\xF5": "o",
        "\xF6": "o",
        "\xF8": "o",
        "\xD9": "U",
        "\xDA": "U",
        "\xDB": "U",
        "\xDC": "U",
        "\xF9": "u",
        "\xFA": "u",
        "\xFB": "u",
        "\xFC": "u",
        "\xDD": "Y",
        "\xFD": "y",
        "\xFF": "y",
        "\xC6": "Ae",
        "\xE6": "ae",
        "\xDE": "Th",
        "\xFE": "th",
        "\xDF": "ss",
        // Latin Extended-A block.
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
      };
      var deburrLetter = basePropertyOf(deburredLetters);
      module2.exports = deburrLetter;
    }
  });

  // node_modules/lodash/deburr.js
  var require_deburr = __commonJS({
    "node_modules/lodash/deburr.js"(exports2, module2) {
      var deburrLetter = require_deburrLetter();
      var toString3 = require_toString();
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var rsComboMarksRange = "\\u0300-\\u036f";
      var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
      var rsComboSymbolsRange = "\\u20d0-\\u20ff";
      var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
      var rsCombo = "[" + rsComboRange + "]";
      var reComboMark = RegExp(rsCombo, "g");
      function deburr(string) {
        string = toString3(string);
        return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
      }
      module2.exports = deburr;
    }
  });

  // node_modules/lodash/_asciiWords.js
  var require_asciiWords = __commonJS({
    "node_modules/lodash/_asciiWords.js"(exports2, module2) {
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      module2.exports = asciiWords;
    }
  });

  // node_modules/lodash/_hasUnicodeWord.js
  var require_hasUnicodeWord = __commonJS({
    "node_modules/lodash/_hasUnicodeWord.js"(exports2, module2) {
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      module2.exports = hasUnicodeWord;
    }
  });

  // node_modules/lodash/_unicodeWords.js
  var require_unicodeWords = __commonJS({
    "node_modules/lodash/_unicodeWords.js"(exports2, module2) {
      var rsAstralRange = "\\ud800-\\udfff";
      var rsComboMarksRange = "\\u0300-\\u036f";
      var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
      var rsComboSymbolsRange = "\\u20d0-\\u20ff";
      var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
      var rsDingbatRange = "\\u2700-\\u27bf";
      var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
      var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
      var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
      var rsPunctuationRange = "\\u2000-\\u206f";
      var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
      var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
      var rsVarRange = "\\ufe0e\\ufe0f";
      var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['\u2019]";
      var rsBreak = "[" + rsBreakRange + "]";
      var rsCombo = "[" + rsComboRange + "]";
      var rsDigits = "\\d+";
      var rsDingbat = "[" + rsDingbatRange + "]";
      var rsLower = "[" + rsLowerRange + "]";
      var rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
      var rsFitz = "\\ud83c[\\udffb-\\udfff]";
      var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
      var rsNonAstral = "[^" + rsAstralRange + "]";
      var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
      var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
      var rsUpper = "[" + rsUpperRange + "]";
      var rsZWJ = "\\u200d";
      var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
      var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
      var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
      var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
      var reOptMod = rsModifier + "?";
      var rsOptVar = "[" + rsVarRange + "]?";
      var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
      var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
      var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
      var rsSeq = rsOptVar + reOptMod + rsOptJoin;
      var rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq;
      var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
      ].join("|"), "g");
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      module2.exports = unicodeWords;
    }
  });

  // node_modules/lodash/words.js
  var require_words = __commonJS({
    "node_modules/lodash/words.js"(exports2, module2) {
      var asciiWords = require_asciiWords();
      var hasUnicodeWord = require_hasUnicodeWord();
      var toString3 = require_toString();
      var unicodeWords = require_unicodeWords();
      function words(string, pattern, guard) {
        string = toString3(string);
        pattern = guard ? void 0 : pattern;
        if (pattern === void 0) {
          return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
        }
        return string.match(pattern) || [];
      }
      module2.exports = words;
    }
  });

  // node_modules/lodash/_createCompounder.js
  var require_createCompounder = __commonJS({
    "node_modules/lodash/_createCompounder.js"(exports2, module2) {
      var arrayReduce = require_arrayReduce();
      var deburr = require_deburr();
      var words = require_words();
      var rsApos = "['\u2019]";
      var reApos = RegExp(rsApos, "g");
      function createCompounder(callback) {
        return function(string) {
          return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
        };
      }
      module2.exports = createCompounder;
    }
  });

  // node_modules/lodash/camelCase.js
  var require_camelCase = __commonJS({
    "node_modules/lodash/camelCase.js"(exports2, module2) {
      var capitalize = require_capitalize();
      var createCompounder = require_createCompounder();
      var camelCase2 = createCompounder(function(result2, word, index2) {
        word = word.toLowerCase();
        return result2 + (index2 ? capitalize(word) : word);
      });
      module2.exports = camelCase2;
    }
  });

  // packages/systems/commerce/constants/pluginConstants.ts
  var DATA_ATTR_COMMERCE_SKU_ID, DATA_ATTR_COMMERCE_OPTION_SET_ID, DATA_ATTR_COMMERCE_PRODUCT_ID, DATA_ATTR_NODE_TYPE, DATA_ATTR_LOADING_TEXT, DATA_ATTR_OPEN_PRODUCT, DATA_ATTR_OPEN_ON_HOVER, DATA_ATTR_COUNT_HIDE_RULE, DATA_ATTR_PRESELECT_DEFAULT_VARIANT, DATA_ATTR_DEFAULT_TEXT, DATA_ATTR_SUBSCRIPTION_TEXT, NODE_TYPE_COMMERCE_ADD_TO_CART_FORM, NODE_TYPE_COMMERCE_ADD_TO_CART_ERROR, NODE_TYPE_COMMERCE_CART_ERROR, NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_SELECT, NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_LIST, NODE_TYPE_COMMERCE_ADD_TO_CART_PILL_GROUP, NODE_TYPE_COMMERCE_ADD_TO_CART_PILL, NODE_TYPE_COMMERCE_CART_WRAPPER, NODE_TYPE_COMMERCE_CART_OPEN_LINK, NODE_TYPE_COMMERCE_CART_CLOSE_LINK, NODE_TYPE_COMMERCE_CART_CONTAINER_WRAPPER, NODE_TYPE_COMMERCE_CART_CONTAINER, NODE_TYPE_COMMERCE_CART_CHECKOUT_BUTTON, NODE_TYPE_COMMERCE_CART_FORM, NODE_NAME_COMMERCE_ADD_TO_CART_QUANTITY_INPUT, NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER, NODE_TYPE_COMMERCE_CHECKOUT_CUSTOMER_INFO_WRAPPER, NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_WRAPPER, NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_ZIP_FIELD, NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_ZIP_FIELD, NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_WRAPPER, NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_WRAPPER, NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_LIST, NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_EMPTY_STATE, NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_TOGGLE_CHECKBOX, NODE_TYPE_COMMERCE_CHECKOUT_PLACE_ORDER_BUTTON, NODE_TYPE_COMMERCE_CHECKOUT_ERROR_STATE, NODE_TYPE_COMMERCE_ORDER_CONFIRMATION_WRAPPER, NODE_TYPE_COMMERCE_CART_QUICK_CHECKOUT_ACTIONS, NODE_TYPE_COMMERCE_CART_QUICK_CHECKOUT_BUTTON, NODE_TYPE_COMMERCE_CART_APPLE_PAY_BUTTON, NODE_TYPE_COMMERCE_CHECKOUT_ADDITIONAL_INFO, NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_FORM_CONTAINER, NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_ERROR_STATE, NODE_TYPE_COMMERCE_CHECKOUT_DISCOUNT_FORM, NODE_TYPE_COMMERCE_CHECKOUT_DISCOUNT_INPUT, NODE_TYPE_COMMERCE_BUY_NOW_BUTTON, NODE_TYPE_COMMERCE_ADD_TO_CART_BUTTON, NODE_TYPE_ADD_TO_CART_ERROR, CART_TYPES, CART_COUNT_HIDE_RULES, CART_CHECKOUT_BUTTON_TEXT_DEFAULT, CART_CHECKOUT_LOADING_TEXT_DEFAULT, CHECKOUT_PLACE_ORDER_BUTTON_TEXT_DEFAULT, CHECKOUT_PLACE_ORDER_LOADING_TEXT_DEFAULT, COMMERCE_CART_PUBLISHED_SITE_ACTION_ATTR, COMMERCE_CART_PUBLISHED_SITE_ACTIONS, WF_BINDING_DATA_KEY, WF_CONDITION_DATA_KEY, WF_COLLECTION_DATA_KEY, WF_TEMPLATE_ID_DATA_KEY, WF_SKU_BINDING_DATA_KEY, WF_SKU_CONDITION_DATA_KEY, WF_TEMPLATE_TYPE, INFO_ERR, SHIPPING_ERR, BILLING_ERR, PAYMENT_ERR, PRICING_ERR, ORDER_MIN_ERR, ORDER_EXTRAS_ERR, PRODUCT_ERR, INVALID_DISCOUNT_ERR, EXPIRED_DISCOUNT_ERR, USAGE_REACHED_DISCOUNT_ERR, REQUIREMENTS_NOT_MET_DISCOUNT_ERR, COMMERCE_ERROR_CATEGORY, CHECKOUT_ERRORS, QUANTITY_ERR, CHECKOUT_ERR, GENERAL_ERR, CART_ORDER_MIN_ERR, SUBSCRIPTION_ERR, CART_ERRORS, ADD_TO_CART_QUANTITY_ERR, ADD_TO_CART_GENERAL_ERR, ADD_TO_CART_MIXED_ERR, ADD_TO_CART_ERRORS, DATA_ATTR_ANIMATION_EASING, ANIMATION_EASING_DEFAULT, DATA_ATTR_ANIMATION_DURATION, ANIMATION_DURATION_DEFAULT, DATA_ATTR_PUBLISHABLE_KEY, RENDER_TREE_EVENT, NEEDS_REFRESH, STRIPE_ELEMENT_INSTANCE, STRIPE_ELEMENT_TYPE, STRIPE_ELEMENT_STYLE, ADD_TO_CART_LOADING, CHANGE_CART_EVENT, getATCErrorMessageForType, CHECKOUT_DISABLED_ERROR_MESSAGE, CHECKOUT_QUERY, getCheckoutErrorMessageForType, REQUIRES_ACTION, CART_GENERAL_ERROR_MESSAGE, CART_CHECKOUT_ERROR_MESSAGE_SELECTOR, CART_ERROR_MESSAGE, CART_ERROR_MESSAGE_SELECTOR, CART_OPEN, CART_TYPE, CART_QUERY, PAYPAL_ELEMENT_INSTANCE, PAYPAL_BUTTON_ELEMENT_INSTANCE, getCartErrorMessageForType, ORDER_QUERY, STRIPE_ECOMMERCE_KEY, STRIPE_ECOMMERCE_ACCOUNT_ID, COMMERCE_DEFAULT_COPY;
  var init_pluginConstants = __esm({
    "packages/systems/commerce/constants/pluginConstants.ts"() {
      "use strict";
      DATA_ATTR_COMMERCE_SKU_ID = "data-commerce-sku-id";
      DATA_ATTR_COMMERCE_OPTION_SET_ID = "data-commerce-option-set-id";
      DATA_ATTR_COMMERCE_PRODUCT_ID = "data-commerce-product-id";
      DATA_ATTR_NODE_TYPE = "data-node-type";
      DATA_ATTR_LOADING_TEXT = "data-loading-text";
      DATA_ATTR_OPEN_PRODUCT = "data-open-product";
      DATA_ATTR_OPEN_ON_HOVER = "data-open-on-hover";
      DATA_ATTR_COUNT_HIDE_RULE = "data-count-hide-rule";
      DATA_ATTR_PRESELECT_DEFAULT_VARIANT = "data-preselect-default-variant";
      DATA_ATTR_DEFAULT_TEXT = "data-default-text";
      DATA_ATTR_SUBSCRIPTION_TEXT = "data-subscription-text";
      NODE_TYPE_COMMERCE_ADD_TO_CART_FORM = "commerce-add-to-cart-form";
      NODE_TYPE_COMMERCE_ADD_TO_CART_ERROR = "commerce-add-to-cart-error";
      NODE_TYPE_COMMERCE_CART_ERROR = "commerce-cart-error";
      NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_SELECT = "commerce-add-to-cart-option-select";
      NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_LIST = "commerce-add-to-cart-option-list";
      NODE_TYPE_COMMERCE_ADD_TO_CART_PILL_GROUP = "commerce-add-to-cart-pill-group";
      NODE_TYPE_COMMERCE_ADD_TO_CART_PILL = "commerce-add-to-cart-pill";
      NODE_TYPE_COMMERCE_CART_WRAPPER = "commerce-cart-wrapper";
      NODE_TYPE_COMMERCE_CART_OPEN_LINK = "commerce-cart-open-link";
      NODE_TYPE_COMMERCE_CART_CLOSE_LINK = "commerce-cart-close-link";
      NODE_TYPE_COMMERCE_CART_CONTAINER_WRAPPER = "commerce-cart-container-wrapper";
      NODE_TYPE_COMMERCE_CART_CONTAINER = "commerce-cart-container";
      NODE_TYPE_COMMERCE_CART_CHECKOUT_BUTTON = "cart-checkout-button";
      NODE_TYPE_COMMERCE_CART_FORM = "commerce-cart-form";
      NODE_NAME_COMMERCE_ADD_TO_CART_QUANTITY_INPUT = "commerce-add-to-cart-quantity-input";
      NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER = "commerce-checkout-form-container";
      NODE_TYPE_COMMERCE_CHECKOUT_CUSTOMER_INFO_WRAPPER = "commerce-checkout-customer-info-wrapper";
      NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_WRAPPER = "commerce-checkout-shipping-address-wrapper";
      NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_ZIP_FIELD = "commerce-checkout-shipping-zip-field";
      NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_ZIP_FIELD = "commerce-checkout-billing-zip-field";
      NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_WRAPPER = "commerce-checkout-billing-address-wrapper";
      NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_WRAPPER = "commerce-checkout-shipping-methods-wrapper";
      NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_LIST = "commerce-checkout-shipping-methods-list";
      NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_EMPTY_STATE = "commerce-checkout-shipping-methods-empty-state";
      NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_TOGGLE_CHECKBOX = "commerce-checkout-billing-address-toggle-checkbox";
      NODE_TYPE_COMMERCE_CHECKOUT_PLACE_ORDER_BUTTON = "commerce-checkout-place-order-button";
      NODE_TYPE_COMMERCE_CHECKOUT_ERROR_STATE = "commerce-checkout-error-state";
      NODE_TYPE_COMMERCE_ORDER_CONFIRMATION_WRAPPER = "commerce-order-confirmation-wrapper";
      NODE_TYPE_COMMERCE_CART_QUICK_CHECKOUT_ACTIONS = "commerce-cart-quick-checkout-actions";
      NODE_TYPE_COMMERCE_CART_QUICK_CHECKOUT_BUTTON = "commerce-cart-quick-checkout-button";
      NODE_TYPE_COMMERCE_CART_APPLE_PAY_BUTTON = "commerce-cart-apple-pay-button";
      NODE_TYPE_COMMERCE_CHECKOUT_ADDITIONAL_INFO = "commerce-checkout-additional-info";
      NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_FORM_CONTAINER = "commerce-paypal-checkout-form-container";
      NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_ERROR_STATE = "commerce-checkout-error-state";
      NODE_TYPE_COMMERCE_CHECKOUT_DISCOUNT_FORM = "commerce-checkout-discount-form";
      NODE_TYPE_COMMERCE_CHECKOUT_DISCOUNT_INPUT = "commerce-checkout-discount-input";
      NODE_TYPE_COMMERCE_BUY_NOW_BUTTON = "commerce-buy-now-button";
      NODE_TYPE_COMMERCE_ADD_TO_CART_BUTTON = "commerce-add-to-cart-button";
      NODE_TYPE_ADD_TO_CART_ERROR = "commerce-add-to-cart-error";
      CART_TYPES = {
        MODAL: "modal",
        LEFT_SIDEBAR: "leftSidebar",
        RIGHT_SIDEBAR: "rightSidebar",
        LEFT_DROPDOWN: "leftDropdown",
        RIGHT_DROPDOWN: "rightDropdown",
        DROPDOWN: "dropdown"
      };
      CART_COUNT_HIDE_RULES = {
        ALWAYS: "always",
        EMPTY: "empty"
      };
      CART_CHECKOUT_BUTTON_TEXT_DEFAULT = "Continue to Checkout";
      CART_CHECKOUT_LOADING_TEXT_DEFAULT = "Hang Tight...";
      CHECKOUT_PLACE_ORDER_BUTTON_TEXT_DEFAULT = "Place Order";
      CHECKOUT_PLACE_ORDER_LOADING_TEXT_DEFAULT = "Placing Order...";
      COMMERCE_CART_PUBLISHED_SITE_ACTION_ATTR = "data-wf-cart-action";
      COMMERCE_CART_PUBLISHED_SITE_ACTIONS = {
        UPDATE_ITEM_QUANTITY: "update-item-quantity",
        REMOVE_ITEM: "remove-item"
      };
      WF_BINDING_DATA_KEY = "data-wf-bindings";
      WF_CONDITION_DATA_KEY = "data-wf-conditions";
      WF_COLLECTION_DATA_KEY = "data-wf-collection";
      WF_TEMPLATE_ID_DATA_KEY = "data-wf-template-id";
      WF_SKU_BINDING_DATA_KEY = "data-wf-sku-bindings";
      WF_SKU_CONDITION_DATA_KEY = "data-wf-sku-conditions";
      WF_TEMPLATE_TYPE = "text/x-wf-template";
      INFO_ERR = "INFO_ERROR";
      SHIPPING_ERR = "SHIPPING_ERROR";
      BILLING_ERR = "BILLING_ERROR";
      PAYMENT_ERR = "PAYMENT_ERROR";
      PRICING_ERR = "PRICING_ERROR";
      ORDER_MIN_ERR = "ORDER_MINIMUM_ERROR";
      ORDER_EXTRAS_ERR = "ORDER_EXTRAS_ERROR";
      PRODUCT_ERR = "PRODUCT_ERROR";
      INVALID_DISCOUNT_ERR = "INVALID_DISCOUNT_ERROR";
      EXPIRED_DISCOUNT_ERR = "EXPIRED_DISCOUNT_ERROR";
      USAGE_REACHED_DISCOUNT_ERR = "USAGE_REACHED_DISCOUNT_ERROR";
      REQUIREMENTS_NOT_MET_DISCOUNT_ERR = "REQUIREMENTS_NOT_MET_DISCOUNT_ERROR";
      COMMERCE_ERROR_CATEGORY = {
        GENERAL: { id: "GENERAL", label: "General Errors" },
        PRODUCT: { id: "PRODUCT", label: "Product Errors" },
        BILLING: { id: "BILLING", label: "Billing Errors" },
        DISCOUNT: { id: "DISCOUNT", label: "Discount Errors" },
        SUBSCRIPTION: { id: "SUBSCRIPTION", label: "Subscription Errors" }
      };
      CHECKOUT_ERRORS = {
        INFO: {
          id: INFO_ERR,
          name: "General customer info error",
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          copy: "There was an error processing your customer info. Please try again, or contact us if you continue to have problems.",
          path: ["data", "commerce", INFO_ERR]
        },
        SHIPPING: {
          id: SHIPPING_ERR,
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Shipping not available",
          copy: "Sorry. We can\u2019t ship your order to the address provided.",
          path: ["data", "commerce", SHIPPING_ERR]
        },
        EXTRAS: {
          id: ORDER_EXTRAS_ERR,
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Merchant setting changed",
          copy: "A merchant setting has changed that impacts your cart. Please refresh and try again.",
          path: ["data", "commerce", ORDER_EXTRAS_ERR],
          requiresRefresh: true
        },
        PRICING: {
          id: PRICING_ERR,
          category: COMMERCE_ERROR_CATEGORY.PRODUCT,
          name: "Product price changed",
          copy: "The prices of one or more items in your cart have changed. Please refresh this page and try again.",
          path: ["data", "commerce", PRICING_ERR],
          requiresRefresh: true
        },
        PRODUCT: {
          id: PRODUCT_ERR,
          category: COMMERCE_ERROR_CATEGORY.PRODUCT,
          name: "Product removed",
          copy: "One or more of the products in your cart have been removed. Please refresh the page and try again.",
          path: ["data", "commerce", PRODUCT_ERR],
          requiresRefresh: true
        },
        PAYMENT: {
          id: PAYMENT_ERR,
          category: COMMERCE_ERROR_CATEGORY.BILLING,
          name: "General payment error",
          copy: "There was an error processing your payment. Please try again, or contact us if you continue to have problems.",
          path: ["data", "commerce", PAYMENT_ERR]
        },
        BILLING: {
          id: BILLING_ERR,
          category: COMMERCE_ERROR_CATEGORY.BILLING,
          name: "Card declined",
          copy: "Your payment could not be completed with the payment information provided. Please make sure that your card and billing address information is correct, or try a different payment card, to complete this order. Contact us if you continue to have problems.",
          path: ["data", "commerce", BILLING_ERR]
        },
        MINIMUM: {
          id: ORDER_MIN_ERR,
          category: COMMERCE_ERROR_CATEGORY.BILLING,
          name: "Order minimum not met",
          copy: "The order minimum was not met. Add more items to your cart to continue.",
          path: ["data", "commerce", ORDER_MIN_ERR],
          note: {
            copy: "You can customize this message with the exact minimum based on your Stripe account's settlement currency.",
            cta: {
              copy: "Go to Stripe docs",
              link: "https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts"
            }
          }
        },
        INVALID_DISCOUNT: {
          id: INVALID_DISCOUNT_ERR,
          category: COMMERCE_ERROR_CATEGORY.DISCOUNT,
          name: "Invalid discount error",
          copy: "This discount is invalid.",
          path: ["data", "commerce", INVALID_DISCOUNT_ERR]
        },
        EXPIRED_DISCOUNT: {
          id: EXPIRED_DISCOUNT_ERR,
          category: COMMERCE_ERROR_CATEGORY.DISCOUNT,
          name: "Discount expired",
          copy: "This discount is no longer available.",
          path: ["data", "commerce", EXPIRED_DISCOUNT_ERR]
        },
        USAGE_REACHED_DISCOUNT: {
          id: USAGE_REACHED_DISCOUNT_ERR,
          category: COMMERCE_ERROR_CATEGORY.DISCOUNT,
          name: "Discount usage limit reached",
          copy: "This discount is no longer available.",
          path: ["data", "commerce", USAGE_REACHED_DISCOUNT_ERR]
        },
        REQUIREMENTS_NOT_MET_DISCOUNT: {
          id: REQUIREMENTS_NOT_MET_DISCOUNT_ERR,
          category: COMMERCE_ERROR_CATEGORY.DISCOUNT,
          name: "Discount requirements not met",
          copy: "Your order does not meet the requirements for this discount.",
          path: ["data", "commerce", REQUIREMENTS_NOT_MET_DISCOUNT_ERR]
        }
      };
      QUANTITY_ERR = "QUANTITY_ERROR";
      CHECKOUT_ERR = "CHECKOUT_ERROR";
      GENERAL_ERR = "GENERAL_ERROR";
      CART_ORDER_MIN_ERR = "CART_ORDER_MIN_ERROR";
      SUBSCRIPTION_ERR = "SUBSCRIPTION_ERR";
      CART_ERRORS = {
        QUANTITY: {
          id: QUANTITY_ERR,
          name: "Quantity not available",
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          copy: "Product is not available in this quantity.",
          path: ["data", "commerce", QUANTITY_ERR]
        },
        GENERAL: {
          id: GENERAL_ERR,
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "General error",
          copy: "Something went wrong when adding this item to the cart.",
          path: ["data", "commerce", GENERAL_ERR]
        },
        CHECKOUT: {
          id: CHECKOUT_ERR,
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Checkout disabled",
          copy: "Checkout is disabled on this site.",
          path: ["data", "commerce", CHECKOUT_ERR]
        },
        CART_ORDER_MIN: {
          id: CART_ORDER_MIN_ERR,
          category: COMMERCE_ERROR_CATEGORY.BILLING,
          name: "Order minimum not met",
          copy: "The order minimum was not met. Add more items to your cart to continue.",
          path: ["data", "commerce", CART_ORDER_MIN_ERR]
        },
        SUBSCRIPTION_ERROR: {
          id: SUBSCRIPTION_ERR,
          category: COMMERCE_ERROR_CATEGORY.SUBSCRIPTION,
          name: "Subscription not verified",
          copy: "Before you purchase, please use your email invite to verify your address so we can send order updates.",
          path: ["data", "commerce", SUBSCRIPTION_ERR]
        }
      };
      ADD_TO_CART_QUANTITY_ERR = "ADD_TO_CART_QUANTITY_ERROR";
      ADD_TO_CART_GENERAL_ERR = "ADD_TO_CART_GENERAL_ERROR";
      ADD_TO_CART_MIXED_ERR = "ADD_TO_CART_MIXED_ERROR";
      ADD_TO_CART_ERRORS = {
        QUANTITY: {
          id: ADD_TO_CART_QUANTITY_ERR,
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Quantity not available",
          copy: "Product is not available in this quantity.",
          path: ["data", "commerce", ADD_TO_CART_QUANTITY_ERR]
        },
        GENERAL: {
          id: ADD_TO_CART_GENERAL_ERR,
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Add to Cart error",
          copy: "Something went wrong when adding this item to the cart.",
          path: ["data", "commerce", ADD_TO_CART_GENERAL_ERR]
        },
        MIXED_CART: {
          id: ADD_TO_CART_MIXED_ERR,
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Add to mixed Cart error",
          copy: "You can\u2019t purchase another product with a subscription."
        },
        BUY_NOW: {
          id: "BUY_NOW_ERROR",
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Buy now error",
          copy: "Something went wrong when trying to purchase this item."
        },
        CHECKOUT_DISABLED: {
          id: "CHECKOUT_DISABLED_ERROR",
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Checkout disabled",
          copy: "Checkout is disabled on this site."
        },
        SELECT_ALL_OPTIONS: {
          id: "SELECT_ALL_OPTIONS",
          category: COMMERCE_ERROR_CATEGORY.GENERAL,
          name: "Option selection required",
          copy: "Please select an option in each set.",
          path: ["data", "commerce", "SELECT_ALL_OPTIONS"]
        }
      };
      DATA_ATTR_ANIMATION_EASING = "data-wf-cart-easing";
      ANIMATION_EASING_DEFAULT = "ease-out-quad";
      DATA_ATTR_ANIMATION_DURATION = "data-wf-cart-duration";
      ANIMATION_DURATION_DEFAULT = 300;
      DATA_ATTR_PUBLISHABLE_KEY = "data-publishable-key";
      RENDER_TREE_EVENT = "wf-render-tree";
      NEEDS_REFRESH = "data-wf-needs-refresh";
      STRIPE_ELEMENT_INSTANCE = "data-wf-stripe-element-instance";
      STRIPE_ELEMENT_TYPE = "data-wf-stripe-element-type";
      STRIPE_ELEMENT_STYLE = "data-wf-stripe-style";
      ADD_TO_CART_LOADING = "data-wf-atc-loading";
      CHANGE_CART_EVENT = "wf-change-cart-state";
      getATCErrorMessageForType = (errorType) => `data-w-add-to-cart-${errorType}-error`;
      CHECKOUT_DISABLED_ERROR_MESSAGE = "data-w-add-to-cart-checkout-disabled-error";
      CHECKOUT_QUERY = "data-wf-checkout-query";
      getCheckoutErrorMessageForType = (errorType) => `data-w-${errorType}-error`;
      REQUIRES_ACTION = "requires_action";
      CART_GENERAL_ERROR_MESSAGE = "data-w-cart-general-error";
      CART_CHECKOUT_ERROR_MESSAGE_SELECTOR = ".w-checkout-error-msg";
      CART_ERROR_MESSAGE = "cart-error-msg";
      CART_ERROR_MESSAGE_SELECTOR = `.w-${CART_ERROR_MESSAGE}`;
      CART_OPEN = "data-cart-open";
      CART_TYPE = "data-wf-cart-type";
      CART_QUERY = "data-wf-cart-query";
      PAYPAL_ELEMENT_INSTANCE = "data-wf-paypal-element";
      PAYPAL_BUTTON_ELEMENT_INSTANCE = "data-wf-paypal-button";
      getCartErrorMessageForType = (errorType) => `data-w-cart-${errorType}-error`;
      ORDER_QUERY = "data-wf-order-query";
      STRIPE_ECOMMERCE_KEY = "data-wf-ecomm-key";
      STRIPE_ECOMMERCE_ACCOUNT_ID = "data-wf-ecomm-acct-id";
      COMMERCE_DEFAULT_COPY = {
        INFO_ERROR: CHECKOUT_ERRORS.INFO.copy,
        SHIPPING_ERROR: CHECKOUT_ERRORS.SHIPPING.copy,
        ORDER_EXTRAS_ERROR: CHECKOUT_ERRORS.EXTRAS.copy,
        PRICING_ERROR: CHECKOUT_ERRORS.PRICING.copy,
        PRODUCT_ERROR: CHECKOUT_ERRORS.PRODUCT.copy,
        PAYMENT_ERROR: CHECKOUT_ERRORS.PAYMENT.copy,
        BILLING_ERROR: CHECKOUT_ERRORS.BILLING.copy,
        ORDER_MINIMUM_ERROR: CHECKOUT_ERRORS.MINIMUM.copy,
        INVALID_DISCOUNT_ERROR: CHECKOUT_ERRORS.INVALID_DISCOUNT.copy,
        EXPIRED_DISCOUNT_ERROR: CHECKOUT_ERRORS.EXPIRED_DISCOUNT.copy,
        USAGE_REACHED_DISCOUNT_ERROR: CHECKOUT_ERRORS.USAGE_REACHED_DISCOUNT.copy,
        REQUIREMENTS_NOT_MET_DISCOUNT_ERROR: CHECKOUT_ERRORS.REQUIREMENTS_NOT_MET_DISCOUNT.copy,
        COMMERCE_ADD_TO_CART_BUTTON_DEFAULT: "Add to Cart",
        COMMERCE_ADD_TO_CART_BUTTON_WAITING: "Adding to cart...",
        COMMERCE_BUY_NOW_BUTTON_DEFAULT: "Buy now",
        SUBSCRIPTION_BUTTON_DEFAULT: "Subscribe now",
        QUANTITY_ERROR: "Product is not available in this quantity.",
        GENERAL_ERROR: "Something went wrong when adding this item to the cart.",
        CHECKOUT_ERROR: "Checkout is disabled on this site.",
        CART_ORDER_MIN_ERROR: "The order minimum was not met. Add more items to your cart to continue.",
        SUBSCRIPTION_ERR: "Before you purchase, please use your email invite to verify your address so we can send order updates.",
        ADD_TO_CART_QUANTITY_ERROR: "Product is not available in this quantity.",
        ADD_TO_CART_GENERAL_ERROR: "Something went wrong when adding this item to the cart.",
        ADD_TO_CART_MIXED_ERROR: "You can\u2019t purchase another product with a subscription.",
        BUY_NOW_ERROR: "Something went wrong when trying to purchase this item.",
        CHECKOUT_DISABLED_ERROR: "Checkout is disabled on this site.",
        SELECT_ALL_OPTIONS: "Please select an option in each set."
      };
    }
  });

  // packages/systems/commerce/constants/bindingContextConstants.ts
  var init_bindingContextConstants = __esm({
    "packages/systems/commerce/constants/bindingContextConstants.ts"() {
      "use strict";
    }
  });

  // packages/systems/commerce/constants/paypalCurrencyList.ts
  var paypalCurrencyList;
  var init_paypalCurrencyList = __esm({
    "packages/systems/commerce/constants/paypalCurrencyList.ts"() {
      "use strict";
      paypalCurrencyList = [
        /*
         * ----------------------------------------------------------------------------
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         *
         * This const is duplicated to @packages/systems/core/constants/SharedConfig.js
         * to avoid bundling this entire SharedConfig file in the webflow.js published
         * site bundle. Once we have support for bundling for the Dashboard (this
         * config is injected in to window.SharedConfig for angular), we should
         * be able to delete the const in SharedConfig and use the commerce/consts
         * package whenever `paypalCurrencyList` const is needed.
         *
         * In the meantime, if you make changes to this const, please make sure to
         * update in the other location as well.
         *
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * ----------------------------------------------------------------------------
         */
        { code: "AUD", digits: 2, minCharge: 1, name: "Australian Dollar" },
        { code: "BRL", digits: 2, minCharge: 1, name: "Brazilian Real" },
        { code: "CAD", digits: 2, minCharge: 1, name: "Canadian Dollar" },
        { code: "CNY", digits: 2, minCharge: 1, name: "Chinese Renmenbi" },
        { code: "CZK", digits: 2, minCharge: 1, name: "Czech Koruna" },
        { code: "DKK", digits: 2, minCharge: 1, name: "Danish Krone" },
        { code: "EUR", digits: 2, minCharge: 1, name: "Euro" },
        { code: "HKD", digits: 2, minCharge: 1, name: "Hong Kong Dollar" },
        // HUF is currently disabled, due to issues with PayPal's 0-decimal implementation
        // See: https://github.com/webflow/webflow/issues/32865
        // {code: 'HUF', digits: 0, minCharge: 1, name: 'Hungarian Forint'},
        { code: "INR", digits: 2, minCharge: 1, name: "Indian Rupee" },
        { code: "ILS", digits: 2, minCharge: 1, name: "Israeli New Sheqel" },
        { code: "JPY", digits: 0, minCharge: 1, name: "Japanese Yen" },
        { code: "MYR", digits: 2, minCharge: 1, name: "Malaysian Ringgit" },
        { code: "MXN", digits: 2, minCharge: 1, name: "Mexican Peso" },
        { code: "TWD", digits: 0, minCharge: 1, name: "New Taiwan Dollar" },
        { code: "NZD", digits: 2, minCharge: 1, name: "New Zealand Dollar" },
        { code: "NOK", digits: 2, minCharge: 1, name: "Norwegian Krone" },
        { code: "PHP", digits: 2, minCharge: 1, name: "Philippine Peso" },
        { code: "PLN", digits: 2, minCharge: 1, name: "Polish Z\u0142oty" },
        { code: "GBP", digits: 2, minCharge: 1, name: "British Pound" },
        { code: "RUB", digits: 2, minCharge: 1, name: "Russian Ruble" },
        { code: "SGD", digits: 2, minCharge: 1, name: "Singapore Dollar" },
        { code: "SEK", digits: 2, minCharge: 1, name: "Swedish Krona" },
        { code: "CHF", digits: 2, minCharge: 1, name: "Swiss Franc" },
        { code: "THB", digits: 2, minCharge: 1, name: "Thai Baht" },
        { code: "USD", digits: 2, minCharge: 1, name: "United States Dollar" }
      ];
    }
  });

  // packages/systems/commerce/constants/stripeCurrencyList.ts
  var stripeCurrencyList;
  var init_stripeCurrencyList = __esm({
    "packages/systems/commerce/constants/stripeCurrencyList.ts"() {
      "use strict";
      stripeCurrencyList = [
        /*
         * ----------------------------------------------------------------------------
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         *
         * This const is duplicated to @packages/systems/core/constants/SharedConfig.js
         * to avoid bundling this entire SharedConfig file in the webflow.js published
         * site bundle. Once we have support for bundling for the Dashboard (this
         * config is injected in to window.SharedConfig for angular), we should
         * be able to delete the const in SharedConfig and use the commerce/consts
         * package whenever `stripeCurrencyList` const is needed.
         *
         * In the meantime, if you make changes to this const, please make sure to
         * update in the other location as well.
         *
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
         * ----------------------------------------------------------------------------
         */
        { code: "AED", digits: 2, minCharge: 0, name: "United Arab Emirates Dirham" },
        { code: "AFN", digits: 2, minCharge: 0, name: "Afghanistan Afghani" },
        { code: "ALL", digits: 2, minCharge: 0, name: "Albanian Lek" },
        { code: "AMD", digits: 2, minCharge: 0, name: "Armenia Dram" },
        {
          code: "ANG",
          digits: 2,
          minCharge: 0,
          name: "Netherlands Antillean Gulden"
        },
        { code: "AOA", digits: 2, minCharge: 0, name: "Angola Kwanza" },
        { code: "ARS", digits: 2, minCharge: 0, name: "Argentine Peso" },
        { code: "AUD", digits: 2, minCharge: 50, name: "Australian Dollar" },
        { code: "AWG", digits: 2, minCharge: 0, name: "Aruban Florin" },
        { code: "AZN", digits: 2, minCharge: 0, name: "Azerbaijan Manat" },
        {
          code: "BAM",
          digits: 2,
          minCharge: 0,
          name: "Bosnia and Herzegovina Convertible Marka"
        },
        { code: "BBD", digits: 2, minCharge: 0, name: "Barbadian Dollar" },
        { code: "BDT", digits: 2, minCharge: 0, name: "Bangladeshi Taka" },
        { code: "BGN", digits: 2, minCharge: 0, name: "Bulgaria Lev" },
        { code: "BIF", digits: 0, minCharge: 0, name: "Burundian Franc" },
        { code: "BMD", digits: 2, minCharge: 0, name: "Bermudian Dollar" },
        { code: "BND", digits: 2, minCharge: 0, name: "Brunei Dollar" },
        { code: "BOB", digits: 2, minCharge: 0, name: "Bolivian Boliviano" },
        { code: "BRL", digits: 2, minCharge: 50, name: "Brazilian Real" },
        { code: "BSD", digits: 2, minCharge: 0, name: "Bahamian Dollar" },
        { code: "BWP", digits: 2, minCharge: 0, name: "Botswana Pula" },
        { code: "BZD", digits: 2, minCharge: 0, name: "Belize Dollar" },
        { code: "CAD", digits: 2, minCharge: 50, name: "Canadian Dollar" },
        { code: "CDF", digits: 2, minCharge: 0, name: "Congo/Kinshasa Franc" },
        { code: "CHF", digits: 2, minCharge: 50, name: "Swiss Franc" },
        { code: "CLP", digits: 0, minCharge: 0, name: "Chilean Peso" },
        { code: "CNY", digits: 2, minCharge: 0, name: "Chinese Renminbi Yuan" },
        { code: "COP", digits: 2, minCharge: 0, name: "Colombian Peso" },
        { code: "CRC", digits: 2, minCharge: 0, name: "Costa Rican Col\xF3n" },
        { code: "CVE", digits: 2, minCharge: 0, name: "Cape Verdean Escudo" },
        // See above.
        { code: "CZK", digits: 2, minCharge: 0, name: "Czech Koruna" },
        { code: "DJF", digits: 0, minCharge: 0, name: "Djiboutian Franc" },
        { code: "DKK", digits: 2, minCharge: 250, name: "Danish Krone" },
        { code: "DOP", digits: 2, minCharge: 0, name: "Dominican Peso" },
        { code: "DZD", digits: 2, minCharge: 0, name: "Algerian Dinar" },
        { code: "EGP", digits: 2, minCharge: 0, name: "Egyptian Pound" },
        { code: "ETB", digits: 2, minCharge: 0, name: "Ethiopian Birr" },
        { code: "EUR", digits: 2, minCharge: 50, name: "Euro" },
        { code: "FJD", digits: 2, minCharge: 0, name: "Fijian Dollar" },
        { code: "FKP", digits: 2, minCharge: 0, name: "Falkland Islands Pound" },
        { code: "GBP", digits: 2, minCharge: 30, name: "British Pound" },
        { code: "GEL", digits: 2, minCharge: 0, name: "Georgia Lari" },
        { code: "GIP", digits: 2, minCharge: 0, name: "Gibraltar Pound" },
        { code: "GMD", digits: 2, minCharge: 0, name: "Gambian Dalasi" },
        { code: "GNF", digits: 0, minCharge: 0, name: "Guinean Franc" },
        { code: "GTQ", digits: 2, minCharge: 0, name: "Guatemalan Quetzal" },
        { code: "GYD", digits: 2, minCharge: 0, name: "Guyanese Dollar" },
        { code: "HKD", digits: 2, minCharge: 400, name: "Hong Kong Dollar" },
        { code: "HNL", digits: 2, minCharge: 0, name: "Honduran Lempira" },
        { code: "HRK", digits: 2, minCharge: 0, name: "Croatian Kuna" },
        { code: "HTG", digits: 2, minCharge: 0, name: "Haitian Gourde" },
        { code: "HUF", digits: 2, minCharge: 0, name: "Hungarian Forint" },
        { code: "IDR", digits: 2, minCharge: 0, name: "Indonesian Rupiah" },
        { code: "ILS", digits: 2, minCharge: 0, name: "Israeli New Sheqel" },
        { code: "INR", digits: 2, minCharge: 50, name: "Indian Rupee" },
        { code: "ISK", digits: 2, minCharge: 0, name: "Icelandic Kr\xF3na" },
        // See above.
        { code: "JMD", digits: 2, minCharge: 0, name: "Jamaican Dollar" },
        { code: "JPY", digits: 0, minCharge: 50, name: "Japanese Yen" },
        { code: "KES", digits: 2, minCharge: 0, name: "Kenyan Shilling" },
        { code: "KGS", digits: 2, minCharge: 0, name: "Kyrgyzstan Som" },
        { code: "KHR", digits: 2, minCharge: 0, name: "Cambodian Riel" },
        { code: "KMF", digits: 0, minCharge: 0, name: "Comorian Franc" },
        { code: "KRW", digits: 0, minCharge: 0, name: "South Korean Won" },
        { code: "KYD", digits: 2, minCharge: 0, name: "Cayman Islands Dollar" },
        { code: "KZT", digits: 2, minCharge: 0, name: "Kazakhstani Tenge" },
        { code: "LAK", digits: 2, minCharge: 0, name: "Lao Kip" },
        { code: "LBP", digits: 2, minCharge: 0, name: "Lebanese Pound" },
        { code: "LKR", digits: 2, minCharge: 0, name: "Sri Lankan Rupee" },
        { code: "LRD", digits: 2, minCharge: 0, name: "Liberian Dollar" },
        { code: "LSL", digits: 2, minCharge: 0, name: "Lesotho Loti" },
        { code: "MAD", digits: 2, minCharge: 0, name: "Moroccan Dirham" },
        { code: "MDL", digits: 2, minCharge: 0, name: "Moldovan Leu" },
        { code: "MGA", digits: 0, minCharge: 0, name: "Madagascar Ariary" },
        // See above.
        { code: "MKD", digits: 2, minCharge: 0, name: "Macedonia Denar" },
        { code: "MMK", digits: 2, minCharge: 0, name: "Myanmar (Burma) Kyat" },
        { code: "MNT", digits: 2, minCharge: 0, name: "Mongolian T\xF6gr\xF6g" },
        { code: "MOP", digits: 2, minCharge: 0, name: "Macanese Pataca" },
        { code: "MRO", digits: 2, minCharge: 0, name: "Mauritanian Ouguiya" },
        { code: "MUR", digits: 2, minCharge: 0, name: "Mauritian Rupee" },
        { code: "MVR", digits: 2, minCharge: 0, name: "Maldivian Rufiyaa" },
        { code: "MWK", digits: 2, minCharge: 0, name: "Malawian Kwacha" },
        { code: "MXN", digits: 2, minCharge: 1e3, name: "Mexican Peso" },
        { code: "MYR", digits: 2, minCharge: 200, name: "Malaysian Ringgit" },
        { code: "MZN", digits: 2, minCharge: 0, name: "Mozambique Metical" },
        { code: "NAD", digits: 2, minCharge: 0, name: "Namibian Dollar" },
        { code: "NGN", digits: 2, minCharge: 0, name: "Nigerian Naira" },
        { code: "NIO", digits: 2, minCharge: 0, name: "Nicaraguan C\xF3rdoba" },
        { code: "NOK", digits: 2, minCharge: 300, name: "Norwegian Krone" },
        { code: "NPR", digits: 2, minCharge: 0, name: "Nepalese Rupee" },
        { code: "NZD", digits: 2, minCharge: 50, name: "New Zealand Dollar" },
        { code: "PAB", digits: 2, minCharge: 0, name: "Panamanian Balboa" },
        { code: "PEN", digits: 2, minCharge: 0, name: "Peruvian Nuevo Sol" },
        { code: "PGK", digits: 2, minCharge: 0, name: "Papua New Guinean Kina" },
        { code: "PHP", digits: 2, minCharge: 0, name: "Philippine Peso" },
        { code: "PKR", digits: 2, minCharge: 0, name: "Pakistani Rupee" },
        { code: "PLN", digits: 2, minCharge: 200, name: "Polish Z\u0142oty" },
        { code: "PYG", digits: 0, minCharge: 0, name: "Paraguayan Guaran\xED" },
        { code: "QAR", digits: 2, minCharge: 0, name: "Qatari Riyal" },
        { code: "RON", digits: 2, minCharge: 0, name: "Romania Leu" },
        { code: "RSD", digits: 2, minCharge: 0, name: "Serbia Dinar" },
        { code: "RUB", digits: 2, minCharge: 0, name: "Russian Ruble" },
        { code: "RWF", digits: 0, minCharge: 0, name: "Rwanda Franc" },
        { code: "SAR", digits: 2, minCharge: 0, name: "Saudi Riyal" },
        { code: "SBD", digits: 2, minCharge: 0, name: "Solomon Islands Dollar" },
        { code: "SCR", digits: 2, minCharge: 0, name: "Seychellois Rupee" },
        { code: "SEK", digits: 2, minCharge: 300, name: "Swedish Krona" },
        { code: "SGD", digits: 2, minCharge: 50, name: "Singapore Dollar" },
        { code: "SHP", digits: 2, minCharge: 0, name: "Saint Helenian Pound" },
        { code: "SLL", digits: 2, minCharge: 0, name: "Sierra Leonean Leone" },
        { code: "SOS", digits: 2, minCharge: 0, name: "Somali Shilling" },
        { code: "SRD", digits: 2, minCharge: 0, name: "Suriname Dollar" },
        { code: "STD", digits: 2, minCharge: 0, name: "S\xE3o Tom\xE9 and Pr\xEDncipe Dobra" },
        { code: "SZL", digits: 2, minCharge: 0, name: "Swazi Lilangeni" },
        { code: "THB", digits: 2, minCharge: 0, name: "Thai Baht" },
        { code: "TJS", digits: 2, minCharge: 0, name: "Tajikistan Somoni" },
        { code: "TOP", digits: 2, minCharge: 0, name: "Tongan Pa\u02BBanga" },
        { code: "TRY", digits: 2, minCharge: 0, name: "Turkey Lira" },
        { code: "TTD", digits: 2, minCharge: 0, name: "Trinidad and Tobago Dollar" },
        { code: "TWD", digits: 2, minCharge: 0, name: "New Taiwan Dollar" },
        { code: "TZS", digits: 2, minCharge: 0, name: "Tanzanian Shilling" },
        { code: "UAH", digits: 2, minCharge: 0, name: "Ukrainian Hryvnia" },
        { code: "UGX", digits: 0, minCharge: 0, name: "Ugandan Shilling" },
        // See above.
        { code: "USD", digits: 2, minCharge: 50, name: "United States Dollar" },
        { code: "UYU", digits: 2, minCharge: 0, name: "Uruguayan Peso" },
        { code: "UZS", digits: 2, minCharge: 0, name: "Uzbekistani Som" },
        { code: "VND", digits: 0, minCharge: 0, name: "Vietnamese \u0110\u1ED3ng" },
        { code: "VUV", digits: 0, minCharge: 0, name: "Vanuatu Vatu" },
        { code: "WST", digits: 2, minCharge: 0, name: "Samoan Tala" },
        { code: "XAF", digits: 0, minCharge: 0, name: "Central African Cfa Franc" },
        { code: "XCD", digits: 2, minCharge: 0, name: "East Caribbean Dollar" },
        { code: "XOF", digits: 0, minCharge: 0, name: "West African Cfa Franc" },
        { code: "XPF", digits: 0, minCharge: 0, name: "Cfp Franc" },
        { code: "YER", digits: 2, minCharge: 0, name: "Yemeni Rial" },
        { code: "ZAR", digits: 2, minCharge: 0, name: "South African Rand" },
        { code: "ZMW", digits: 2, minCharge: 0, name: "Zambia Kwacha" }
      ];
    }
  });

  // packages/systems/commerce/constants/index.ts
  function _withDerivedValue({
    label,
    type = "PlainText",
    path = (0, import_camelCase.default)(label),
    options = {
      readOnly: false,
      isNotAddable: false
    }
  }) {
    return {
      label,
      type,
      ...options,
      value: JSON.stringify({ path, type })
    };
  }
  var import_camelCase, SHIPPING_METHOD_FLAT, SHIPPING_METHOD_PERCENTAGE, SHIPPING_METHOD_PRICE, SHIPPING_METHOD_QUANTITY, SHIPPING_METHOD_WEIGHT, SHIPPING_METHODS, INVENTORY_TYPE_FINITE, INVENTORY_TYPE_INFINITE, PRICE_TEMPLATE_CURRENCY_SYMBOL, PRICE_TEMPLATE_AMOUNT, PRICE_TEMPLATE_CURRENCY_CODE, _intoToken, DEFAULT_PRICE_TEMPLATE_VALUE, CSV_CURRENCY_TEMPLATE, CSV_INTEGRATION_CURRENCY_TEMPLATE, STRIPE_SUBSCRIPTION_STATUS_ENUM, ACTIVE_STRIPE_SUBSCRIPTION_STATUSES, DEFAULT_PRODUCT_TYPE_PRODUCT_FIELDS, DEFAULT_PRODUCT_TYPE_SKU_FIELDS, PHYSICAL_PRODUCT_TYPE, DIGITAL_PRODUCT_TYPE, SERVICE_PRODUCT_TYPE, MEMBERSHIP_PRODUCT_TYPE, ADVANCED_PRODUCT_TYPE, TEMPLATE_PRODUCT_TYPES, templateProductTypeIds, PRODUCT_TYPE_HELP_TEXT, DEFAULT_PRODUCT_TYPE_ID, ORDER_SORT_MODES, SUBSCRIPTION_SORT_MODES;
  var init_constants = __esm({
    "packages/systems/commerce/constants/index.ts"() {
      "use strict";
      import_camelCase = __toESM(require_camelCase());
      init_pluginConstants();
      init_bindingContextConstants();
      init_paypalCurrencyList();
      init_stripeCurrencyList();
      SHIPPING_METHOD_FLAT = "flat-rate";
      SHIPPING_METHOD_PERCENTAGE = "percentage";
      SHIPPING_METHOD_PRICE = "price";
      SHIPPING_METHOD_QUANTITY = "quantity";
      SHIPPING_METHOD_WEIGHT = "weight";
      SHIPPING_METHODS = Object.freeze({
        FLAT: SHIPPING_METHOD_FLAT,
        PERCENTAGE: SHIPPING_METHOD_PERCENTAGE,
        PRICE: SHIPPING_METHOD_PRICE,
        QUANTITY: SHIPPING_METHOD_QUANTITY,
        WEIGHT: SHIPPING_METHOD_WEIGHT
      });
      INVENTORY_TYPE_FINITE = "finite";
      INVENTORY_TYPE_INFINITE = "infinite";
      PRICE_TEMPLATE_CURRENCY_SYMBOL = _withDerivedValue({
        label: "Currency symbol",
        path: "symbol"
      });
      PRICE_TEMPLATE_AMOUNT = _withDerivedValue({
        label: "Amount",
        type: "CommercePrice",
        options: {
          readOnly: true,
          isNotAddable: true
        }
      });
      PRICE_TEMPLATE_CURRENCY_CODE = _withDerivedValue({
        label: "Currency code"
      });
      _intoToken = (option) => `{{wf ${option.value} }}`;
      DEFAULT_PRICE_TEMPLATE_VALUE = [
        _intoToken(PRICE_TEMPLATE_CURRENCY_SYMBOL),
        " ",
        _intoToken(PRICE_TEMPLATE_AMOUNT),
        " ",
        _intoToken(PRICE_TEMPLATE_CURRENCY_CODE)
      ].join("");
      CSV_CURRENCY_TEMPLATE = [
        _intoToken(PRICE_TEMPLATE_CURRENCY_SYMBOL),
        _intoToken(PRICE_TEMPLATE_AMOUNT)
      ].join("");
      CSV_INTEGRATION_CURRENCY_TEMPLATE = [
        _intoToken(PRICE_TEMPLATE_AMOUNT),
        " ",
        _intoToken(PRICE_TEMPLATE_CURRENCY_CODE)
      ].join("");
      STRIPE_SUBSCRIPTION_STATUS_ENUM = {
        active: "active",
        past_due: "past_due",
        unpaid: "unpaid",
        canceled: "canceled",
        incomplete: "incomplete",
        incomplete_expired: "incomplete_expired",
        trialing: "trialing"
      };
      ACTIVE_STRIPE_SUBSCRIPTION_STATUSES = [
        STRIPE_SUBSCRIPTION_STATUS_ENUM.active,
        STRIPE_SUBSCRIPTION_STATUS_ENUM.past_due,
        STRIPE_SUBSCRIPTION_STATUS_ENUM.trialing
      ];
      DEFAULT_PRODUCT_TYPE_PRODUCT_FIELDS = [
        { fieldSlug: "name", required: true },
        { fieldSlug: "slug", required: true },
        { fieldSlug: "sku-properties", required: false },
        { fieldSlug: "category", required: false },
        { fieldSlug: "description", required: false },
        { fieldSlug: "tax-category", required: false },
        { fieldSlug: "default-sku", required: false },
        { fieldSlug: "ec-product-type", required: false },
        { fieldSlug: "options", required: false }
      ];
      DEFAULT_PRODUCT_TYPE_SKU_FIELDS = [
        { fieldSlug: "sku-values", required: false },
        { fieldSlug: "product", required: false },
        { fieldSlug: "main-image", required: false },
        { fieldSlug: "more-images", required: false },
        { fieldSlug: "price", required: true },
        { fieldSlug: "compare-at-price", required: false },
        { fieldSlug: "ec-sku-subscription-plan", required: false },
        { fieldSlug: "sku", required: false },
        { fieldSlug: "ec-sku-billing-method", required: false },
        { fieldSlug: "track-inventory", required: false },
        { fieldSlug: "quantity", required: false }
      ];
      PHYSICAL_PRODUCT_TYPE = {
        name: "Physical",
        id: "ff42fee0113744f693a764e3431a9cc2",
        fields: {
          product: [
            ...DEFAULT_PRODUCT_TYPE_PRODUCT_FIELDS,
            { fieldSlug: "shippable", required: false }
          ],
          sku: [
            ...DEFAULT_PRODUCT_TYPE_SKU_FIELDS,
            { fieldSlug: "weight", required: false },
            { fieldSlug: "width", required: false },
            { fieldSlug: "height", required: false },
            { fieldSlug: "length", required: false }
          ]
        }
      };
      DIGITAL_PRODUCT_TYPE = {
        name: "Digital",
        id: "f22027db68002190aef89a4a2b7ac8a1",
        fields: {
          product: [...DEFAULT_PRODUCT_TYPE_PRODUCT_FIELDS],
          sku: [
            ...DEFAULT_PRODUCT_TYPE_SKU_FIELDS,
            { fieldSlug: "download-files", required: true }
          ]
        }
      };
      SERVICE_PRODUCT_TYPE = {
        name: "Service",
        id: "c599e43b1a1c34d5a323aedf75d3adf6",
        fields: {
          product: [...DEFAULT_PRODUCT_TYPE_PRODUCT_FIELDS],
          sku: [...DEFAULT_PRODUCT_TYPE_SKU_FIELDS]
        }
      };
      MEMBERSHIP_PRODUCT_TYPE = {
        name: "Membership",
        id: "e348fd487d0102946c9179d2a94bb613",
        fields: {
          product: [
            ...DEFAULT_PRODUCT_TYPE_PRODUCT_FIELDS,
            { fieldSlug: "shippable", required: false }
          ],
          sku: [
            ...DEFAULT_PRODUCT_TYPE_SKU_FIELDS,
            { fieldSlug: "weight", required: false },
            { fieldSlug: "width", required: false },
            { fieldSlug: "height", required: false },
            { fieldSlug: "length", required: false },
            { fieldSlug: "download-files", required: false },
            { fieldSlug: "include-downloads", required: false }
          ]
        }
      };
      ADVANCED_PRODUCT_TYPE = {
        name: "Advanced",
        id: "b6ccc1830db4b1babeb06a9ac5f6dd76"
      };
      TEMPLATE_PRODUCT_TYPES = [
        PHYSICAL_PRODUCT_TYPE,
        DIGITAL_PRODUCT_TYPE,
        SERVICE_PRODUCT_TYPE,
        MEMBERSHIP_PRODUCT_TYPE,
        ADVANCED_PRODUCT_TYPE
      ];
      templateProductTypeIds = TEMPLATE_PRODUCT_TYPES.reduce((ids, t) => {
        ids[t.id] = "";
        return ids;
      }, {});
      PRODUCT_TYPE_HELP_TEXT = {
        [PHYSICAL_PRODUCT_TYPE.id]: "Physical products are shipped to the customer (e.g., merchandise, apparel).",
        [DIGITAL_PRODUCT_TYPE.id]: "Digital products are immediately downloadable by the customer after checkout (e.g., audio files, ebooks).",
        [SERVICE_PRODUCT_TYPE.id]: "Service products do not require a shipping address during checkout (e.g., classes, consultations).",
        [MEMBERSHIP_PRODUCT_TYPE.id]: "Membership products give users access to gated content through recurring or one-time payment (e.g., subscriptions, one-time membership fee). Membership products require a user login and can only be purchased once.",
        [ADVANCED_PRODUCT_TYPE.id]: "Advanced products provide all available customizable options."
      };
      DEFAULT_PRODUCT_TYPE_ID = PHYSICAL_PRODUCT_TYPE.id;
      ORDER_SORT_MODES = Object.freeze({
        "-count": "-purchasedItemsCount -_id",
        count: "purchasedItemsCount _id",
        "-name": "-customerInfo.fullName -_id",
        name: "customerInfo.fullName _id",
        "-orderid": "-orderId",
        orderid: "orderId",
        "-paid": "-customerPaid.unit -customerPaid.value -_id",
        paid: "customerPaid.unit customerPaid.value _id",
        "-status": "-statusCode -_id",
        status: "statusCode _id",
        "-time": "-acceptedOn -_id",
        time: "acceptedOn _id"
      });
      SUBSCRIPTION_SORT_MODES = Object.freeze({
        "-lastBilled": "-lastInvoiced -_id",
        lastBilled: "lastInvoiced _id",
        "-nextBilling": "-paidUntil -_id",
        nextBilling: "paidUntil _id",
        "-orderid": "-orderId",
        orderid: "orderId",
        "-purchased": "-subCreatedOn -_id",
        purchased: "subCreatedOn _id",
        "-status": "-status -_id",
        status: "status _id",
        "-trialing": "-trialing -_id",
        trialing: "trialing _id"
      });
    }
  });

  // packages/utilities/fp/utils/Const.ts
  var create, VALUE, prototype2, Const, getConst;
  var init_Const = __esm({
    "packages/utilities/fp/utils/Const.ts"() {
      "use strict";
      ({ create } = Object);
      VALUE = Symbol();
      prototype2 = {
        map() {
          return this;
        }
      };
      Const = (value2) => {
        const object = create(prototype2);
        object[VALUE] = value2;
        return object;
      };
      getConst = (con) => con[VALUE];
    }
  });

  // packages/utilities/fp/utils/Identity.ts
  var create2, VALUE2;
  var init_Identity = __esm({
    "packages/utilities/fp/utils/Identity.ts"() {
      "use strict";
      ({ create: create2 } = Object);
      VALUE2 = Symbol();
    }
  });

  // packages/utilities/fp/option/index.ts
  var create3, returnThis, VALUE3, FOLD, None, Some, SomePrototype, maybe3;
  var init_option = __esm({
    "packages/utilities/fp/option/index.ts"() {
      "use strict";
      ({ create: create3 } = Object);
      returnThis = function() {
        return this;
      };
      VALUE3 = Symbol();
      FOLD = Symbol();
      None = create3({
        map: returnThis,
        chain: returnThis,
        alt: (alternativeOption) => alternativeOption,
        ap: returnThis,
        concat: (other) => other,
        /**
         * Returns a default fallback value if the `Option` is a `None`.
         */
        [FOLD]: (fallback) => fallback
      });
      Some = (value2) => {
        const object = create3(SomePrototype);
        object[VALUE3] = value2;
        return object;
      };
      SomePrototype = {
        /**
         * Transform the value inside of a `Option` by applying a unary function to it.
         */
        map(f) {
          return Some(f(this[VALUE3]));
        },
        /**
         * Sequence computations by applying a function to the value
         * contained in the `Option`. The function must return an `Option`.
         */
        chain(f) {
          return f(this[VALUE3]);
        },
        /**
         * Provide an alternative option that will be returned if this option is None.
         */
        alt: returnThis,
        /**
         * Allows you to apply the Option's value with another Option's value,
         * returning another Option.
         */
        ap(m) {
          return m.map(this[VALUE3]);
        },
        concat(other) {
          return other[FOLD](
            this,
            (otherValue) => Some(this[VALUE3].concat(otherValue))
          );
        },
        /**
         * Applies a function to the value contained in an `Option`
         * if the `Option` is a `Some`.
         */
        [FOLD](fallback, mapValue) {
          return mapValue(this[VALUE3]);
        }
      };
      maybe3 = (fallback) => (mapValue) => (option) => option[FOLD](fallback, mapValue);
    }
  });

  // packages/utilities/fp/result/index.ts
  var create4, returnThis2, VALUE4, ERROR, FOLD2, Ok, ErrPrototype, OkPrototype, either;
  var init_result = __esm({
    "packages/utilities/fp/result/index.ts"() {
      "use strict";
      ({ create: create4 } = Object);
      returnThis2 = function() {
        return this;
      };
      VALUE4 = Symbol();
      ERROR = Symbol();
      FOLD2 = Symbol();
      Ok = (value2) => {
        const object = create4(OkPrototype);
        object[VALUE4] = value2;
        return object;
      };
      ErrPrototype = {
        map: returnThis2,
        chain: returnThis2,
        ap: returnThis2,
        [FOLD2]: function(errorHandler, _) {
          return errorHandler(this[ERROR]);
        }
      };
      OkPrototype = {
        map(f) {
          return Ok(f(this[VALUE4]));
        },
        chain(f) {
          return f(this[VALUE4]);
        },
        ap(m) {
          return m.map(this[VALUE4]);
        },
        [FOLD2]: function(errorHandler, valueHandler) {
          return valueHandler(this[VALUE4]);
        }
      };
      either = (mapErr) => (mapVal) => (result2) => result2[FOLD2](mapErr, mapVal);
    }
  });

  // packages/utilities/fp/utils/index.ts
  var emptyArray, emptyObject2, identity2, constant, compose, flip, thrush, constantFalse, constantTrue, not, complement, optionToBool, resultToBool, isNil, notNil, unionWith, union, unionTo, zipWith, zip, reduce2, concat, concatTo, constantIdentity, parseIntWithRadix, safeParseInt, flatMap, flat, view, constantNone, okToOption, errToOption, extractBool, extractArray, extractFunctionFromOption, extractFunctionFromResult, optionToArray, optionOfEmptyArray, resultOfEmptyArray, resultOfEmptyObject, values;
  var init_utils2 = __esm({
    "packages/utilities/fp/utils/index.ts"() {
      "use strict";
      init_Const();
      init_Identity();
      init_option();
      init_result();
      emptyArray = [];
      emptyObject2 = {};
      if (false) {
        const proxy = (sharedConstantName) => ({
          set: (target, prop, value2) => {
            console.error(
              'Invalid mutation of shared constant. Property "%s" was set on "%s".',
              prop,
              sharedConstantName
            );
            target[prop] = value2;
            return true;
          }
        });
        emptyArray = new Proxy(emptyArray, proxy("emptyArray"));
        emptyObject2 = new Proxy(emptyObject2, proxy("emptyObject"));
      }
      identity2 = (x) => x;
      constant = (x) => (_) => x;
      compose = (f) => (g) => (x) => f(g(x));
      flip = (f) => (x) => (y) => f(y)(x);
      thrush = (x) => (f) => f(x);
      constantFalse = constant(false);
      constantTrue = constant(true);
      not = (x) => !x;
      complement = compose(not);
      optionToBool = maybe3(false)(constantTrue);
      resultToBool = either(constantFalse)(constantTrue);
      isNil = (value2) => value2 == null;
      notNil = complement(isNil);
      unionWith = (combine) => (first) => first === emptyObject2 ? identity2 : (second) => {
        if (second === emptyObject2)
          return first;
        let changedFromFirst = false;
        let changedFromSecond = false;
        const result2 = {};
        for (const key2 in second) {
          const secondVal = second[key2];
          if (key2 in first) {
            const firstVal = first[key2];
            const finalVal = combine(firstVal)(secondVal);
            if (finalVal !== secondVal) {
              changedFromSecond = true;
            }
            if (finalVal !== firstVal) {
              changedFromFirst = true;
            }
            result2[key2] = finalVal;
          } else {
            changedFromFirst = true;
            result2[key2] = secondVal;
          }
        }
        for (const key2 in first) {
          if (key2 in result2)
            continue;
          changedFromSecond = true;
          result2[key2] = first[key2];
        }
        if (!changedFromFirst)
          return first;
        if (!changedFromSecond)
          return second;
        return result2;
      };
      union = unionWith(constant);
      unionTo = flip(union);
      zipWith = (f) => (xs) => (ys) => {
        const rv = [];
        let idx = 0;
        const len = Math.min(xs.length, ys.length);
        while (idx < len) {
          rv[idx] = f(xs[idx])(ys[idx]);
          idx += 1;
        }
        return rv;
      };
      zip = zipWith((x) => (y) => [x, y]);
      reduce2 = (reducer) => (init3) => (xs) => xs.reduce(reducer, init3);
      concat = (ys) => ys.length ? (xs) => xs.length ? xs.concat(ys) : ys : identity2;
      concatTo = flip(concat);
      constantIdentity = constant(identity2);
      parseIntWithRadix = (radix) => (num) => {
        const parsed = parseInt(num, radix);
        return isNaN(parsed) ? None : Some(parsed);
      };
      safeParseInt = parseIntWithRadix(10);
      flatMap = (f) => reduce2((result2, item) => {
        const ys = f(item);
        if (!ys.length) {
          return result2;
        }
        const nextResult = result2.length ? result2 : [];
        nextResult.push.apply(nextResult, ys);
        return nextResult;
      })(emptyArray);
      flat = flatMap(
        identity2
      );
      view = // @ts-expect-error Argument of type '<A>(arg1: (arg2: A) => unknown) => (arg3: A) => unknown' is not assignable to parameter of type '(arg1: unknown) => (arg3: unknown) => unknown'.  Types of parameters 'arg1' and 'arg1' are incompatible.  Type 'unknown' is not assignable to type '(arg2: unknown) => unknown'.
      compose(compose(getConst))(thrush(Const));
      constantNone = constant(None);
      okToOption = // eslint-disable-next-line @typescript-eslint/no-explicit-any
      either(constantNone)(Some);
      errToOption = // eslint-disable-next-line @typescript-eslint/no-explicit-any
      either(Some)(constantNone);
      extractBool = maybe3(false)(identity2);
      extractArray = maybe3(emptyArray)(identity2);
      extractFunctionFromOption = maybe3(identity2)(identity2);
      extractFunctionFromResult = either(constantIdentity)(identity2);
      optionToArray = maybe3(
        emptyArray
      )(Array.of);
      optionOfEmptyArray = Some(emptyArray);
      resultOfEmptyArray = Ok(emptyArray);
      resultOfEmptyObject = Ok(emptyObject2);
      values = (obj) => (
        // @ts-expect-error - TS2322 - Type '(T | undefined)[]' is not assignable to type 'T[]'.
        Object.keys(obj).map((k) => obj[k])
      );
    }
  });

  // packages/systems/users/constants/types.ts
  var USYS_ACCESS_TYPES;
  var init_types5 = __esm({
    "packages/systems/users/constants/types.ts"() {
      "use strict";
      USYS_ACCESS_TYPES = {
        LOGGED_IN: "LOGGED_IN",
        ADMIN_ALWAYS_VISIBLE: "ADMIN_ALWAYS_VISIBLE"
      };
    }
  });

  // packages/systems/users/constants/errorStates.ts
  var ERROR_MSG_CLASS, ERROR_STATE, ErrorStateToCopy, SERVER_DATA_VALIDATION_ERRORS, LOGIN_UI_ERROR_CODES, SIGNUP_UI_ERROR_CODES, ERROR_ATTRIBUTE_PREFIX, UPDATE_PASSWORD_UI_ERROR_CODES, RESET_PASSWORD_UI_ERROR_CODES, TOO_LARGE_ERR, TOO_SMALL_ERR, TYPE_ERR, GENERIC_ERR, REQUIRED_ERR, USER_FILE_UPLOAD_ERRORS, FORM_PATH, FORM_TOO_LARGE_ERROR_PATH, FORM_TOO_SMALL_ERROR_PATH, FORM_TYPE_ERROR_PATH, FORM_GENERIC_ERROR_PATH, FORM_REQUIRED_ERROR_PATH, __DEPRECATED__logInErrorStates, logInErrorStates, SIGNUP_ERROR_CATEGORY, signUpErrorStates, updatePasswordErrorStates, resetPasswordErrorStates, UPDATE_ACCOUNT_ERROR_CODES, updateAccountErrorStates;
  var init_errorStates = __esm({
    "packages/systems/users/constants/errorStates.ts"() {
      "use strict";
      ERROR_MSG_CLASS = "user-form-error-msg";
      ERROR_STATE = {
        SIGNUP: "signup-error-state",
        LOGIN: "login-error-state",
        UPDATE_PASSWORD: "update-password-error-state",
        RESET_PASSWORD: "reset-password-error-state",
        ACCOUNT_UPDATE: "account-update-error-state"
      };
      ErrorStateToCopy = (errorStateType, id) => {
        if (errorStateType === "signup-error-state") {
          return signUpErrorStates[id]?.copy ?? null;
        }
        if (errorStateType === "login-error-state") {
          return logInErrorStates[id]?.copy ?? null;
        }
        if (errorStateType === "update-password-error-state") {
          return updatePasswordErrorStates[id]?.copy ?? null;
        }
        if (errorStateType === "reset-password-error-state") {
          return resetPasswordErrorStates[id]?.copy ?? null;
        }
        if (errorStateType === "account-update-error-state") {
          return updateAccountErrorStates[id]?.copy ?? null;
        }
        console.error(`copy for ${errorStateType} not found`);
        return null;
      };
      SERVER_DATA_VALIDATION_ERRORS = {
        RequiredError: "EmptyValue",
        MinSizeError: "MinSizeError",
        MaxSizeError: "MaxSizeError",
        ExtensionsError: "ExtensionsError",
        DefaultError: "DefaultError"
      };
      LOGIN_UI_ERROR_CODES = {
        GENERAL_ERROR: "GENERAL_ERROR",
        INVALID_EMAIL_OR_PASSWORD: "INVALID_EMAIL_OR_PASSWORD"
      };
      SIGNUP_UI_ERROR_CODES = {
        GENERAL_ERROR: "GENERAL_ERROR",
        NOT_ALLOWED: "NOT_ALLOWED",
        NOT_VERIFIED: "NOT_VERIFIED",
        EMAIL_ALREADY_EXIST: "EMAIL_ALREADY_EXIST",
        USE_INVITE_EMAIL: "USE_INVITE_EMAIL",
        INVALID_EMAIL: "INVALID_EMAIL",
        INVALID_PASSWORD: "INVALID_PASSWORD",
        EXPIRED_TOKEN: "EXPIRED_TOKEN",
        VALIDATION_FAILED: "VALIDATION_FAILED",
        REQUIRED: "REQUIRED"
      };
      ERROR_ATTRIBUTE_PREFIX = {
        SIGNUP: "wf-signup-form",
        LOGIN: "wf-login-form",
        RESET_PASSWORD: "wf-reset-pw-form",
        UPDATE_PASSWORD: "wf-update-pw-form",
        ACCOUNT_UPDATE: "wf-account-update-form"
      };
      UPDATE_PASSWORD_UI_ERROR_CODES = {
        GENERAL_ERROR: "GENERAL_ERROR",
        WEAK_PASSWORD: "WEAK_PASSWORD"
      };
      RESET_PASSWORD_UI_ERROR_CODES = {
        GENERAL_ERROR: "GENERAL_ERROR"
      };
      TOO_LARGE_ERR = "TOO_LARGE_ERROR";
      TOO_SMALL_ERR = "TOO_SMALL_ERROR";
      TYPE_ERR = "TYPE_ERROR";
      GENERIC_ERR = "GENERIC_ERROR";
      REQUIRED_ERR = "REQUIRED_ERROR";
      USER_FILE_UPLOAD_ERRORS = {
        GENERIC: {
          id: GENERIC_ERR,
          msg: "Upload failed. Something went wrong. Please retry.",
          path: ["data", "form", GENERIC_ERR]
        },
        TOO_LARGE: {
          id: TOO_LARGE_ERR,
          msg: "Upload failed. File too large.",
          path: ["data", "form", TOO_LARGE_ERR]
        },
        TOO_SMALL: {
          id: TOO_SMALL_ERR,
          msg: "Upload failed. File too small.",
          path: ["data", "form", TOO_SMALL_ERR]
        },
        TYPE: {
          id: TYPE_ERR,
          msg: "Upload failed. Invalid file type.",
          path: ["data", "form", TYPE_ERR]
        },
        REQUIRED: {
          id: REQUIRED_ERR,
          msg: "Please upload a file.",
          path: ["data", "form", REQUIRED_ERR]
        }
      };
      FORM_PATH = [{ in: "Record", at: "form" }];
      FORM_TOO_LARGE_ERROR_PATH = [
        ...FORM_PATH,
        { in: "Record", at: TOO_LARGE_ERR }
      ];
      FORM_TOO_SMALL_ERROR_PATH = [
        ...FORM_PATH,
        { in: "Record", at: TOO_SMALL_ERR }
      ];
      FORM_TYPE_ERROR_PATH = [
        ...FORM_PATH,
        { in: "Record", at: TYPE_ERR }
      ];
      FORM_GENERIC_ERROR_PATH = [
        ...FORM_PATH,
        { in: "Record", at: GENERIC_ERR }
      ];
      FORM_REQUIRED_ERROR_PATH = [
        ...FORM_PATH,
        { in: "Record", at: REQUIRED_ERR }
      ];
      __DEPRECATED__logInErrorStates = {
        [LOGIN_UI_ERROR_CODES.GENERAL_ERROR]: {
          id: LOGIN_UI_ERROR_CODES.GENERAL_ERROR,
          name: "General error",
          copy: "We're having trouble logging you in. Please try again, or contact us if you continue to have problems.",
          path: ["data", "users", LOGIN_UI_ERROR_CODES.GENERAL_ERROR]
        }
      };
      logInErrorStates = {
        [LOGIN_UI_ERROR_CODES.GENERAL_ERROR]: {
          id: LOGIN_UI_ERROR_CODES.GENERAL_ERROR,
          name: "General error",
          copy: "We're having trouble logging you in. Please try again, or contact us if you continue to have problems.",
          path: ["data", "users", LOGIN_UI_ERROR_CODES.GENERAL_ERROR]
        },
        [LOGIN_UI_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD]: {
          id: LOGIN_UI_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD,
          name: "Wrong email or password",
          copy: "Invalid email or password. Please try again.",
          path: ["data", "users", LOGIN_UI_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD]
        }
      };
      SIGNUP_ERROR_CATEGORY = {
        GENERAL: { id: "GENERAL", label: "General Errors" },
        EMAIL: { id: "EMAIL", label: "Email Errors" },
        PASSWORD: { id: "PASSWORD", label: "Password Errors" },
        INVITE: { id: "INVITE", label: "Invitation Errors" },
        VERFIICATION: { id: "VERIFCATION", label: "Verification Errors" },
        VALIDATION: { id: "VALIDATION", label: "Validation Errors" }
      };
      signUpErrorStates = {
        [SIGNUP_UI_ERROR_CODES.GENERAL_ERROR]: {
          id: SIGNUP_UI_ERROR_CODES.GENERAL_ERROR,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "GENERAL_ERROR"; category: { readonly id: "GENERAL"; readonly label: "General Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.GENERAL,
          name: "General error",
          copy: "There was an error signing you up. Please try again, or contact us if you continue to have problems.",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.GENERAL_ERROR]
        },
        [SIGNUP_UI_ERROR_CODES.NOT_ALLOWED]: {
          id: SIGNUP_UI_ERROR_CODES.NOT_ALLOWED,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "NOT_ALLOWED"; category: { readonly id: "EMAIL"; readonly label: "Email Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.EMAIL,
          name: "Email not allowed",
          copy: "You're not allowed to access this site, please contact the admin for support.",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.NOT_ALLOWED]
        },
        // email errors
        [SIGNUP_UI_ERROR_CODES.INVALID_EMAIL]: {
          id: SIGNUP_UI_ERROR_CODES.INVALID_EMAIL,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "INVALID_EMAIL"; category: { readonly id: "EMAIL"; readonly label: "Email Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.EMAIL,
          name: "Invalid email",
          copy: "Make sure your email exists and is properly formatted (e.g., user@domain.com).",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.INVALID_EMAIL]
        },
        [SIGNUP_UI_ERROR_CODES.EMAIL_ALREADY_EXIST]: {
          id: SIGNUP_UI_ERROR_CODES.EMAIL_ALREADY_EXIST,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "EMAIL_ALREADY_EXIST"; category: { readonly id: "EMAIL"; readonly label: "Email Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.EMAIL,
          name: "Email already exists",
          copy: "An account with this email address already exists. Log in or reset your password.",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.EMAIL_ALREADY_EXIST]
        },
        // invitation errors
        [SIGNUP_UI_ERROR_CODES.USE_INVITE_EMAIL]: {
          id: SIGNUP_UI_ERROR_CODES.USE_INVITE_EMAIL,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "USE_INVITE_EMAIL"; category: { readonly id: "INVITE"; readonly label: "Invitation Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.INVITE,
          name: "Must use invite email",
          copy: "Use the same email address your invitation was sent to.",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.USE_INVITE_EMAIL]
        },
        // password errors
        [SIGNUP_UI_ERROR_CODES.INVALID_PASSWORD]: {
          id: SIGNUP_UI_ERROR_CODES.INVALID_PASSWORD,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "INVALID_PASSWORD"; category: { readonly id: "PASSWORD"; readonly label: "Password Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.PASSWORD,
          name: "Invalid password",
          copy: "Your password must be at least 8 characters.",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.INVALID_PASSWORD]
        },
        // verification errors
        [SIGNUP_UI_ERROR_CODES.NOT_VERIFIED]: {
          id: SIGNUP_UI_ERROR_CODES.NOT_VERIFIED,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "NOT_VERIFIED"; category: { readonly id: "VERIFCATION"; readonly label: "Verification Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.VERFIICATION,
          name: "Verification failed",
          copy: "We couldn't verify your account. Please try again, or contact us if you continue to have problems.",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.NOT_VERIFIED]
        },
        [SIGNUP_UI_ERROR_CODES.EXPIRED_TOKEN]: {
          id: SIGNUP_UI_ERROR_CODES.EXPIRED_TOKEN,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "EXPIRED_TOKEN"; category: { readonly id: "VERIFCATION"; readonly label: "Verification Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.VERFIICATION,
          name: "Verification expired",
          copy: "This link has expired. A new link has been sent to your email. Please try again, or contact us if you continue to have problems.",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.EXPIRED_TOKEN]
        },
        [SIGNUP_UI_ERROR_CODES.VALIDATION_FAILED]: {
          id: SIGNUP_UI_ERROR_CODES.VALIDATION_FAILED,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "VALIDATION_FAILED"; category: { readonly id: "VALIDATION"; readonly label: "Validation Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.VALIDATION,
          name: "Validation error",
          copy: "There was an error in some of the information provided.",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.VALIDATION_FAILED]
        },
        [SIGNUP_UI_ERROR_CODES.REQUIRED]: {
          id: SIGNUP_UI_ERROR_CODES.REQUIRED,
          // @ts-expect-error - TS2418 - Type of computed property's value is '{ id: "REQUIRED"; category: { readonly id: "VALIDATION"; readonly label: "Validation Errors"; }; name: string; copy: string; path: string[]; }', which is not assignable to type 'ErrorStateType'.
          category: SIGNUP_ERROR_CATEGORY.VALIDATION,
          name: "Missing information",
          copy: "Fill out all required fields",
          path: ["data", "users", SIGNUP_UI_ERROR_CODES.REQUIRED]
        }
      };
      updatePasswordErrorStates = {
        [UPDATE_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR]: {
          id: UPDATE_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR,
          name: "General error",
          copy: "There was an error updating your password. Please try again, or contact us if you continue to have problems.",
          path: ["data", "users", UPDATE_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR]
        },
        [UPDATE_PASSWORD_UI_ERROR_CODES.WEAK_PASSWORD]: {
          id: UPDATE_PASSWORD_UI_ERROR_CODES.WEAK_PASSWORD,
          name: "Weak password",
          copy: "Your password must be at least 8 characters.",
          path: ["data", "users", UPDATE_PASSWORD_UI_ERROR_CODES.WEAK_PASSWORD]
        }
      };
      resetPasswordErrorStates = {
        [RESET_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR]: {
          id: RESET_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR,
          name: "General error",
          copy: "There was an error resetting your password. Please try again, or contact us if you continue to have problems.",
          path: ["data", "users", RESET_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR]
        }
      };
      UPDATE_ACCOUNT_ERROR_CODES = {
        GENERAL_ERROR: "GENERAL_ERROR"
      };
      updateAccountErrorStates = {
        [UPDATE_ACCOUNT_ERROR_CODES.GENERAL_ERROR]: {
          id: UPDATE_ACCOUNT_ERROR_CODES.GENERAL_ERROR,
          name: "General error",
          copy: "There was an error updating your account. Please try again, or contact us if you continue to have problems.",
          path: ["data", "users", UPDATE_ACCOUNT_ERROR_CODES.GENERAL_ERROR]
        }
      };
    }
  });

  // packages/systems/users/constants/index.ts
  var constants_exports = {};
  __export(constants_exports, {
    ACCESS_GROUP_ADMISSION_TYPE: () => ACCESS_GROUP_ADMISSION_TYPE,
    ACCESS_GROUP_FREE_TYPE: () => ACCESS_GROUP_FREE_TYPE,
    ACCESS_GROUP_INLINE_PRODUCT_FIELD_SLUG: () => ACCESS_GROUP_INLINE_PRODUCT_FIELD_SLUG,
    BASIC_MAX_NUM_USERS: () => BASIC_MAX_NUM_USERS,
    BUSINESS_MAX_NUM_USERS: () => BUSINESS_MAX_NUM_USERS,
    CONFIRM_UNSAVED_CHANGES_COPY: () => CONFIRM_UNSAVED_CHANGES_COPY,
    DEFAULT_SESSION_DURATION_IN_MS: () => DEFAULT_SESSION_DURATION_IN_MS,
    DEFAULT_SESSION_TOKEN_DURATION_IN_MS: () => DEFAULT_SESSION_TOKEN_DURATION_IN_MS,
    DEFAULT_STYLES: () => DEFAULT_STYLES,
    DEFAULT_TOKEN_AGE_MS: () => DEFAULT_TOKEN_AGE_MS,
    DEFAULT_USER_FIELDS: () => DEFAULT_USER_FIELDS,
    ECOMM_PLUS_MAX_NUM_USERS: () => ECOMM_PLUS_MAX_NUM_USERS,
    ECOMM_STANDARD_MAX_NUM_USERS: () => ECOMM_STANDARD_MAX_NUM_USERS,
    EMAIL_TEMPLATE_TYPES: () => EMAIL_TEMPLATE_TYPES,
    ERROR_ATTRIBUTE_PREFIX: () => ERROR_ATTRIBUTE_PREFIX,
    ERROR_MSG_CLASS: () => ERROR_MSG_CLASS,
    ERROR_STATE: () => ERROR_STATE,
    EXCEEDS_MAX_FILE_SIZE_ERROR: () => EXCEEDS_MAX_FILE_SIZE_ERROR,
    EXCEEDS_MAX_IMAGE_SIZE_ERROR: () => EXCEEDS_MAX_IMAGE_SIZE_ERROR,
    ErrorStateToCopy: () => ErrorStateToCopy,
    FORM_GENERIC_ERROR_PATH: () => FORM_GENERIC_ERROR_PATH,
    FORM_REQUIRED_ERROR_PATH: () => FORM_REQUIRED_ERROR_PATH,
    FORM_TOO_LARGE_ERROR_PATH: () => FORM_TOO_LARGE_ERROR_PATH,
    FORM_TOO_SMALL_ERROR_PATH: () => FORM_TOO_SMALL_ERROR_PATH,
    FORM_TYPE_ERROR_PATH: () => FORM_TYPE_ERROR_PATH,
    HARD_LIMIT_MAX_NUM_USERS: () => HARD_LIMIT_MAX_NUM_USERS,
    KEY_FROM_RESERVED_USER_FIELD: () => KEY_FROM_RESERVED_USER_FIELD,
    LOGGEDIN_COOKIE_NAME: () => LOGGEDIN_COOKIE_NAME,
    LOGIN_UI_ERROR_CODES: () => LOGIN_UI_ERROR_CODES,
    MAX_GROUP_ID_LENGTH: () => MAX_GROUP_ID_LENGTH,
    MAX_NUM_GROUPS: () => MAX_NUM_GROUPS,
    MAX_UPDATE_USER_DATA_FIELDS: () => MAX_UPDATE_USER_DATA_FIELDS,
    MAX_USER_DATA_FIELDS: () => MAX_USER_DATA_FIELDS,
    MEMBERSHIPS_EMAIL_KEYS: () => MEMBERSHIPS_EMAIL_KEYS,
    MIN_GROUP_ID_LENGTH: () => MIN_GROUP_ID_LENGTH,
    NAMES_FROM_USER_FIELDS: () => NAMES_FROM_USER_FIELDS,
    NEW_USER_FIELD_ID: () => NEW_USER_FIELD_ID,
    NO_REQUIRED_ATTRIBUTE: () => NO_REQUIRED_ATTRIBUTE,
    PASSWORD_MAX_LENGTH: () => PASSWORD_MAX_LENGTH,
    PASSWORD_MIN_LENGTH: () => PASSWORD_MIN_LENGTH,
    RESERVED_USER_FIELDS: () => RESERVED_USER_FIELDS,
    RESERVED_USER_PREFIX: () => RESERVED_USER_PREFIX,
    RESET_PASSWORD_UI_ERROR_CODES: () => RESET_PASSWORD_UI_ERROR_CODES,
    SERVER_DATA_VALIDATION_ERRORS: () => SERVER_DATA_VALIDATION_ERRORS,
    SESSION_COOKIE_NAME: () => SESSION_COOKIE_NAME,
    SETUP_GUIDE_ALL_KEYS: () => SETUP_GUIDE_ALL_KEYS,
    SETUP_GUIDE_KEYS: () => SETUP_GUIDE_KEYS,
    SIGNUP_ERROR_CATEGORY: () => SIGNUP_ERROR_CATEGORY,
    SIGNUP_UI_ERROR_CODES: () => SIGNUP_UI_ERROR_CODES,
    STARTER_MAX_NUM_USERS: () => STARTER_MAX_NUM_USERS,
    SUBSCRIPTION_EMAIL_TYPES: () => SUBSCRIPTION_EMAIL_TYPES,
    SUBSCRIPTION_USER_LIMITS: () => SUBSCRIPTION_USER_LIMITS,
    TEMP_STATE_PATH: () => TEMP_STATE_PATH,
    TEXT_INPUT_TYPE_TO_FIELD_TYPE: () => TEXT_INPUT_TYPE_TO_FIELD_TYPE,
    UPDATE_ACCOUNT_ERROR_CODES: () => UPDATE_ACCOUNT_ERROR_CODES,
    UPDATE_PASSWORD_UI_ERROR_CODES: () => UPDATE_PASSWORD_UI_ERROR_CODES,
    USER_ACCESS_META_OPTIONS: () => USER_ACCESS_META_OPTIONS,
    USER_CSV_IMPORT_STATUS_MAX_TRIES: () => USER_CSV_IMPORT_STATUS_MAX_TRIES,
    USER_CSV_IMPORT_STATUS_POLLING_INTERVAL: () => USER_CSV_IMPORT_STATUS_POLLING_INTERVAL,
    USER_FIELD_DEFAULTS: () => USER_FIELD_DEFAULTS,
    USER_FIELD_FORM_ID: () => USER_FIELD_FORM_ID,
    USER_FILE_UPLOAD_ERRORS: () => USER_FILE_UPLOAD_ERRORS,
    USER_PAGE_SIZE: () => USER_PAGE_SIZE,
    USER_STATUSES: () => USER_STATUSES,
    USYS_ACCESS_TYPES: () => USYS_ACCESS_TYPES,
    USYS_CONTEXT_PATH: () => USYS_CONTEXT_PATH,
    USYS_DATA_ATTRS: () => USYS_DATA_ATTRS,
    USYS_DOM_CLASS_NAMES: () => USYS_DOM_CLASS_NAMES,
    USYS_FIELD_PATH: () => USYS_FIELD_PATH,
    USYS_FORM_TYPES: () => USYS_FORM_TYPES,
    USYS_INPUT_SIGN_UP_IDS: () => USYS_INPUT_SIGN_UP_IDS,
    USYS_INPUT_TYPES: () => USYS_INPUT_TYPES,
    USYS_PAGE_SETTINGS: () => USYS_PAGE_SETTINGS,
    USYS_PAGE_UTIL_KEYS: () => USYS_PAGE_UTIL_KEYS,
    USYS_RESERVED_SLUGS: () => USYS_RESERVED_SLUGS,
    USYS_TOKEN_TYPES: () => USYS_TOKEN_TYPES,
    USYS_USER_STATES: () => USYS_USER_STATES,
    USYS_UTILITY_KEYS: () => USYS_UTILITY_KEYS,
    __DEPRECATED__logInErrorStates: () => __DEPRECATED__logInErrorStates,
    logInErrorStates: () => logInErrorStates,
    resetPasswordErrorStates: () => resetPasswordErrorStates,
    signUpErrorStates: () => signUpErrorStates,
    updateAccountErrorStates: () => updateAccountErrorStates,
    updatePasswordErrorStates: () => updatePasswordErrorStates
  });
  var RESERVED_USER_PREFIX, RESERVED_USER_FIELDS, KEY_FROM_RESERVED_USER_FIELD, NAMES_FROM_USER_FIELDS, TEXT_INPUT_TYPE_TO_FIELD_TYPE, USYS_UTILITY_KEYS, USYS_DATA_ATTRS, USYS_DOM_CLASS_NAMES, USYS_FORM_TYPES, USYS_INPUT_TYPES, USYS_INPUT_SIGN_UP_IDS, USYS_USER_STATES, USYS_PAGE_SETTINGS, USYS_RESERVED_SLUGS, USYS_PAGE_UTIL_KEYS, DEFAULT_STYLES, PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH, SECOND, MINUTE, HOUR, DAY, SESSION_COOKIE_NAME, LOGGEDIN_COOKIE_NAME, DEFAULT_SESSION_DURATION_IN_MS, DEFAULT_SESSION_TOKEN_DURATION_IN_MS, DEFAULT_TOKEN_AGE_MS, STARTER_MAX_NUM_USERS, BASIC_MAX_NUM_USERS, BUSINESS_MAX_NUM_USERS, ECOMM_STANDARD_MAX_NUM_USERS, ECOMM_PLUS_MAX_NUM_USERS, HARD_LIMIT_MAX_NUM_USERS, SUBSCRIPTION_USER_LIMITS, MAX_NUM_GROUPS, MIN_GROUP_ID_LENGTH, MAX_GROUP_ID_LENGTH, USYS_TOKEN_TYPES, ACCESS_GROUP_INLINE_PRODUCT_FIELD_SLUG, ACCESS_GROUP_ADMISSION_TYPE, ACCESS_GROUP_FREE_TYPE, SUBSCRIPTION_EMAIL_TYPES, MEMBERSHIPS_EMAIL_KEYS, EMAIL_TEMPLATE_TYPES, CONFIRM_UNSAVED_CHANGES_COPY, USER_FIELD_FORM_ID, NEW_USER_FIELD_ID, USER_FIELD_DEFAULTS, DEFAULT_USER_FIELDS, SETUP_GUIDE_KEYS, SETUP_GUIDE_ALL_KEYS, MAX_USER_DATA_FIELDS, MAX_UPDATE_USER_DATA_FIELDS, USYS_FIELD_PATH, USYS_CONTEXT_PATH, TEMP_PATH, TEMP_STATE_PATH, USER_ACCESS_META_OPTIONS, EXCEEDS_MAX_FILE_SIZE_ERROR, EXCEEDS_MAX_IMAGE_SIZE_ERROR, NO_REQUIRED_ATTRIBUTE, USER_STATUSES, USER_PAGE_SIZE, USER_CSV_IMPORT_STATUS_POLLING_TIMEOUT, USER_CSV_IMPORT_STATUS_POLLING_INTERVAL, USER_CSV_IMPORT_STATUS_MAX_TRIES;
  var init_constants2 = __esm({
    "packages/systems/users/constants/index.ts"() {
      "use strict";
      init_utils2();
      init_types5();
      init_errorStates();
      init_types5();
      RESERVED_USER_PREFIX = "wf-user-field-";
      RESERVED_USER_FIELDS = {
        name: RESERVED_USER_PREFIX + "name",
        acceptPrivacy: RESERVED_USER_PREFIX + "accept-privacy",
        acceptCommunications: RESERVED_USER_PREFIX + "accept-communications"
      };
      KEY_FROM_RESERVED_USER_FIELD = {
        [RESERVED_USER_PREFIX + "name"]: "name",
        [RESERVED_USER_PREFIX + "accept-privacy"]: "acceptPrivacy",
        [RESERVED_USER_PREFIX + "accept-communications"]: "acceptCommunications"
      };
      NAMES_FROM_USER_FIELDS = {
        [RESERVED_USER_PREFIX + "name"]: "Name",
        [RESERVED_USER_PREFIX + "accept-privacy"]: "Accept privacy policy",
        [RESERVED_USER_PREFIX + "accept-communications"]: "Accept communications",
        PRIVACY_POLICY: "Accept privacy policy",
        PASSWORD: "Password",
        EMAIL: "Email"
      };
      TEXT_INPUT_TYPE_TO_FIELD_TYPE = {
        text: "PlainText",
        password: "Password",
        email: "Email",
        number: "PlainText",
        tel: "PlainText"
      };
      USYS_UTILITY_KEYS = {
        "usys-log-in": "usys-log-in",
        "usys-sign-up": "usys-sign-up",
        "usys-reset-password": "usys-reset-password",
        "usys-update-password": "usys-update-password",
        "usys-access-denied": "usys-access-denied",
        "usys-user-account": "usys-user-account"
      };
      USYS_DATA_ATTRS = {
        formType: "data-wf-user-form-type",
        inputType: "data-wf-user-form-input-type",
        logout: "data-wf-user-logout",
        login: "data-wf-user-login",
        formError: "data-wf-user-form-error",
        redirectUrl: "data-wf-user-form-redirect",
        formVerification: "data-wf-user-form-verification",
        userSubscriptions: "data-wf-user-subscriptions-list",
        userSubscriptionsEmptyState: "data-wf-user-subscriptions-empty",
        userAccount: "data-wf-user-account",
        subscriptionCancel: "data-wf-user-subscription-cancel",
        userId: "data-wf-user-id",
        field: "data-wf-user-field",
        fieldType: "data-wf-user-field-type",
        fileUploadKey: "data-wf-user-file-upload-key",
        unsavedFileUploadKey: "data-wf-unsaved-user-file-upload-key"
      };
      USYS_DOM_CLASS_NAMES = {
        formSuccess: "w-form-success",
        formVerfication: "w-form-verification",
        formError: "w-form-fail"
      };
      USYS_FORM_TYPES = {
        login: "login",
        signup: "signup",
        updatePassword: "updatePassword",
        resetPassword: "resetPassword",
        account: "userAccount"
      };
      USYS_INPUT_TYPES = {
        email: "email",
        name: "name",
        password: "password",
        acceptPrivacy: "accept-privacy"
      };
      USYS_INPUT_SIGN_UP_IDS = {
        email: "wf-sign-up-email",
        name: "wf-sign-up-name",
        password: "wf-sign-up-password",
        acceptPrivacy: "wf-sign-up-accept-privacy",
        acceptCommunications: "wf-sign-up-accept-communications"
      };
      USYS_USER_STATES = {
        loggedIn: "loggedIn",
        loggedOut: "loggedOut"
      };
      USYS_PAGE_SETTINGS = {
        login: {
          parent: null,
          sortPos: 0,
          utilKey: "usys-log-in",
          slug: "log-in",
          title: "Log In"
        },
        signup: {
          parent: null,
          sortPos: 1,
          utilKey: "usys-sign-up",
          slug: "sign-up",
          title: "Sign Up"
        },
        resetPassword: {
          parent: null,
          sortPos: 2,
          utilKey: "usys-reset-password",
          slug: "reset-password",
          title: "Reset Password"
        },
        updatePassword: {
          parent: null,
          sortPos: 3,
          utilKey: "usys-update-password",
          slug: "update-password",
          title: "Update Password"
        },
        accessDenied: {
          parent: null,
          sortPos: 4,
          utilKey: "usys-access-denied",
          slug: "access-denied",
          title: "Access Denied"
        },
        userAccount: {
          parent: null,
          sortPos: 5,
          utilKey: "usys-user-account",
          slug: "user-account",
          title: "User Account"
        }
      };
      USYS_RESERVED_SLUGS = values(USYS_PAGE_SETTINGS).map(
        (pageSettings) => pageSettings.slug
      );
      USYS_PAGE_UTIL_KEYS = values(USYS_PAGE_SETTINGS).map(
        (pageSettings) => pageSettings.utilKey
      );
      DEFAULT_STYLES = {
        accentColor: "#468EE5",
        bgColor: "#F5F6F7",
        includeWfBrand: true
      };
      PASSWORD_MIN_LENGTH = 8;
      PASSWORD_MAX_LENGTH = 72;
      SECOND = 1e3;
      MINUTE = 60 * SECOND;
      HOUR = 60 * MINUTE;
      DAY = 24 * HOUR;
      SESSION_COOKIE_NAME = "wf_sid";
      LOGGEDIN_COOKIE_NAME = "wf_loggedin";
      DEFAULT_SESSION_DURATION_IN_MS = 7 * DAY;
      DEFAULT_SESSION_TOKEN_DURATION_IN_MS = 4 * HOUR;
      DEFAULT_TOKEN_AGE_MS = HOUR;
      STARTER_MAX_NUM_USERS = 100;
      BASIC_MAX_NUM_USERS = 2e4;
      BUSINESS_MAX_NUM_USERS = 2e4;
      ECOMM_STANDARD_MAX_NUM_USERS = 2e4;
      ECOMM_PLUS_MAX_NUM_USERS = 2e4;
      HARD_LIMIT_MAX_NUM_USERS = 100 * 1e3;
      SUBSCRIPTION_USER_LIMITS = {
        free: STARTER_MAX_NUM_USERS,
        static: BASIC_MAX_NUM_USERS,
        cms: BUSINESS_MAX_NUM_USERS,
        business: BUSINESS_MAX_NUM_USERS,
        ecommerce_standard: ECOMM_STANDARD_MAX_NUM_USERS,
        ecommerce_plus: ECOMM_PLUS_MAX_NUM_USERS,
        ecommerce_advanced: BUSINESS_MAX_NUM_USERS,
        enterprise: BUSINESS_MAX_NUM_USERS,
        enterprise_lite: BUSINESS_MAX_NUM_USERS
      };
      MAX_NUM_GROUPS = 20;
      MIN_GROUP_ID_LENGTH = 2;
      MAX_GROUP_ID_LENGTH = 2;
      USYS_TOKEN_TYPES = {
        inviteUser: "inviteUser",
        resetPassword: "resetPassword",
        verifyEmail: "verifyEmail"
      };
      ACCESS_GROUP_INLINE_PRODUCT_FIELD_SLUG = "access-group-membership-product";
      ACCESS_GROUP_ADMISSION_TYPE = {
        free: "free",
        paid: "paid"
      };
      ACCESS_GROUP_FREE_TYPE = {
        all: "all",
        admin: "admin"
      };
      SUBSCRIPTION_EMAIL_TYPES = {
        PAYMENT_FAILED: "paymentFailed",
        PAYMENT_SUCCESSFUL: "paymentSuccessful",
        SUBSCRIPTION_CANCELED: "subscriptionCanceled",
        VERIFY_PAYMENT: "verifyPayment"
      };
      MEMBERSHIPS_EMAIL_KEYS = {
        invite: "invite",
        resetPassword: "resetPassword",
        updatedPassword: "updatedPassword",
        welcome: "welcome",
        verify: "verify"
      };
      EMAIL_TEMPLATE_TYPES = {
        invite: "MEMBERSHIPS_INVITE",
        resetPassword: "MEMBERSHIPS_RESET_PASSWORD",
        updatedPassword: "MEMBERSHIPS_UPDATED_PASSWORD",
        verify: "MEMBERSHIPS_VERIFY",
        welcome: "MEMBERSHIPS_WELCOME"
      };
      CONFIRM_UNSAVED_CHANGES_COPY = {
        title: "Continue without saving?",
        content: "Your changes will be lost.",
        iconType: "warning",
        submit: { label: "Continue", intent: "danger" },
        cancel: { label: "Cancel", intent: "default" }
      };
      USER_FIELD_FORM_ID = "UserFieldForm";
      NEW_USER_FIELD_ID = "mint-user-field";
      USER_FIELD_DEFAULTS = {
        PlainText: {
          id: NEW_USER_FIELD_ID,
          name: "",
          slug: "",
          required: false,
          type: "PlainText",
          validations: {}
        },
        Email: {
          id: NEW_USER_FIELD_ID,
          name: "",
          slug: "",
          required: false,
          type: "Email",
          validations: {}
        },
        Bool: {
          id: NEW_USER_FIELD_ID,
          name: "",
          slug: "",
          required: false,
          type: "Bool",
          validations: {}
        },
        FileRef: {
          id: NEW_USER_FIELD_ID,
          name: "",
          slug: "",
          required: false,
          type: "FileRef",
          validations: {}
        },
        Option: {
          id: NEW_USER_FIELD_ID,
          name: "",
          slug: "",
          required: false,
          type: "Option",
          validations: {
            options: []
          }
        },
        Password: {
          id: NEW_USER_FIELD_ID,
          name: "Password",
          slug: "",
          required: true,
          type: "Password",
          validations: {}
        },
        Number: {
          id: NEW_USER_FIELD_ID,
          name: "",
          slug: "",
          required: false,
          type: "Number",
          validations: {
            min: 0,
            step: 1
          }
        },
        Link: {
          id: NEW_USER_FIELD_ID,
          name: "",
          slug: "",
          required: false,
          type: "Link",
          validations: {}
        }
      };
      DEFAULT_USER_FIELDS = [
        {
          id: "name",
          name: "Name",
          required: false,
          slug: "name",
          type: "PlainText",
          validations: {}
        },
        {
          id: "email",
          name: "Email",
          required: true,
          slug: "email",
          type: "Email",
          validations: {}
        },
        {
          id: "password",
          name: "Password",
          required: true,
          slug: "password",
          type: "Password",
          validations: {}
        },
        {
          id: "acceptPrivacy",
          name: "Accept privacy",
          required: false,
          slug: "accept-privacy",
          type: "Bool",
          validations: {}
        },
        {
          id: "acceptCommunications",
          name: "Accept communications",
          required: false,
          slug: "accept-communications",
          type: "Bool",
          validations: {}
        }
      ];
      SETUP_GUIDE_KEYS = {
        hasVisitedAccessDeniedPage: "hasVisitedAccessDeniedPage",
        hasVisitedLoginPage: "hasVisitedLoginPage",
        hasVisitedSignUpPage: "hasVisitedSignUpPage",
        hasVisitedUserAccountSettings: "hasVisitedUserAccountSettings",
        hasVisitedUserAccountPage: "hasVisitedUserAccountPage"
      };
      SETUP_GUIDE_ALL_KEYS = {
        ...SETUP_GUIDE_KEYS,
        hasHostingPlan: "hasHostingPlan",
        hasEcommerce: "hasEcommerce",
        hasEnabledSSL: "hasEnabledSSL",
        hasUsers: "hasUsers",
        hasAccessGroups: "hasAccessGroups",
        hasRestrictedContent: "hasRestrictedContent",
        hasRestrictedProducts: "hasRestrictedProducts"
      };
      MAX_USER_DATA_FIELDS = 20;
      MAX_UPDATE_USER_DATA_FIELDS = MAX_USER_DATA_FIELDS + 2;
      USYS_FIELD_PATH = [
        { in: "Record", at: "users" },
        { in: "Record", at: "field" }
      ];
      USYS_CONTEXT_PATH = [
        { in: "Record", at: "users" },
        { in: "Record", at: "context" }
      ];
      TEMP_PATH = [{ in: "Record", at: "temp" }];
      TEMP_STATE_PATH = [
        ...TEMP_PATH,
        { in: "Record", at: "state" }
      ];
      USER_ACCESS_META_OPTIONS = [
        USYS_ACCESS_TYPES.LOGGED_IN
      ];
      EXCEEDS_MAX_FILE_SIZE_ERROR = "Maximum size allowed for a file upload is 10000kb / 10mb.";
      EXCEEDS_MAX_IMAGE_SIZE_ERROR = "Maximum size allowed for a image upload is 4000kb / 4mb.";
      NO_REQUIRED_ATTRIBUTE = ["FileRef", "Bool"];
      USER_STATUSES = {
        invited: "Invited",
        verified: "Verified",
        unverified: "Unverified"
      };
      USER_PAGE_SIZE = 100;
      USER_CSV_IMPORT_STATUS_POLLING_TIMEOUT = 20 * 60 * 1e3;
      USER_CSV_IMPORT_STATUS_POLLING_INTERVAL = 5e3;
      USER_CSV_IMPORT_STATUS_MAX_TRIES = Math.floor(
        USER_CSV_IMPORT_STATUS_POLLING_TIMEOUT / USER_CSV_IMPORT_STATUS_POLLING_INTERVAL
      );
    }
  });

  // packages/systems/dynamo/constants/index.ts
  var SECOND2, MINUTE2, HOUR2, DAY2, YEAR, CLASS_NAME_W_DYN_BIND_EMPTY, CONDITION_INVISIBLE_CLASS, NON_EXISTING_ITEM_ID, SCHEDULED_PUBLISH_LIMIT_IN_MS, SCHEDULED_PUBLISH_GRACE_PERIOD_IN_MS, SHARED_ALLOWED_FIELD_TYPES, DATETIME_FORMAT_OPTIONS, DATE_FORMAT_OPTIONS;
  var init_constants3 = __esm({
    "packages/systems/dynamo/constants/index.ts"() {
      "use strict";
      SECOND2 = 1e3;
      MINUTE2 = 60 * SECOND2;
      HOUR2 = 60 * MINUTE2;
      DAY2 = 24 * HOUR2;
      YEAR = 365 * DAY2;
      CLASS_NAME_W_DYN_BIND_EMPTY = "w-dyn-bind-empty";
      CONDITION_INVISIBLE_CLASS = "w-condition-invisible";
      NON_EXISTING_ITEM_ID = "000000000000000000000000";
      SCHEDULED_PUBLISH_LIMIT_IN_MS = 5 * YEAR;
      SCHEDULED_PUBLISH_GRACE_PERIOD_IN_MS = 30 * MINUTE2;
      SHARED_ALLOWED_FIELD_TYPES = {
        innerHTML: {
          PlainText: "innerText",
          HighlightedText: "innerText",
          RichText: "innerHTML",
          Number: "innerText",
          Video: "innerHTML",
          Option: "innerText",
          Date: "innerText",
          Phone: "innerText",
          Email: "innerText",
          CommercePrice: "innerHTML",
          Link: "innerText",
          ImageRef: false,
          FileRef: false,
          ItemRef: false,
          CommercePropValues: "innerText"
        },
        "style.color": {
          Color: true
        },
        "style.background-color": {
          Color: true
        },
        "style.border-color": {
          Color: true
        },
        "style.background-image": {
          ImageRef: true
        },
        src: ["ImageRef"],
        alt: [
          "PlainText",
          "Option",
          "Number",
          "Date",
          "Phone",
          "Email",
          "Video",
          "Link"
        ],
        href: ["Phone", "Email", "Video", "Link", "FileRef"],
        id: ["PlainText"],
        for: ["PlainText"],
        value: ["Number", "PlainText"],
        checked: ["Bool"],
        dataWHref: ["PlainText", "FullSlug"]
      };
      DATETIME_FORMAT_OPTIONS = [
        "MMMM D, YYYY",
        "MMMM D, YYYY h:mm A",
        "MMMM D, YYYY H:mm",
        "MMM D, YYYY",
        "MMM D, YYYY h:mm A",
        "MMM D, YYYY H:mm",
        "dddd, MMMM D, YYYY",
        "M/D/YYYY",
        "M.D.YYYY",
        "D/M/YYYY",
        "D.M.YYYY",
        "M/D/YYYY h:mm A",
        "M/D/YYYY H:mm",
        "M.D.YYYY h:mm A",
        "M.D.YYYY H:mm",
        "D/M/YYYY h:mm A",
        "D/M/YYYY H:mm",
        "D.M.YYYY h:mm A",
        "D.M.YYYY H:mm",
        "M/D/YY",
        "M.D.YY",
        "D/M/YY",
        "D.M.YY",
        "M/D/YY h:mm a",
        "M/D/YY H:mm",
        "M.D.YY h:mm a",
        "M.D.YY H:mm",
        "D/M/YY h:mm a",
        "D/M/YY H:mm",
        "D.M.YY h:mm a",
        "D.M.YY H:mm",
        "YYYY-MM-DD",
        "YYYY-MM-DD h:mm a",
        "YYYY-MM-DD H:mm",
        "MMM D",
        "D MMM",
        "MMMM YYYY",
        "MMM YYYY",
        "MM/YYYY",
        "h:mm a",
        "H:mm",
        "D",
        "DD",
        "ddd",
        "dddd",
        "M",
        "MM",
        "MMM",
        "MMMM",
        "YY",
        "YYYY"
      ];
      DATE_FORMAT_OPTIONS = DATETIME_FORMAT_OPTIONS.filter(
        (format) => !/[hHmaA]/.test(format)
      );
    }
  });

  // packages/shared/render/plugins/Dynamo/constants.ts
  var CLASS_NAME_DYNAMIC_LIST_REPEATER_REF, CLASS_NAME_DYNAMIC_LIST_ITEM, CLASS_NAME_DYNAMIC_LIST_REPEATER_ITEM;
  var init_constants4 = __esm({
    "packages/shared/render/plugins/Dynamo/constants.ts"() {
      "use strict";
      CLASS_NAME_DYNAMIC_LIST_REPEATER_REF = "w-dyn-items-repeater-ref";
      CLASS_NAME_DYNAMIC_LIST_ITEM = "w-dyn-item";
      CLASS_NAME_DYNAMIC_LIST_REPEATER_ITEM = "w-dyn-repeater-item";
    }
  });

  // packages/shared/render/plugins/Lightbox/utils.ts
  var createJsonItemFromBoundMedia, createJsonFromBoundMedia;
  var init_utils3 = __esm({
    "packages/shared/render/plugins/Lightbox/utils.ts"() {
      "use strict";
      createJsonItemFromBoundMedia = (binding) => {
        if (binding) {
          if (binding.metadata) {
            const {
              html,
              height: height2,
              width: width2,
              thumbnail_url: thumbnailUrl
            } = binding.metadata;
            return {
              url: binding.url,
              html,
              height: height2,
              width: width2,
              thumbnailUrl,
              type: "video"
            };
          } else {
            return { url: binding.url, type: "image" };
          }
        }
        return null;
      };
      createJsonFromBoundMedia = (binding, nodeJsonData) => {
        const group = nodeJsonData ? nodeJsonData.group : void 0;
        if (Array.isArray(binding)) {
          const items = binding.reduce((memo, subBinding) => {
            const jsonItem2 = createJsonItemFromBoundMedia(subBinding);
            if (jsonItem2) {
              memo.push(jsonItem2);
            }
            return memo;
          }, []);
          return items.length > 0 ? { items, group } : null;
        }
        const jsonItem = createJsonItemFromBoundMedia(binding);
        return jsonItem !== null ? {
          items: [jsonItem],
          group
        } : null;
      };
    }
  });

  // packages/shared/site/utils/Commerce.ts
  var simplifySkuValues, getProductOptionValueName;
  var init_Commerce = __esm({
    "packages/shared/site/utils/Commerce.ts"() {
      "use strict";
      simplifySkuValues = (skuValues) => skuValues.reduce((acc, pair) => {
        acc[pair.property.id] = pair.value.id;
        return acc;
      }, {});
      getProductOptionValueName = (property2, simplifiedSkuValues) => {
        if (property2.id && property2.enum) {
          const propValueId = simplifiedSkuValues[property2.id];
          const propValue = property2.enum.find((value2) => value2.id === propValueId);
          if (propValue && typeof propValue.name === "string") {
            return propValue.name;
          }
        }
        return "";
      };
    }
  });

  // packages/shared/site/index.ts
  var init_site = __esm({
    "packages/shared/site/index.ts"() {
      "use strict";
      init_Commerce();
    }
  });

  // packages/shared/render/plugins/Commerce/modules/commerceUtils.ts
  var safeParseJson, findElementByNodeType, findAllElementsByNodeType, findClosestElementByNodeType, findClosestElementWithAttribute, findClosestElementByClassName, triggerRender, isProductionLikeEnv, isProtocolHttps, formToObject, customDataFormToArray, setElementLoading, loadingCallbacks, addLoadingCallback, executeLoadingCallbacks, isFreeOrder, hasSubscription, showElement, hideElement, orderStatusFlagsQuery, fetchOrderStatusFlags, acceptedOrderDataQuery, fetchAcceptedOrderData, trackOrder;
  var init_commerceUtils = __esm({
    "packages/shared/render/plugins/Commerce/modules/commerceUtils.ts"() {
      "use strict";
      init_lib7();
      init_constants();
      safeParseJson = (jsonString) => {
        let json = null;
        try {
          if (jsonString != null) {
            json = JSON.parse(decodeURIComponent(jsonString));
          }
        } catch (e) {
          if (!(e instanceof SyntaxError && e.message.match(/\bJSON\b/i))) {
            throw e;
          }
        } finally {
          return json;
        }
      };
      findElementByNodeType = (type, scope = document) => {
        return scope.querySelector(`[${DATA_ATTR_NODE_TYPE}="${type}"]`);
      };
      findAllElementsByNodeType = (type, scope = document) => {
        return Array.from(
          scope.querySelectorAll(`[${DATA_ATTR_NODE_TYPE}="${type}"]`)
        );
      };
      findClosestElementByNodeType = (nodeType, element) => {
        let target = element;
        while (target) {
          if (target instanceof Element && target.getAttribute(DATA_ATTR_NODE_TYPE) === nodeType) {
            return target;
          } else {
            target = target instanceof Element ? target.parentElement : null;
          }
        }
        return target;
      };
      findClosestElementWithAttribute = (dataAttribute, element) => {
        let target = element;
        while (target) {
          if (target instanceof Element && target.hasAttribute(dataAttribute)) {
            return target;
          } else {
            target = target instanceof Element ? target.parentElement : null;
          }
        }
        return target;
      };
      findClosestElementByClassName = (className, element) => {
        let target = element;
        while (target) {
          if (target instanceof Element && target.classList.contains(className)) {
            return target;
          } else {
            target = target instanceof Element ? target.parentElement : null;
          }
        }
        return target;
      };
      triggerRender = (error, isInitial = false) => {
        const renderEvent = new CustomEvent(RENDER_TREE_EVENT, {
          detail: {
            error,
            isInitial
          }
        });
        window.dispatchEvent(renderEvent);
      };
      isProductionLikeEnv = () => true;
      isProtocolHttps = () => !isProductionLikeEnv() || window.location.protocol === "https:";
      formToObject = (form, toString3) => {
        const values2 = {};
        Array.from(form.elements).forEach((element) => {
          const name2 = element.getAttribute("name");
          if (name2 && name2 !== "") {
            const value2 = toString3 ? String(element.value).trim() : element.value;
            values2[name2] = value2 == null || value2 === "" ? null : value2;
          }
        });
        return values2;
      };
      customDataFormToArray = (form) => {
        const customData = [];
        if (!form || !(form instanceof HTMLFormElement)) {
          return customData;
        }
        Array.from(form.elements).forEach(
          // @ts-expect-error - TS2345 - Argument of type '(element: HTMLElement | HTMLInputElement | HTMLTextAreaElement) => void' is not assignable to parameter of type '(value: Element, index: number, array: Element[]) => void'.
          (element) => {
            const name2 = element.getAttribute("name");
            if (element instanceof HTMLTextAreaElement && element.value) {
              customData.push({
                name: name2 ? name2 : "Textarea",
                textArea: element.value
              });
            } else if (element instanceof HTMLInputElement) {
              if (element.type === "checkbox") {
                customData.push({
                  name: name2 ? name2 : "Checkbox",
                  checkbox: element.checked
                });
              } else if (element.value) {
                customData.push({
                  name: name2 ? name2 : "Text Input",
                  textInput: element.value
                });
              }
            }
          }
        );
        return customData;
      };
      setElementLoading = (el) => {
        const tr = window.Webflow.tram(el);
        tr.set({ opacity: 0.2 });
        tr.add("opacity 500ms ease-in-out");
        const animate = () => {
          tr.start({ opacity: 0.2 }).then({ opacity: 0.4 }).then(animate);
        };
        animate();
        return () => tr.destroy();
      };
      loadingCallbacks = [];
      addLoadingCallback = (cb) => {
        loadingCallbacks.push(cb);
      };
      executeLoadingCallbacks = () => {
        let finishLoading;
        while ((finishLoading = loadingCallbacks.shift()) !== void 0) {
          finishLoading();
        }
      };
      isFreeOrder = (response) => response && response.data && response.data.database && response.data.database.commerceOrder && response.data.database.commerceOrder.statusFlags && response.data.database.commerceOrder.statusFlags.isFreeOrder === true;
      hasSubscription = (response) => response && response.data && response.data.database && response.data.database.commerceOrder && response.data.database.commerceOrder.statusFlags && response.data.database.commerceOrder.statusFlags.hasSubscription === true;
      showElement = (element) => element.style.removeProperty("display");
      hideElement = (element) => element.style.setProperty("display", "none");
      orderStatusFlagsQuery = lib_default2`
  query FetchCartInfo {
    database @client {
      id
      commerceOrder {
        id
        statusFlags {
          requiresShipping
          isFreeOrder
          hasSubscription
        }
      }
    }
  }
`;
      fetchOrderStatusFlags = (apolloClient2) => apolloClient2.query({
        query: orderStatusFlagsQuery
      }).then((data2) => {
        return data2 && data2.data && data2.data.database && data2.data.database.commerceOrder && data2.data.database.commerceOrder.statusFlags;
      });
      acceptedOrderDataQuery = lib_default2`
  query FetchAcceptedOrderData(
    $finalizedOrder: commerce_order_finalized_order_args
  ) {
    database {
      id
      commerceOrder(finalizedOrder: $finalizedOrder) {
        id
        total {
          decimalValue
          unit
        }
        userItems {
          id
          count
          product {
            id
            f_name_
          }
          sku {
            id
          }
          price {
            decimalValue
          }
        }
      }
    }
  }
`;
      fetchAcceptedOrderData = (apolloClient2, finalizedOrder) => apolloClient2.query({
        query: acceptedOrderDataQuery,
        variables: { finalizedOrder }
      }).then((data2) => data2?.data?.database?.commerceOrder);
      trackOrder = (apolloClient2, finalizedOrder) => {
        if (typeof fbq === "undefined" && typeof gtag === "undefined") {
          return;
        }
        let trackedOrders = {};
        try {
          const storedTrackedOrders = window.localStorage.getItem("wf-seen-orders");
          if (storedTrackedOrders) {
            trackedOrders = JSON.parse(storedTrackedOrders);
          }
        } catch (err) {
          return;
        }
        if (trackedOrders[finalizedOrder.orderId]) {
          return;
        }
        fetchAcceptedOrderData(apolloClient2, finalizedOrder).then((order) => {
          if (!order) {
            return;
          }
          const { decimalValue, unit } = order.total;
          if (typeof fbq !== "undefined" && typeof fbq === "function") {
            fbq("track", "Purchase", {
              value: decimalValue,
              currency: unit,
              // @ts-expect-error - TS7006 - Parameter 'item' implicitly has an 'any' type.
              content_ids: (order.userItems || []).map((item) => item.sku.id),
              content_type: "product",
              // @ts-expect-error - TS7006 - Parameter 'item' implicitly has an 'any' type.
              contents: (order.userItems || []).map((item) => ({
                id: item.sku.id,
                quantity: item.count,
                item_price: item.price.decimalValue
              }))
            });
          }
          if (typeof gtag !== "undefined" && typeof gtag === "function") {
            gtag("event", "purchase", {
              transaction_id: order.id,
              value: decimalValue,
              currency: unit,
              // @ts-expect-error - TS7006 - Parameter 'item' implicitly has an 'any' type.
              items: (order.userItems || []).map((item) => ({
                id: item.sku.id,
                name: item.product.f_name_,
                quantity: item.count,
                price: item.price.decimalValue
              }))
            });
          }
          trackedOrders[finalizedOrder.orderId] = true;
          try {
            window.localStorage.setItem(
              "wf-seen-orders",
              JSON.stringify(trackedOrders)
            );
          } catch (err) {
            return;
          }
        });
      };
    }
  });

  // node_modules/moment-timezone/node_modules/moment/moment.js
  var require_moment = __commonJS({
    "node_modules/moment-timezone/node_modules/moment/moment.js"(exports2, module2) {
      (function(global2, factory2) {
        typeof exports2 === "object" && typeof module2 !== "undefined" ? module2.exports = factory2() : typeof define === "function" && define.amd ? define(factory2) : global2.moment = factory2();
      })(exports2, function() {
        "use strict";
        var hookCallback;
        function hooks() {
          return hookCallback.apply(null, arguments);
        }
        function setHookCallback(callback) {
          hookCallback = callback;
        }
        function isArray2(input) {
          return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
        }
        function isObject2(input) {
          return input != null && Object.prototype.toString.call(input) === "[object Object]";
        }
        function isObjectEmpty(obj) {
          if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
          } else {
            var k;
            for (k in obj) {
              if (obj.hasOwnProperty(k)) {
                return false;
              }
            }
            return true;
          }
        }
        function isUndefined(input) {
          return input === void 0;
        }
        function isNumber2(input) {
          return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
        }
        function isDate(input) {
          return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
        }
        function map(arr, fn) {
          var res = [], i;
          for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
          }
          return res;
        }
        function hasOwnProp(a, b) {
          return Object.prototype.hasOwnProperty.call(a, b);
        }
        function extend(a, b) {
          for (var i in b) {
            if (hasOwnProp(b, i)) {
              a[i] = b[i];
            }
          }
          if (hasOwnProp(b, "toString")) {
            a.toString = b.toString;
          }
          if (hasOwnProp(b, "valueOf")) {
            a.valueOf = b.valueOf;
          }
          return a;
        }
        function createUTC(input, format2, locale2, strict) {
          return createLocalOrUTC(input, format2, locale2, strict, true).utc();
        }
        function defaultParsingFlags() {
          return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false
          };
        }
        function getParsingFlags(m) {
          if (m._pf == null) {
            m._pf = defaultParsingFlags();
          }
          return m._pf;
        }
        var some;
        if (Array.prototype.some) {
          some = Array.prototype.some;
        } else {
          some = function(fun) {
            var t = Object(this);
            var len = t.length >>> 0;
            for (var i = 0; i < len; i++) {
              if (i in t && fun.call(this, t[i], i, t)) {
                return true;
              }
            }
            return false;
          };
        }
        function isValid(m) {
          if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function(i) {
              return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
            if (m._strict) {
              isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
            }
            if (Object.isFrozen == null || !Object.isFrozen(m)) {
              m._isValid = isNowValid;
            } else {
              return isNowValid;
            }
          }
          return m._isValid;
        }
        function createInvalid(flags) {
          var m = createUTC(NaN);
          if (flags != null) {
            extend(getParsingFlags(m), flags);
          } else {
            getParsingFlags(m).userInvalidated = true;
          }
          return m;
        }
        var momentProperties = hooks.momentProperties = [];
        function copyConfig(to2, from2) {
          var i, prop, val2;
          if (!isUndefined(from2._isAMomentObject)) {
            to2._isAMomentObject = from2._isAMomentObject;
          }
          if (!isUndefined(from2._i)) {
            to2._i = from2._i;
          }
          if (!isUndefined(from2._f)) {
            to2._f = from2._f;
          }
          if (!isUndefined(from2._l)) {
            to2._l = from2._l;
          }
          if (!isUndefined(from2._strict)) {
            to2._strict = from2._strict;
          }
          if (!isUndefined(from2._tzm)) {
            to2._tzm = from2._tzm;
          }
          if (!isUndefined(from2._isUTC)) {
            to2._isUTC = from2._isUTC;
          }
          if (!isUndefined(from2._offset)) {
            to2._offset = from2._offset;
          }
          if (!isUndefined(from2._pf)) {
            to2._pf = getParsingFlags(from2);
          }
          if (!isUndefined(from2._locale)) {
            to2._locale = from2._locale;
          }
          if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
              prop = momentProperties[i];
              val2 = from2[prop];
              if (!isUndefined(val2)) {
                to2[prop] = val2;
              }
            }
          }
          return to2;
        }
        var updateInProgress = false;
        function Moment(config) {
          copyConfig(this, config);
          this._d = new Date(config._d != null ? config._d.getTime() : NaN);
          if (!this.isValid()) {
            this._d = /* @__PURE__ */ new Date(NaN);
          }
          if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
          }
        }
        function isMoment(obj) {
          return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
        }
        function absFloor(number) {
          if (number < 0) {
            return Math.ceil(number) || 0;
          } else {
            return Math.floor(number);
          }
        }
        function toInt(argumentForCoercion) {
          var coercedNumber = +argumentForCoercion, value2 = 0;
          if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value2 = absFloor(coercedNumber);
          }
          return value2;
        }
        function compareArrays(array1, array2, dontConvert) {
          var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;
          for (i = 0; i < len; i++) {
            if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
              diffs++;
            }
          }
          return diffs + lengthDiff;
        }
        function warn(msg) {
          if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
            console.warn("Deprecation warning: " + msg);
          }
        }
        function deprecate(msg, fn) {
          var firstTime = true;
          return extend(function() {
            if (hooks.deprecationHandler != null) {
              hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
              var args = [];
              var arg;
              for (var i = 0; i < arguments.length; i++) {
                arg = "";
                if (typeof arguments[i] === "object") {
                  arg += "\n[" + i + "] ";
                  for (var key2 in arguments[0]) {
                    arg += key2 + ": " + arguments[0][key2] + ", ";
                  }
                  arg = arg.slice(0, -2);
                } else {
                  arg = arguments[i];
                }
                args.push(arg);
              }
              warn(msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack);
              firstTime = false;
            }
            return fn.apply(this, arguments);
          }, fn);
        }
        var deprecations = {};
        function deprecateSimple(name2, msg) {
          if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name2, msg);
          }
          if (!deprecations[name2]) {
            warn(msg);
            deprecations[name2] = true;
          }
        }
        hooks.suppressDeprecationWarnings = false;
        hooks.deprecationHandler = null;
        function isFunction3(input) {
          return input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
        }
        function set3(config) {
          var prop, i;
          for (i in config) {
            prop = config[i];
            if (isFunction3(prop)) {
              this[i] = prop;
            } else {
              this["_" + i] = prop;
            }
          }
          this._config = config;
          this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
          );
        }
        function mergeConfigs(parentConfig, childConfig) {
          var res = extend({}, parentConfig), prop;
          for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
              if (isObject2(parentConfig[prop]) && isObject2(childConfig[prop])) {
                res[prop] = {};
                extend(res[prop], parentConfig[prop]);
                extend(res[prop], childConfig[prop]);
              } else if (childConfig[prop] != null) {
                res[prop] = childConfig[prop];
              } else {
                delete res[prop];
              }
            }
          }
          for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject2(parentConfig[prop])) {
              res[prop] = extend({}, res[prop]);
            }
          }
          return res;
        }
        function Locale(config) {
          if (config != null) {
            this.set(config);
          }
        }
        var keys;
        if (Object.keys) {
          keys = Object.keys;
        } else {
          keys = function(obj) {
            var i, res = [];
            for (i in obj) {
              if (hasOwnProp(obj, i)) {
                res.push(i);
              }
            }
            return res;
          };
        }
        var defaultCalendar = {
          sameDay: "[Today at] LT",
          nextDay: "[Tomorrow at] LT",
          nextWeek: "dddd [at] LT",
          lastDay: "[Yesterday at] LT",
          lastWeek: "[Last] dddd [at] LT",
          sameElse: "L"
        };
        function calendar(key2, mom, now2) {
          var output = this._calendar[key2] || this._calendar["sameElse"];
          return isFunction3(output) ? output.call(mom, now2) : output;
        }
        var defaultLongDateFormat = {
          LTS: "h:mm:ss A",
          LT: "h:mm A",
          L: "MM/DD/YYYY",
          LL: "MMMM D, YYYY",
          LLL: "MMMM D, YYYY h:mm A",
          LLLL: "dddd, MMMM D, YYYY h:mm A"
        };
        function longDateFormat(key2) {
          var format2 = this._longDateFormat[key2], formatUpper = this._longDateFormat[key2.toUpperCase()];
          if (format2 || !formatUpper) {
            return format2;
          }
          this._longDateFormat[key2] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function(val2) {
            return val2.slice(1);
          });
          return this._longDateFormat[key2];
        }
        var defaultInvalidDate = "Invalid date";
        function invalidDate() {
          return this._invalidDate;
        }
        var defaultOrdinal = "%d";
        var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
        function ordinal(number) {
          return this._ordinal.replace("%d", number);
        }
        var defaultRelativeTime = {
          future: "in %s",
          past: "%s ago",
          s: "a few seconds",
          ss: "%d seconds",
          m: "a minute",
          mm: "%d minutes",
          h: "an hour",
          hh: "%d hours",
          d: "a day",
          dd: "%d days",
          M: "a month",
          MM: "%d months",
          y: "a year",
          yy: "%d years"
        };
        function relativeTime(number, withoutSuffix, string, isFuture) {
          var output = this._relativeTime[string];
          return isFunction3(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
        }
        function pastFuture(diff2, output) {
          var format2 = this._relativeTime[diff2 > 0 ? "future" : "past"];
          return isFunction3(format2) ? format2(output) : format2.replace(/%s/i, output);
        }
        var aliases = {};
        function addUnitAlias(unit, shorthand) {
          var lowerCase = unit.toLowerCase();
          aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[shorthand] = unit;
        }
        function normalizeUnits(units) {
          return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : void 0;
        }
        function normalizeObjectUnits(inputObject) {
          var normalizedInput = {}, normalizedProp, prop;
          for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
              normalizedProp = normalizeUnits(prop);
              if (normalizedProp) {
                normalizedInput[normalizedProp] = inputObject[prop];
              }
            }
          }
          return normalizedInput;
        }
        var priorities = {};
        function addUnitPriority(unit, priority) {
          priorities[unit] = priority;
        }
        function getPrioritizedUnits(unitsObj) {
          var units = [];
          for (var u in unitsObj) {
            units.push({ unit: u, priority: priorities[u] });
          }
          units.sort(function(a, b) {
            return a.priority - b.priority;
          });
          return units;
        }
        function zeroFill(number, targetLength, forceSign) {
          var absNumber = "" + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign2 = number >= 0;
          return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
        }
        var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
        var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
        var formatFunctions = {};
        var formatTokenFunctions = {};
        function addFormatToken(token2, padded, ordinal2, callback) {
          var func = callback;
          if (typeof callback === "string") {
            func = function() {
              return this[callback]();
            };
          }
          if (token2) {
            formatTokenFunctions[token2] = func;
          }
          if (padded) {
            formatTokenFunctions[padded[0]] = function() {
              return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
          }
          if (ordinal2) {
            formatTokenFunctions[ordinal2] = function() {
              return this.localeData().ordinal(func.apply(this, arguments), token2);
            };
          }
        }
        function removeFormattingTokens(input) {
          if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, "");
          }
          return input.replace(/\\/g, "");
        }
        function makeFormatFunction(format2) {
          var array = format2.match(formattingTokens), i, length2;
          for (i = 0, length2 = array.length; i < length2; i++) {
            if (formatTokenFunctions[array[i]]) {
              array[i] = formatTokenFunctions[array[i]];
            } else {
              array[i] = removeFormattingTokens(array[i]);
            }
          }
          return function(mom) {
            var output = "", i2;
            for (i2 = 0; i2 < length2; i2++) {
              output += isFunction3(array[i2]) ? array[i2].call(mom, format2) : array[i2];
            }
            return output;
          };
        }
        function formatMoment(m, format2) {
          if (!m.isValid()) {
            return m.localeData().invalidDate();
          }
          format2 = expandFormat(format2, m.localeData());
          formatFunctions[format2] = formatFunctions[format2] || makeFormatFunction(format2);
          return formatFunctions[format2](m);
        }
        function expandFormat(format2, locale2) {
          var i = 5;
          function replaceLongDateFormatTokens(input) {
            return locale2.longDateFormat(input) || input;
          }
          localFormattingTokens.lastIndex = 0;
          while (i >= 0 && localFormattingTokens.test(format2)) {
            format2 = format2.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
          }
          return format2;
        }
        var match1 = /\d/;
        var match2 = /\d\d/;
        var match3 = /\d{3}/;
        var match4 = /\d{4}/;
        var match6 = /[+-]?\d{6}/;
        var match1to2 = /\d\d?/;
        var match3to4 = /\d\d\d\d?/;
        var match5to6 = /\d\d\d\d\d\d?/;
        var match1to3 = /\d{1,3}/;
        var match1to4 = /\d{1,4}/;
        var match1to6 = /[+-]?\d{1,6}/;
        var matchUnsigned = /\d+/;
        var matchSigned = /[+-]?\d+/;
        var matchOffset = /Z|[+-]\d\d:?\d\d/gi;
        var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;
        var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
        var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
        var regexes = {};
        function addRegexToken(token2, regex, strictRegex) {
          regexes[token2] = isFunction3(regex) ? regex : function(isStrict, localeData2) {
            return isStrict && strictRegex ? strictRegex : regex;
          };
        }
        function getParseRegexForToken(token2, config) {
          if (!hasOwnProp(regexes, token2)) {
            return new RegExp(unescapeFormat(token2));
          }
          return regexes[token2](config._strict, config._locale);
        }
        function unescapeFormat(s) {
          return regexEscape(s.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
          }));
        }
        function regexEscape(s) {
          return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
        }
        var tokens = {};
        function addParseToken(token2, callback) {
          var i, func = callback;
          if (typeof token2 === "string") {
            token2 = [token2];
          }
          if (isNumber2(callback)) {
            func = function(input, array) {
              array[callback] = toInt(input);
            };
          }
          for (i = 0; i < token2.length; i++) {
            tokens[token2[i]] = func;
          }
        }
        function addWeekParseToken(token2, callback) {
          addParseToken(token2, function(input, array, config, token3) {
            config._w = config._w || {};
            callback(input, config._w, config, token3);
          });
        }
        function addTimeToArrayFromToken(token2, input, config) {
          if (input != null && hasOwnProp(tokens, token2)) {
            tokens[token2](input, config._a, config, token2);
          }
        }
        var YEAR2 = 0;
        var MONTH = 1;
        var DATE = 2;
        var HOUR3 = 3;
        var MINUTE3 = 4;
        var SECOND3 = 5;
        var MILLISECOND = 6;
        var WEEK = 7;
        var WEEKDAY = 8;
        addFormatToken("Y", 0, 0, function() {
          var y = this.year();
          return y <= 9999 ? "" + y : "+" + y;
        });
        addFormatToken(0, ["YY", 2], 0, function() {
          return this.year() % 100;
        });
        addFormatToken(0, ["YYYY", 4], 0, "year");
        addFormatToken(0, ["YYYYY", 5], 0, "year");
        addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
        addUnitAlias("year", "y");
        addUnitPriority("year", 1);
        addRegexToken("Y", matchSigned);
        addRegexToken("YY", match1to2, match2);
        addRegexToken("YYYY", match1to4, match4);
        addRegexToken("YYYYY", match1to6, match6);
        addRegexToken("YYYYYY", match1to6, match6);
        addParseToken(["YYYYY", "YYYYYY"], YEAR2);
        addParseToken("YYYY", function(input, array) {
          array[YEAR2] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
        });
        addParseToken("YY", function(input, array) {
          array[YEAR2] = hooks.parseTwoDigitYear(input);
        });
        addParseToken("Y", function(input, array) {
          array[YEAR2] = parseInt(input, 10);
        });
        function daysInYear(year) {
          return isLeapYear(year) ? 366 : 365;
        }
        function isLeapYear(year) {
          return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
        }
        hooks.parseTwoDigitYear = function(input) {
          return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
        };
        var getSetYear = makeGetSet("FullYear", true);
        function getIsLeapYear() {
          return isLeapYear(this.year());
        }
        function makeGetSet(unit, keepTime) {
          return function(value2) {
            if (value2 != null) {
              set$1(this, unit, value2);
              hooks.updateOffset(this, keepTime);
              return this;
            } else {
              return get8(this, unit);
            }
          };
        }
        function get8(mom, unit) {
          return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]() : NaN;
        }
        function set$1(mom, unit, value2) {
          if (mom.isValid() && !isNaN(value2)) {
            if (unit === "FullYear" && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
              mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value2, mom.month(), daysInMonth(value2, mom.month()));
            } else {
              mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value2);
            }
          }
        }
        function stringGet(units) {
          units = normalizeUnits(units);
          if (isFunction3(this[units])) {
            return this[units]();
          }
          return this;
        }
        function stringSet(units, value2) {
          if (typeof units === "object") {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
              this[prioritized[i].unit](units[prioritized[i].unit]);
            }
          } else {
            units = normalizeUnits(units);
            if (isFunction3(this[units])) {
              return this[units](value2);
            }
          }
          return this;
        }
        function mod2(n, x) {
          return (n % x + x) % x;
        }
        var indexOf;
        if (Array.prototype.indexOf) {
          indexOf = Array.prototype.indexOf;
        } else {
          indexOf = function(o) {
            var i;
            for (i = 0; i < this.length; ++i) {
              if (this[i] === o) {
                return i;
              }
            }
            return -1;
          };
        }
        function daysInMonth(year, month) {
          if (isNaN(year) || isNaN(month)) {
            return NaN;
          }
          var modMonth = mod2(month, 12);
          year += (month - modMonth) / 12;
          return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
        }
        addFormatToken("M", ["MM", 2], "Mo", function() {
          return this.month() + 1;
        });
        addFormatToken("MMM", 0, 0, function(format2) {
          return this.localeData().monthsShort(this, format2);
        });
        addFormatToken("MMMM", 0, 0, function(format2) {
          return this.localeData().months(this, format2);
        });
        addUnitAlias("month", "M");
        addUnitPriority("month", 8);
        addRegexToken("M", match1to2);
        addRegexToken("MM", match1to2, match2);
        addRegexToken("MMM", function(isStrict, locale2) {
          return locale2.monthsShortRegex(isStrict);
        });
        addRegexToken("MMMM", function(isStrict, locale2) {
          return locale2.monthsRegex(isStrict);
        });
        addParseToken(["M", "MM"], function(input, array) {
          array[MONTH] = toInt(input) - 1;
        });
        addParseToken(["MMM", "MMMM"], function(input, array, config, token2) {
          var month = config._locale.monthsParse(input, token2, config._strict);
          if (month != null) {
            array[MONTH] = month;
          } else {
            getParsingFlags(config).invalidMonth = input;
          }
        });
        var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
        var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split("_");
        function localeMonths(m, format2) {
          if (!m) {
            return isArray2(this._months) ? this._months : this._months["standalone"];
          }
          return isArray2(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format2) ? "format" : "standalone"][m.month()];
        }
        var defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
        function localeMonthsShort(m, format2) {
          if (!m) {
            return isArray2(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
          }
          return isArray2(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format2) ? "format" : "standalone"][m.month()];
        }
        function handleStrictParse(monthName, format2, strict) {
          var i, ii, mom, llc = monthName.toLocaleLowerCase();
          if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
              mom = createUTC([2e3, i]);
              this._shortMonthsParse[i] = this.monthsShort(mom, "").toLocaleLowerCase();
              this._longMonthsParse[i] = this.months(mom, "").toLocaleLowerCase();
            }
          }
          if (strict) {
            if (format2 === "MMM") {
              ii = indexOf.call(this._shortMonthsParse, llc);
              return ii !== -1 ? ii : null;
            } else {
              ii = indexOf.call(this._longMonthsParse, llc);
              return ii !== -1 ? ii : null;
            }
          } else {
            if (format2 === "MMM") {
              ii = indexOf.call(this._shortMonthsParse, llc);
              if (ii !== -1) {
                return ii;
              }
              ii = indexOf.call(this._longMonthsParse, llc);
              return ii !== -1 ? ii : null;
            } else {
              ii = indexOf.call(this._longMonthsParse, llc);
              if (ii !== -1) {
                return ii;
              }
              ii = indexOf.call(this._shortMonthsParse, llc);
              return ii !== -1 ? ii : null;
            }
          }
        }
        function localeMonthsParse(monthName, format2, strict) {
          var i, mom, regex;
          if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format2, strict);
          }
          if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
          }
          for (i = 0; i < 12; i++) {
            mom = createUTC([2e3, i]);
            if (strict && !this._longMonthsParse[i]) {
              this._longMonthsParse[i] = new RegExp("^" + this.months(mom, "").replace(".", "") + "$", "i");
              this._shortMonthsParse[i] = new RegExp("^" + this.monthsShort(mom, "").replace(".", "") + "$", "i");
            }
            if (!strict && !this._monthsParse[i]) {
              regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
              this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i");
            }
            if (strict && format2 === "MMMM" && this._longMonthsParse[i].test(monthName)) {
              return i;
            } else if (strict && format2 === "MMM" && this._shortMonthsParse[i].test(monthName)) {
              return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
              return i;
            }
          }
        }
        function setMonth(mom, value2) {
          var dayOfMonth;
          if (!mom.isValid()) {
            return mom;
          }
          if (typeof value2 === "string") {
            if (/^\d+$/.test(value2)) {
              value2 = toInt(value2);
            } else {
              value2 = mom.localeData().monthsParse(value2);
              if (!isNumber2(value2)) {
                return mom;
              }
            }
          }
          dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value2));
          mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](value2, dayOfMonth);
          return mom;
        }
        function getSetMonth(value2) {
          if (value2 != null) {
            setMonth(this, value2);
            hooks.updateOffset(this, true);
            return this;
          } else {
            return get8(this, "Month");
          }
        }
        function getDaysInMonth() {
          return daysInMonth(this.year(), this.month());
        }
        var defaultMonthsShortRegex = matchWord;
        function monthsShortRegex(isStrict) {
          if (this._monthsParseExact) {
            if (!hasOwnProp(this, "_monthsRegex")) {
              computeMonthsParse.call(this);
            }
            if (isStrict) {
              return this._monthsShortStrictRegex;
            } else {
              return this._monthsShortRegex;
            }
          } else {
            if (!hasOwnProp(this, "_monthsShortRegex")) {
              this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
          }
        }
        var defaultMonthsRegex = matchWord;
        function monthsRegex(isStrict) {
          if (this._monthsParseExact) {
            if (!hasOwnProp(this, "_monthsRegex")) {
              computeMonthsParse.call(this);
            }
            if (isStrict) {
              return this._monthsStrictRegex;
            } else {
              return this._monthsRegex;
            }
          } else {
            if (!hasOwnProp(this, "_monthsRegex")) {
              this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
          }
        }
        function computeMonthsParse() {
          function cmpLenRev(a, b) {
            return b.length - a.length;
          }
          var shortPieces = [], longPieces = [], mixedPieces = [], i, mom;
          for (i = 0; i < 12; i++) {
            mom = createUTC([2e3, i]);
            shortPieces.push(this.monthsShort(mom, ""));
            longPieces.push(this.months(mom, ""));
            mixedPieces.push(this.months(mom, ""));
            mixedPieces.push(this.monthsShort(mom, ""));
          }
          shortPieces.sort(cmpLenRev);
          longPieces.sort(cmpLenRev);
          mixedPieces.sort(cmpLenRev);
          for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
          }
          for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
          }
          this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
          this._monthsShortRegex = this._monthsRegex;
          this._monthsStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
          this._monthsShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
        }
        function createDate(y, m, d, h, M, s, ms) {
          var date2 = new Date(y, m, d, h, M, s, ms);
          if (y < 100 && y >= 0 && isFinite(date2.getFullYear())) {
            date2.setFullYear(y);
          }
          return date2;
        }
        function createUTCDate(y) {
          var date2 = new Date(Date.UTC.apply(null, arguments));
          if (y < 100 && y >= 0 && isFinite(date2.getUTCFullYear())) {
            date2.setUTCFullYear(y);
          }
          return date2;
        }
        function firstWeekOffset(year, dow, doy) {
          var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
          return -fwdlw + fwd - 1;
        }
        function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
          var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
          if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
          } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
          } else {
            resYear = year;
            resDayOfYear = dayOfYear;
          }
          return {
            year: resYear,
            dayOfYear: resDayOfYear
          };
        }
        function weekOfYear(mom, dow, doy) {
          var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
          if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
          } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
          } else {
            resYear = mom.year();
            resWeek = week;
          }
          return {
            week: resWeek,
            year: resYear
          };
        }
        function weeksInYear(year, dow, doy) {
          var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
          return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
        }
        addFormatToken("w", ["ww", 2], "wo", "week");
        addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
        addUnitAlias("week", "w");
        addUnitAlias("isoWeek", "W");
        addUnitPriority("week", 5);
        addUnitPriority("isoWeek", 5);
        addRegexToken("w", match1to2);
        addRegexToken("ww", match1to2, match2);
        addRegexToken("W", match1to2);
        addRegexToken("WW", match1to2, match2);
        addWeekParseToken(["w", "ww", "W", "WW"], function(input, week, config, token2) {
          week[token2.substr(0, 1)] = toInt(input);
        });
        function localeWeek(mom) {
          return weekOfYear(mom, this._week.dow, this._week.doy).week;
        }
        var defaultLocaleWeek = {
          dow: 0,
          // Sunday is the first day of the week.
          doy: 6
          // The week that contains Jan 1st is the first week of the year.
        };
        function localeFirstDayOfWeek() {
          return this._week.dow;
        }
        function localeFirstDayOfYear() {
          return this._week.doy;
        }
        function getSetWeek(input) {
          var week = this.localeData().week(this);
          return input == null ? week : this.add((input - week) * 7, "d");
        }
        function getSetISOWeek(input) {
          var week = weekOfYear(this, 1, 4).week;
          return input == null ? week : this.add((input - week) * 7, "d");
        }
        addFormatToken("d", 0, "do", "day");
        addFormatToken("dd", 0, 0, function(format2) {
          return this.localeData().weekdaysMin(this, format2);
        });
        addFormatToken("ddd", 0, 0, function(format2) {
          return this.localeData().weekdaysShort(this, format2);
        });
        addFormatToken("dddd", 0, 0, function(format2) {
          return this.localeData().weekdays(this, format2);
        });
        addFormatToken("e", 0, 0, "weekday");
        addFormatToken("E", 0, 0, "isoWeekday");
        addUnitAlias("day", "d");
        addUnitAlias("weekday", "e");
        addUnitAlias("isoWeekday", "E");
        addUnitPriority("day", 11);
        addUnitPriority("weekday", 11);
        addUnitPriority("isoWeekday", 11);
        addRegexToken("d", match1to2);
        addRegexToken("e", match1to2);
        addRegexToken("E", match1to2);
        addRegexToken("dd", function(isStrict, locale2) {
          return locale2.weekdaysMinRegex(isStrict);
        });
        addRegexToken("ddd", function(isStrict, locale2) {
          return locale2.weekdaysShortRegex(isStrict);
        });
        addRegexToken("dddd", function(isStrict, locale2) {
          return locale2.weekdaysRegex(isStrict);
        });
        addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config, token2) {
          var weekday = config._locale.weekdaysParse(input, token2, config._strict);
          if (weekday != null) {
            week.d = weekday;
          } else {
            getParsingFlags(config).invalidWeekday = input;
          }
        });
        addWeekParseToken(["d", "e", "E"], function(input, week, config, token2) {
          week[token2] = toInt(input);
        });
        function parseWeekday(input, locale2) {
          if (typeof input !== "string") {
            return input;
          }
          if (!isNaN(input)) {
            return parseInt(input, 10);
          }
          input = locale2.weekdaysParse(input);
          if (typeof input === "number") {
            return input;
          }
          return null;
        }
        function parseIsoWeekday(input, locale2) {
          if (typeof input === "string") {
            return locale2.weekdaysParse(input) % 7 || 7;
          }
          return isNaN(input) ? null : input;
        }
        var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
        function localeWeekdays(m, format2) {
          if (!m) {
            return isArray2(this._weekdays) ? this._weekdays : this._weekdays["standalone"];
          }
          return isArray2(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format2) ? "format" : "standalone"][m.day()];
        }
        var defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
        function localeWeekdaysShort(m) {
          return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
        }
        var defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
        function localeWeekdaysMin(m) {
          return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
        }
        function handleStrictParse$1(weekdayName, format2, strict) {
          var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
          if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];
            for (i = 0; i < 7; ++i) {
              mom = createUTC([2e3, 1]).day(i);
              this._minWeekdaysParse[i] = this.weekdaysMin(mom, "").toLocaleLowerCase();
              this._shortWeekdaysParse[i] = this.weekdaysShort(mom, "").toLocaleLowerCase();
              this._weekdaysParse[i] = this.weekdays(mom, "").toLocaleLowerCase();
            }
          }
          if (strict) {
            if (format2 === "dddd") {
              ii = indexOf.call(this._weekdaysParse, llc);
              return ii !== -1 ? ii : null;
            } else if (format2 === "ddd") {
              ii = indexOf.call(this._shortWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
            } else {
              ii = indexOf.call(this._minWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
            }
          } else {
            if (format2 === "dddd") {
              ii = indexOf.call(this._weekdaysParse, llc);
              if (ii !== -1) {
                return ii;
              }
              ii = indexOf.call(this._shortWeekdaysParse, llc);
              if (ii !== -1) {
                return ii;
              }
              ii = indexOf.call(this._minWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
            } else if (format2 === "ddd") {
              ii = indexOf.call(this._shortWeekdaysParse, llc);
              if (ii !== -1) {
                return ii;
              }
              ii = indexOf.call(this._weekdaysParse, llc);
              if (ii !== -1) {
                return ii;
              }
              ii = indexOf.call(this._minWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
            } else {
              ii = indexOf.call(this._minWeekdaysParse, llc);
              if (ii !== -1) {
                return ii;
              }
              ii = indexOf.call(this._weekdaysParse, llc);
              if (ii !== -1) {
                return ii;
              }
              ii = indexOf.call(this._shortWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
            }
          }
        }
        function localeWeekdaysParse(weekdayName, format2, strict) {
          var i, mom, regex;
          if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format2, strict);
          }
          if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
          }
          for (i = 0; i < 7; i++) {
            mom = createUTC([2e3, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
              this._fullWeekdaysParse[i] = new RegExp("^" + this.weekdays(mom, "").replace(".", "\\.?") + "$", "i");
              this._shortWeekdaysParse[i] = new RegExp("^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$", "i");
              this._minWeekdaysParse[i] = new RegExp("^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$", "i");
            }
            if (!this._weekdaysParse[i]) {
              regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
              this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i");
            }
            if (strict && format2 === "dddd" && this._fullWeekdaysParse[i].test(weekdayName)) {
              return i;
            } else if (strict && format2 === "ddd" && this._shortWeekdaysParse[i].test(weekdayName)) {
              return i;
            } else if (strict && format2 === "dd" && this._minWeekdaysParse[i].test(weekdayName)) {
              return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
              return i;
            }
          }
        }
        function getSetDayOfWeek(input) {
          if (!this.isValid()) {
            return input != null ? this : NaN;
          }
          var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
          if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, "d");
          } else {
            return day;
          }
        }
        function getSetLocaleDayOfWeek(input) {
          if (!this.isValid()) {
            return input != null ? this : NaN;
          }
          var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
          return input == null ? weekday : this.add(input - weekday, "d");
        }
        function getSetISODayOfWeek(input) {
          if (!this.isValid()) {
            return input != null ? this : NaN;
          }
          if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
          } else {
            return this.day() || 7;
          }
        }
        var defaultWeekdaysRegex = matchWord;
        function weekdaysRegex(isStrict) {
          if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, "_weekdaysRegex")) {
              computeWeekdaysParse.call(this);
            }
            if (isStrict) {
              return this._weekdaysStrictRegex;
            } else {
              return this._weekdaysRegex;
            }
          } else {
            if (!hasOwnProp(this, "_weekdaysRegex")) {
              this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
          }
        }
        var defaultWeekdaysShortRegex = matchWord;
        function weekdaysShortRegex(isStrict) {
          if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, "_weekdaysRegex")) {
              computeWeekdaysParse.call(this);
            }
            if (isStrict) {
              return this._weekdaysShortStrictRegex;
            } else {
              return this._weekdaysShortRegex;
            }
          } else {
            if (!hasOwnProp(this, "_weekdaysShortRegex")) {
              this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
          }
        }
        var defaultWeekdaysMinRegex = matchWord;
        function weekdaysMinRegex(isStrict) {
          if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, "_weekdaysRegex")) {
              computeWeekdaysParse.call(this);
            }
            if (isStrict) {
              return this._weekdaysMinStrictRegex;
            } else {
              return this._weekdaysMinRegex;
            }
          } else {
            if (!hasOwnProp(this, "_weekdaysMinRegex")) {
              this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
          }
        }
        function computeWeekdaysParse() {
          function cmpLenRev(a, b) {
            return b.length - a.length;
          }
          var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i, mom, minp, shortp, longp;
          for (i = 0; i < 7; i++) {
            mom = createUTC([2e3, 1]).day(i);
            minp = this.weekdaysMin(mom, "");
            shortp = this.weekdaysShort(mom, "");
            longp = this.weekdays(mom, "");
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
          }
          minPieces.sort(cmpLenRev);
          shortPieces.sort(cmpLenRev);
          longPieces.sort(cmpLenRev);
          mixedPieces.sort(cmpLenRev);
          for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
          }
          this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
          this._weekdaysShortRegex = this._weekdaysRegex;
          this._weekdaysMinRegex = this._weekdaysRegex;
          this._weekdaysStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
          this._weekdaysShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
          this._weekdaysMinStrictRegex = new RegExp("^(" + minPieces.join("|") + ")", "i");
        }
        function hFormat() {
          return this.hours() % 12 || 12;
        }
        function kFormat() {
          return this.hours() || 24;
        }
        addFormatToken("H", ["HH", 2], 0, "hour");
        addFormatToken("h", ["hh", 2], 0, hFormat);
        addFormatToken("k", ["kk", 2], 0, kFormat);
        addFormatToken("hmm", 0, 0, function() {
          return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
        });
        addFormatToken("hmmss", 0, 0, function() {
          return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
        });
        addFormatToken("Hmm", 0, 0, function() {
          return "" + this.hours() + zeroFill(this.minutes(), 2);
        });
        addFormatToken("Hmmss", 0, 0, function() {
          return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
        });
        function meridiem(token2, lowercase) {
          addFormatToken(token2, 0, 0, function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
          });
        }
        meridiem("a", true);
        meridiem("A", false);
        addUnitAlias("hour", "h");
        addUnitPriority("hour", 13);
        function matchMeridiem(isStrict, locale2) {
          return locale2._meridiemParse;
        }
        addRegexToken("a", matchMeridiem);
        addRegexToken("A", matchMeridiem);
        addRegexToken("H", match1to2);
        addRegexToken("h", match1to2);
        addRegexToken("k", match1to2);
        addRegexToken("HH", match1to2, match2);
        addRegexToken("hh", match1to2, match2);
        addRegexToken("kk", match1to2, match2);
        addRegexToken("hmm", match3to4);
        addRegexToken("hmmss", match5to6);
        addRegexToken("Hmm", match3to4);
        addRegexToken("Hmmss", match5to6);
        addParseToken(["H", "HH"], HOUR3);
        addParseToken(["k", "kk"], function(input, array, config) {
          var kInput = toInt(input);
          array[HOUR3] = kInput === 24 ? 0 : kInput;
        });
        addParseToken(["a", "A"], function(input, array, config) {
          config._isPm = config._locale.isPM(input);
          config._meridiem = input;
        });
        addParseToken(["h", "hh"], function(input, array, config) {
          array[HOUR3] = toInt(input);
          getParsingFlags(config).bigHour = true;
        });
        addParseToken("hmm", function(input, array, config) {
          var pos = input.length - 2;
          array[HOUR3] = toInt(input.substr(0, pos));
          array[MINUTE3] = toInt(input.substr(pos));
          getParsingFlags(config).bigHour = true;
        });
        addParseToken("hmmss", function(input, array, config) {
          var pos1 = input.length - 4;
          var pos2 = input.length - 2;
          array[HOUR3] = toInt(input.substr(0, pos1));
          array[MINUTE3] = toInt(input.substr(pos1, 2));
          array[SECOND3] = toInt(input.substr(pos2));
          getParsingFlags(config).bigHour = true;
        });
        addParseToken("Hmm", function(input, array, config) {
          var pos = input.length - 2;
          array[HOUR3] = toInt(input.substr(0, pos));
          array[MINUTE3] = toInt(input.substr(pos));
        });
        addParseToken("Hmmss", function(input, array, config) {
          var pos1 = input.length - 4;
          var pos2 = input.length - 2;
          array[HOUR3] = toInt(input.substr(0, pos1));
          array[MINUTE3] = toInt(input.substr(pos1, 2));
          array[SECOND3] = toInt(input.substr(pos2));
        });
        function localeIsPM(input) {
          return (input + "").toLowerCase().charAt(0) === "p";
        }
        var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
        function localeMeridiem(hours2, minutes2, isLower) {
          if (hours2 > 11) {
            return isLower ? "pm" : "PM";
          } else {
            return isLower ? "am" : "AM";
          }
        }
        var getSetHour = makeGetSet("Hours", true);
        var baseConfig = {
          calendar: defaultCalendar,
          longDateFormat: defaultLongDateFormat,
          invalidDate: defaultInvalidDate,
          ordinal: defaultOrdinal,
          dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
          relativeTime: defaultRelativeTime,
          months: defaultLocaleMonths,
          monthsShort: defaultLocaleMonthsShort,
          week: defaultLocaleWeek,
          weekdays: defaultLocaleWeekdays,
          weekdaysMin: defaultLocaleWeekdaysMin,
          weekdaysShort: defaultLocaleWeekdaysShort,
          meridiemParse: defaultLocaleMeridiemParse
        };
        var locales = {};
        var localeFamilies = {};
        var globalLocale;
        function normalizeLocale(key2) {
          return key2 ? key2.toLowerCase().replace("_", "-") : key2;
        }
        function chooseLocale(names) {
          var i = 0, j, next, locale2, split;
          while (i < names.length) {
            split = normalizeLocale(names[i]).split("-");
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split("-") : null;
            while (j > 0) {
              locale2 = loadLocale(split.slice(0, j).join("-"));
              if (locale2) {
                return locale2;
              }
              if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                break;
              }
              j--;
            }
            i++;
          }
          return globalLocale;
        }
        function loadLocale(name2) {
          var oldLocale = null;
          if (!locales[name2] && typeof module2 !== "undefined" && module2 && module2.exports) {
            try {
              oldLocale = globalLocale._abbr;
              var aliasedRequire = __require;
              aliasedRequire("./locale/" + name2);
              getSetGlobalLocale(oldLocale);
            } catch (e) {
            }
          }
          return locales[name2];
        }
        function getSetGlobalLocale(key2, values2) {
          var data2;
          if (key2) {
            if (isUndefined(values2)) {
              data2 = getLocale(key2);
            } else {
              data2 = defineLocale(key2, values2);
            }
            if (data2) {
              globalLocale = data2;
            } else {
              if (typeof console !== "undefined" && console.warn) {
                console.warn("Locale " + key2 + " not found. Did you forget to load it?");
              }
            }
          }
          return globalLocale._abbr;
        }
        function defineLocale(name2, config) {
          if (config !== null) {
            var locale2, parentConfig = baseConfig;
            config.abbr = name2;
            if (locales[name2] != null) {
              deprecateSimple(
                "defineLocaleOverride",
                "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
              );
              parentConfig = locales[name2]._config;
            } else if (config.parentLocale != null) {
              if (locales[config.parentLocale] != null) {
                parentConfig = locales[config.parentLocale]._config;
              } else {
                locale2 = loadLocale(config.parentLocale);
                if (locale2 != null) {
                  parentConfig = locale2._config;
                } else {
                  if (!localeFamilies[config.parentLocale]) {
                    localeFamilies[config.parentLocale] = [];
                  }
                  localeFamilies[config.parentLocale].push({
                    name: name2,
                    config
                  });
                  return null;
                }
              }
            }
            locales[name2] = new Locale(mergeConfigs(parentConfig, config));
            if (localeFamilies[name2]) {
              localeFamilies[name2].forEach(function(x) {
                defineLocale(x.name, x.config);
              });
            }
            getSetGlobalLocale(name2);
            return locales[name2];
          } else {
            delete locales[name2];
            return null;
          }
        }
        function updateLocale(name2, config) {
          if (config != null) {
            var locale2, tmpLocale, parentConfig = baseConfig;
            tmpLocale = loadLocale(name2);
            if (tmpLocale != null) {
              parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale2 = new Locale(config);
            locale2.parentLocale = locales[name2];
            locales[name2] = locale2;
            getSetGlobalLocale(name2);
          } else {
            if (locales[name2] != null) {
              if (locales[name2].parentLocale != null) {
                locales[name2] = locales[name2].parentLocale;
              } else if (locales[name2] != null) {
                delete locales[name2];
              }
            }
          }
          return locales[name2];
        }
        function getLocale(key2) {
          var locale2;
          if (key2 && key2._locale && key2._locale._abbr) {
            key2 = key2._locale._abbr;
          }
          if (!key2) {
            return globalLocale;
          }
          if (!isArray2(key2)) {
            locale2 = loadLocale(key2);
            if (locale2) {
              return locale2;
            }
            key2 = [key2];
          }
          return chooseLocale(key2);
        }
        function listLocales() {
          return keys(locales);
        }
        function checkOverflow(m) {
          var overflow;
          var a = m._a;
          if (a && getParsingFlags(m).overflow === -2) {
            overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR2], a[MONTH]) ? DATE : a[HOUR3] < 0 || a[HOUR3] > 24 || a[HOUR3] === 24 && (a[MINUTE3] !== 0 || a[SECOND3] !== 0 || a[MILLISECOND] !== 0) ? HOUR3 : a[MINUTE3] < 0 || a[MINUTE3] > 59 ? MINUTE3 : a[SECOND3] < 0 || a[SECOND3] > 59 ? SECOND3 : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR2 || overflow > DATE)) {
              overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
              overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
              overflow = WEEKDAY;
            }
            getParsingFlags(m).overflow = overflow;
          }
          return m;
        }
        function defaults(a, b, c) {
          if (a != null) {
            return a;
          }
          if (b != null) {
            return b;
          }
          return c;
        }
        function currentDateArray(config) {
          var nowValue = new Date(hooks.now());
          if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
          }
          return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
        }
        function configFromArray(config) {
          var i, date2, input = [], currentDate, expectedWeekday, yearToUse;
          if (config._d) {
            return;
          }
          currentDate = currentDateArray(config);
          if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
          }
          if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR2], currentDate[YEAR2]);
            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
              getParsingFlags(config)._overflowDayOfYear = true;
            }
            date2 = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date2.getUTCMonth();
            config._a[DATE] = date2.getUTCDate();
          }
          for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
          }
          for (; i < 7; i++) {
            config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
          }
          if (config._a[HOUR3] === 24 && config._a[MINUTE3] === 0 && config._a[SECOND3] === 0 && config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR3] = 0;
          }
          config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
          expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
          if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
          }
          if (config._nextDay) {
            config._a[HOUR3] = 24;
          }
          if (config._w && typeof config._w.d !== "undefined" && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
          }
        }
        function dayOfYearFromWeekInfo(config) {
          var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
          w = config._w;
          if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;
            weekYear = defaults(w.GG, config._a[YEAR2], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
              weekdayOverflow = true;
            }
          } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;
            var curWeek = weekOfYear(createLocal(), dow, doy);
            weekYear = defaults(w.gg, config._a[YEAR2], curWeek.year);
            week = defaults(w.w, curWeek.week);
            if (w.d != null) {
              weekday = w.d;
              if (weekday < 0 || weekday > 6) {
                weekdayOverflow = true;
              }
            } else if (w.e != null) {
              weekday = w.e + dow;
              if (w.e < 0 || w.e > 6) {
                weekdayOverflow = true;
              }
            } else {
              weekday = dow;
            }
          }
          if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
          } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
          } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR2] = temp.year;
            config._dayOfYear = temp.dayOfYear;
          }
        }
        var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
        var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
        var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
        var isoDates = [
          ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
          ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
          ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
          ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
          ["YYYY-DDD", /\d{4}-\d{3}/],
          ["YYYY-MM", /\d{4}-\d\d/, false],
          ["YYYYYYMMDD", /[+-]\d{10}/],
          ["YYYYMMDD", /\d{8}/],
          // YYYYMM is NOT allowed by the standard
          ["GGGG[W]WWE", /\d{4}W\d{3}/],
          ["GGGG[W]WW", /\d{4}W\d{2}/, false],
          ["YYYYDDD", /\d{7}/]
        ];
        var isoTimes = [
          ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
          ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
          ["HH:mm:ss", /\d\d:\d\d:\d\d/],
          ["HH:mm", /\d\d:\d\d/],
          ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
          ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
          ["HHmmss", /\d\d\d\d\d\d/],
          ["HHmm", /\d\d\d\d/],
          ["HH", /\d\d/]
        ];
        var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
        function configFromISO(config) {
          var i, l, string = config._i, match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string), allowTime, dateFormat, timeFormat, tzFormat;
          if (match) {
            getParsingFlags(config).iso = true;
            for (i = 0, l = isoDates.length; i < l; i++) {
              if (isoDates[i][1].exec(match[1])) {
                dateFormat = isoDates[i][0];
                allowTime = isoDates[i][2] !== false;
                break;
              }
            }
            if (dateFormat == null) {
              config._isValid = false;
              return;
            }
            if (match[3]) {
              for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(match[3])) {
                  timeFormat = (match[2] || " ") + isoTimes[i][0];
                  break;
                }
              }
              if (timeFormat == null) {
                config._isValid = false;
                return;
              }
            }
            if (!allowTime && timeFormat != null) {
              config._isValid = false;
              return;
            }
            if (match[4]) {
              if (tzRegex.exec(match[4])) {
                tzFormat = "Z";
              } else {
                config._isValid = false;
                return;
              }
            }
            config._f = dateFormat + (timeFormat || "") + (tzFormat || "");
            configFromStringAndFormat(config);
          } else {
            config._isValid = false;
          }
        }
        var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
        function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
          var result2 = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
          ];
          if (secondStr) {
            result2.push(parseInt(secondStr, 10));
          }
          return result2;
        }
        function untruncateYear(yearStr) {
          var year = parseInt(yearStr, 10);
          if (year <= 49) {
            return 2e3 + year;
          } else if (year <= 999) {
            return 1900 + year;
          }
          return year;
        }
        function preprocessRFC2822(s) {
          return s.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
        }
        function checkWeekday(weekdayStr, parsedInput, config) {
          if (weekdayStr) {
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
              getParsingFlags(config).weekdayMismatch = true;
              config._isValid = false;
              return false;
            }
          }
          return true;
        }
        var obsOffsets = {
          UT: 0,
          GMT: 0,
          EDT: -4 * 60,
          EST: -5 * 60,
          CDT: -5 * 60,
          CST: -6 * 60,
          MDT: -6 * 60,
          MST: -7 * 60,
          PDT: -7 * 60,
          PST: -8 * 60
        };
        function calculateOffset(obsOffset, militaryOffset, numOffset) {
          if (obsOffset) {
            return obsOffsets[obsOffset];
          } else if (militaryOffset) {
            return 0;
          } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
          }
        }
        function configFromRFC2822(config) {
          var match = rfc2822.exec(preprocessRFC2822(config._i));
          if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
              return;
            }
            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);
            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
            getParsingFlags(config).rfc2822 = true;
          } else {
            config._isValid = false;
          }
        }
        function configFromString(config) {
          var matched = aspNetJsonRegex.exec(config._i);
          if (matched !== null) {
            config._d = /* @__PURE__ */ new Date(+matched[1]);
            return;
          }
          configFromISO(config);
          if (config._isValid === false) {
            delete config._isValid;
          } else {
            return;
          }
          configFromRFC2822(config);
          if (config._isValid === false) {
            delete config._isValid;
          } else {
            return;
          }
          hooks.createFromInputFallback(config);
        }
        hooks.createFromInputFallback = deprecate(
          "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
          function(config) {
            config._d = /* @__PURE__ */ new Date(config._i + (config._useUTC ? " UTC" : ""));
          }
        );
        hooks.ISO_8601 = function() {
        };
        hooks.RFC_2822 = function() {
        };
        function configFromStringAndFormat(config) {
          if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
          }
          if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
          }
          config._a = [];
          getParsingFlags(config).empty = true;
          var string = "" + config._i, i, parsedInput, tokens2, token2, skipped, stringLength = string.length, totalParsedInputLength = 0;
          tokens2 = expandFormat(config._f, config._locale).match(formattingTokens) || [];
          for (i = 0; i < tokens2.length; i++) {
            token2 = tokens2[i];
            parsedInput = (string.match(getParseRegexForToken(token2, config)) || [])[0];
            if (parsedInput) {
              skipped = string.substr(0, string.indexOf(parsedInput));
              if (skipped.length > 0) {
                getParsingFlags(config).unusedInput.push(skipped);
              }
              string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
              totalParsedInputLength += parsedInput.length;
            }
            if (formatTokenFunctions[token2]) {
              if (parsedInput) {
                getParsingFlags(config).empty = false;
              } else {
                getParsingFlags(config).unusedTokens.push(token2);
              }
              addTimeToArrayFromToken(token2, parsedInput, config);
            } else if (config._strict && !parsedInput) {
              getParsingFlags(config).unusedTokens.push(token2);
            }
          }
          getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
          if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
          }
          if (config._a[HOUR3] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR3] > 0) {
            getParsingFlags(config).bigHour = void 0;
          }
          getParsingFlags(config).parsedDateParts = config._a.slice(0);
          getParsingFlags(config).meridiem = config._meridiem;
          config._a[HOUR3] = meridiemFixWrap(config._locale, config._a[HOUR3], config._meridiem);
          configFromArray(config);
          checkOverflow(config);
        }
        function meridiemFixWrap(locale2, hour, meridiem2) {
          var isPm;
          if (meridiem2 == null) {
            return hour;
          }
          if (locale2.meridiemHour != null) {
            return locale2.meridiemHour(hour, meridiem2);
          } else if (locale2.isPM != null) {
            isPm = locale2.isPM(meridiem2);
            if (isPm && hour < 12) {
              hour += 12;
            }
            if (!isPm && hour === 12) {
              hour = 0;
            }
            return hour;
          } else {
            return hour;
          }
        }
        function configFromStringAndArray(config) {
          var tempConfig, bestMoment, scoreToBeat, i, currentScore;
          if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = /* @__PURE__ */ new Date(NaN);
            return;
          }
          for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
              tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);
            if (!isValid(tempConfig)) {
              continue;
            }
            currentScore += getParsingFlags(tempConfig).charsLeftOver;
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
            getParsingFlags(tempConfig).score = currentScore;
            if (scoreToBeat == null || currentScore < scoreToBeat) {
              scoreToBeat = currentScore;
              bestMoment = tempConfig;
            }
          }
          extend(config, bestMoment || tempConfig);
        }
        function configFromObject(config) {
          if (config._d) {
            return;
          }
          var i = normalizeObjectUnits(config._i);
          config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function(obj) {
            return obj && parseInt(obj, 10);
          });
          configFromArray(config);
        }
        function createFromConfig(config) {
          var res = new Moment(checkOverflow(prepareConfig(config)));
          if (res._nextDay) {
            res.add(1, "d");
            res._nextDay = void 0;
          }
          return res;
        }
        function prepareConfig(config) {
          var input = config._i, format2 = config._f;
          config._locale = config._locale || getLocale(config._l);
          if (input === null || format2 === void 0 && input === "") {
            return createInvalid({ nullInput: true });
          }
          if (typeof input === "string") {
            config._i = input = config._locale.preparse(input);
          }
          if (isMoment(input)) {
            return new Moment(checkOverflow(input));
          } else if (isDate(input)) {
            config._d = input;
          } else if (isArray2(format2)) {
            configFromStringAndArray(config);
          } else if (format2) {
            configFromStringAndFormat(config);
          } else {
            configFromInput(config);
          }
          if (!isValid(config)) {
            config._d = null;
          }
          return config;
        }
        function configFromInput(config) {
          var input = config._i;
          if (isUndefined(input)) {
            config._d = new Date(hooks.now());
          } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
          } else if (typeof input === "string") {
            configFromString(config);
          } else if (isArray2(input)) {
            config._a = map(input.slice(0), function(obj) {
              return parseInt(obj, 10);
            });
            configFromArray(config);
          } else if (isObject2(input)) {
            configFromObject(config);
          } else if (isNumber2(input)) {
            config._d = new Date(input);
          } else {
            hooks.createFromInputFallback(config);
          }
        }
        function createLocalOrUTC(input, format2, locale2, strict, isUTC) {
          var c = {};
          if (locale2 === true || locale2 === false) {
            strict = locale2;
            locale2 = void 0;
          }
          if (isObject2(input) && isObjectEmpty(input) || isArray2(input) && input.length === 0) {
            input = void 0;
          }
          c._isAMomentObject = true;
          c._useUTC = c._isUTC = isUTC;
          c._l = locale2;
          c._i = input;
          c._f = format2;
          c._strict = strict;
          return createFromConfig(c);
        }
        function createLocal(input, format2, locale2, strict) {
          return createLocalOrUTC(input, format2, locale2, strict, false);
        }
        var prototypeMin = deprecate(
          "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
          function() {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
              return other < this ? this : other;
            } else {
              return createInvalid();
            }
          }
        );
        var prototypeMax = deprecate(
          "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
          function() {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
              return other > this ? this : other;
            } else {
              return createInvalid();
            }
          }
        );
        function pickBy(fn, moments) {
          var res, i;
          if (moments.length === 1 && isArray2(moments[0])) {
            moments = moments[0];
          }
          if (!moments.length) {
            return createLocal();
          }
          res = moments[0];
          for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
              res = moments[i];
            }
          }
          return res;
        }
        function min() {
          var args = [].slice.call(arguments, 0);
          return pickBy("isBefore", args);
        }
        function max() {
          var args = [].slice.call(arguments, 0);
          return pickBy("isAfter", args);
        }
        var now = function() {
          return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
        };
        var ordering = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
        function isDurationValid(m) {
          for (var key2 in m) {
            if (!(indexOf.call(ordering, key2) !== -1 && (m[key2] == null || !isNaN(m[key2])))) {
              return false;
            }
          }
          var unitHasDecimal = false;
          for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
              if (unitHasDecimal) {
                return false;
              }
              if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                unitHasDecimal = true;
              }
            }
          }
          return true;
        }
        function isValid$1() {
          return this._isValid;
        }
        function createInvalid$1() {
          return createDuration(NaN);
        }
        function Duration(duration) {
          var normalizedInput = normalizeObjectUnits(duration), years2 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months2 = normalizedInput.month || 0, weeks2 = normalizedInput.week || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
          this._isValid = isDurationValid(normalizedInput);
          this._milliseconds = +milliseconds2 + seconds2 * 1e3 + // 1000
          minutes2 * 6e4 + // 1000 * 60
          hours2 * 1e3 * 60 * 60;
          this._days = +days2 + weeks2 * 7;
          this._months = +months2 + quarters * 3 + years2 * 12;
          this._data = {};
          this._locale = getLocale();
          this._bubble();
        }
        function isDuration(obj) {
          return obj instanceof Duration;
        }
        function absRound(number) {
          if (number < 0) {
            return Math.round(-1 * number) * -1;
          } else {
            return Math.round(number);
          }
        }
        function offset(token2, separator) {
          addFormatToken(token2, 0, 0, function() {
            var offset2 = this.utcOffset();
            var sign2 = "+";
            if (offset2 < 0) {
              offset2 = -offset2;
              sign2 = "-";
            }
            return sign2 + zeroFill(~~(offset2 / 60), 2) + separator + zeroFill(~~offset2 % 60, 2);
          });
        }
        offset("Z", ":");
        offset("ZZ", "");
        addRegexToken("Z", matchShortOffset);
        addRegexToken("ZZ", matchShortOffset);
        addParseToken(["Z", "ZZ"], function(input, array, config) {
          config._useUTC = true;
          config._tzm = offsetFromString(matchShortOffset, input);
        });
        var chunkOffset = /([\+\-]|\d\d)/gi;
        function offsetFromString(matcher, string) {
          var matches = (string || "").match(matcher);
          if (matches === null) {
            return null;
          }
          var chunk = matches[matches.length - 1] || [];
          var parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
          var minutes2 = +(parts[1] * 60) + toInt(parts[2]);
          return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
        }
        function cloneWithOffset(input, model) {
          var res, diff2;
          if (model._isUTC) {
            res = model.clone();
            diff2 = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            res._d.setTime(res._d.valueOf() + diff2);
            hooks.updateOffset(res, false);
            return res;
          } else {
            return createLocal(input).local();
          }
        }
        function getDateOffset(m) {
          return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
        }
        hooks.updateOffset = function() {
        };
        function getSetOffset(input, keepLocalTime, keepMinutes) {
          var offset2 = this._offset || 0, localAdjust;
          if (!this.isValid()) {
            return input != null ? this : NaN;
          }
          if (input != null) {
            if (typeof input === "string") {
              input = offsetFromString(matchShortOffset, input);
              if (input === null) {
                return this;
              }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
              input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
              localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
              this.add(localAdjust, "m");
            }
            if (offset2 !== input) {
              if (!keepLocalTime || this._changeInProgress) {
                addSubtract(this, createDuration(input - offset2, "m"), 1, false);
              } else if (!this._changeInProgress) {
                this._changeInProgress = true;
                hooks.updateOffset(this, true);
                this._changeInProgress = null;
              }
            }
            return this;
          } else {
            return this._isUTC ? offset2 : getDateOffset(this);
          }
        }
        function getSetZone(input, keepLocalTime) {
          if (input != null) {
            if (typeof input !== "string") {
              input = -input;
            }
            this.utcOffset(input, keepLocalTime);
            return this;
          } else {
            return -this.utcOffset();
          }
        }
        function setOffsetToUTC(keepLocalTime) {
          return this.utcOffset(0, keepLocalTime);
        }
        function setOffsetToLocal(keepLocalTime) {
          if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;
            if (keepLocalTime) {
              this.subtract(getDateOffset(this), "m");
            }
          }
          return this;
        }
        function setOffsetToParsedOffset() {
          if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
          } else if (typeof this._i === "string") {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
              this.utcOffset(tZone);
            } else {
              this.utcOffset(0, true);
            }
          }
          return this;
        }
        function hasAlignedHourOffset(input) {
          if (!this.isValid()) {
            return false;
          }
          input = input ? createLocal(input).utcOffset() : 0;
          return (this.utcOffset() - input) % 60 === 0;
        }
        function isDaylightSavingTime() {
          return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
        }
        function isDaylightSavingTimeShifted() {
          if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
          }
          var c = {};
          copyConfig(c, this);
          c = prepareConfig(c);
          if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
          } else {
            this._isDSTShifted = false;
          }
          return this._isDSTShifted;
        }
        function isLocal() {
          return this.isValid() ? !this._isUTC : false;
        }
        function isUtcOffset() {
          return this.isValid() ? this._isUTC : false;
        }
        function isUtc() {
          return this.isValid() ? this._isUTC && this._offset === 0 : false;
        }
        var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
        var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
        function createDuration(input, key2) {
          var duration = input, match = null, sign2, ret, diffRes;
          if (isDuration(input)) {
            duration = {
              ms: input._milliseconds,
              d: input._days,
              M: input._months
            };
          } else if (isNumber2(input)) {
            duration = {};
            if (key2) {
              duration[key2] = input;
            } else {
              duration.milliseconds = input;
            }
          } else if (!!(match = aspNetRegex.exec(input))) {
            sign2 = match[1] === "-" ? -1 : 1;
            duration = {
              y: 0,
              d: toInt(match[DATE]) * sign2,
              h: toInt(match[HOUR3]) * sign2,
              m: toInt(match[MINUTE3]) * sign2,
              s: toInt(match[SECOND3]) * sign2,
              ms: toInt(absRound(match[MILLISECOND] * 1e3)) * sign2
              // the millisecond decimal point is included in the match
            };
          } else if (!!(match = isoRegex.exec(input))) {
            sign2 = match[1] === "-" ? -1 : match[1] === "+" ? 1 : 1;
            duration = {
              y: parseIso(match[2], sign2),
              M: parseIso(match[3], sign2),
              w: parseIso(match[4], sign2),
              d: parseIso(match[5], sign2),
              h: parseIso(match[6], sign2),
              m: parseIso(match[7], sign2),
              s: parseIso(match[8], sign2)
            };
          } else if (duration == null) {
            duration = {};
          } else if (typeof duration === "object" && ("from" in duration || "to" in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
          }
          ret = new Duration(duration);
          if (isDuration(input) && hasOwnProp(input, "_locale")) {
            ret._locale = input._locale;
          }
          return ret;
        }
        createDuration.fn = Duration.prototype;
        createDuration.invalid = createInvalid$1;
        function parseIso(inp, sign2) {
          var res = inp && parseFloat(inp.replace(",", "."));
          return (isNaN(res) ? 0 : res) * sign2;
        }
        function positiveMomentsDifference(base, other) {
          var res = { milliseconds: 0, months: 0 };
          res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
          if (base.clone().add(res.months, "M").isAfter(other)) {
            --res.months;
          }
          res.milliseconds = +other - +base.clone().add(res.months, "M");
          return res;
        }
        function momentsDifference(base, other) {
          var res;
          if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
          }
          other = cloneWithOffset(other, base);
          if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
          } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
          }
          return res;
        }
        function createAdder(direction, name2) {
          return function(val2, period) {
            var dur, tmp;
            if (period !== null && !isNaN(+period)) {
              deprecateSimple(name2, "moment()." + name2 + "(period, number) is deprecated. Please use moment()." + name2 + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
              tmp = val2;
              val2 = period;
              period = tmp;
            }
            val2 = typeof val2 === "string" ? +val2 : val2;
            dur = createDuration(val2, period);
            addSubtract(this, dur, direction);
            return this;
          };
        }
        function addSubtract(mom, duration, isAdding, updateOffset) {
          var milliseconds2 = duration._milliseconds, days2 = absRound(duration._days), months2 = absRound(duration._months);
          if (!mom.isValid()) {
            return;
          }
          updateOffset = updateOffset == null ? true : updateOffset;
          if (months2) {
            setMonth(mom, get8(mom, "Month") + months2 * isAdding);
          }
          if (days2) {
            set$1(mom, "Date", get8(mom, "Date") + days2 * isAdding);
          }
          if (milliseconds2) {
            mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
          }
          if (updateOffset) {
            hooks.updateOffset(mom, days2 || months2);
          }
        }
        var add2 = createAdder(1, "add");
        var subtract = createAdder(-1, "subtract");
        function getCalendarFormat(myMoment, now2) {
          var diff2 = myMoment.diff(now2, "days", true);
          return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
        }
        function calendar$1(time2, formats) {
          var now2 = time2 || createLocal(), sod = cloneWithOffset(now2, this).startOf("day"), format2 = hooks.calendarFormat(this, sod) || "sameElse";
          var output = formats && (isFunction3(formats[format2]) ? formats[format2].call(this, now2) : formats[format2]);
          return this.format(output || this.localeData().calendar(format2, this, createLocal(now2)));
        }
        function clone() {
          return new Moment(this);
        }
        function isAfter(input, units) {
          var localInput = isMoment(input) ? input : createLocal(input);
          if (!(this.isValid() && localInput.isValid())) {
            return false;
          }
          units = normalizeUnits(!isUndefined(units) ? units : "millisecond");
          if (units === "millisecond") {
            return this.valueOf() > localInput.valueOf();
          } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
          }
        }
        function isBefore(input, units) {
          var localInput = isMoment(input) ? input : createLocal(input);
          if (!(this.isValid() && localInput.isValid())) {
            return false;
          }
          units = normalizeUnits(!isUndefined(units) ? units : "millisecond");
          if (units === "millisecond") {
            return this.valueOf() < localInput.valueOf();
          } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
          }
        }
        function isBetween(from2, to2, units, inclusivity) {
          inclusivity = inclusivity || "()";
          return (inclusivity[0] === "(" ? this.isAfter(from2, units) : !this.isBefore(from2, units)) && (inclusivity[1] === ")" ? this.isBefore(to2, units) : !this.isAfter(to2, units));
        }
        function isSame(input, units) {
          var localInput = isMoment(input) ? input : createLocal(input), inputMs;
          if (!(this.isValid() && localInput.isValid())) {
            return false;
          }
          units = normalizeUnits(units || "millisecond");
          if (units === "millisecond") {
            return this.valueOf() === localInput.valueOf();
          } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
          }
        }
        function isSameOrAfter(input, units) {
          return this.isSame(input, units) || this.isAfter(input, units);
        }
        function isSameOrBefore(input, units) {
          return this.isSame(input, units) || this.isBefore(input, units);
        }
        function diff(input, units, asFloat) {
          var that, zoneDelta, output;
          if (!this.isValid()) {
            return NaN;
          }
          that = cloneWithOffset(input, this);
          if (!that.isValid()) {
            return NaN;
          }
          zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
          units = normalizeUnits(units);
          switch (units) {
            case "year":
              output = monthDiff(this, that) / 12;
              break;
            case "month":
              output = monthDiff(this, that);
              break;
            case "quarter":
              output = monthDiff(this, that) / 3;
              break;
            case "second":
              output = (this - that) / 1e3;
              break;
            case "minute":
              output = (this - that) / 6e4;
              break;
            case "hour":
              output = (this - that) / 36e5;
              break;
            case "day":
              output = (this - that - zoneDelta) / 864e5;
              break;
            case "week":
              output = (this - that - zoneDelta) / 6048e5;
              break;
            default:
              output = this - that;
          }
          return asFloat ? output : absFloor(output);
        }
        function monthDiff(a, b) {
          var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()), anchor = a.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
          if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, "months");
            adjust = (b - anchor) / (anchor - anchor2);
          } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, "months");
            adjust = (b - anchor) / (anchor2 - anchor);
          }
          return -(wholeMonthDiff + adjust) || 0;
        }
        hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
        hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
        function toString3() {
          return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
        }
        function toISOString(keepOffset) {
          if (!this.isValid()) {
            return null;
          }
          var utc = keepOffset !== true;
          var m = utc ? this.clone().utc() : this;
          if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ");
          }
          if (isFunction3(Date.prototype.toISOString)) {
            if (utc) {
              return this.toDate().toISOString();
            } else {
              return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m, "Z"));
            }
          }
          return formatMoment(m, utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
        }
        function inspect2() {
          if (!this.isValid()) {
            return "moment.invalid(/* " + this._i + " */)";
          }
          var func = "moment";
          var zone = "";
          if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
            zone = "Z";
          }
          var prefix = "[" + func + '("]';
          var year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
          var datetime = "-MM-DD[T]HH:mm:ss.SSS";
          var suffix = zone + '[")]';
          return this.format(prefix + year + datetime + suffix);
        }
        function format(inputString) {
          if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
          }
          var output = formatMoment(this, inputString);
          return this.localeData().postformat(output);
        }
        function from(time2, withoutSuffix) {
          if (this.isValid() && (isMoment(time2) && time2.isValid() || createLocal(time2).isValid())) {
            return createDuration({ to: this, from: time2 }).locale(this.locale()).humanize(!withoutSuffix);
          } else {
            return this.localeData().invalidDate();
          }
        }
        function fromNow(withoutSuffix) {
          return this.from(createLocal(), withoutSuffix);
        }
        function to(time2, withoutSuffix) {
          if (this.isValid() && (isMoment(time2) && time2.isValid() || createLocal(time2).isValid())) {
            return createDuration({ from: this, to: time2 }).locale(this.locale()).humanize(!withoutSuffix);
          } else {
            return this.localeData().invalidDate();
          }
        }
        function toNow(withoutSuffix) {
          return this.to(createLocal(), withoutSuffix);
        }
        function locale(key2) {
          var newLocaleData;
          if (key2 === void 0) {
            return this._locale._abbr;
          } else {
            newLocaleData = getLocale(key2);
            if (newLocaleData != null) {
              this._locale = newLocaleData;
            }
            return this;
          }
        }
        var lang = deprecate(
          "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
          function(key2) {
            if (key2 === void 0) {
              return this.localeData();
            } else {
              return this.locale(key2);
            }
          }
        );
        function localeData() {
          return this._locale;
        }
        function startOf(units) {
          units = normalizeUnits(units);
          switch (units) {
            case "year":
              this.month(0);
            case "quarter":
            case "month":
              this.date(1);
            case "week":
            case "isoWeek":
            case "day":
            case "date":
              this.hours(0);
            case "hour":
              this.minutes(0);
            case "minute":
              this.seconds(0);
            case "second":
              this.milliseconds(0);
          }
          if (units === "week") {
            this.weekday(0);
          }
          if (units === "isoWeek") {
            this.isoWeekday(1);
          }
          if (units === "quarter") {
            this.month(Math.floor(this.month() / 3) * 3);
          }
          return this;
        }
        function endOf(units) {
          units = normalizeUnits(units);
          if (units === void 0 || units === "millisecond") {
            return this;
          }
          if (units === "date") {
            units = "day";
          }
          return this.startOf(units).add(1, units === "isoWeek" ? "week" : units).subtract(1, "ms");
        }
        function valueOf() {
          return this._d.valueOf() - (this._offset || 0) * 6e4;
        }
        function unix() {
          return Math.floor(this.valueOf() / 1e3);
        }
        function toDate() {
          return new Date(this.valueOf());
        }
        function toArray() {
          var m = this;
          return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
        }
        function toObject() {
          var m = this;
          return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
          };
        }
        function toJSON() {
          return this.isValid() ? this.toISOString() : null;
        }
        function isValid$2() {
          return isValid(this);
        }
        function parsingFlags() {
          return extend({}, getParsingFlags(this));
        }
        function invalidAt() {
          return getParsingFlags(this).overflow;
        }
        function creationData() {
          return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
          };
        }
        addFormatToken(0, ["gg", 2], 0, function() {
          return this.weekYear() % 100;
        });
        addFormatToken(0, ["GG", 2], 0, function() {
          return this.isoWeekYear() % 100;
        });
        function addWeekYearFormatToken(token2, getter) {
          addFormatToken(0, [token2, token2.length], 0, getter);
        }
        addWeekYearFormatToken("gggg", "weekYear");
        addWeekYearFormatToken("ggggg", "weekYear");
        addWeekYearFormatToken("GGGG", "isoWeekYear");
        addWeekYearFormatToken("GGGGG", "isoWeekYear");
        addUnitAlias("weekYear", "gg");
        addUnitAlias("isoWeekYear", "GG");
        addUnitPriority("weekYear", 1);
        addUnitPriority("isoWeekYear", 1);
        addRegexToken("G", matchSigned);
        addRegexToken("g", matchSigned);
        addRegexToken("GG", match1to2, match2);
        addRegexToken("gg", match1to2, match2);
        addRegexToken("GGGG", match1to4, match4);
        addRegexToken("gggg", match1to4, match4);
        addRegexToken("GGGGG", match1to6, match6);
        addRegexToken("ggggg", match1to6, match6);
        addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function(input, week, config, token2) {
          week[token2.substr(0, 2)] = toInt(input);
        });
        addWeekParseToken(["gg", "GG"], function(input, week, config, token2) {
          week[token2] = hooks.parseTwoDigitYear(input);
        });
        function getSetWeekYear(input) {
          return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
          );
        }
        function getSetISOWeekYear(input) {
          return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
          );
        }
        function getISOWeeksInYear() {
          return weeksInYear(this.year(), 1, 4);
        }
        function getWeeksInYear() {
          var weekInfo = this.localeData()._week;
          return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
        }
        function getSetWeekYearHelper(input, week, weekday, dow, doy) {
          var weeksTarget;
          if (input == null) {
            return weekOfYear(this, dow, doy).year;
          } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
              week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
          }
        }
        function setWeekAll(weekYear, week, weekday, dow, doy) {
          var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date2 = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
          this.year(date2.getUTCFullYear());
          this.month(date2.getUTCMonth());
          this.date(date2.getUTCDate());
          return this;
        }
        addFormatToken("Q", 0, "Qo", "quarter");
        addUnitAlias("quarter", "Q");
        addUnitPriority("quarter", 7);
        addRegexToken("Q", match1);
        addParseToken("Q", function(input, array) {
          array[MONTH] = (toInt(input) - 1) * 3;
        });
        function getSetQuarter(input) {
          return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
        }
        addFormatToken("D", ["DD", 2], "Do", "date");
        addUnitAlias("date", "D");
        addUnitPriority("date", 9);
        addRegexToken("D", match1to2);
        addRegexToken("DD", match1to2, match2);
        addRegexToken("Do", function(isStrict, locale2) {
          return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
        });
        addParseToken(["D", "DD"], DATE);
        addParseToken("Do", function(input, array) {
          array[DATE] = toInt(input.match(match1to2)[0]);
        });
        var getSetDayOfMonth = makeGetSet("Date", true);
        addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
        addUnitAlias("dayOfYear", "DDD");
        addUnitPriority("dayOfYear", 4);
        addRegexToken("DDD", match1to3);
        addRegexToken("DDDD", match3);
        addParseToken(["DDD", "DDDD"], function(input, array, config) {
          config._dayOfYear = toInt(input);
        });
        function getSetDayOfYear(input) {
          var dayOfYear = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
          return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
        }
        addFormatToken("m", ["mm", 2], 0, "minute");
        addUnitAlias("minute", "m");
        addUnitPriority("minute", 14);
        addRegexToken("m", match1to2);
        addRegexToken("mm", match1to2, match2);
        addParseToken(["m", "mm"], MINUTE3);
        var getSetMinute = makeGetSet("Minutes", false);
        addFormatToken("s", ["ss", 2], 0, "second");
        addUnitAlias("second", "s");
        addUnitPriority("second", 15);
        addRegexToken("s", match1to2);
        addRegexToken("ss", match1to2, match2);
        addParseToken(["s", "ss"], SECOND3);
        var getSetSecond = makeGetSet("Seconds", false);
        addFormatToken("S", 0, 0, function() {
          return ~~(this.millisecond() / 100);
        });
        addFormatToken(0, ["SS", 2], 0, function() {
          return ~~(this.millisecond() / 10);
        });
        addFormatToken(0, ["SSS", 3], 0, "millisecond");
        addFormatToken(0, ["SSSS", 4], 0, function() {
          return this.millisecond() * 10;
        });
        addFormatToken(0, ["SSSSS", 5], 0, function() {
          return this.millisecond() * 100;
        });
        addFormatToken(0, ["SSSSSS", 6], 0, function() {
          return this.millisecond() * 1e3;
        });
        addFormatToken(0, ["SSSSSSS", 7], 0, function() {
          return this.millisecond() * 1e4;
        });
        addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
          return this.millisecond() * 1e5;
        });
        addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
          return this.millisecond() * 1e6;
        });
        addUnitAlias("millisecond", "ms");
        addUnitPriority("millisecond", 16);
        addRegexToken("S", match1to3, match1);
        addRegexToken("SS", match1to3, match2);
        addRegexToken("SSS", match1to3, match3);
        var token;
        for (token = "SSSS"; token.length <= 9; token += "S") {
          addRegexToken(token, matchUnsigned);
        }
        function parseMs(input, array) {
          array[MILLISECOND] = toInt(("0." + input) * 1e3);
        }
        for (token = "S"; token.length <= 9; token += "S") {
          addParseToken(token, parseMs);
        }
        var getSetMillisecond = makeGetSet("Milliseconds", false);
        addFormatToken("z", 0, 0, "zoneAbbr");
        addFormatToken("zz", 0, 0, "zoneName");
        function getZoneAbbr() {
          return this._isUTC ? "UTC" : "";
        }
        function getZoneName() {
          return this._isUTC ? "Coordinated Universal Time" : "";
        }
        var proto = Moment.prototype;
        proto.add = add2;
        proto.calendar = calendar$1;
        proto.clone = clone;
        proto.diff = diff;
        proto.endOf = endOf;
        proto.format = format;
        proto.from = from;
        proto.fromNow = fromNow;
        proto.to = to;
        proto.toNow = toNow;
        proto.get = stringGet;
        proto.invalidAt = invalidAt;
        proto.isAfter = isAfter;
        proto.isBefore = isBefore;
        proto.isBetween = isBetween;
        proto.isSame = isSame;
        proto.isSameOrAfter = isSameOrAfter;
        proto.isSameOrBefore = isSameOrBefore;
        proto.isValid = isValid$2;
        proto.lang = lang;
        proto.locale = locale;
        proto.localeData = localeData;
        proto.max = prototypeMax;
        proto.min = prototypeMin;
        proto.parsingFlags = parsingFlags;
        proto.set = stringSet;
        proto.startOf = startOf;
        proto.subtract = subtract;
        proto.toArray = toArray;
        proto.toObject = toObject;
        proto.toDate = toDate;
        proto.toISOString = toISOString;
        proto.inspect = inspect2;
        proto.toJSON = toJSON;
        proto.toString = toString3;
        proto.unix = unix;
        proto.valueOf = valueOf;
        proto.creationData = creationData;
        proto.year = getSetYear;
        proto.isLeapYear = getIsLeapYear;
        proto.weekYear = getSetWeekYear;
        proto.isoWeekYear = getSetISOWeekYear;
        proto.quarter = proto.quarters = getSetQuarter;
        proto.month = getSetMonth;
        proto.daysInMonth = getDaysInMonth;
        proto.week = proto.weeks = getSetWeek;
        proto.isoWeek = proto.isoWeeks = getSetISOWeek;
        proto.weeksInYear = getWeeksInYear;
        proto.isoWeeksInYear = getISOWeeksInYear;
        proto.date = getSetDayOfMonth;
        proto.day = proto.days = getSetDayOfWeek;
        proto.weekday = getSetLocaleDayOfWeek;
        proto.isoWeekday = getSetISODayOfWeek;
        proto.dayOfYear = getSetDayOfYear;
        proto.hour = proto.hours = getSetHour;
        proto.minute = proto.minutes = getSetMinute;
        proto.second = proto.seconds = getSetSecond;
        proto.millisecond = proto.milliseconds = getSetMillisecond;
        proto.utcOffset = getSetOffset;
        proto.utc = setOffsetToUTC;
        proto.local = setOffsetToLocal;
        proto.parseZone = setOffsetToParsedOffset;
        proto.hasAlignedHourOffset = hasAlignedHourOffset;
        proto.isDST = isDaylightSavingTime;
        proto.isLocal = isLocal;
        proto.isUtcOffset = isUtcOffset;
        proto.isUtc = isUtc;
        proto.isUTC = isUtc;
        proto.zoneAbbr = getZoneAbbr;
        proto.zoneName = getZoneName;
        proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth);
        proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth);
        proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear);
        proto.zone = deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", getSetZone);
        proto.isDSTShifted = deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", isDaylightSavingTimeShifted);
        function createUnix(input) {
          return createLocal(input * 1e3);
        }
        function createInZone() {
          return createLocal.apply(null, arguments).parseZone();
        }
        function preParsePostFormat(string) {
          return string;
        }
        var proto$1 = Locale.prototype;
        proto$1.calendar = calendar;
        proto$1.longDateFormat = longDateFormat;
        proto$1.invalidDate = invalidDate;
        proto$1.ordinal = ordinal;
        proto$1.preparse = preParsePostFormat;
        proto$1.postformat = preParsePostFormat;
        proto$1.relativeTime = relativeTime;
        proto$1.pastFuture = pastFuture;
        proto$1.set = set3;
        proto$1.months = localeMonths;
        proto$1.monthsShort = localeMonthsShort;
        proto$1.monthsParse = localeMonthsParse;
        proto$1.monthsRegex = monthsRegex;
        proto$1.monthsShortRegex = monthsShortRegex;
        proto$1.week = localeWeek;
        proto$1.firstDayOfYear = localeFirstDayOfYear;
        proto$1.firstDayOfWeek = localeFirstDayOfWeek;
        proto$1.weekdays = localeWeekdays;
        proto$1.weekdaysMin = localeWeekdaysMin;
        proto$1.weekdaysShort = localeWeekdaysShort;
        proto$1.weekdaysParse = localeWeekdaysParse;
        proto$1.weekdaysRegex = weekdaysRegex;
        proto$1.weekdaysShortRegex = weekdaysShortRegex;
        proto$1.weekdaysMinRegex = weekdaysMinRegex;
        proto$1.isPM = localeIsPM;
        proto$1.meridiem = localeMeridiem;
        function get$1(format2, index2, field, setter) {
          var locale2 = getLocale();
          var utc = createUTC().set(setter, index2);
          return locale2[field](utc, format2);
        }
        function listMonthsImpl(format2, index2, field) {
          if (isNumber2(format2)) {
            index2 = format2;
            format2 = void 0;
          }
          format2 = format2 || "";
          if (index2 != null) {
            return get$1(format2, index2, field, "month");
          }
          var i;
          var out = [];
          for (i = 0; i < 12; i++) {
            out[i] = get$1(format2, i, field, "month");
          }
          return out;
        }
        function listWeekdaysImpl(localeSorted, format2, index2, field) {
          if (typeof localeSorted === "boolean") {
            if (isNumber2(format2)) {
              index2 = format2;
              format2 = void 0;
            }
            format2 = format2 || "";
          } else {
            format2 = localeSorted;
            index2 = format2;
            localeSorted = false;
            if (isNumber2(format2)) {
              index2 = format2;
              format2 = void 0;
            }
            format2 = format2 || "";
          }
          var locale2 = getLocale(), shift = localeSorted ? locale2._week.dow : 0;
          if (index2 != null) {
            return get$1(format2, (index2 + shift) % 7, field, "day");
          }
          var i;
          var out = [];
          for (i = 0; i < 7; i++) {
            out[i] = get$1(format2, (i + shift) % 7, field, "day");
          }
          return out;
        }
        function listMonths(format2, index2) {
          return listMonthsImpl(format2, index2, "months");
        }
        function listMonthsShort(format2, index2) {
          return listMonthsImpl(format2, index2, "monthsShort");
        }
        function listWeekdays(localeSorted, format2, index2) {
          return listWeekdaysImpl(localeSorted, format2, index2, "weekdays");
        }
        function listWeekdaysShort(localeSorted, format2, index2) {
          return listWeekdaysImpl(localeSorted, format2, index2, "weekdaysShort");
        }
        function listWeekdaysMin(localeSorted, format2, index2) {
          return listWeekdaysImpl(localeSorted, format2, index2, "weekdaysMin");
        }
        getSetGlobalLocale("en", {
          dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
          ordinal: function(number) {
            var b = number % 10, output = toInt(number % 100 / 10) === 1 ? "th" : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output;
          }
        });
        hooks.lang = deprecate("moment.lang is deprecated. Use moment.locale instead.", getSetGlobalLocale);
        hooks.langData = deprecate("moment.langData is deprecated. Use moment.localeData instead.", getLocale);
        var mathAbs2 = Math.abs;
        function abs() {
          var data2 = this._data;
          this._milliseconds = mathAbs2(this._milliseconds);
          this._days = mathAbs2(this._days);
          this._months = mathAbs2(this._months);
          data2.milliseconds = mathAbs2(data2.milliseconds);
          data2.seconds = mathAbs2(data2.seconds);
          data2.minutes = mathAbs2(data2.minutes);
          data2.hours = mathAbs2(data2.hours);
          data2.months = mathAbs2(data2.months);
          data2.years = mathAbs2(data2.years);
          return this;
        }
        function addSubtract$1(duration, input, value2, direction) {
          var other = createDuration(input, value2);
          duration._milliseconds += direction * other._milliseconds;
          duration._days += direction * other._days;
          duration._months += direction * other._months;
          return duration._bubble();
        }
        function add$1(input, value2) {
          return addSubtract$1(this, input, value2, 1);
        }
        function subtract$1(input, value2) {
          return addSubtract$1(this, input, value2, -1);
        }
        function absCeil(number) {
          if (number < 0) {
            return Math.floor(number);
          } else {
            return Math.ceil(number);
          }
        }
        function bubble() {
          var milliseconds2 = this._milliseconds;
          var days2 = this._days;
          var months2 = this._months;
          var data2 = this._data;
          var seconds2, minutes2, hours2, years2, monthsFromDays;
          if (!(milliseconds2 >= 0 && days2 >= 0 && months2 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months2 <= 0)) {
            milliseconds2 += absCeil(monthsToDays(months2) + days2) * 864e5;
            days2 = 0;
            months2 = 0;
          }
          data2.milliseconds = milliseconds2 % 1e3;
          seconds2 = absFloor(milliseconds2 / 1e3);
          data2.seconds = seconds2 % 60;
          minutes2 = absFloor(seconds2 / 60);
          data2.minutes = minutes2 % 60;
          hours2 = absFloor(minutes2 / 60);
          data2.hours = hours2 % 24;
          days2 += absFloor(hours2 / 24);
          monthsFromDays = absFloor(daysToMonths(days2));
          months2 += monthsFromDays;
          days2 -= absCeil(monthsToDays(monthsFromDays));
          years2 = absFloor(months2 / 12);
          months2 %= 12;
          data2.days = days2;
          data2.months = months2;
          data2.years = years2;
          return this;
        }
        function daysToMonths(days2) {
          return days2 * 4800 / 146097;
        }
        function monthsToDays(months2) {
          return months2 * 146097 / 4800;
        }
        function as(units) {
          if (!this.isValid()) {
            return NaN;
          }
          var days2;
          var months2;
          var milliseconds2 = this._milliseconds;
          units = normalizeUnits(units);
          if (units === "month" || units === "year") {
            days2 = this._days + milliseconds2 / 864e5;
            months2 = this._months + daysToMonths(days2);
            return units === "month" ? months2 : months2 / 12;
          } else {
            days2 = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
              case "week":
                return days2 / 7 + milliseconds2 / 6048e5;
              case "day":
                return days2 + milliseconds2 / 864e5;
              case "hour":
                return days2 * 24 + milliseconds2 / 36e5;
              case "minute":
                return days2 * 1440 + milliseconds2 / 6e4;
              case "second":
                return days2 * 86400 + milliseconds2 / 1e3;
              case "millisecond":
                return Math.floor(days2 * 864e5) + milliseconds2;
              default:
                throw new Error("Unknown unit " + units);
            }
          }
        }
        function valueOf$1() {
          if (!this.isValid()) {
            return NaN;
          }
          return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
        }
        function makeAs(alias) {
          return function() {
            return this.as(alias);
          };
        }
        var asMilliseconds = makeAs("ms");
        var asSeconds = makeAs("s");
        var asMinutes = makeAs("m");
        var asHours = makeAs("h");
        var asDays = makeAs("d");
        var asWeeks = makeAs("w");
        var asMonths = makeAs("M");
        var asYears = makeAs("y");
        function clone$1() {
          return createDuration(this);
        }
        function get$2(units) {
          units = normalizeUnits(units);
          return this.isValid() ? this[units + "s"]() : NaN;
        }
        function makeGetter(name2) {
          return function() {
            return this.isValid() ? this._data[name2] : NaN;
          };
        }
        var milliseconds = makeGetter("milliseconds");
        var seconds = makeGetter("seconds");
        var minutes = makeGetter("minutes");
        var hours = makeGetter("hours");
        var days = makeGetter("days");
        var months = makeGetter("months");
        var years = makeGetter("years");
        function weeks() {
          return absFloor(this.days() / 7);
        }
        var round = Math.round;
        var thresholds = {
          ss: 44,
          // a few seconds to seconds
          s: 45,
          // seconds to minute
          m: 45,
          // minutes to hour
          h: 22,
          // hours to day
          d: 26,
          // days to month
          M: 11
          // months to year
        };
        function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale2) {
          return locale2.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
        }
        function relativeTime$1(posNegDuration, withoutSuffix, locale2) {
          var duration = createDuration(posNegDuration).abs();
          var seconds2 = round(duration.as("s"));
          var minutes2 = round(duration.as("m"));
          var hours2 = round(duration.as("h"));
          var days2 = round(duration.as("d"));
          var months2 = round(duration.as("M"));
          var years2 = round(duration.as("y"));
          var a = seconds2 <= thresholds.ss && ["s", seconds2] || seconds2 < thresholds.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds.d && ["dd", days2] || months2 <= 1 && ["M"] || months2 < thresholds.M && ["MM", months2] || years2 <= 1 && ["y"] || ["yy", years2];
          a[2] = withoutSuffix;
          a[3] = +posNegDuration > 0;
          a[4] = locale2;
          return substituteTimeAgo.apply(null, a);
        }
        function getSetRelativeTimeRounding(roundingFunction) {
          if (roundingFunction === void 0) {
            return round;
          }
          if (typeof roundingFunction === "function") {
            round = roundingFunction;
            return true;
          }
          return false;
        }
        function getSetRelativeTimeThreshold(threshold, limit) {
          if (thresholds[threshold] === void 0) {
            return false;
          }
          if (limit === void 0) {
            return thresholds[threshold];
          }
          thresholds[threshold] = limit;
          if (threshold === "s") {
            thresholds.ss = limit - 1;
          }
          return true;
        }
        function humanize(withSuffix) {
          if (!this.isValid()) {
            return this.localeData().invalidDate();
          }
          var locale2 = this.localeData();
          var output = relativeTime$1(this, !withSuffix, locale2);
          if (withSuffix) {
            output = locale2.pastFuture(+this, output);
          }
          return locale2.postformat(output);
        }
        var abs$1 = Math.abs;
        function sign(x) {
          return (x > 0) - (x < 0) || +x;
        }
        function toISOString$1() {
          if (!this.isValid()) {
            return this.localeData().invalidDate();
          }
          var seconds2 = abs$1(this._milliseconds) / 1e3;
          var days2 = abs$1(this._days);
          var months2 = abs$1(this._months);
          var minutes2, hours2, years2;
          minutes2 = absFloor(seconds2 / 60);
          hours2 = absFloor(minutes2 / 60);
          seconds2 %= 60;
          minutes2 %= 60;
          years2 = absFloor(months2 / 12);
          months2 %= 12;
          var Y = years2;
          var M = months2;
          var D = days2;
          var h = hours2;
          var m = minutes2;
          var s = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
          var total = this.asSeconds();
          if (!total) {
            return "P0D";
          }
          var totalSign = total < 0 ? "-" : "";
          var ymSign = sign(this._months) !== sign(total) ? "-" : "";
          var daysSign = sign(this._days) !== sign(total) ? "-" : "";
          var hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
          return totalSign + "P" + (Y ? ymSign + Y + "Y" : "") + (M ? ymSign + M + "M" : "") + (D ? daysSign + D + "D" : "") + (h || m || s ? "T" : "") + (h ? hmsSign + h + "H" : "") + (m ? hmsSign + m + "M" : "") + (s ? hmsSign + s + "S" : "");
        }
        var proto$2 = Duration.prototype;
        proto$2.isValid = isValid$1;
        proto$2.abs = abs;
        proto$2.add = add$1;
        proto$2.subtract = subtract$1;
        proto$2.as = as;
        proto$2.asMilliseconds = asMilliseconds;
        proto$2.asSeconds = asSeconds;
        proto$2.asMinutes = asMinutes;
        proto$2.asHours = asHours;
        proto$2.asDays = asDays;
        proto$2.asWeeks = asWeeks;
        proto$2.asMonths = asMonths;
        proto$2.asYears = asYears;
        proto$2.valueOf = valueOf$1;
        proto$2._bubble = bubble;
        proto$2.clone = clone$1;
        proto$2.get = get$2;
        proto$2.milliseconds = milliseconds;
        proto$2.seconds = seconds;
        proto$2.minutes = minutes;
        proto$2.hours = hours;
        proto$2.days = days;
        proto$2.weeks = weeks;
        proto$2.months = months;
        proto$2.years = years;
        proto$2.humanize = humanize;
        proto$2.toISOString = toISOString$1;
        proto$2.toString = toISOString$1;
        proto$2.toJSON = toISOString$1;
        proto$2.locale = locale;
        proto$2.localeData = localeData;
        proto$2.toIsoString = deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", toISOString$1);
        proto$2.lang = lang;
        addFormatToken("X", 0, 0, "unix");
        addFormatToken("x", 0, 0, "valueOf");
        addRegexToken("x", matchSigned);
        addRegexToken("X", matchTimestamp);
        addParseToken("X", function(input, array, config) {
          config._d = new Date(parseFloat(input, 10) * 1e3);
        });
        addParseToken("x", function(input, array, config) {
          config._d = new Date(toInt(input));
        });
        hooks.version = "2.22.2";
        setHookCallback(createLocal);
        hooks.fn = proto;
        hooks.min = min;
        hooks.max = max;
        hooks.now = now;
        hooks.utc = createUTC;
        hooks.unix = createUnix;
        hooks.months = listMonths;
        hooks.isDate = isDate;
        hooks.locale = getSetGlobalLocale;
        hooks.invalid = createInvalid;
        hooks.duration = createDuration;
        hooks.isMoment = isMoment;
        hooks.weekdays = listWeekdays;
        hooks.parseZone = createInZone;
        hooks.localeData = getLocale;
        hooks.isDuration = isDuration;
        hooks.monthsShort = listMonthsShort;
        hooks.weekdaysMin = listWeekdaysMin;
        hooks.defineLocale = defineLocale;
        hooks.updateLocale = updateLocale;
        hooks.locales = listLocales;
        hooks.weekdaysShort = listWeekdaysShort;
        hooks.normalizeUnits = normalizeUnits;
        hooks.relativeTimeRounding = getSetRelativeTimeRounding;
        hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
        hooks.calendarFormat = getCalendarFormat;
        hooks.prototype = proto;
        hooks.HTML5_FMT = {
          DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
          // <input type="datetime-local" />
          DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
          // <input type="datetime-local" step="1" />
          DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
          // <input type="datetime-local" step="0.001" />
          DATE: "YYYY-MM-DD",
          // <input type="date" />
          TIME: "HH:mm",
          // <input type="time" />
          TIME_SECONDS: "HH:mm:ss",
          // <input type="time" step="1" />
          TIME_MS: "HH:mm:ss.SSS",
          // <input type="time" step="0.001" />
          WEEK: "YYYY-[W]WW",
          // <input type="week" />
          MONTH: "YYYY-MM"
          // <input type="month" />
        };
        return hooks;
      });
    }
  });

  // node_modules/moment-timezone/moment-timezone.js
  var require_moment_timezone = __commonJS({
    "node_modules/moment-timezone/moment-timezone.js"(exports2, module2) {
      (function(root2, factory2) {
        "use strict";
        if (typeof module2 === "object" && module2.exports) {
          module2.exports = factory2(require_moment());
        } else if (typeof define === "function" && define.amd) {
          define(["moment"], factory2);
        } else {
          factory2(root2.moment);
        }
      })(exports2, function(moment4) {
        "use strict";
        if (moment4.version === void 0 && moment4.default) {
          moment4 = moment4.default;
        }
        var VERSION = "0.5.31", zones = {}, links = {}, countries = {}, names = {}, guesses = {}, cachedGuess;
        if (!moment4 || typeof moment4.version !== "string") {
          logError("Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/");
        }
        var momentVersion = moment4.version.split("."), major = +momentVersion[0], minor = +momentVersion[1];
        if (major < 2 || major === 2 && minor < 6) {
          logError("Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js " + moment4.version + ". See momentjs.com");
        }
        function charCodeToInt(charCode) {
          if (charCode > 96) {
            return charCode - 87;
          } else if (charCode > 64) {
            return charCode - 29;
          }
          return charCode - 48;
        }
        function unpackBase60(string) {
          var i = 0, parts = string.split("."), whole = parts[0], fractional = parts[1] || "", multiplier = 1, num, out = 0, sign = 1;
          if (string.charCodeAt(0) === 45) {
            i = 1;
            sign = -1;
          }
          for (i; i < whole.length; i++) {
            num = charCodeToInt(whole.charCodeAt(i));
            out = 60 * out + num;
          }
          for (i = 0; i < fractional.length; i++) {
            multiplier = multiplier / 60;
            num = charCodeToInt(fractional.charCodeAt(i));
            out += num * multiplier;
          }
          return out * sign;
        }
        function arrayToInt(array) {
          for (var i = 0; i < array.length; i++) {
            array[i] = unpackBase60(array[i]);
          }
        }
        function intToUntil(array, length2) {
          for (var i = 0; i < length2; i++) {
            array[i] = Math.round((array[i - 1] || 0) + array[i] * 6e4);
          }
          array[length2 - 1] = Infinity;
        }
        function mapIndices(source, indices) {
          var out = [], i;
          for (i = 0; i < indices.length; i++) {
            out[i] = source[indices[i]];
          }
          return out;
        }
        function unpack(string) {
          var data2 = string.split("|"), offsets = data2[2].split(" "), indices = data2[3].split(""), untils = data2[4].split(" ");
          arrayToInt(offsets);
          arrayToInt(indices);
          arrayToInt(untils);
          intToUntil(untils, indices.length);
          return {
            name: data2[0],
            abbrs: mapIndices(data2[1].split(" "), indices),
            offsets: mapIndices(offsets, indices),
            untils,
            population: data2[5] | 0
          };
        }
        function Zone(packedString) {
          if (packedString) {
            this._set(unpack(packedString));
          }
        }
        Zone.prototype = {
          _set: function(unpacked) {
            this.name = unpacked.name;
            this.abbrs = unpacked.abbrs;
            this.untils = unpacked.untils;
            this.offsets = unpacked.offsets;
            this.population = unpacked.population;
          },
          _index: function(timestamp) {
            var target = +timestamp, untils = this.untils, i;
            for (i = 0; i < untils.length; i++) {
              if (target < untils[i]) {
                return i;
              }
            }
          },
          countries: function() {
            var zone_name = this.name;
            return Object.keys(countries).filter(function(country_code) {
              return countries[country_code].zones.indexOf(zone_name) !== -1;
            });
          },
          parse: function(timestamp) {
            var target = +timestamp, offsets = this.offsets, untils = this.untils, max = untils.length - 1, offset, offsetNext, offsetPrev, i;
            for (i = 0; i < max; i++) {
              offset = offsets[i];
              offsetNext = offsets[i + 1];
              offsetPrev = offsets[i ? i - 1 : i];
              if (offset < offsetNext && tz.moveAmbiguousForward) {
                offset = offsetNext;
              } else if (offset > offsetPrev && tz.moveInvalidForward) {
                offset = offsetPrev;
              }
              if (target < untils[i] - offset * 6e4) {
                return offsets[i];
              }
            }
            return offsets[max];
          },
          abbr: function(mom) {
            return this.abbrs[this._index(mom)];
          },
          offset: function(mom) {
            logError("zone.offset has been deprecated in favor of zone.utcOffset");
            return this.offsets[this._index(mom)];
          },
          utcOffset: function(mom) {
            return this.offsets[this._index(mom)];
          }
        };
        function Country(country_name, zone_names) {
          this.name = country_name;
          this.zones = zone_names;
        }
        function OffsetAt(at) {
          var timeString = at.toTimeString();
          var abbr = timeString.match(/\([a-z ]+\)/i);
          if (abbr && abbr[0]) {
            abbr = abbr[0].match(/[A-Z]/g);
            abbr = abbr ? abbr.join("") : void 0;
          } else {
            abbr = timeString.match(/[A-Z]{3,5}/g);
            abbr = abbr ? abbr[0] : void 0;
          }
          if (abbr === "GMT") {
            abbr = void 0;
          }
          this.at = +at;
          this.abbr = abbr;
          this.offset = at.getTimezoneOffset();
        }
        function ZoneScore(zone) {
          this.zone = zone;
          this.offsetScore = 0;
          this.abbrScore = 0;
        }
        ZoneScore.prototype.scoreOffsetAt = function(offsetAt) {
          this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);
          if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, "") !== offsetAt.abbr) {
            this.abbrScore++;
          }
        };
        function findChange(low, high) {
          var mid, diff;
          while (diff = ((high.at - low.at) / 12e4 | 0) * 6e4) {
            mid = new OffsetAt(new Date(low.at + diff));
            if (mid.offset === low.offset) {
              low = mid;
            } else {
              high = mid;
            }
          }
          return low;
        }
        function userOffsets() {
          var startYear = (/* @__PURE__ */ new Date()).getFullYear() - 2, last = new OffsetAt(new Date(startYear, 0, 1)), offsets = [last], change, next, i;
          for (i = 1; i < 48; i++) {
            next = new OffsetAt(new Date(startYear, i, 1));
            if (next.offset !== last.offset) {
              change = findChange(last, next);
              offsets.push(change);
              offsets.push(new OffsetAt(new Date(change.at + 6e4)));
            }
            last = next;
          }
          for (i = 0; i < 4; i++) {
            offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));
            offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
          }
          return offsets;
        }
        function sortZoneScores(a, b) {
          if (a.offsetScore !== b.offsetScore) {
            return a.offsetScore - b.offsetScore;
          }
          if (a.abbrScore !== b.abbrScore) {
            return a.abbrScore - b.abbrScore;
          }
          if (a.zone.population !== b.zone.population) {
            return b.zone.population - a.zone.population;
          }
          return b.zone.name.localeCompare(a.zone.name);
        }
        function addToGuesses(name2, offsets) {
          var i, offset;
          arrayToInt(offsets);
          for (i = 0; i < offsets.length; i++) {
            offset = offsets[i];
            guesses[offset] = guesses[offset] || {};
            guesses[offset][name2] = true;
          }
        }
        function guessesForUserOffsets(offsets) {
          var offsetsLength = offsets.length, filteredGuesses = {}, out = [], i, j, guessesOffset;
          for (i = 0; i < offsetsLength; i++) {
            guessesOffset = guesses[offsets[i].offset] || {};
            for (j in guessesOffset) {
              if (guessesOffset.hasOwnProperty(j)) {
                filteredGuesses[j] = true;
              }
            }
          }
          for (i in filteredGuesses) {
            if (filteredGuesses.hasOwnProperty(i)) {
              out.push(names[i]);
            }
          }
          return out;
        }
        function rebuildGuess() {
          try {
            var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
            if (intlName && intlName.length > 3) {
              var name2 = names[normalizeName(intlName)];
              if (name2) {
                return name2;
              }
              logError("Moment Timezone found " + intlName + " from the Intl api, but did not have that data loaded.");
            }
          } catch (e) {
          }
          var offsets = userOffsets(), offsetsLength = offsets.length, guesses2 = guessesForUserOffsets(offsets), zoneScores = [], zoneScore, i, j;
          for (i = 0; i < guesses2.length; i++) {
            zoneScore = new ZoneScore(getZone(guesses2[i]), offsetsLength);
            for (j = 0; j < offsetsLength; j++) {
              zoneScore.scoreOffsetAt(offsets[j]);
            }
            zoneScores.push(zoneScore);
          }
          zoneScores.sort(sortZoneScores);
          return zoneScores.length > 0 ? zoneScores[0].zone.name : void 0;
        }
        function guess(ignoreCache) {
          if (!cachedGuess || ignoreCache) {
            cachedGuess = rebuildGuess();
          }
          return cachedGuess;
        }
        function normalizeName(name2) {
          return (name2 || "").toLowerCase().replace(/\//g, "_");
        }
        function addZone(packed) {
          var i, name2, split, normalized;
          if (typeof packed === "string") {
            packed = [packed];
          }
          for (i = 0; i < packed.length; i++) {
            split = packed[i].split("|");
            name2 = split[0];
            normalized = normalizeName(name2);
            zones[normalized] = packed[i];
            names[normalized] = name2;
            addToGuesses(normalized, split[2].split(" "));
          }
        }
        function getZone(name2, caller) {
          name2 = normalizeName(name2);
          var zone = zones[name2];
          var link;
          if (zone instanceof Zone) {
            return zone;
          }
          if (typeof zone === "string") {
            zone = new Zone(zone);
            zones[name2] = zone;
            return zone;
          }
          if (links[name2] && caller !== getZone && (link = getZone(links[name2], getZone))) {
            zone = zones[name2] = new Zone();
            zone._set(link);
            zone.name = names[name2];
            return zone;
          }
          return null;
        }
        function getNames() {
          var i, out = [];
          for (i in names) {
            if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {
              out.push(names[i]);
            }
          }
          return out.sort();
        }
        function getCountryNames() {
          return Object.keys(countries);
        }
        function addLink(aliases) {
          var i, alias, normal0, normal1;
          if (typeof aliases === "string") {
            aliases = [aliases];
          }
          for (i = 0; i < aliases.length; i++) {
            alias = aliases[i].split("|");
            normal0 = normalizeName(alias[0]);
            normal1 = normalizeName(alias[1]);
            links[normal0] = normal1;
            names[normal0] = alias[0];
            links[normal1] = normal0;
            names[normal1] = alias[1];
          }
        }
        function addCountries(data2) {
          var i, country_code, country_zones, split;
          if (!data2 || !data2.length)
            return;
          for (i = 0; i < data2.length; i++) {
            split = data2[i].split("|");
            country_code = split[0].toUpperCase();
            country_zones = split[1].split(" ");
            countries[country_code] = new Country(
              country_code,
              country_zones
            );
          }
        }
        function getCountry(name2) {
          name2 = name2.toUpperCase();
          return countries[name2] || null;
        }
        function zonesForCountry(country, with_offset) {
          country = getCountry(country);
          if (!country)
            return null;
          var zones2 = country.zones.sort();
          if (with_offset) {
            return zones2.map(function(zone_name) {
              var zone = getZone(zone_name);
              return {
                name: zone_name,
                offset: zone.utcOffset(/* @__PURE__ */ new Date())
              };
            });
          }
          return zones2;
        }
        function loadData(data2) {
          addZone(data2.zones);
          addLink(data2.links);
          addCountries(data2.countries);
          tz.dataVersion = data2.version;
        }
        function zoneExists(name2) {
          if (!zoneExists.didShowError) {
            zoneExists.didShowError = true;
            logError("moment.tz.zoneExists('" + name2 + "') has been deprecated in favor of !moment.tz.zone('" + name2 + "')");
          }
          return !!getZone(name2);
        }
        function needsOffset(m) {
          var isUnixTimestamp = m._f === "X" || m._f === "x";
          return !!(m._a && m._tzm === void 0 && !isUnixTimestamp);
        }
        function logError(message) {
          if (typeof console !== "undefined" && typeof console.error === "function") {
            console.error(message);
          }
        }
        function tz(input) {
          var args = Array.prototype.slice.call(arguments, 0, -1), name2 = arguments[arguments.length - 1], zone = getZone(name2), out = moment4.utc.apply(null, args);
          if (zone && !moment4.isMoment(input) && needsOffset(out)) {
            out.add(zone.parse(out), "minutes");
          }
          out.tz(name2);
          return out;
        }
        tz.version = VERSION;
        tz.dataVersion = "";
        tz._zones = zones;
        tz._links = links;
        tz._names = names;
        tz._countries = countries;
        tz.add = addZone;
        tz.link = addLink;
        tz.load = loadData;
        tz.zone = getZone;
        tz.zoneExists = zoneExists;
        tz.guess = guess;
        tz.names = getNames;
        tz.Zone = Zone;
        tz.unpack = unpack;
        tz.unpackBase60 = unpackBase60;
        tz.needsOffset = needsOffset;
        tz.moveInvalidForward = true;
        tz.moveAmbiguousForward = false;
        tz.countries = getCountryNames;
        tz.zonesForCountry = zonesForCountry;
        var fn = moment4.fn;
        moment4.tz = tz;
        moment4.defaultZone = null;
        moment4.updateOffset = function(mom, keepTime) {
          var zone = moment4.defaultZone, offset;
          if (mom._z === void 0) {
            if (zone && needsOffset(mom) && !mom._isUTC) {
              mom._d = moment4.utc(mom._a)._d;
              mom.utc().add(zone.parse(mom), "minutes");
            }
            mom._z = zone;
          }
          if (mom._z) {
            offset = mom._z.utcOffset(mom);
            if (Math.abs(offset) < 16) {
              offset = offset / 60;
            }
            if (mom.utcOffset !== void 0) {
              var z = mom._z;
              mom.utcOffset(-offset, keepTime);
              mom._z = z;
            } else {
              mom.zone(offset, keepTime);
            }
          }
        };
        fn.tz = function(name2, keepTime) {
          if (name2) {
            if (typeof name2 !== "string") {
              throw new Error("Time zone name must be a string, got " + name2 + " [" + typeof name2 + "]");
            }
            this._z = getZone(name2);
            if (this._z) {
              moment4.updateOffset(this, keepTime);
            } else {
              logError("Moment Timezone has no data for " + name2 + ". See http://momentjs.com/timezone/docs/#/data-loading/.");
            }
            return this;
          }
          if (this._z) {
            return this._z.name;
          }
        };
        function abbrWrap(old) {
          return function() {
            if (this._z) {
              return this._z.abbr(this);
            }
            return old.call(this);
          };
        }
        function resetZoneWrap(old) {
          return function() {
            this._z = null;
            return old.apply(this, arguments);
          };
        }
        function resetZoneWrap2(old) {
          return function() {
            if (arguments.length > 0)
              this._z = null;
            return old.apply(this, arguments);
          };
        }
        fn.zoneName = abbrWrap(fn.zoneName);
        fn.zoneAbbr = abbrWrap(fn.zoneAbbr);
        fn.utc = resetZoneWrap(fn.utc);
        fn.local = resetZoneWrap(fn.local);
        fn.utcOffset = resetZoneWrap2(fn.utcOffset);
        moment4.tz.setDefault = function(name2) {
          if (major < 2 || major === 2 && minor < 9) {
            logError("Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js " + moment4.version + ".");
          }
          moment4.defaultZone = name2 ? getZone(name2) : null;
          return moment4;
        };
        var momentProperties = moment4.momentProperties;
        if (Object.prototype.toString.call(momentProperties) === "[object Array]") {
          momentProperties.push("_z");
          momentProperties.push("_a");
        } else if (momentProperties) {
          momentProperties._z = null;
        }
        return moment4;
      });
    }
  });

  // node_modules/moment-timezone/data/packed/latest.json
  var require_latest = __commonJS({
    "node_modules/moment-timezone/data/packed/latest.json"(exports2, module2) {
      module2.exports = {
        version: "2020a",
        zones: [
          "Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5",
          "Africa/Accra|LMT GMT +0020|.Q 0 -k|012121212121212121212121212121212121212121212121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE|41e5",
          "Africa/Nairobi|LMT EAT +0230 +0245|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ|47e5",
          "Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5",
          "Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A|17e6",
          "Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4",
          "Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5",
          "Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6",
          "Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|32e5",
          "Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3",
          "Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|20e4",
          "Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5",
          "Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|01212121212121212121212121212121213|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0|",
          "Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5",
          "Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5",
          "Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5",
          "Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00|",
          "Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5",
          "Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5",
          "Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
          "America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
          "America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
          "America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3",
          "America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4",
          "America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
          "America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
          "America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
          "America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|",
          "America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
          "America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|",
          "America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
          "America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|",
          "America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0|",
          "America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0|",
          "America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0|",
          "America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|",
          "America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4",
          "America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5",
          "America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2",
          "America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3",
          "America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5",
          "America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4",
          "America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5",
          "America/Belize|LMT CST -0530 CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0|57e3",
          "America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2",
          "America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2",
          "America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5",
          "America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4",
          "America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2",
          "America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4",
          "America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4",
          "America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5",
          "America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3",
          "America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5",
          "America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
          "America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4",
          "America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5",
          "America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2",
          "America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4",
          "America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8",
          "America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3",
          "America/Dawson|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|01010230405656565656565656565656565656565656565656565656565656565656565656565656565656565657|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|13e2",
          "America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
          "America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5",
          "America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|0121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5",
          "America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3",
          "America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5",
          "America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5",
          "America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2",
          "America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5",
          "America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
          "America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3",
          "America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2",
          "America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|01212121212121212121212121212121212121212121212121212121212121212121212121232121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
          "America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5",
          "America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5",
          "America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4",
          "America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
          "America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
          "America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4",
          "America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010401054541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2",
          "America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2",
          "America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4",
          "America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3",
          "America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5",
          "America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6",
          "America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
          "America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4",
          "America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5",
          "America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5",
          "America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4",
          "America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4",
          "America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4",
          "America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2",
          "America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5",
          "America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
          "America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6",
          "America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
          "America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3",
          "America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5",
          "America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5",
          "America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5",
          "America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4",
          "America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
          "America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2",
          "America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2",
          "America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2",
          "America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
          "America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
          "America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4",
          "America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5",
          "America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
          "America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4",
          "America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4",
          "America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5",
          "America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|",
          "America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842",
          "America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2",
          "America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5",
          "America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4",
          "America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229",
          "America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4",
          "America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5",
          "America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5",
          "America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6",
          "America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452",
          "America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2",
          "America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
          "America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3",
          "America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5",
          "America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656",
          "America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
          "America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
          "America/Whitehorse|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|01010230405656565656565656565656565656565656565656565656565656565656565656565656565656565657|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|23e3",
          "America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4",
          "America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642",
          "America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
          "Antarctica/Casey|-00 +08 +11|0 -80 -b0|01212121|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10|10",
          "Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70",
          "Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80",
          "Antarctica/Macquarie|AEST AEDT -00 +11|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0|1",
          "Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60",
          "Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5",
          "Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40",
          "Antarctica/Rothera|-00 -03|0 30|01|gOo0|130",
          "Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20",
          "Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40",
          "Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25",
          "Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4",
          "Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5",
          "Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5",
          "Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5",
          "Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3",
          "Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4",
          "Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4",
          "Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4",
          "Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
          "Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5",
          "Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4",
          "Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
          "Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6",
          "Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|",
          "Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5",
          "Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4",
          "Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4",
          "Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6",
          "Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4",
          "Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3",
          "Asia/Shanghai|CST CDT|-80 -90|01010101010101010101010101010|-23uw0 18n0 OjB0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6",
          "Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5",
          "Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6",
          "Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5",
          "Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4",
          "Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5",
          "Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4",
          "Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
          "Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|0101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|18e5",
          "Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|25e4",
          "Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5",
          "Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5",
          "Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3",
          "Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
          "Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212121212121212121212121212121234312121212121212121212121212121212121212121212121212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6",
          "Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6",
          "Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4",
          "Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4",
          "Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5",
          "Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4",
          "Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6",
          "Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5",
          "Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5",
          "Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2",
          "Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5",
          "Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5",
          "Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4",
          "Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4",
          "Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3",
          "Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5",
          "Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6",
          "Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4",
          "Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4",
          "Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5",
          "Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5",
          "Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4",
          "Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4",
          "Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5",
          "Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
          "Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4",
          "Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5",
          "Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4",
          "Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4",
          "Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6",
          "Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2",
          "Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5",
          "Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5",
          "Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5",
          "Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6",
          "Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3",
          "Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6",
          "Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5",
          "Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5",
          "Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2",
          "Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
          "Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4",
          "Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5",
          "Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5",
          "Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
          "Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3",
          "Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
          "Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4",
          "Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3",
          "Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4",
          "Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4",
          "Atlantic/South_Georgia|-02|20|0||30",
          "Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2",
          "Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5",
          "Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5",
          "Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5",
          "Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3",
          "Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|746",
          "Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0|12e4",
          "Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368",
          "Australia/Hobart|AEST AEDT|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4",
          "Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347",
          "Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10",
          "Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5",
          "Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5",
          "CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
          "Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2",
          "CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
          "Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
          "EST|EST|50|0||",
          "EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "Etc/GMT-0|GMT|0|0||",
          "Etc/GMT-1|+01|-10|0||",
          "Pacific/Port_Moresby|+10|-a0|0||25e4",
          "Etc/GMT-11|+11|-b0|0||",
          "Pacific/Tarawa|+12|-c0|0||29e3",
          "Etc/GMT-13|+13|-d0|0||",
          "Etc/GMT-14|+14|-e0|0||",
          "Etc/GMT-2|+02|-20|0||",
          "Etc/GMT-3|+03|-30|0||",
          "Etc/GMT-4|+04|-40|0||",
          "Etc/GMT-5|+05|-50|0||",
          "Etc/GMT-6|+06|-60|0||",
          "Indian/Christmas|+07|-70|0||21e2",
          "Etc/GMT-8|+08|-80|0||",
          "Pacific/Palau|+09|-90|0||21e3",
          "Etc/GMT+1|-01|10|0||",
          "Etc/GMT+10|-10|a0|0||",
          "Etc/GMT+11|-11|b0|0||",
          "Etc/GMT+12|-12|c0|0||",
          "Etc/GMT+3|-03|30|0||",
          "Etc/GMT+4|-04|40|0||",
          "Etc/GMT+5|-05|50|0||",
          "Etc/GMT+6|-06|60|0||",
          "Etc/GMT+7|-07|70|0||",
          "Etc/GMT+8|-08|80|0||",
          "Etc/GMT+9|-09|90|0||",
          "Etc/UTC|UTC|0|0||",
          "Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5",
          "Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3",
          "Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5",
          "Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5",
          "Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6",
          "Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
          "Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5",
          "Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5",
          "Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5",
          "Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5",
          "Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3Ne0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
          "Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4",
          "Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4",
          "Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
          "Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3",
          "Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
          "Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|01010101010101232454545454545454543232323232323232323232323232323232323232323262|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4",
          "Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5",
          "Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4",
          "Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5",
          "Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
          "Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5",
          "Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
          "Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5",
          "Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3",
          "Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6",
          "Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6",
          "Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4",
          "Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5",
          "Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5",
          "Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810|",
          "Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4",
          "Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
          "Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5",
          "Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4",
          "Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
          "Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5",
          "Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4",
          "Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
          "Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
          "Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0|10e5",
          "Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
          "Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4",
          "HST|HST|a0|0||",
          "Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2",
          "Indian/Cocos|+0630|-6u|0||596",
          "Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130",
          "Indian/Mahe|LMT +04|-3F.M -40|01|-2yO3F.M|79e3",
          "Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4",
          "Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4",
          "Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4",
          "Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3",
          "MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
          "MST|MST|70|0||",
          "MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600",
          "Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3",
          "Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4",
          "Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3",
          "Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3",
          "Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1",
          "Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483",
          "Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00|88e4",
          "Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3",
          "Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125",
          "Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4",
          "Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4",
          "Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4",
          "Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2",
          "Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2",
          "Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3",
          "Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2",
          "Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2",
          "Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3",
          "Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2",
          "Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|012134343434343434343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|25e4",
          "Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3",
          "Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56",
          "Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3",
          "Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3",
          "Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4",
          "Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3",
          "PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
          "WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|"
        ],
        links: [
          "Africa/Abidjan|Africa/Bamako",
          "Africa/Abidjan|Africa/Banjul",
          "Africa/Abidjan|Africa/Conakry",
          "Africa/Abidjan|Africa/Dakar",
          "Africa/Abidjan|Africa/Freetown",
          "Africa/Abidjan|Africa/Lome",
          "Africa/Abidjan|Africa/Nouakchott",
          "Africa/Abidjan|Africa/Ouagadougou",
          "Africa/Abidjan|Africa/Timbuktu",
          "Africa/Abidjan|Atlantic/St_Helena",
          "Africa/Cairo|Egypt",
          "Africa/Johannesburg|Africa/Maseru",
          "Africa/Johannesburg|Africa/Mbabane",
          "Africa/Lagos|Africa/Bangui",
          "Africa/Lagos|Africa/Brazzaville",
          "Africa/Lagos|Africa/Douala",
          "Africa/Lagos|Africa/Kinshasa",
          "Africa/Lagos|Africa/Libreville",
          "Africa/Lagos|Africa/Luanda",
          "Africa/Lagos|Africa/Malabo",
          "Africa/Lagos|Africa/Niamey",
          "Africa/Lagos|Africa/Porto-Novo",
          "Africa/Maputo|Africa/Blantyre",
          "Africa/Maputo|Africa/Bujumbura",
          "Africa/Maputo|Africa/Gaborone",
          "Africa/Maputo|Africa/Harare",
          "Africa/Maputo|Africa/Kigali",
          "Africa/Maputo|Africa/Lubumbashi",
          "Africa/Maputo|Africa/Lusaka",
          "Africa/Nairobi|Africa/Addis_Ababa",
          "Africa/Nairobi|Africa/Asmara",
          "Africa/Nairobi|Africa/Asmera",
          "Africa/Nairobi|Africa/Dar_es_Salaam",
          "Africa/Nairobi|Africa/Djibouti",
          "Africa/Nairobi|Africa/Kampala",
          "Africa/Nairobi|Africa/Mogadishu",
          "Africa/Nairobi|Indian/Antananarivo",
          "Africa/Nairobi|Indian/Comoro",
          "Africa/Nairobi|Indian/Mayotte",
          "Africa/Tripoli|Libya",
          "America/Adak|America/Atka",
          "America/Adak|US/Aleutian",
          "America/Anchorage|US/Alaska",
          "America/Argentina/Buenos_Aires|America/Buenos_Aires",
          "America/Argentina/Catamarca|America/Argentina/ComodRivadavia",
          "America/Argentina/Catamarca|America/Catamarca",
          "America/Argentina/Cordoba|America/Cordoba",
          "America/Argentina/Cordoba|America/Rosario",
          "America/Argentina/Jujuy|America/Jujuy",
          "America/Argentina/Mendoza|America/Mendoza",
          "America/Atikokan|America/Coral_Harbour",
          "America/Chicago|US/Central",
          "America/Curacao|America/Aruba",
          "America/Curacao|America/Kralendijk",
          "America/Curacao|America/Lower_Princes",
          "America/Denver|America/Shiprock",
          "America/Denver|Navajo",
          "America/Denver|US/Mountain",
          "America/Detroit|US/Michigan",
          "America/Edmonton|Canada/Mountain",
          "America/Fort_Wayne|America/Indiana/Indianapolis",
          "America/Fort_Wayne|America/Indianapolis",
          "America/Fort_Wayne|US/East-Indiana",
          "America/Godthab|America/Nuuk",
          "America/Halifax|Canada/Atlantic",
          "America/Havana|Cuba",
          "America/Indiana/Knox|America/Knox_IN",
          "America/Indiana/Knox|US/Indiana-Starke",
          "America/Jamaica|Jamaica",
          "America/Kentucky/Louisville|America/Louisville",
          "America/Los_Angeles|US/Pacific",
          "America/Los_Angeles|US/Pacific-New",
          "America/Manaus|Brazil/West",
          "America/Mazatlan|Mexico/BajaSur",
          "America/Mexico_City|Mexico/General",
          "America/New_York|US/Eastern",
          "America/Noronha|Brazil/DeNoronha",
          "America/Panama|America/Cayman",
          "America/Phoenix|US/Arizona",
          "America/Port_of_Spain|America/Anguilla",
          "America/Port_of_Spain|America/Antigua",
          "America/Port_of_Spain|America/Dominica",
          "America/Port_of_Spain|America/Grenada",
          "America/Port_of_Spain|America/Guadeloupe",
          "America/Port_of_Spain|America/Marigot",
          "America/Port_of_Spain|America/Montserrat",
          "America/Port_of_Spain|America/St_Barthelemy",
          "America/Port_of_Spain|America/St_Kitts",
          "America/Port_of_Spain|America/St_Lucia",
          "America/Port_of_Spain|America/St_Thomas",
          "America/Port_of_Spain|America/St_Vincent",
          "America/Port_of_Spain|America/Tortola",
          "America/Port_of_Spain|America/Virgin",
          "America/Regina|Canada/Saskatchewan",
          "America/Rio_Branco|America/Porto_Acre",
          "America/Rio_Branco|Brazil/Acre",
          "America/Santiago|Chile/Continental",
          "America/Sao_Paulo|Brazil/East",
          "America/St_Johns|Canada/Newfoundland",
          "America/Tijuana|America/Ensenada",
          "America/Tijuana|America/Santa_Isabel",
          "America/Tijuana|Mexico/BajaNorte",
          "America/Toronto|America/Montreal",
          "America/Toronto|Canada/Eastern",
          "America/Vancouver|Canada/Pacific",
          "America/Whitehorse|Canada/Yukon",
          "America/Winnipeg|Canada/Central",
          "Asia/Ashgabat|Asia/Ashkhabad",
          "Asia/Bangkok|Asia/Phnom_Penh",
          "Asia/Bangkok|Asia/Vientiane",
          "Asia/Dhaka|Asia/Dacca",
          "Asia/Dubai|Asia/Muscat",
          "Asia/Ho_Chi_Minh|Asia/Saigon",
          "Asia/Hong_Kong|Hongkong",
          "Asia/Jerusalem|Asia/Tel_Aviv",
          "Asia/Jerusalem|Israel",
          "Asia/Kathmandu|Asia/Katmandu",
          "Asia/Kolkata|Asia/Calcutta",
          "Asia/Kuala_Lumpur|Asia/Singapore",
          "Asia/Kuala_Lumpur|Singapore",
          "Asia/Macau|Asia/Macao",
          "Asia/Makassar|Asia/Ujung_Pandang",
          "Asia/Nicosia|Europe/Nicosia",
          "Asia/Qatar|Asia/Bahrain",
          "Asia/Rangoon|Asia/Yangon",
          "Asia/Riyadh|Asia/Aden",
          "Asia/Riyadh|Asia/Kuwait",
          "Asia/Seoul|ROK",
          "Asia/Shanghai|Asia/Chongqing",
          "Asia/Shanghai|Asia/Chungking",
          "Asia/Shanghai|Asia/Harbin",
          "Asia/Shanghai|PRC",
          "Asia/Taipei|ROC",
          "Asia/Tehran|Iran",
          "Asia/Thimphu|Asia/Thimbu",
          "Asia/Tokyo|Japan",
          "Asia/Ulaanbaatar|Asia/Ulan_Bator",
          "Asia/Urumqi|Asia/Kashgar",
          "Atlantic/Faroe|Atlantic/Faeroe",
          "Atlantic/Reykjavik|Iceland",
          "Atlantic/South_Georgia|Etc/GMT+2",
          "Australia/Adelaide|Australia/South",
          "Australia/Brisbane|Australia/Queensland",
          "Australia/Broken_Hill|Australia/Yancowinna",
          "Australia/Darwin|Australia/North",
          "Australia/Hobart|Australia/Tasmania",
          "Australia/Lord_Howe|Australia/LHI",
          "Australia/Melbourne|Australia/Victoria",
          "Australia/Perth|Australia/West",
          "Australia/Sydney|Australia/ACT",
          "Australia/Sydney|Australia/Canberra",
          "Australia/Sydney|Australia/NSW",
          "Etc/GMT-0|Etc/GMT",
          "Etc/GMT-0|Etc/GMT+0",
          "Etc/GMT-0|Etc/GMT0",
          "Etc/GMT-0|Etc/Greenwich",
          "Etc/GMT-0|GMT",
          "Etc/GMT-0|GMT+0",
          "Etc/GMT-0|GMT-0",
          "Etc/GMT-0|GMT0",
          "Etc/GMT-0|Greenwich",
          "Etc/UTC|Etc/UCT",
          "Etc/UTC|Etc/Universal",
          "Etc/UTC|Etc/Zulu",
          "Etc/UTC|UCT",
          "Etc/UTC|UTC",
          "Etc/UTC|Universal",
          "Etc/UTC|Zulu",
          "Europe/Belgrade|Europe/Ljubljana",
          "Europe/Belgrade|Europe/Podgorica",
          "Europe/Belgrade|Europe/Sarajevo",
          "Europe/Belgrade|Europe/Skopje",
          "Europe/Belgrade|Europe/Zagreb",
          "Europe/Chisinau|Europe/Tiraspol",
          "Europe/Dublin|Eire",
          "Europe/Helsinki|Europe/Mariehamn",
          "Europe/Istanbul|Asia/Istanbul",
          "Europe/Istanbul|Turkey",
          "Europe/Lisbon|Portugal",
          "Europe/London|Europe/Belfast",
          "Europe/London|Europe/Guernsey",
          "Europe/London|Europe/Isle_of_Man",
          "Europe/London|Europe/Jersey",
          "Europe/London|GB",
          "Europe/London|GB-Eire",
          "Europe/Moscow|W-SU",
          "Europe/Oslo|Arctic/Longyearbyen",
          "Europe/Oslo|Atlantic/Jan_Mayen",
          "Europe/Prague|Europe/Bratislava",
          "Europe/Rome|Europe/San_Marino",
          "Europe/Rome|Europe/Vatican",
          "Europe/Warsaw|Poland",
          "Europe/Zurich|Europe/Busingen",
          "Europe/Zurich|Europe/Vaduz",
          "Indian/Christmas|Etc/GMT-7",
          "Pacific/Auckland|Antarctica/McMurdo",
          "Pacific/Auckland|Antarctica/South_Pole",
          "Pacific/Auckland|NZ",
          "Pacific/Chatham|NZ-CHAT",
          "Pacific/Chuuk|Pacific/Truk",
          "Pacific/Chuuk|Pacific/Yap",
          "Pacific/Easter|Chile/EasterIsland",
          "Pacific/Guam|Pacific/Saipan",
          "Pacific/Honolulu|Pacific/Johnston",
          "Pacific/Honolulu|US/Hawaii",
          "Pacific/Kwajalein|Kwajalein",
          "Pacific/Pago_Pago|Pacific/Midway",
          "Pacific/Pago_Pago|Pacific/Samoa",
          "Pacific/Pago_Pago|US/Samoa",
          "Pacific/Palau|Etc/GMT-9",
          "Pacific/Pohnpei|Pacific/Ponape",
          "Pacific/Port_Moresby|Etc/GMT-10",
          "Pacific/Tarawa|Etc/GMT-12",
          "Pacific/Tarawa|Pacific/Funafuti",
          "Pacific/Tarawa|Pacific/Wake",
          "Pacific/Tarawa|Pacific/Wallis"
        ],
        countries: [
          "AD|Europe/Andorra",
          "AE|Asia/Dubai",
          "AF|Asia/Kabul",
          "AG|America/Port_of_Spain America/Antigua",
          "AI|America/Port_of_Spain America/Anguilla",
          "AL|Europe/Tirane",
          "AM|Asia/Yerevan",
          "AO|Africa/Lagos Africa/Luanda",
          "AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Pacific/Auckland Antarctica/McMurdo",
          "AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia",
          "AS|Pacific/Pago_Pago",
          "AT|Europe/Vienna",
          "AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla",
          "AW|America/Curacao America/Aruba",
          "AX|Europe/Helsinki Europe/Mariehamn",
          "AZ|Asia/Baku",
          "BA|Europe/Belgrade Europe/Sarajevo",
          "BB|America/Barbados",
          "BD|Asia/Dhaka",
          "BE|Europe/Brussels",
          "BF|Africa/Abidjan Africa/Ouagadougou",
          "BG|Europe/Sofia",
          "BH|Asia/Qatar Asia/Bahrain",
          "BI|Africa/Maputo Africa/Bujumbura",
          "BJ|Africa/Lagos Africa/Porto-Novo",
          "BL|America/Port_of_Spain America/St_Barthelemy",
          "BM|Atlantic/Bermuda",
          "BN|Asia/Brunei",
          "BO|America/La_Paz",
          "BQ|America/Curacao America/Kralendijk",
          "BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco",
          "BS|America/Nassau",
          "BT|Asia/Thimphu",
          "BW|Africa/Maputo Africa/Gaborone",
          "BY|Europe/Minsk",
          "BZ|America/Belize",
          "CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg America/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Vancouver America/Whitehorse America/Dawson",
          "CC|Indian/Cocos",
          "CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi",
          "CF|Africa/Lagos Africa/Bangui",
          "CG|Africa/Lagos Africa/Brazzaville",
          "CH|Europe/Zurich",
          "CI|Africa/Abidjan",
          "CK|Pacific/Rarotonga",
          "CL|America/Santiago America/Punta_Arenas Pacific/Easter",
          "CM|Africa/Lagos Africa/Douala",
          "CN|Asia/Shanghai Asia/Urumqi",
          "CO|America/Bogota",
          "CR|America/Costa_Rica",
          "CU|America/Havana",
          "CV|Atlantic/Cape_Verde",
          "CW|America/Curacao",
          "CX|Indian/Christmas",
          "CY|Asia/Nicosia Asia/Famagusta",
          "CZ|Europe/Prague",
          "DE|Europe/Zurich Europe/Berlin Europe/Busingen",
          "DJ|Africa/Nairobi Africa/Djibouti",
          "DK|Europe/Copenhagen",
          "DM|America/Port_of_Spain America/Dominica",
          "DO|America/Santo_Domingo",
          "DZ|Africa/Algiers",
          "EC|America/Guayaquil Pacific/Galapagos",
          "EE|Europe/Tallinn",
          "EG|Africa/Cairo",
          "EH|Africa/El_Aaiun",
          "ER|Africa/Nairobi Africa/Asmara",
          "ES|Europe/Madrid Africa/Ceuta Atlantic/Canary",
          "ET|Africa/Nairobi Africa/Addis_Ababa",
          "FI|Europe/Helsinki",
          "FJ|Pacific/Fiji",
          "FK|Atlantic/Stanley",
          "FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae",
          "FO|Atlantic/Faroe",
          "FR|Europe/Paris",
          "GA|Africa/Lagos Africa/Libreville",
          "GB|Europe/London",
          "GD|America/Port_of_Spain America/Grenada",
          "GE|Asia/Tbilisi",
          "GF|America/Cayenne",
          "GG|Europe/London Europe/Guernsey",
          "GH|Africa/Accra",
          "GI|Europe/Gibraltar",
          "GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule",
          "GM|Africa/Abidjan Africa/Banjul",
          "GN|Africa/Abidjan Africa/Conakry",
          "GP|America/Port_of_Spain America/Guadeloupe",
          "GQ|Africa/Lagos Africa/Malabo",
          "GR|Europe/Athens",
          "GS|Atlantic/South_Georgia",
          "GT|America/Guatemala",
          "GU|Pacific/Guam",
          "GW|Africa/Bissau",
          "GY|America/Guyana",
          "HK|Asia/Hong_Kong",
          "HN|America/Tegucigalpa",
          "HR|Europe/Belgrade Europe/Zagreb",
          "HT|America/Port-au-Prince",
          "HU|Europe/Budapest",
          "ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura",
          "IE|Europe/Dublin",
          "IL|Asia/Jerusalem",
          "IM|Europe/London Europe/Isle_of_Man",
          "IN|Asia/Kolkata",
          "IO|Indian/Chagos",
          "IQ|Asia/Baghdad",
          "IR|Asia/Tehran",
          "IS|Atlantic/Reykjavik",
          "IT|Europe/Rome",
          "JE|Europe/London Europe/Jersey",
          "JM|America/Jamaica",
          "JO|Asia/Amman",
          "JP|Asia/Tokyo",
          "KE|Africa/Nairobi",
          "KG|Asia/Bishkek",
          "KH|Asia/Bangkok Asia/Phnom_Penh",
          "KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati",
          "KM|Africa/Nairobi Indian/Comoro",
          "KN|America/Port_of_Spain America/St_Kitts",
          "KP|Asia/Pyongyang",
          "KR|Asia/Seoul",
          "KW|Asia/Riyadh Asia/Kuwait",
          "KY|America/Panama America/Cayman",
          "KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral",
          "LA|Asia/Bangkok Asia/Vientiane",
          "LB|Asia/Beirut",
          "LC|America/Port_of_Spain America/St_Lucia",
          "LI|Europe/Zurich Europe/Vaduz",
          "LK|Asia/Colombo",
          "LR|Africa/Monrovia",
          "LS|Africa/Johannesburg Africa/Maseru",
          "LT|Europe/Vilnius",
          "LU|Europe/Luxembourg",
          "LV|Europe/Riga",
          "LY|Africa/Tripoli",
          "MA|Africa/Casablanca",
          "MC|Europe/Monaco",
          "MD|Europe/Chisinau",
          "ME|Europe/Belgrade Europe/Podgorica",
          "MF|America/Port_of_Spain America/Marigot",
          "MG|Africa/Nairobi Indian/Antananarivo",
          "MH|Pacific/Majuro Pacific/Kwajalein",
          "MK|Europe/Belgrade Europe/Skopje",
          "ML|Africa/Abidjan Africa/Bamako",
          "MM|Asia/Yangon",
          "MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan",
          "MO|Asia/Macau",
          "MP|Pacific/Guam Pacific/Saipan",
          "MQ|America/Martinique",
          "MR|Africa/Abidjan Africa/Nouakchott",
          "MS|America/Port_of_Spain America/Montserrat",
          "MT|Europe/Malta",
          "MU|Indian/Mauritius",
          "MV|Indian/Maldives",
          "MW|Africa/Maputo Africa/Blantyre",
          "MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Bahia_Banderas",
          "MY|Asia/Kuala_Lumpur Asia/Kuching",
          "MZ|Africa/Maputo",
          "NA|Africa/Windhoek",
          "NC|Pacific/Noumea",
          "NE|Africa/Lagos Africa/Niamey",
          "NF|Pacific/Norfolk",
          "NG|Africa/Lagos",
          "NI|America/Managua",
          "NL|Europe/Amsterdam",
          "NO|Europe/Oslo",
          "NP|Asia/Kathmandu",
          "NR|Pacific/Nauru",
          "NU|Pacific/Niue",
          "NZ|Pacific/Auckland Pacific/Chatham",
          "OM|Asia/Dubai Asia/Muscat",
          "PA|America/Panama",
          "PE|America/Lima",
          "PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier",
          "PG|Pacific/Port_Moresby Pacific/Bougainville",
          "PH|Asia/Manila",
          "PK|Asia/Karachi",
          "PL|Europe/Warsaw",
          "PM|America/Miquelon",
          "PN|Pacific/Pitcairn",
          "PR|America/Puerto_Rico",
          "PS|Asia/Gaza Asia/Hebron",
          "PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores",
          "PW|Pacific/Palau",
          "PY|America/Asuncion",
          "QA|Asia/Qatar",
          "RE|Indian/Reunion",
          "RO|Europe/Bucharest",
          "RS|Europe/Belgrade",
          "RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Astrakhan Europe/Volgograd Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr",
          "RW|Africa/Maputo Africa/Kigali",
          "SA|Asia/Riyadh",
          "SB|Pacific/Guadalcanal",
          "SC|Indian/Mahe",
          "SD|Africa/Khartoum",
          "SE|Europe/Stockholm",
          "SG|Asia/Singapore",
          "SH|Africa/Abidjan Atlantic/St_Helena",
          "SI|Europe/Belgrade Europe/Ljubljana",
          "SJ|Europe/Oslo Arctic/Longyearbyen",
          "SK|Europe/Prague Europe/Bratislava",
          "SL|Africa/Abidjan Africa/Freetown",
          "SM|Europe/Rome Europe/San_Marino",
          "SN|Africa/Abidjan Africa/Dakar",
          "SO|Africa/Nairobi Africa/Mogadishu",
          "SR|America/Paramaribo",
          "SS|Africa/Juba",
          "ST|Africa/Sao_Tome",
          "SV|America/El_Salvador",
          "SX|America/Curacao America/Lower_Princes",
          "SY|Asia/Damascus",
          "SZ|Africa/Johannesburg Africa/Mbabane",
          "TC|America/Grand_Turk",
          "TD|Africa/Ndjamena",
          "TF|Indian/Reunion Indian/Kerguelen",
          "TG|Africa/Abidjan Africa/Lome",
          "TH|Asia/Bangkok",
          "TJ|Asia/Dushanbe",
          "TK|Pacific/Fakaofo",
          "TL|Asia/Dili",
          "TM|Asia/Ashgabat",
          "TN|Africa/Tunis",
          "TO|Pacific/Tongatapu",
          "TR|Europe/Istanbul",
          "TT|America/Port_of_Spain",
          "TV|Pacific/Funafuti",
          "TW|Asia/Taipei",
          "TZ|Africa/Nairobi Africa/Dar_es_Salaam",
          "UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye",
          "UG|Africa/Nairobi Africa/Kampala",
          "UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway",
          "US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu",
          "UY|America/Montevideo",
          "UZ|Asia/Samarkand Asia/Tashkent",
          "VA|Europe/Rome Europe/Vatican",
          "VC|America/Port_of_Spain America/St_Vincent",
          "VE|America/Caracas",
          "VG|America/Port_of_Spain America/Tortola",
          "VI|America/Port_of_Spain America/St_Thomas",
          "VN|Asia/Bangkok Asia/Ho_Chi_Minh",
          "VU|Pacific/Efate",
          "WF|Pacific/Wallis",
          "WS|Pacific/Apia",
          "YE|Asia/Riyadh Asia/Aden",
          "YT|Africa/Nairobi Indian/Mayotte",
          "ZA|Africa/Johannesburg",
          "ZM|Africa/Maputo Africa/Lusaka",
          "ZW|Africa/Maputo Africa/Harare"
        ]
      };
    }
  });

  // node_modules/moment-timezone/index.js
  var require_moment_timezone2 = __commonJS({
    "node_modules/moment-timezone/index.js"(exports2, module2) {
      var moment4 = module2.exports = require_moment_timezone();
      moment4.tz.load(require_latest());
    }
  });

  // packages/systems/dynamo/utils/ParamFieldPathUtils/index.ts
  var SEPARATOR, isFieldOfItemRef, getValueFieldSlug, getItemRefSlug, createFieldPath;
  var init_ParamFieldPathUtils = __esm({
    "packages/systems/dynamo/utils/ParamFieldPathUtils/index.ts"() {
      "use strict";
      SEPARATOR = ":";
      isFieldOfItemRef = (fieldPath) => fieldPath.indexOf(SEPARATOR) !== -1;
      getValueFieldSlug = (fieldPath) => {
        const splitPath = fieldPath.split(SEPARATOR);
        return splitPath[splitPath.length - 1];
      };
      getItemRefSlug = (fieldPath) => {
        if (isFieldOfItemRef(fieldPath)) {
          const splitPath = fieldPath.split(SEPARATOR);
          return splitPath[0];
        }
        return null;
      };
      createFieldPath = (...fieldSlugs) => fieldSlugs.join(SEPARATOR);
    }
  });

  // packages/systems/dynamo/utils/FilterUtils/FilterUtils.ts
  var convertConditionFieldsFromObjectToArray, normalizeConditionFields;
  var init_FilterUtils = __esm({
    "packages/systems/dynamo/utils/FilterUtils/FilterUtils.ts"() {
      "use strict";
      init_utils2();
      convertConditionFieldsFromObjectToArray = (fields) => {
        const mapper = (fieldPath) => {
          const type = fields[fieldPath].type;
          return Object.entries(fields[fieldPath]).reduce(
            (conditionFields, [operatorName, value2]) => {
              if (operatorName === "type") {
                return conditionFields;
              }
              conditionFields.push({ fieldPath, operatorName, value: value2, type });
              return conditionFields;
            },
            []
          );
        };
        return flatMap(mapper)(Object.keys(fields));
      };
      normalizeConditionFields = (fields = []) => {
        if (Array.isArray(fields)) {
          return fields;
        }
        return convertConditionFieldsFromObjectToArray(fields);
      };
    }
  });

  // packages/systems/dynamo/utils/FilterUtils/index.ts
  var init_FilterUtils2 = __esm({
    "packages/systems/dynamo/utils/FilterUtils/index.ts"() {
      "use strict";
      init_FilterUtils();
    }
  });

  // packages/systems/dynamo/utils/DynamoConditionUtils/index.ts
  function test(itemData, conditionData, timezone) {
    const conditionFields = normalizeConditionFields(conditionData.fields);
    for (const conditionField of conditionFields) {
      const result2 = testSingleCondition({
        conditionField,
        itemData,
        timezone
      });
      if (!result2) {
        return false;
      }
    }
    return true;
  }
  function testSingleCondition({
    conditionField,
    itemData,
    timezone
  }) {
    const { fieldPath, operatorName, value: value2, type } = conditionField;
    const opFn = OPERATOR_FNS[operatorName];
    if (!opFn) {
      console.warn(`Ignoring unsupported condition operator: ${operatorName}`);
      return true;
    }
    const itemFieldValue = itemData.hasOwnProperty(fieldPath) ? itemData[fieldPath] : getItemFieldValue(itemData, fieldPath);
    const itemFieldType = type ? convertFieldTypeToLegacyItemType(type) : _getLegacyItemType(fieldPath, itemFieldValue);
    const resolvedFieldValue = castItemFieldValue(itemFieldValue, itemFieldType);
    const resolvedConditionValue = castConditionValue(
      value2,
      operatorName,
      itemFieldType,
      timezone
    );
    return opFn(resolvedFieldValue, resolvedConditionValue);
  }
  function castItemValue({
    operator,
    value: value2,
    type,
    timezone
  }) {
    if (value2 !== void 0) {
      switch (type) {
        case "Bool":
          return function() {
            if (typeof value2 === "boolean") {
              return value2;
            } else if (typeof value2 === "string") {
              return value2.toLowerCase() === "true";
            } else {
              return Boolean(value2);
            }
          }();
        case "Number":
          return parseFloat(value2);
        case "Date":
          return parseDate({ operator, value: value2, timezone });
        default:
          return value2;
      }
    } else {
      return value2;
    }
  }
  function castConditionValue(value2, op, type, timezone) {
    if (op === "exists") {
      return value2;
    } else {
      return castItemValue({ operator: op, timezone, type, value: value2 });
    }
  }
  function handleDeprecatedParseDate({
    value: value2,
    timezone,
    momentNowUtc
  }) {
    function getToday() {
      return momentNowUtc.tz(timezone).startOf("day");
    }
    function getEndOfToday() {
      return momentNowUtc.tz(timezone).endOf("day");
    }
    function getNow() {
      return momentNowUtc.tz(timezone);
    }
    const simpleResults = value2.match(DEPRECATED_END_OF_TOMORROW_YESTERDAY_REGEX);
    if (simpleResults) {
      const [, endOf, relativeDate] = simpleResults;
      const getStart = endOf ? getEndOfToday : getToday;
      if (relativeDate === "tomorrow") {
        return getStart().add(1, "day").toDate();
      }
      if (relativeDate === "yesterday") {
        return getStart().subtract(1, "day").toDate();
      }
    }
    const complexResults = value2.match(DEPRECATED_RELATIVE_TIME_COMPLEX_REGEX);
    if (complexResults) {
      const [, values2, mode, endOf, relativeDate] = complexResults;
      const getStart = endOf ? getEndOfToday : getToday;
      let time2;
      switch (relativeDate) {
        case "today":
          time2 = getStart();
          break;
        case "tomorrow":
          time2 = getStart().add(1, "day");
          break;
        case "yesterday":
          time2 = getStart().subtract(1, "day");
          break;
        default:
          time2 = getNow();
          break;
      }
      const timeLengthIntervalItems = values2.match(
        FULL_TIME_LENGTH_INTERVAL_STRING_REGEX
      );
      if (!timeLengthIntervalItems) {
        return null;
      }
      const method = mode === "from now" ? "add" : "subtract";
      timeLengthIntervalItems.forEach((item) => {
        const [length2, interval] = item.split(" ");
        time2[method](parseInt(length2, 10), interval);
      });
      return time2.toDate();
    }
  }
  function parseDate({
    operator,
    value: value2,
    timezone = "UTC",
    nowUtcString
  }) {
    const momentNowUtc = nowUtcString ? import_moment_timezone.default.utc(nowUtcString) : import_moment_timezone.default.utc();
    function getToday() {
      return momentNowUtc.tz(timezone).startOf("day");
    }
    function getEndOfToday() {
      return momentNowUtc.tz(timezone).endOf("day");
    }
    function getNow() {
      return momentNowUtc.tz(timezone);
    }
    const stringValue = String(value2).toLowerCase();
    if (NOW_REGEX.test(stringValue)) {
      return getNow().toDate();
    }
    if (isDeprecatedDatePattern(stringValue)) {
      return handleDeprecatedParseDate({
        value: stringValue,
        timezone,
        momentNowUtc
      });
    }
    const simpleResults = stringValue.match(END_OF_TODAY_REGEX);
    if (simpleResults) {
      const [, endOf] = simpleResults;
      return endOf ? getEndOfToday().toDate() : getToday().toDate();
    }
    const complexResults = stringValue.match(RELATIVE_TIME_COMPLEX_REGEX);
    if (complexResults) {
      const [, fullTimeLengthIntervalString, tense] = complexResults;
      const timeLengthIntervalItems = fullTimeLengthIntervalString.match(
        FULL_TIME_LENGTH_INTERVAL_STRING_REGEX
      );
      if (!timeLengthIntervalItems) {
        return null;
      }
      const getStart = operator && operator === OPERATOR_LTE_NAME ? getEndOfToday : getToday;
      const TENSE_METHODS_MAP = {
        future: "add",
        past: "subtract"
      };
      const tenseMethod = TENSE_METHODS_MAP[tense];
      const reducedDateTime = timeLengthIntervalItems.reduce(
        (accumulatedMoment, item) => {
          const [length2, interval] = item.split(" ");
          return accumulatedMoment[tenseMethod](
            // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
            parseInt(length2, 10),
            interval
          );
        },
        getStart()
      );
      return reducedDateTime.toDate();
    }
    const isoMoment = import_moment_timezone.default.utc(value2, import_moment_timezone.default.ISO_8601).tz(timezone);
    if (!isoMoment || !isoMoment.isValid()) {
      return null;
    }
    return isoMoment.toDate();
  }
  function castItemFieldValue(fieldValue, fieldType) {
    switch (fieldType) {
      case "CommercePrice": {
        return fieldValue !== null && typeof fieldValue === "object" && typeof fieldValue.value === "number" ? fieldValue.value / 100 : NaN;
      }
      case "ItemRef": {
        return fieldValue !== null && typeof fieldValue === "object" ? fieldValue._id : fieldValue;
      }
      case "ItemRefSet": {
        return Array.isArray(fieldValue) ? fieldValue.map(function(itemRef) {
          return itemRef._id;
        }) : [];
      }
      case "Option": {
        return fieldValue !== null && typeof fieldValue === "object" ? fieldValue.id : fieldValue;
      }
      case "Number": {
        return fieldValue === null ? NaN : fieldValue;
      }
      default: {
        return fieldValue;
      }
    }
  }
  function getItemFieldValue(itemData, fieldPath) {
    const itemRefSlug = getItemRefSlug(fieldPath);
    const valueFieldSlug = getValueFieldSlug(fieldPath);
    return itemRefSlug ? itemData[itemRefSlug] && itemData[itemRefSlug][valueFieldSlug] : itemData[valueFieldSlug];
  }
  function convertFieldTypeToLegacyItemType(fieldType) {
    switch (fieldType) {
      case "Bool":
      case "CommercePrice":
      case "Date":
      case "ImageRef":
      case "ItemRef":
      case "ItemRefSet":
      case "Number":
      case "Option":
      case "Set": {
        return fieldType;
      }
      case "FileRef":
      case "Video": {
        return "ImageRef";
      }
      case "Email":
      case "Phone":
      case "PlainText":
      case "RichText":
      case "Link": {
        return "String";
      }
      default: {
        return "String";
      }
    }
  }
  function _getLegacyItemType(name2, value2) {
    if (name2 === "_id") {
      return "Id";
    } else {
      switch (typeof value2) {
        case "number":
          return "Number";
        case "boolean":
          return "Bool";
        case "object":
          return function() {
            if (value2) {
              if (value2 instanceof Date) {
                return "Date";
              } else if ("_id" in value2 && "_cid" in value2) {
                return "ItemRef";
              } else if (Array.isArray(value2)) {
                return "ItemRefSet";
              } else if ("url" in value2) {
                return "ImageRef";
              } else if ("value" in value2 && "unit" in value2) {
                return "CommercePrice";
              } else {
                return "Option";
              }
            } else {
              return "Option";
            }
          }();
        default:
          return "String";
      }
    }
  }
  var import_moment_timezone, EXAMPLE_IMG_URL, OPERATOR_FNS, containsResolver, OPERATOR_LTE_NAME, NOW_REGEX, END_OF_TODAY_REGEX, DEPRECATED_END_OF_TOMORROW_YESTERDAY_REGEX, DEPRECATED_RELATIVE_TIME_COMPLEX_REGEX, RELATIVE_TIME_COMPLEX_REGEX, FULL_TIME_LENGTH_INTERVAL_STRING_REGEX, isDeprecatedDatePattern;
  var init_DynamoConditionUtils = __esm({
    "packages/systems/dynamo/utils/DynamoConditionUtils/index.ts"() {
      "use strict";
      import_moment_timezone = __toESM(require_moment_timezone2());
      init_ParamFieldPathUtils();
      init_FilterUtils2();
      EXAMPLE_IMG_URL = "https://d3e54v103j8qbb.cloudfront.net/img/image-placeholder.svg";
      OPERATOR_FNS = {
        eq: function(a, b) {
          return a == b;
        },
        ne: function(a, b) {
          return a != b;
        },
        gt: function(a, b) {
          return a > b;
        },
        lt: function(a, b) {
          return a < b;
        },
        gte: function(a, b) {
          return a >= b;
        },
        lte: function(a, b) {
          return a <= b;
        },
        exists: function(a, b) {
          function getATruthiness() {
            if (a != null) {
              if (Array.isArray(a)) {
                return a.length > 0;
              } else if (typeof a === "object") {
                return !("url" in a) || a.url !== EXAMPLE_IMG_URL;
              } else if (typeof a === "number") {
                return !Number.isNaN(a);
              } else {
                return true;
              }
            } else {
              return false;
            }
          }
          function getBTruthiness() {
            return b === "yes";
          }
          const aIsTruthy = getATruthiness();
          const bIsTruthy = getBTruthiness();
          return aIsTruthy === bIsTruthy;
        },
        idin: function(a, b) {
          return containsResolver(a, b);
        },
        idnin: function(a, b) {
          return !containsResolver(a, b);
        },
        type: false
        // ensure the `type` property will never resolve to a function
      };
      containsResolver = (a, b) => {
        if (Array.isArray(a) && typeof b === "string") {
          return a.includes(b);
        }
        if (Array.isArray(a) && Array.isArray(b)) {
          return b.some((id) => a.includes(id));
        }
        if (typeof a === "string" && Array.isArray(b)) {
          return b.includes(a);
        }
        return false;
      };
      OPERATOR_LTE_NAME = "lte";
      NOW_REGEX = /^now$/i;
      END_OF_TODAY_REGEX = /^(end of )?(today)$/i;
      DEPRECATED_END_OF_TOMORROW_YESTERDAY_REGEX = /^(end of )?(tomorrow|yesterday)$/i;
      DEPRECATED_RELATIVE_TIME_COMPLEX_REGEX = /^((?:\d+ (?:year|quarter|month|week|day|hour|minute|second)s? )+)(ago|from now)(?: (?:starting (?:now|(?:(end of )?(today|yesterday|tomorrow)))))?$/i;
      RELATIVE_TIME_COMPLEX_REGEX = /^((?:\d+ (?:year|quarter|month|week|day|hour|minute|second)s? )+)in the (future|past)$/i;
      FULL_TIME_LENGTH_INTERVAL_STRING_REGEX = /\d+ (?:year|quarter|month|week|day|hour|minute|second)s?/gi;
      isDeprecatedDatePattern = (str) => DEPRECATED_END_OF_TOMORROW_YESTERDAY_REGEX.test(str) || DEPRECATED_RELATIVE_TIME_COMPLEX_REGEX.test(str);
    }
  });

  // node_modules/lodash/_baseInverter.js
  var require_baseInverter = __commonJS({
    "node_modules/lodash/_baseInverter.js"(exports2, module2) {
      var baseForOwn = require_baseForOwn();
      function baseInverter(object, setter, iteratee, accumulator) {
        baseForOwn(object, function(value2, key2, object2) {
          setter(accumulator, iteratee(value2), key2, object2);
        });
        return accumulator;
      }
      module2.exports = baseInverter;
    }
  });

  // node_modules/lodash/_createInverter.js
  var require_createInverter = __commonJS({
    "node_modules/lodash/_createInverter.js"(exports2, module2) {
      var baseInverter = require_baseInverter();
      function createInverter(setter, toIteratee) {
        return function(object, iteratee) {
          return baseInverter(object, setter, toIteratee(iteratee), {});
        };
      }
      module2.exports = createInverter;
    }
  });

  // node_modules/lodash/invert.js
  var require_invert = __commonJS({
    "node_modules/lodash/invert.js"(exports2, module2) {
      var constant2 = require_constant();
      var createInverter = require_createInverter();
      var identity3 = require_identity();
      var objectProto = Object.prototype;
      var nativeObjectToString = objectProto.toString;
      var invert2 = createInverter(function(result2, value2, key2) {
        if (value2 != null && typeof value2.toString != "function") {
          value2 = nativeObjectToString.call(value2);
        }
        result2[value2] = key2;
      }, constant2(identity3));
      module2.exports = invert2;
    }
  });

  // packages/systems/dynamo/utils/SchemaEncoder/SchemaEncoder.ts
  function _crapCode(str) {
    str = String(str);
    const right = [];
    const left = str.replace(/[^a-z0-9]/gi, (substr2, idx) => {
      const hex = substr2.charCodeAt(0).toString(16);
      const letters = hex.replace(/./g, (ch) => hex_lookup[ch]);
      right.push(String(idx) + letters);
      return "_";
    });
    return left + "_" + right.join("");
  }
  var import_invert, hex_lookup, reverse_hex_lookup, fieldSlug;
  var init_SchemaEncoder = __esm({
    "packages/systems/dynamo/utils/SchemaEncoder/SchemaEncoder.ts"() {
      "use strict";
      import_invert = __toESM(require_invert());
      hex_lookup = {
        "0": "b",
        "1": "c",
        "2": "d",
        "3": "f",
        "4": "g",
        "5": "h",
        "6": "j",
        "7": "k",
        "8": "l",
        "9": "m",
        a: "n",
        b: "p",
        c: "q",
        d: "r",
        e: "s",
        f: "t"
      };
      reverse_hex_lookup = (0, import_invert.default)(hex_lookup);
      fieldSlug = (field) => "f_" + _crapCode(field.slug);
    }
  });

  // packages/systems/dynamo/utils/SchemaEncoder/index.ts
  var init_SchemaEncoder2 = __esm({
    "packages/systems/dynamo/utils/SchemaEncoder/index.ts"() {
      "use strict";
      init_SchemaEncoder();
    }
  });

  // packages/systems/dynamo/utils/SlugUtils/SlugUtils.ts
  var fieldSlug2, DYNAMO_GQL_FIELD_SLUG, isDynamoGraphQLFieldSlug;
  var init_SlugUtils = __esm({
    "packages/systems/dynamo/utils/SlugUtils/SlugUtils.ts"() {
      "use strict";
      init_SchemaEncoder2();
      init_SchemaEncoder2();
      fieldSlug2 = (slug) => fieldSlug({ slug });
      DYNAMO_GQL_FIELD_SLUG = "f_";
      isDynamoGraphQLFieldSlug = (str) => str.startsWith(DYNAMO_GQL_FIELD_SLUG);
    }
  });

  // packages/systems/dynamo/utils/SlugUtils/index.ts
  var init_SlugUtils2 = __esm({
    "packages/systems/dynamo/utils/SlugUtils/index.ts"() {
      "use strict";
      init_SlugUtils();
    }
  });

  // node_modules/reselect/lib/index.js
  var require_lib3 = __commonJS({
    "node_modules/reselect/lib/index.js"(exports2) {
      "use strict";
      exports2.__esModule = true;
      exports2.defaultMemoize = defaultMemoize2;
      exports2.createSelectorCreator = createSelectorCreator;
      exports2.createSelector = createSelector;
      exports2.createStructuredSelector = createStructuredSelector;
      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++)
            arr2[i] = arr[i];
          return arr2;
        } else {
          return Array.from(arr);
        }
      }
      function defaultEqualityCheck(a, b) {
        return a === b;
      }
      function defaultMemoize2(func) {
        var equalityCheck = arguments.length <= 1 || arguments[1] === void 0 ? defaultEqualityCheck : arguments[1];
        var lastArgs = null;
        var lastResult = null;
        return function() {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          if (lastArgs !== null && lastArgs.length === args.length && args.every(function(value2, index2) {
            return equalityCheck(value2, lastArgs[index2]);
          })) {
            return lastResult;
          }
          lastArgs = args;
          lastResult = func.apply(void 0, args);
          return lastResult;
        };
      }
      function getDependencies(funcs) {
        var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;
        if (!dependencies.every(function(dep2) {
          return typeof dep2 === "function";
        })) {
          var dependencyTypes = dependencies.map(function(dep2) {
            return typeof dep2;
          }).join(", ");
          throw new Error("Selector creators expect all input-selectors to be functions, " + ("instead received the following types: [" + dependencyTypes + "]"));
        }
        return dependencies;
      }
      function createSelectorCreator(memoize2) {
        for (var _len2 = arguments.length, memoizeOptions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          memoizeOptions[_key2 - 1] = arguments[_key2];
        }
        return function() {
          for (var _len3 = arguments.length, funcs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            funcs[_key3] = arguments[_key3];
          }
          var recomputations = 0;
          var resultFunc = funcs.pop();
          var dependencies = getDependencies(funcs);
          var memoizedResultFunc = memoize2.apply(void 0, [function() {
            recomputations++;
            return resultFunc.apply(void 0, arguments);
          }].concat(memoizeOptions));
          var selector = function selector2(state, props) {
            for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {
              args[_key4 - 2] = arguments[_key4];
            }
            var params = dependencies.map(function(dependency) {
              return dependency.apply(void 0, [state, props].concat(args));
            });
            return memoizedResultFunc.apply(void 0, _toConsumableArray(params));
          };
          selector.recomputations = function() {
            return recomputations;
          };
          selector.resetRecomputations = function() {
            return recomputations = 0;
          };
          return selector;
        };
      }
      function createSelector() {
        return createSelectorCreator(defaultMemoize2).apply(void 0, arguments);
      }
      function createStructuredSelector(selectors) {
        var selectorCreator = arguments.length <= 1 || arguments[1] === void 0 ? createSelector : arguments[1];
        if (typeof selectors !== "object") {
          throw new Error("createStructuredSelector expects first argument to be an object " + ("where each property is a selector, instead received a " + typeof selectors));
        }
        var objectKeys = Object.keys(selectors);
        return selectorCreator(objectKeys.map(function(key2) {
          return selectors[key2];
        }), function() {
          for (var _len5 = arguments.length, values2 = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            values2[_key5] = arguments[_key5];
          }
          return values2.reduce(function(composition, value2, index2) {
            composition[objectKeys[index2]] = value2;
            return composition;
          }, {});
        });
      }
    }
  });

  // node_modules/yallist/iterator.js
  var require_iterator = __commonJS({
    "node_modules/yallist/iterator.js"(exports2, module2) {
      "use strict";
      module2.exports = function(Yallist) {
        Yallist.prototype[Symbol.iterator] = function* () {
          for (let walker = this.head; walker; walker = walker.next) {
            yield walker.value;
          }
        };
      };
    }
  });

  // node_modules/yallist/yallist.js
  var require_yallist = __commonJS({
    "node_modules/yallist/yallist.js"(exports2, module2) {
      "use strict";
      module2.exports = Yallist;
      Yallist.Node = Node;
      Yallist.create = Yallist;
      function Yallist(list) {
        var self2 = this;
        if (!(self2 instanceof Yallist)) {
          self2 = new Yallist();
        }
        self2.tail = null;
        self2.head = null;
        self2.length = 0;
        if (list && typeof list.forEach === "function") {
          list.forEach(function(item) {
            self2.push(item);
          });
        } else if (arguments.length > 0) {
          for (var i = 0, l = arguments.length; i < l; i++) {
            self2.push(arguments[i]);
          }
        }
        return self2;
      }
      Yallist.prototype.removeNode = function(node) {
        if (node.list !== this) {
          throw new Error("removing node which does not belong to this list");
        }
        var next = node.next;
        var prev = node.prev;
        if (next) {
          next.prev = prev;
        }
        if (prev) {
          prev.next = next;
        }
        if (node === this.head) {
          this.head = next;
        }
        if (node === this.tail) {
          this.tail = prev;
        }
        node.list.length--;
        node.next = null;
        node.prev = null;
        node.list = null;
        return next;
      };
      Yallist.prototype.unshiftNode = function(node) {
        if (node === this.head) {
          return;
        }
        if (node.list) {
          node.list.removeNode(node);
        }
        var head = this.head;
        node.list = this;
        node.next = head;
        if (head) {
          head.prev = node;
        }
        this.head = node;
        if (!this.tail) {
          this.tail = node;
        }
        this.length++;
      };
      Yallist.prototype.pushNode = function(node) {
        if (node === this.tail) {
          return;
        }
        if (node.list) {
          node.list.removeNode(node);
        }
        var tail = this.tail;
        node.list = this;
        node.prev = tail;
        if (tail) {
          tail.next = node;
        }
        this.tail = node;
        if (!this.head) {
          this.head = node;
        }
        this.length++;
      };
      Yallist.prototype.push = function() {
        for (var i = 0, l = arguments.length; i < l; i++) {
          push(this, arguments[i]);
        }
        return this.length;
      };
      Yallist.prototype.unshift = function() {
        for (var i = 0, l = arguments.length; i < l; i++) {
          unshift(this, arguments[i]);
        }
        return this.length;
      };
      Yallist.prototype.pop = function() {
        if (!this.tail) {
          return void 0;
        }
        var res = this.tail.value;
        this.tail = this.tail.prev;
        if (this.tail) {
          this.tail.next = null;
        } else {
          this.head = null;
        }
        this.length--;
        return res;
      };
      Yallist.prototype.shift = function() {
        if (!this.head) {
          return void 0;
        }
        var res = this.head.value;
        this.head = this.head.next;
        if (this.head) {
          this.head.prev = null;
        } else {
          this.tail = null;
        }
        this.length--;
        return res;
      };
      Yallist.prototype.forEach = function(fn, thisp) {
        thisp = thisp || this;
        for (var walker = this.head, i = 0; walker !== null; i++) {
          fn.call(thisp, walker.value, i, this);
          walker = walker.next;
        }
      };
      Yallist.prototype.forEachReverse = function(fn, thisp) {
        thisp = thisp || this;
        for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {
          fn.call(thisp, walker.value, i, this);
          walker = walker.prev;
        }
      };
      Yallist.prototype.get = function(n) {
        for (var i = 0, walker = this.head; walker !== null && i < n; i++) {
          walker = walker.next;
        }
        if (i === n && walker !== null) {
          return walker.value;
        }
      };
      Yallist.prototype.getReverse = function(n) {
        for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {
          walker = walker.prev;
        }
        if (i === n && walker !== null) {
          return walker.value;
        }
      };
      Yallist.prototype.map = function(fn, thisp) {
        thisp = thisp || this;
        var res = new Yallist();
        for (var walker = this.head; walker !== null; ) {
          res.push(fn.call(thisp, walker.value, this));
          walker = walker.next;
        }
        return res;
      };
      Yallist.prototype.mapReverse = function(fn, thisp) {
        thisp = thisp || this;
        var res = new Yallist();
        for (var walker = this.tail; walker !== null; ) {
          res.push(fn.call(thisp, walker.value, this));
          walker = walker.prev;
        }
        return res;
      };
      Yallist.prototype.reduce = function(fn, initial) {
        var acc;
        var walker = this.head;
        if (arguments.length > 1) {
          acc = initial;
        } else if (this.head) {
          walker = this.head.next;
          acc = this.head.value;
        } else {
          throw new TypeError("Reduce of empty list with no initial value");
        }
        for (var i = 0; walker !== null; i++) {
          acc = fn(acc, walker.value, i);
          walker = walker.next;
        }
        return acc;
      };
      Yallist.prototype.reduceReverse = function(fn, initial) {
        var acc;
        var walker = this.tail;
        if (arguments.length > 1) {
          acc = initial;
        } else if (this.tail) {
          walker = this.tail.prev;
          acc = this.tail.value;
        } else {
          throw new TypeError("Reduce of empty list with no initial value");
        }
        for (var i = this.length - 1; walker !== null; i--) {
          acc = fn(acc, walker.value, i);
          walker = walker.prev;
        }
        return acc;
      };
      Yallist.prototype.toArray = function() {
        var arr = new Array(this.length);
        for (var i = 0, walker = this.head; walker !== null; i++) {
          arr[i] = walker.value;
          walker = walker.next;
        }
        return arr;
      };
      Yallist.prototype.toArrayReverse = function() {
        var arr = new Array(this.length);
        for (var i = 0, walker = this.tail; walker !== null; i++) {
          arr[i] = walker.value;
          walker = walker.prev;
        }
        return arr;
      };
      Yallist.prototype.slice = function(from, to) {
        to = to || this.length;
        if (to < 0) {
          to += this.length;
        }
        from = from || 0;
        if (from < 0) {
          from += this.length;
        }
        var ret = new Yallist();
        if (to < from || to < 0) {
          return ret;
        }
        if (from < 0) {
          from = 0;
        }
        if (to > this.length) {
          to = this.length;
        }
        for (var i = 0, walker = this.head; walker !== null && i < from; i++) {
          walker = walker.next;
        }
        for (; walker !== null && i < to; i++, walker = walker.next) {
          ret.push(walker.value);
        }
        return ret;
      };
      Yallist.prototype.sliceReverse = function(from, to) {
        to = to || this.length;
        if (to < 0) {
          to += this.length;
        }
        from = from || 0;
        if (from < 0) {
          from += this.length;
        }
        var ret = new Yallist();
        if (to < from || to < 0) {
          return ret;
        }
        if (from < 0) {
          from = 0;
        }
        if (to > this.length) {
          to = this.length;
        }
        for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {
          walker = walker.prev;
        }
        for (; walker !== null && i > from; i--, walker = walker.prev) {
          ret.push(walker.value);
        }
        return ret;
      };
      Yallist.prototype.splice = function(start, deleteCount, ...nodes) {
        if (start > this.length) {
          start = this.length - 1;
        }
        if (start < 0) {
          start = this.length + start;
        }
        for (var i = 0, walker = this.head; walker !== null && i < start; i++) {
          walker = walker.next;
        }
        var ret = [];
        for (var i = 0; walker && i < deleteCount; i++) {
          ret.push(walker.value);
          walker = this.removeNode(walker);
        }
        if (walker === null) {
          walker = this.tail;
        }
        if (walker !== this.head && walker !== this.tail) {
          walker = walker.prev;
        }
        for (var i = 0; i < nodes.length; i++) {
          walker = insert(this, walker, nodes[i]);
        }
        return ret;
      };
      Yallist.prototype.reverse = function() {
        var head = this.head;
        var tail = this.tail;
        for (var walker = head; walker !== null; walker = walker.prev) {
          var p = walker.prev;
          walker.prev = walker.next;
          walker.next = p;
        }
        this.head = tail;
        this.tail = head;
        return this;
      };
      function insert(self2, node, value2) {
        var inserted = node === self2.head ? new Node(value2, null, node, self2) : new Node(value2, node, node.next, self2);
        if (inserted.next === null) {
          self2.tail = inserted;
        }
        if (inserted.prev === null) {
          self2.head = inserted;
        }
        self2.length++;
        return inserted;
      }
      function push(self2, item) {
        self2.tail = new Node(item, self2.tail, null, self2);
        if (!self2.head) {
          self2.head = self2.tail;
        }
        self2.length++;
      }
      function unshift(self2, item) {
        self2.head = new Node(item, null, self2.head, self2);
        if (!self2.tail) {
          self2.tail = self2.head;
        }
        self2.length++;
      }
      function Node(value2, prev, next, list) {
        if (!(this instanceof Node)) {
          return new Node(value2, prev, next, list);
        }
        this.list = list;
        this.value = value2;
        if (prev) {
          prev.next = this;
          this.prev = prev;
        } else {
          this.prev = null;
        }
        if (next) {
          next.prev = this;
          this.next = next;
        } else {
          this.next = null;
        }
      }
      try {
        require_iterator()(Yallist);
      } catch (er) {
      }
    }
  });

  // node_modules/lru-cache/index.js
  var require_lru_cache = __commonJS({
    "node_modules/lru-cache/index.js"(exports2, module2) {
      "use strict";
      var Yallist = require_yallist();
      var MAX = Symbol("max");
      var LENGTH = Symbol("length");
      var LENGTH_CALCULATOR = Symbol("lengthCalculator");
      var ALLOW_STALE = Symbol("allowStale");
      var MAX_AGE = Symbol("maxAge");
      var DISPOSE = Symbol("dispose");
      var NO_DISPOSE_ON_SET = Symbol("noDisposeOnSet");
      var LRU_LIST = Symbol("lruList");
      var CACHE = Symbol("cache");
      var UPDATE_AGE_ON_GET = Symbol("updateAgeOnGet");
      var naiveLength = () => 1;
      var LRUCache = class {
        constructor(options) {
          if (typeof options === "number")
            options = { max: options };
          if (!options)
            options = {};
          if (options.max && (typeof options.max !== "number" || options.max < 0))
            throw new TypeError("max must be a non-negative number");
          const max = this[MAX] = options.max || Infinity;
          const lc = options.length || naiveLength;
          this[LENGTH_CALCULATOR] = typeof lc !== "function" ? naiveLength : lc;
          this[ALLOW_STALE] = options.stale || false;
          if (options.maxAge && typeof options.maxAge !== "number")
            throw new TypeError("maxAge must be a number");
          this[MAX_AGE] = options.maxAge || 0;
          this[DISPOSE] = options.dispose;
          this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;
          this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;
          this.reset();
        }
        // resize the cache when the max changes.
        set max(mL) {
          if (typeof mL !== "number" || mL < 0)
            throw new TypeError("max must be a non-negative number");
          this[MAX] = mL || Infinity;
          trim2(this);
        }
        get max() {
          return this[MAX];
        }
        set allowStale(allowStale) {
          this[ALLOW_STALE] = !!allowStale;
        }
        get allowStale() {
          return this[ALLOW_STALE];
        }
        set maxAge(mA) {
          if (typeof mA !== "number")
            throw new TypeError("maxAge must be a non-negative number");
          this[MAX_AGE] = mA;
          trim2(this);
        }
        get maxAge() {
          return this[MAX_AGE];
        }
        // resize the cache when the lengthCalculator changes.
        set lengthCalculator(lC) {
          if (typeof lC !== "function")
            lC = naiveLength;
          if (lC !== this[LENGTH_CALCULATOR]) {
            this[LENGTH_CALCULATOR] = lC;
            this[LENGTH] = 0;
            this[LRU_LIST].forEach((hit) => {
              hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);
              this[LENGTH] += hit.length;
            });
          }
          trim2(this);
        }
        get lengthCalculator() {
          return this[LENGTH_CALCULATOR];
        }
        get length() {
          return this[LENGTH];
        }
        get itemCount() {
          return this[LRU_LIST].length;
        }
        rforEach(fn, thisp) {
          thisp = thisp || this;
          for (let walker = this[LRU_LIST].tail; walker !== null; ) {
            const prev = walker.prev;
            forEachStep(this, fn, walker, thisp);
            walker = prev;
          }
        }
        forEach(fn, thisp) {
          thisp = thisp || this;
          for (let walker = this[LRU_LIST].head; walker !== null; ) {
            const next = walker.next;
            forEachStep(this, fn, walker, thisp);
            walker = next;
          }
        }
        keys() {
          return this[LRU_LIST].toArray().map((k) => k.key);
        }
        values() {
          return this[LRU_LIST].toArray().map((k) => k.value);
        }
        reset() {
          if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {
            this[LRU_LIST].forEach((hit) => this[DISPOSE](hit.key, hit.value));
          }
          this[CACHE] = /* @__PURE__ */ new Map();
          this[LRU_LIST] = new Yallist();
          this[LENGTH] = 0;
        }
        dump() {
          return this[LRU_LIST].map((hit) => isStale(this, hit) ? false : {
            k: hit.key,
            v: hit.value,
            e: hit.now + (hit.maxAge || 0)
          }).toArray().filter((h) => h);
        }
        dumpLru() {
          return this[LRU_LIST];
        }
        set(key2, value2, maxAge) {
          maxAge = maxAge || this[MAX_AGE];
          if (maxAge && typeof maxAge !== "number")
            throw new TypeError("maxAge must be a number");
          const now = maxAge ? Date.now() : 0;
          const len = this[LENGTH_CALCULATOR](value2, key2);
          if (this[CACHE].has(key2)) {
            if (len > this[MAX]) {
              del(this, this[CACHE].get(key2));
              return false;
            }
            const node = this[CACHE].get(key2);
            const item = node.value;
            if (this[DISPOSE]) {
              if (!this[NO_DISPOSE_ON_SET])
                this[DISPOSE](key2, item.value);
            }
            item.now = now;
            item.maxAge = maxAge;
            item.value = value2;
            this[LENGTH] += len - item.length;
            item.length = len;
            this.get(key2);
            trim2(this);
            return true;
          }
          const hit = new Entry2(key2, value2, len, now, maxAge);
          if (hit.length > this[MAX]) {
            if (this[DISPOSE])
              this[DISPOSE](key2, value2);
            return false;
          }
          this[LENGTH] += hit.length;
          this[LRU_LIST].unshift(hit);
          this[CACHE].set(key2, this[LRU_LIST].head);
          trim2(this);
          return true;
        }
        has(key2) {
          if (!this[CACHE].has(key2))
            return false;
          const hit = this[CACHE].get(key2).value;
          return !isStale(this, hit);
        }
        get(key2) {
          return get8(this, key2, true);
        }
        peek(key2) {
          return get8(this, key2, false);
        }
        pop() {
          const node = this[LRU_LIST].tail;
          if (!node)
            return null;
          del(this, node);
          return node.value;
        }
        del(key2) {
          del(this, this[CACHE].get(key2));
        }
        load(arr) {
          this.reset();
          const now = Date.now();
          for (let l = arr.length - 1; l >= 0; l--) {
            const hit = arr[l];
            const expiresAt = hit.e || 0;
            if (expiresAt === 0)
              this.set(hit.k, hit.v);
            else {
              const maxAge = expiresAt - now;
              if (maxAge > 0) {
                this.set(hit.k, hit.v, maxAge);
              }
            }
          }
        }
        prune() {
          this[CACHE].forEach((value2, key2) => get8(this, key2, false));
        }
      };
      var get8 = (self2, key2, doUse) => {
        const node = self2[CACHE].get(key2);
        if (node) {
          const hit = node.value;
          if (isStale(self2, hit)) {
            del(self2, node);
            if (!self2[ALLOW_STALE])
              return void 0;
          } else {
            if (doUse) {
              if (self2[UPDATE_AGE_ON_GET])
                node.value.now = Date.now();
              self2[LRU_LIST].unshiftNode(node);
            }
          }
          return hit.value;
        }
      };
      var isStale = (self2, hit) => {
        if (!hit || !hit.maxAge && !self2[MAX_AGE])
          return false;
        const diff = Date.now() - hit.now;
        return hit.maxAge ? diff > hit.maxAge : self2[MAX_AGE] && diff > self2[MAX_AGE];
      };
      var trim2 = (self2) => {
        if (self2[LENGTH] > self2[MAX]) {
          for (let walker = self2[LRU_LIST].tail; self2[LENGTH] > self2[MAX] && walker !== null; ) {
            const prev = walker.prev;
            del(self2, walker);
            walker = prev;
          }
        }
      };
      var del = (self2, node) => {
        if (node) {
          const hit = node.value;
          if (self2[DISPOSE])
            self2[DISPOSE](hit.key, hit.value);
          self2[LENGTH] -= hit.length;
          self2[CACHE].delete(hit.key);
          self2[LRU_LIST].removeNode(node);
        }
      };
      var Entry2 = class {
        constructor(key2, value2, length2, now, maxAge) {
          this.key = key2;
          this.value = value2;
          this.length = length2;
          this.now = now;
          this.maxAge = maxAge || 0;
        }
      };
      var forEachStep = (self2, fn, node, thisp) => {
        let hit = node.value;
        if (isStale(self2, hit)) {
          del(self2, node);
          if (!self2[ALLOW_STALE])
            hit = void 0;
        }
        if (hit)
          fn.call(thisp, hit.value, hit.key, self2);
      };
      module2.exports = LRUCache;
    }
  });

  // node_modules/lodash/isBoolean.js
  var require_isBoolean = __commonJS({
    "node_modules/lodash/isBoolean.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var isObjectLike2 = require_isObjectLike();
      var boolTag = "[object Boolean]";
      function isBoolean2(value2) {
        return value2 === true || value2 === false || isObjectLike2(value2) && baseGetTag(value2) == boolTag;
      }
      module2.exports = isBoolean2;
    }
  });

  // packages/utilities/memo/index.ts
  function weakMemo(fn) {
    if (false) {
      if (!isFunction(fn)) {
        console.error(
          `Expected a function as argument to weakMemo but got ${fn}.`
        );
      }
    }
    const map = /* @__PURE__ */ new WeakMap();
    const memFn = (arg) => {
      if (!(0, import_isObject.default)(arg) && !(0, import_isBoolean.default)(arg)) {
        const errorMessage = `Expected an object or boolean as an argument to "${// @ts-expect-error - TS2339 - Property 'displayName' does not exist on type 'F'.
        fn.displayName || fn.name}()", but received ${String(arg)}.`;
        const fnString = fn.toString().slice(0, 2e5);
        throw new WeakMemoError({ message: errorMessage, fn: fnString });
      }
      const key2 = typeof arg === "boolean" ? arg && True || False : arg;
      if (!map.has(key2)) {
        map.set(key2, fn(arg));
      }
      const result2 = map.get(key2);
      return result2;
    };
    if (false) {
      memFn.displayName = // @ts-expect-error - TS2339 - Property 'displayName' does not exist on type 'F'. | TS2339 - Property 'name' does not exist on type 'F'. | TS2339 - Property 'toString' does not exist on type 'F'.
      "weakMemo(" + (fn.displayName || fn.name || fn.toString()) + ")";
    }
    return memFn;
  }
  var import_reselect, import_lru_cache, import_isBoolean, import_isFunction, import_isObject, True, False, defaultLastArg, WeakMemoError;
  var init_memo = __esm({
    "packages/utilities/memo/index.ts"() {
      "use strict";
      import_reselect = __toESM(require_lib3());
      import_lru_cache = __toESM(require_lru_cache());
      import_isBoolean = __toESM(require_isBoolean());
      import_isFunction = __toESM(require_isFunction());
      import_isObject = __toESM(require_isObject());
      True = { "@webflow/Boolean": true };
      False = { "@webflow/Boolean": false };
      defaultLastArg = Symbol();
      WeakMemoError = class extends TypeError {
        fn;
        constructor(opts) {
          super();
          if (TypeError.captureStackTrace) {
            TypeError.captureStackTrace(this, WeakMemoError);
          }
          this.name = "WeakMemoError";
          this.message = opts.message;
          this.fn = opts.fn;
        }
      };
    }
  });

  // packages/systems/dynamo/utils/ConditionUtils/ConditionUtils.ts
  var import_moment_timezone2, getId, isDateStringWithoutTime, toGraphQLSlug, handleId, isObj, isMap, isList, isRecord, memoizedToJS, convertImmutableDataStructure, getFieldsFromConditions, testCondition, fieldConditionsUpdater, withCleanedSlugs, reifyConditions, createNewFieldPath, reifyCondition, reifyQueryField, replacePageItemData, replaceValueBasedOnPageItemData, dynContextFieldValueId, castFieldValue;
  var init_ConditionUtils = __esm({
    "packages/systems/dynamo/utils/ConditionUtils/ConditionUtils.ts"() {
      "use strict";
      init_DynamoConditionUtils();
      import_moment_timezone2 = __toESM(require_moment_timezone2());
      init_SlugUtils2();
      init_memo();
      init_ParamFieldPathUtils();
      init_constants3();
      init_FilterUtils2();
      getId = (record) => {
        return record._id || record.id || (record.get ? record.get("_id", record.get("id")) : null);
      };
      isDateStringWithoutTime = (dateString) => /^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(dateString);
      toGraphQLSlug = (originalSlug) => {
        const slug = handleId(originalSlug);
        return slug === "id" || isDynamoGraphQLFieldSlug(slug) || // Don't want to namespace field slug when retrieving product inventory data
        slug === "ecSkuInventoryQuantity" ? slug : fieldSlug2(slug);
      };
      handleId = (slug) => slug === "_id" ? "id" : slug;
      isObj = (x) => x !== null && typeof x === "object" && !Array.isArray(x);
      isMap = (x) => x && Boolean(x["@@__IMMUTABLE_MAP__@@"]);
      isList = (x) => x && Boolean(x["@@__IMMUTABLE_LIST__@@"]);
      isRecord = (x) => x && Boolean(x["@@__IMMUTABLE_RECORD__@@"]);
      memoizedToJS = weakMemo((imm) => imm.toJS());
      convertImmutableDataStructure = (value2) => {
        if (isMap(value2) || isList(value2) || isRecord(value2)) {
          return memoizedToJS(value2);
        }
        return value2;
      };
      getFieldsFromConditions = (conditions) => isMap(conditions) ? conditions.get("fields") : conditions.fields;
      testCondition = ({
        item,
        contextItem,
        timezone,
        condition,
        graphQLSlugs
      }) => {
        const cleanSlug = graphQLSlugs ? toGraphQLSlug : handleId;
        const plainCondition = convertImmutableDataStructure(condition);
        const plainItem = withCleanedSlugs(
          convertImmutableDataStructure(item),
          cleanSlug
        );
        const conditionData = reifyConditions(plainCondition, contextItem, cleanSlug);
        const conditionFields = normalizeConditionFields(conditionData.fields);
        const itemData = conditionFields.reduce((acc, field) => {
          const { fieldPath, type } = field;
          const itemFieldValue = getItemFieldValue(plainItem, fieldPath);
          if (itemFieldValue == null) {
            return acc;
          }
          acc[fieldPath] = castFieldValue(itemFieldValue, type, timezone);
          return acc;
        }, {});
        return test(itemData, conditionData, timezone);
      };
      fieldConditionsUpdater = (contextItem, cleanSlug) => (fields) => {
        const plainFields = convertImmutableDataStructure(fields);
        if (Array.isArray(fields)) {
          return plainFields.map(reifyQueryField(contextItem, cleanSlug));
        }
        return Object.entries(plainFields).reduce(
          (acc, plainField) => {
            const [path, item] = reifyCondition(contextItem, cleanSlug)(plainField);
            acc[path] = item;
            return acc;
          },
          {}
        );
      };
      withCleanedSlugs = (obj, cleanSlug) => {
        return Object.keys(obj).reduce(
          (objWithCleanSlugs, slug) => {
            objWithCleanSlugs[cleanSlug(slug)] = obj[slug];
            return objWithCleanSlugs;
          },
          {}
        );
      };
      reifyConditions = (conditions, contextItem, cleanSlug) => ({
        ...conditions,
        fields: fieldConditionsUpdater(
          contextItem,
          cleanSlug
        )(getFieldsFromConditions(conditions))
      });
      createNewFieldPath = (fieldPath, cleanSlug) => {
        const itemRefFieldSlug = getItemRefSlug(fieldPath);
        const valueFieldSlug = getValueFieldSlug(fieldPath);
        return itemRefFieldSlug ? createFieldPath(cleanSlug(itemRefFieldSlug), cleanSlug(valueFieldSlug)) : createFieldPath(cleanSlug(valueFieldSlug));
      };
      reifyCondition = (contextItem, cleanSlug) => (fieldEntry) => {
        const [fieldPath, operation] = fieldEntry;
        const newFieldPath = createNewFieldPath(fieldPath, cleanSlug);
        const pageItemDataReducer = replacePageItemData(contextItem, cleanSlug);
        return [
          newFieldPath,
          Object.entries(operation).reduce((acc, entry) => {
            const [key2, value2] = entry;
            return pageItemDataReducer(acc, value2, key2);
          }, {})
        ];
      };
      reifyQueryField = (contextItem, cleanSlug) => (field) => {
        const { fieldPath, value: value2 } = field;
        const newFieldPath = createNewFieldPath(fieldPath, cleanSlug);
        return {
          ...field,
          fieldPath: newFieldPath,
          value: replaceValueBasedOnPageItemData(contextItem, cleanSlug, value2)
        };
      };
      replacePageItemData = (contextItem, cleanSlug) => (acc, value2, key2) => {
        acc[key2] = replaceValueBasedOnPageItemData(contextItem, cleanSlug, value2);
        return acc;
      };
      replaceValueBasedOnPageItemData = (contextItem, cleanSlug, value2) => {
        const plainPageItem = convertImmutableDataStructure(contextItem);
        const pageItemId = plainPageItem ? getId(plainPageItem) : null;
        if (typeof value2 === "string") {
          if (value2 === "DYN_CONTEXT") {
            if (pageItemId) {
              return pageItemId;
            }
          }
          if (/^DYN_CONTEXT/.test(value2)) {
            const dynContextFieldSlug = value2.replace(/^DYN_CONTEXT\./, "");
            const dynContextFieldValue = plainPageItem && plainPageItem[cleanSlug(dynContextFieldSlug)];
            const conditionValue = Array.isArray(dynContextFieldValue) ? dynContextFieldValue.map(dynContextFieldValueId) : dynContextFieldValueId(dynContextFieldValue);
            if (plainPageItem) {
              return conditionValue || NON_EXISTING_ITEM_ID;
            }
          }
        }
        return value2;
      };
      dynContextFieldValueId = (dynContextFieldValue) => {
        return isObj(dynContextFieldValue) ? getId(dynContextFieldValue) : dynContextFieldValue;
      };
      castFieldValue = (fieldValue, fieldType, timezone) => {
        switch (fieldType) {
          case "Date": {
            const dateString = fieldValue;
            const dateStringWithoutTime = isDateStringWithoutTime(dateString);
            return dateStringWithoutTime ? import_moment_timezone2.default.tz(fieldValue, timezone).toDate() : import_moment_timezone2.default.utc(dateString).toDate();
          }
          case "Option":
          case "ItemRef": {
            return isObj(fieldValue) ? getId(fieldValue) : fieldValue;
          }
          case "ItemRefSet": {
            return Array.isArray(fieldValue) && fieldValue.length ? Object.values(fieldValue).map((ref) => {
              if (typeof ref === "string") {
                return { _id: ref };
              }
              const { id: _, ...restOfRef } = ref;
              return {
                ...restOfRef,
                _id: getId(ref)
              };
            }) : null;
          }
          default: {
            return fieldValue;
          }
        }
      };
    }
  });

  // packages/systems/dynamo/utils/ConditionUtils/index.ts
  var init_ConditionUtils2 = __esm({
    "packages/systems/dynamo/utils/ConditionUtils/index.ts"() {
      "use strict";
      init_ConditionUtils();
    }
  });

  // packages/systems/dynamo/utils/RenderingUtils/RenderingUtils.ts
  function walkDOM(el, fn) {
    fn(el);
    if (!el || !el.children) {
      return el;
    }
    const children = Array.from(el.children);
    if (!children.length) {
      return el;
    }
    children.forEach((child) => walkDOM(child, fn));
    return el;
  }
  var removeClass, removeWDynBindEmptyClass, addConditionalVisibilityClass, removeConditionalVisibilityClass, applyConditionToNode;
  var init_RenderingUtils = __esm({
    "packages/systems/dynamo/utils/RenderingUtils/RenderingUtils.ts"() {
      "use strict";
      init_constants3();
      init_ConditionUtils2();
      removeClass = (node, className) => {
        if (node.classList.contains(className)) {
          node.classList.remove(className);
          if (node.classList.length === 0) {
            node.removeAttribute("class");
          }
        }
      };
      removeWDynBindEmptyClass = (node) => removeClass(node, CLASS_NAME_W_DYN_BIND_EMPTY);
      addConditionalVisibilityClass = (node) => {
        node.classList.add(CONDITION_INVISIBLE_CLASS);
      };
      removeConditionalVisibilityClass = (node) => removeClass(node, CONDITION_INVISIBLE_CLASS);
      applyConditionToNode = (node, item, conditionData, graphQLSlugs = false) => {
        if (!conditionData) {
          return;
        }
        const { condition, timezone } = conditionData;
        if (item) {
          const isVisible = testCondition({
            item,
            contextItem: null,
            timezone,
            condition,
            graphQLSlugs
          });
          if (isVisible) {
            removeConditionalVisibilityClass(node);
          } else {
            addConditionalVisibilityClass(node);
          }
        }
      };
    }
  });

  // packages/systems/dynamo/utils/RenderingUtils/index.ts
  var init_RenderingUtils2 = __esm({
    "packages/systems/dynamo/utils/RenderingUtils/index.ts"() {
      "use strict";
      init_RenderingUtils();
    }
  });

  // node_modules/lodash/_arrayAggregator.js
  var require_arrayAggregator = __commonJS({
    "node_modules/lodash/_arrayAggregator.js"(exports2, module2) {
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index2 = -1, length2 = array == null ? 0 : array.length;
        while (++index2 < length2) {
          var value2 = array[index2];
          setter(accumulator, value2, iteratee(value2), array);
        }
        return accumulator;
      }
      module2.exports = arrayAggregator;
    }
  });

  // node_modules/lodash/_baseAggregator.js
  var require_baseAggregator = __commonJS({
    "node_modules/lodash/_baseAggregator.js"(exports2, module2) {
      var baseEach = require_baseEach();
      function baseAggregator(collection, setter, iteratee, accumulator) {
        baseEach(collection, function(value2, key2, collection2) {
          setter(accumulator, value2, iteratee(value2), collection2);
        });
        return accumulator;
      }
      module2.exports = baseAggregator;
    }
  });

  // node_modules/lodash/_createAggregator.js
  var require_createAggregator = __commonJS({
    "node_modules/lodash/_createAggregator.js"(exports2, module2) {
      var arrayAggregator = require_arrayAggregator();
      var baseAggregator = require_baseAggregator();
      var baseIteratee = require_baseIteratee();
      var isArray2 = require_isArray();
      function createAggregator(setter, initializer) {
        return function(collection, iteratee) {
          var func = isArray2(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
          return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
        };
      }
      module2.exports = createAggregator;
    }
  });

  // node_modules/lodash/keyBy.js
  var require_keyBy = __commonJS({
    "node_modules/lodash/keyBy.js"(exports2, module2) {
      var baseAssignValue = require_baseAssignValue();
      var createAggregator = require_createAggregator();
      var keyBy2 = createAggregator(function(result2, value2, key2) {
        baseAssignValue(result2, key2, value2);
      });
      module2.exports = keyBy2;
    }
  });

  // node_modules/lodash/isNumber.js
  var require_isNumber = __commonJS({
    "node_modules/lodash/isNumber.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var isObjectLike2 = require_isObjectLike();
      var numberTag = "[object Number]";
      function isNumber2(value2) {
        return typeof value2 == "number" || isObjectLike2(value2) && baseGetTag(value2) == numberTag;
      }
      module2.exports = isNumber2;
    }
  });

  // packages/systems/core/utils/CurrencyUtils/CurrencyUtils.ts
  function getCurrencyInfo(code, platform = "stripe") {
    if (isValidCurrency(code)) {
      return platform === "stripe" ? (
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-expect-error
        currencyInfoByCode[code.toUpperCase()]
      ) : (
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-expect-error
        currencyInfoByCodePaypal[code.toUpperCase()]
      );
    }
    return {
      code: "???",
      digits: 2,
      minCharge: 0,
      name: `Unknown currency`
    };
  }
  function renderPrice(price2, opts = {}) {
    const { isoFormat = false, noCurrency = false } = opts;
    price2 = validatePrice(price2) ? price2 : _invalid();
    const normal_value = Number(price2.value);
    const currencyInfo = getCurrencyInfo(price2.unit);
    const float_value = intToUnsafeFloat(normal_value, currencyInfo);
    if (Number.isNaN(float_value)) {
      return "NaN";
    }
    if (noCurrency) {
      return String(float_value);
    }
    const fmt = getNumberFormat(price2.unit, isoFormat ? "code" : "symbol");
    return fmt.format(float_value);
  }
  function validatePrice(a) {
    if (!a || typeof a !== "object") {
      return false;
    }
    if (!(0, import_isNumber.default)(a.value)) {
      return false;
    }
    if (!(0, import_isString.default)(a.unit)) {
      return false;
    }
    if (!isValidCurrency(a.unit)) {
      return false;
    }
    return true;
  }
  function _invalid() {
    return { value: NaN, unit: "???" };
  }
  var import_keyBy, import_memoize, import_isString, import_isNumber, currencyInfoByCode, currencyInfoByCodePaypal, isValidCurrency, NullNumberFormat, getNumberFormat, intToUnsafeFloat;
  var init_CurrencyUtils = __esm({
    "packages/systems/core/utils/CurrencyUtils/CurrencyUtils.ts"() {
      "use strict";
      import_keyBy = __toESM(require_keyBy());
      import_memoize = __toESM(require_memoize());
      import_isString = __toESM(require_isString());
      import_isNumber = __toESM(require_isNumber());
      init_constants();
      currencyInfoByCode = (0, import_keyBy.default)(
        stripeCurrencyList,
        "code"
      );
      currencyInfoByCodePaypal = (0, import_keyBy.default)(
        paypalCurrencyList,
        "code"
      );
      isValidCurrency = (currencyCode) => typeof currencyCode === "string" && currencyInfoByCode.hasOwnProperty(currencyCode.toUpperCase());
      NullNumberFormat = class {
        format(_value) {
          return "NaN";
        }
      };
      getNumberFormat = (0, import_memoize.default)(
        (unit, currencyDisplay = "symbol") => (
          // HACK: for some reason, GraphQL is returning a currency of '???' for null
          // prices; we're temporarily glossing over this fact, and will address the
          // backend at a later time..
          unit != null && isValidCurrency(unit) ? new Intl.NumberFormat("en-US", {
            currency: unit,
            style: "currency",
            currencyDisplay
          }) : new NullNumberFormat()
        ),
        /* cache key function **/
        (unit, currencyDisplay = "symbol") => {
          return [String(unit), currencyDisplay].join("::");
        }
      );
      intToUnsafeFloat = (intValue, currency) => {
        const currencyInfo = typeof currency === "object" ? currency : getCurrencyInfo(currency);
        return intValue / Math.pow(10, currencyInfo.digits);
      };
    }
  });

  // node_modules/lodash/isInteger.js
  var require_isInteger = __commonJS({
    "node_modules/lodash/isInteger.js"(exports2, module2) {
      var toInteger = require_toInteger();
      function isInteger2(value2) {
        return typeof value2 == "number" && value2 == toInteger(value2);
      }
      module2.exports = isInteger2;
    }
  });

  // node_modules/accounting/accounting.js
  var require_accounting = __commonJS({
    "node_modules/accounting/accounting.js"(exports2, module2) {
      (function(root2, undefined2) {
        var lib = {};
        lib.version = "0.4.1";
        lib.settings = {
          currency: {
            symbol: "$",
            // default currency symbol is '$'
            format: "%s%v",
            // controls output: %s = symbol, %v = value (can be object, see docs)
            decimal: ".",
            // decimal point separator
            thousand: ",",
            // thousands separator
            precision: 2,
            // decimal places
            grouping: 3
            // digit grouping (not implemented yet)
          },
          number: {
            precision: 0,
            // default precision on numbers is 0
            grouping: 3,
            // digit grouping (not implemented yet)
            thousand: ",",
            decimal: "."
          }
        };
        var nativeMap = Array.prototype.map, nativeIsArray = Array.isArray, toString3 = Object.prototype.toString;
        function isString2(obj) {
          return !!(obj === "" || obj && obj.charCodeAt && obj.substr);
        }
        function isArray2(obj) {
          return nativeIsArray ? nativeIsArray(obj) : toString3.call(obj) === "[object Array]";
        }
        function isObject2(obj) {
          return obj && toString3.call(obj) === "[object Object]";
        }
        function defaults(object, defs) {
          var key2;
          object = object || {};
          defs = defs || {};
          for (key2 in defs) {
            if (defs.hasOwnProperty(key2)) {
              if (object[key2] == null)
                object[key2] = defs[key2];
            }
          }
          return object;
        }
        function map(obj, iterator, context) {
          var results = [], i, j;
          if (!obj)
            return results;
          if (nativeMap && obj.map === nativeMap)
            return obj.map(iterator, context);
          for (i = 0, j = obj.length; i < j; i++) {
            results[i] = iterator.call(context, obj[i], i, obj);
          }
          return results;
        }
        function checkPrecision(val2, base) {
          val2 = Math.round(Math.abs(val2));
          return isNaN(val2) ? base : val2;
        }
        function checkCurrencyFormat(format) {
          var defaults2 = lib.settings.currency.format;
          if (typeof format === "function")
            format = format();
          if (isString2(format) && format.match("%v")) {
            return {
              pos: format,
              neg: format.replace("-", "").replace("%v", "-%v"),
              zero: format
            };
          } else if (!format || !format.pos || !format.pos.match("%v")) {
            return !isString2(defaults2) ? defaults2 : lib.settings.currency.format = {
              pos: defaults2,
              neg: defaults2.replace("%v", "-%v"),
              zero: defaults2
            };
          }
          return format;
        }
        var unformat = lib.unformat = lib.parse = function(value2, decimal) {
          if (isArray2(value2)) {
            return map(value2, function(val2) {
              return unformat(val2, decimal);
            });
          }
          value2 = value2 || 0;
          if (typeof value2 === "number")
            return value2;
          decimal = decimal || lib.settings.number.decimal;
          var regex = new RegExp("[^0-9-" + decimal + "]", ["g"]), unformatted = parseFloat(
            ("" + value2).replace(/\((.*)\)/, "-$1").replace(regex, "").replace(decimal, ".")
            // make sure decimal point is standard
          );
          return !isNaN(unformatted) ? unformatted : 0;
        };
        var toFixed = lib.toFixed = function(value2, precision) {
          precision = checkPrecision(precision, lib.settings.number.precision);
          var power = Math.pow(10, precision);
          return (Math.round(lib.unformat(value2) * power) / power).toFixed(precision);
        };
        var formatNumber2 = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {
          if (isArray2(number)) {
            return map(number, function(val2) {
              return formatNumber2(val2, precision, thousand, decimal);
            });
          }
          number = unformat(number);
          var opts = defaults(
            isObject2(precision) ? precision : {
              precision,
              thousand,
              decimal
            },
            lib.settings.number
          ), usePrecision = checkPrecision(opts.precision), negative = number < 0 ? "-" : "", base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + "", mod2 = base.length > 3 ? base.length % 3 : 0;
          return negative + (mod2 ? base.substr(0, mod2) + opts.thousand : "") + base.substr(mod2).replace(/(\d{3})(?=\d)/g, "$1" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split(".")[1] : "");
        };
        var formatMoney2 = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {
          if (isArray2(number)) {
            return map(number, function(val2) {
              return formatMoney2(val2, symbol, precision, thousand, decimal, format);
            });
          }
          number = unformat(number);
          var opts = defaults(
            isObject2(symbol) ? symbol : {
              symbol,
              precision,
              thousand,
              decimal,
              format
            },
            lib.settings.currency
          ), formats = checkCurrencyFormat(opts.format), useFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;
          return useFormat.replace("%s", opts.symbol).replace("%v", formatNumber2(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));
        };
        lib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {
          if (!list)
            return [];
          var opts = defaults(
            isObject2(symbol) ? symbol : {
              symbol,
              precision,
              thousand,
              decimal,
              format
            },
            lib.settings.currency
          ), formats = checkCurrencyFormat(opts.format), padAfterSymbol = formats.pos.indexOf("%s") < formats.pos.indexOf("%v") ? true : false, maxLength = 0, formatted = map(list, function(val2, i) {
            if (isArray2(val2)) {
              return lib.formatColumn(val2, opts);
            } else {
              val2 = unformat(val2);
              var useFormat = val2 > 0 ? formats.pos : val2 < 0 ? formats.neg : formats.zero, fVal = useFormat.replace("%s", opts.symbol).replace("%v", formatNumber2(Math.abs(val2), checkPrecision(opts.precision), opts.thousand, opts.decimal));
              if (fVal.length > maxLength)
                maxLength = fVal.length;
              return fVal;
            }
          });
          return map(formatted, function(val2, i) {
            if (isString2(val2) && val2.length < maxLength) {
              return padAfterSymbol ? val2.replace(opts.symbol, opts.symbol + new Array(maxLength - val2.length + 1).join(" ")) : new Array(maxLength - val2.length + 1).join(" ") + val2;
            }
            return val2;
          });
        };
        if (typeof exports2 !== "undefined") {
          if (typeof module2 !== "undefined" && module2.exports) {
            exports2 = module2.exports = lib;
          }
          exports2.accounting = lib;
        } else if (typeof define === "function" && define.amd) {
          define([], function() {
            return lib;
          });
        } else {
          lib.noConflict = function(oldAccounting) {
            return function() {
              root2.accounting = oldAccounting;
              lib.noConflict = undefined2;
              return lib;
            };
          }(root2.accounting);
          root2["accounting"] = lib;
        }
      })(exports2);
    }
  });

  // node_modules/lodash/_unescapeHtmlChar.js
  var require_unescapeHtmlChar = __commonJS({
    "node_modules/lodash/_unescapeHtmlChar.js"(exports2, module2) {
      var basePropertyOf = require_basePropertyOf();
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      module2.exports = unescapeHtmlChar;
    }
  });

  // node_modules/lodash/unescape.js
  var require_unescape = __commonJS({
    "node_modules/lodash/unescape.js"(exports2, module2) {
      var toString3 = require_toString();
      var unescapeHtmlChar = require_unescapeHtmlChar();
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;
      var reHasEscapedHtml = RegExp(reEscapedHtml.source);
      function unescape3(string) {
        string = toString3(string);
        return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
      }
      module2.exports = unescape3;
    }
  });

  // packages/systems/core/utils/EmbedUtils/shared/index.ts
  function parseTokenJson(string) {
    if (string.match(getWfTokenPattern())) {
      let token;
      try {
        token = JSON.parse((0, import_unescape.default)(extractToken(string).replace(/\\}/g, "}")));
      } catch (err) {
        return null;
      }
      if (!token || !token.path || !token.type) {
        return null;
      } else {
        return token;
      }
    } else {
      return null;
    }
  }
  function extractToken(string, {
    shortHand
  } = {}) {
    return shortHand ? string.replace(getCatchAllTokenPattern(), (match, subMatch) => {
      return stripLegacyShorthandSuffix(subMatch);
    }) : string.replace(getWfTokenPattern(), "$1");
  }
  function stripLegacyShorthandSuffix(tokenPath) {
    return tokenPath.split(":").map((part) => part.split(".")[0]).join(":");
  }
  var import_unescape, getWfTokenPattern, getCatchAllTokenPattern;
  var init_shared = __esm({
    "packages/systems/core/utils/EmbedUtils/shared/index.ts"() {
      "use strict";
      import_unescape = __toESM(require_unescape());
      getWfTokenPattern = function() {
        return /{{\s*wf\s*({.*?})\s*}}/g;
      };
      getCatchAllTokenPattern = function() {
        return /{{\s*(.*?)\s*}}/g;
      };
    }
  });

  // packages/systems/core/utils/EmbedUtils/simpleReplaceTokens/index.ts
  function simpleReplaceTokens(replaceable, item) {
    return replaceable.replace(getWfTokenPattern(), function(match) {
      const token = parseTokenJson(match) || {};
      const path = token.path.split(".");
      return (0, import_isFunction2.default)(item.getIn) ? item.getIn(path, "") : (0, import_get3.default)(item, path, "");
    });
  }
  var import_isFunction2, import_get3;
  var init_simpleReplaceTokens = __esm({
    "packages/systems/core/utils/EmbedUtils/simpleReplaceTokens/index.ts"() {
      "use strict";
      import_isFunction2 = __toESM(require_isFunction());
      import_get3 = __toESM(require_get());
      init_shared();
    }
  });

  // packages/systems/core/utils/CurrencyUtils/renderPrice.ts
  function renderAmountFromSettings(amount, amountSettings = {}) {
    if (typeof amount === "undefined") {
      return "";
    }
    if (typeof amount === "string") {
      if (amount === "\u221E") {
        return amount;
      }
      throw new Error(`amount has type string: got ${amount}, expected \u221E`);
    }
    const jsValue = amount / parseFloat(`1${"0".repeat(amountSettings.fractionDigits || 0)}`);
    const precision = (0, import_isInteger.default)(jsValue) && amountSettings.hideDecimalForWholeNumbers ? 0 : amountSettings.fractionDigits;
    return (0, import_accounting.formatMoney)(jsValue, {
      symbol: "",
      decimal: amountSettings.decimal,
      precision,
      thousand: amountSettings.group
    });
  }
  function renderPriceFromSettings(price2, currencySettings = {}, renderOpts = {}) {
    const { template, currencyCode } = currencySettings;
    if (!template || price2.unit !== currencyCode) {
      return renderPrice(price2);
    }
    return (price2.value < 0 ? "\u2212" : "") + // negative sign to appear before currency symbol e.g., -$ 5.00 USD
    simpleReplaceTokens(
      (renderOpts.breakingWhitespace ? currencySettings.template : _replaceAllSpaceWithNBSP(currencySettings.template)) || "",
      {
        amount: renderAmountFromSettings(
          Math.abs(price2.value),
          currencySettings
        ),
        symbol: currencySettings.symbol,
        currencyCode: currencySettings.currencyCode
      }
    );
  }
  var import_get4, import_isInteger, import_accounting, _nonBreakingSpace, _replaceAllSpaceWithNBSP;
  var init_renderPrice = __esm({
    "packages/systems/core/utils/CurrencyUtils/renderPrice.ts"() {
      "use strict";
      import_get4 = __toESM(require_get());
      import_isInteger = __toESM(require_isInteger());
      import_accounting = __toESM(require_accounting());
      init_simpleReplaceTokens();
      init_CurrencyUtils();
      _nonBreakingSpace = String.fromCharCode(160);
      _replaceAllSpaceWithNBSP = (str) => str.replace(/\s/g, _nonBreakingSpace);
    }
  });

  // packages/systems/core/utils/CurrencyUtils/index.ts
  var init_CurrencyUtils2 = __esm({
    "packages/systems/core/utils/CurrencyUtils/index.ts"() {
      "use strict";
      init_CurrencyUtils();
      init_renderPrice();
    }
  });

  // packages/shared/render/plugins/Commerce/modules/debug.ts
  var debug_default;
  var init_debug = __esm({
    "packages/shared/render/plugins/Commerce/modules/debug.ts"() {
      "use strict";
      debug_default = {
        log: (...args) => {
          if (false) {
            console.log(...args);
          }
        },
        error: (...args) => {
          if (false) {
            console.log(...args);
          }
        }
      };
    }
  });

  // node_modules/lodash/_escapeHtmlChar.js
  var require_escapeHtmlChar = __commonJS({
    "node_modules/lodash/_escapeHtmlChar.js"(exports2, module2) {
      var basePropertyOf = require_basePropertyOf();
      var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      module2.exports = escapeHtmlChar;
    }
  });

  // node_modules/lodash/escape.js
  var require_escape = __commonJS({
    "node_modules/lodash/escape.js"(exports2, module2) {
      var escapeHtmlChar = require_escapeHtmlChar();
      var toString3 = require_toString();
      var reUnescapedHtml = /[&<>"']/g;
      var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      function escape5(string) {
        string = toString3(string);
        return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
      }
      module2.exports = escape5;
    }
  });

  // packages/systems/dynamo/utils/DynamoFormattingUtils/index.ts
  function formatNumber(n, formatType) {
    if (typeof n === "number") {
      const precision = formatType === "" || formatType === "none" ? NaN : Number(formatType);
      if (!isNaN(precision)) {
        return n.toFixed(precision);
      } else {
        return String(n);
      }
    } else {
      return "";
    }
  }
  function formatEmail(email, subject, property2) {
    const prefix = property2 === "href" ? "mailto:" : "";
    if (email && subject) {
      return prefix + email + "?subject=" + subject;
    } else if (email) {
      return prefix + email;
    } else {
      return null;
    }
  }
  function formatPhone(phone, property2) {
    if (property2 === "href") {
      let tel = phone ? phone.replace(/\s/g, "") : "";
      if (/\d/.test(tel)) {
        const keypadMap = [
          [/a|b|c/gi, 2],
          [/d|e|f/gi, 3],
          [/g|h|i/gi, 4],
          [/j|k|l/gi, 5],
          [/m|n|o/gi, 6],
          [/p|q|r|s/gi, 7],
          [/t|u|v/gi, 8],
          [/w|x|y|z/gi, 9]
        ];
        keypadMap.forEach(([key2, value2]) => {
          tel = tel.replace(key2, value2.toString());
        });
      } else {
        phone = "#";
      }
      phone = /\d/.test(tel) ? "tel:" + tel : "#";
    }
    return phone;
  }
  var init_DynamoFormattingUtils = __esm({
    "packages/systems/dynamo/utils/DynamoFormattingUtils/index.ts"() {
      "use strict";
    }
  });

  // packages/systems/dynamo/utils/Transformers/Transformers.ts
  function getTransformerFn(fnKey) {
    switch (fnKey) {
      case "date": {
        return date;
      }
      case "detailPage": {
        return detailPage;
      }
      case "style": {
        return style;
      }
      case "numberPrecision": {
        return numberPrecision;
      }
      case "rich": {
        return rich;
      }
      case "price": {
        return price;
      }
      default: {
        return null;
      }
    }
  }
  var import_escape, import_moment_timezone3, isSimpleDateFormat, date, detailPage, style, numberPrecision, rich, replaceDetailPageHrefCollectionSlug, get5, price, transformers;
  var init_Transformers = __esm({
    "packages/systems/dynamo/utils/Transformers/Transformers.ts"() {
      "use strict";
      import_escape = __toESM(require_escape());
      import_moment_timezone3 = __toESM(require_moment_timezone2());
      init_CurrencyUtils2();
      init_DynamoFormattingUtils();
      isSimpleDateFormat = (value2) => /^([0-9]{4})-([0-9]{2})-([0-9]{2})$/.test(value2);
      date = (value2, [format], { timezone = "UTC" }) => {
        if (isSimpleDateFormat(value2)) {
          timezone = "UTC";
        }
        const momentDate = import_moment_timezone3.default.utc(value2, import_moment_timezone3.default.ISO_8601);
        if (momentDate.isValid()) {
          return momentDate.tz(timezone).format(format);
        } else {
          return "";
        }
      };
      detailPage = (value2, [collectionIdOrLegacySlug], { collectionSlugMap }) => {
        const collectionSlug = collectionSlugMap[collectionIdOrLegacySlug] || collectionIdOrLegacySlug;
        return value2 ? `/${collectionSlug}/${value2}` : null;
      };
      style = (value2, [styleProp]) => {
        if (styleProp === "background-image") {
          return value2 ? `url("${value2}")` : "none";
        }
        return value2;
      };
      numberPrecision = (value2, [precision]) => {
        return formatNumber(value2, precision);
      };
      rich = (value2, params, { pageLinkHrefPrefix, collectionSlugMap }) => {
        if (!value2) {
          return null;
        }
        if (typeof value2 !== "string") {
          return value2;
        }
        return value2.replace(/<a\s+[^>]+/g, (linkString) => {
          const isPageLink = /\sdata-rt-link-type="page"/.test(linkString);
          const needsPrefix = pageLinkHrefPrefix && isPageLink;
          const collectionIdMatch = isPageLink && /\sdata-rt-link-collectionid="([a-z0-9]{24})"/.exec(linkString);
          if (needsPrefix || collectionIdMatch) {
            return linkString.replace(/(\shref=")([^"]+)/, (match, begin, href) => {
              const end = collectionIdMatch ? replaceDetailPageHrefCollectionSlug(
                href,
                // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
                collectionIdMatch[1],
                collectionSlugMap
              ) : href;
              const prefix = pageLinkHrefPrefix ? (0, import_escape.default)(pageLinkHrefPrefix) : "";
              return `${begin}${prefix}${end}`;
            });
          } else {
            return linkString;
          }
        });
      };
      replaceDetailPageHrefCollectionSlug = (href, collectionId, collectionSlugMap) => {
        const [emptyString, originalCollectionSlug, ...rest] = href.split("/");
        const collectionSlug = collectionSlugMap[collectionId] || originalCollectionSlug;
        return [emptyString, collectionSlug, ...rest].join("/");
      };
      get5 = (obj, key2) => {
        if (obj != null && typeof obj.get === "function") {
          return obj.get(key2);
        }
        return obj[key2];
      };
      price = (obj, params, context) => {
        if (!obj)
          return null;
        return renderPriceFromSettings(
          { unit: get5(obj, "unit"), value: get5(obj, "value") },
          context.currencySettings
        );
      };
      transformers = (value2, filter, context) => {
        const { type: key2, params } = filter;
        const fn = getTransformerFn(key2);
        return fn ? fn(value2, params, context) : value2;
      };
    }
  });

  // packages/systems/dynamo/utils/Transformers/index.ts
  var init_Transformers2 = __esm({
    "packages/systems/dynamo/utils/Transformers/index.ts"() {
      "use strict";
      init_Transformers();
    }
  });

  // node_modules/lodash/_copyObject.js
  var require_copyObject = __commonJS({
    "node_modules/lodash/_copyObject.js"(exports2, module2) {
      var assignValue = require_assignValue();
      var baseAssignValue = require_baseAssignValue();
      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index2 = -1, length2 = props.length;
        while (++index2 < length2) {
          var key2 = props[index2];
          var newValue = customizer ? customizer(object[key2], source[key2], key2, object, source) : void 0;
          if (newValue === void 0) {
            newValue = source[key2];
          }
          if (isNew) {
            baseAssignValue(object, key2, newValue);
          } else {
            assignValue(object, key2, newValue);
          }
        }
        return object;
      }
      module2.exports = copyObject;
    }
  });

  // node_modules/lodash/_baseAssign.js
  var require_baseAssign = __commonJS({
    "node_modules/lodash/_baseAssign.js"(exports2, module2) {
      var copyObject = require_copyObject();
      var keys = require_keys();
      function baseAssign(object, source) {
        return object && copyObject(source, keys(source), object);
      }
      module2.exports = baseAssign;
    }
  });

  // node_modules/lodash/_baseAssignIn.js
  var require_baseAssignIn = __commonJS({
    "node_modules/lodash/_baseAssignIn.js"(exports2, module2) {
      var copyObject = require_copyObject();
      var keysIn = require_keysIn();
      function baseAssignIn(object, source) {
        return object && copyObject(source, keysIn(source), object);
      }
      module2.exports = baseAssignIn;
    }
  });

  // node_modules/lodash/_cloneBuffer.js
  var require_cloneBuffer = __commonJS({
    "node_modules/lodash/_cloneBuffer.js"(exports2, module2) {
      var root2 = require_root();
      var freeExports = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var Buffer2 = moduleExports ? root2.Buffer : void 0;
      var allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
      function cloneBuffer(buffer, isDeep) {
        if (isDeep) {
          return buffer.slice();
        }
        var length2 = buffer.length, result2 = allocUnsafe ? allocUnsafe(length2) : new buffer.constructor(length2);
        buffer.copy(result2);
        return result2;
      }
      module2.exports = cloneBuffer;
    }
  });

  // node_modules/lodash/_copySymbols.js
  var require_copySymbols = __commonJS({
    "node_modules/lodash/_copySymbols.js"(exports2, module2) {
      var copyObject = require_copyObject();
      var getSymbols = require_getSymbols();
      function copySymbols(source, object) {
        return copyObject(source, getSymbols(source), object);
      }
      module2.exports = copySymbols;
    }
  });

  // node_modules/lodash/_copySymbolsIn.js
  var require_copySymbolsIn = __commonJS({
    "node_modules/lodash/_copySymbolsIn.js"(exports2, module2) {
      var copyObject = require_copyObject();
      var getSymbolsIn = require_getSymbolsIn();
      function copySymbolsIn(source, object) {
        return copyObject(source, getSymbolsIn(source), object);
      }
      module2.exports = copySymbolsIn;
    }
  });

  // node_modules/lodash/_initCloneArray.js
  var require_initCloneArray = __commonJS({
    "node_modules/lodash/_initCloneArray.js"(exports2, module2) {
      var objectProto = Object.prototype;
      var hasOwnProperty9 = objectProto.hasOwnProperty;
      function initCloneArray(array) {
        var length2 = array.length, result2 = new array.constructor(length2);
        if (length2 && typeof array[0] == "string" && hasOwnProperty9.call(array, "index")) {
          result2.index = array.index;
          result2.input = array.input;
        }
        return result2;
      }
      module2.exports = initCloneArray;
    }
  });

  // node_modules/lodash/_cloneArrayBuffer.js
  var require_cloneArrayBuffer = __commonJS({
    "node_modules/lodash/_cloneArrayBuffer.js"(exports2, module2) {
      var Uint8Array2 = require_Uint8Array();
      function cloneArrayBuffer(arrayBuffer) {
        var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
        return result2;
      }
      module2.exports = cloneArrayBuffer;
    }
  });

  // node_modules/lodash/_cloneDataView.js
  var require_cloneDataView = __commonJS({
    "node_modules/lodash/_cloneDataView.js"(exports2, module2) {
      var cloneArrayBuffer = require_cloneArrayBuffer();
      function cloneDataView(dataView, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
      }
      module2.exports = cloneDataView;
    }
  });

  // node_modules/lodash/_cloneRegExp.js
  var require_cloneRegExp = __commonJS({
    "node_modules/lodash/_cloneRegExp.js"(exports2, module2) {
      var reFlags = /\w*$/;
      function cloneRegExp(regexp) {
        var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
        result2.lastIndex = regexp.lastIndex;
        return result2;
      }
      module2.exports = cloneRegExp;
    }
  });

  // node_modules/lodash/_cloneSymbol.js
  var require_cloneSymbol = __commonJS({
    "node_modules/lodash/_cloneSymbol.js"(exports2, module2) {
      var Symbol2 = require_Symbol();
      var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
      var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
      function cloneSymbol(symbol) {
        return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
      }
      module2.exports = cloneSymbol;
    }
  });

  // node_modules/lodash/_cloneTypedArray.js
  var require_cloneTypedArray = __commonJS({
    "node_modules/lodash/_cloneTypedArray.js"(exports2, module2) {
      var cloneArrayBuffer = require_cloneArrayBuffer();
      function cloneTypedArray(typedArray, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
      }
      module2.exports = cloneTypedArray;
    }
  });

  // node_modules/lodash/_initCloneByTag.js
  var require_initCloneByTag = __commonJS({
    "node_modules/lodash/_initCloneByTag.js"(exports2, module2) {
      var cloneArrayBuffer = require_cloneArrayBuffer();
      var cloneDataView = require_cloneDataView();
      var cloneRegExp = require_cloneRegExp();
      var cloneSymbol = require_cloneSymbol();
      var cloneTypedArray = require_cloneTypedArray();
      var boolTag = "[object Boolean]";
      var dateTag = "[object Date]";
      var mapTag = "[object Map]";
      var numberTag = "[object Number]";
      var regexpTag = "[object RegExp]";
      var setTag = "[object Set]";
      var stringTag = "[object String]";
      var symbolTag = "[object Symbol]";
      var arrayBufferTag = "[object ArrayBuffer]";
      var dataViewTag = "[object DataView]";
      var float32Tag = "[object Float32Array]";
      var float64Tag = "[object Float64Array]";
      var int8Tag = "[object Int8Array]";
      var int16Tag = "[object Int16Array]";
      var int32Tag = "[object Int32Array]";
      var uint8Tag = "[object Uint8Array]";
      var uint8ClampedTag = "[object Uint8ClampedArray]";
      var uint16Tag = "[object Uint16Array]";
      var uint32Tag = "[object Uint32Array]";
      function initCloneByTag(object, tag, isDeep) {
        var Ctor = object.constructor;
        switch (tag) {
          case arrayBufferTag:
            return cloneArrayBuffer(object);
          case boolTag:
          case dateTag:
            return new Ctor(+object);
          case dataViewTag:
            return cloneDataView(object, isDeep);
          case float32Tag:
          case float64Tag:
          case int8Tag:
          case int16Tag:
          case int32Tag:
          case uint8Tag:
          case uint8ClampedTag:
          case uint16Tag:
          case uint32Tag:
            return cloneTypedArray(object, isDeep);
          case mapTag:
            return new Ctor();
          case numberTag:
          case stringTag:
            return new Ctor(object);
          case regexpTag:
            return cloneRegExp(object);
          case setTag:
            return new Ctor();
          case symbolTag:
            return cloneSymbol(object);
        }
      }
      module2.exports = initCloneByTag;
    }
  });

  // node_modules/lodash/_initCloneObject.js
  var require_initCloneObject = __commonJS({
    "node_modules/lodash/_initCloneObject.js"(exports2, module2) {
      var baseCreate = require_baseCreate();
      var getPrototype = require_getPrototype();
      var isPrototype = require_isPrototype();
      function initCloneObject(object) {
        return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
      }
      module2.exports = initCloneObject;
    }
  });

  // node_modules/lodash/_baseIsMap.js
  var require_baseIsMap = __commonJS({
    "node_modules/lodash/_baseIsMap.js"(exports2, module2) {
      var getTag = require_getTag();
      var isObjectLike2 = require_isObjectLike();
      var mapTag = "[object Map]";
      function baseIsMap(value2) {
        return isObjectLike2(value2) && getTag(value2) == mapTag;
      }
      module2.exports = baseIsMap;
    }
  });

  // node_modules/lodash/isMap.js
  var require_isMap = __commonJS({
    "node_modules/lodash/isMap.js"(exports2, module2) {
      var baseIsMap = require_baseIsMap();
      var baseUnary = require_baseUnary();
      var nodeUtil = require_nodeUtil();
      var nodeIsMap = nodeUtil && nodeUtil.isMap;
      var isMap2 = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
      module2.exports = isMap2;
    }
  });

  // node_modules/lodash/_baseIsSet.js
  var require_baseIsSet = __commonJS({
    "node_modules/lodash/_baseIsSet.js"(exports2, module2) {
      var getTag = require_getTag();
      var isObjectLike2 = require_isObjectLike();
      var setTag = "[object Set]";
      function baseIsSet(value2) {
        return isObjectLike2(value2) && getTag(value2) == setTag;
      }
      module2.exports = baseIsSet;
    }
  });

  // node_modules/lodash/isSet.js
  var require_isSet = __commonJS({
    "node_modules/lodash/isSet.js"(exports2, module2) {
      var baseIsSet = require_baseIsSet();
      var baseUnary = require_baseUnary();
      var nodeUtil = require_nodeUtil();
      var nodeIsSet = nodeUtil && nodeUtil.isSet;
      var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
      module2.exports = isSet;
    }
  });

  // node_modules/lodash/_baseClone.js
  var require_baseClone = __commonJS({
    "node_modules/lodash/_baseClone.js"(exports2, module2) {
      var Stack = require_Stack();
      var arrayEach = require_arrayEach();
      var assignValue = require_assignValue();
      var baseAssign = require_baseAssign();
      var baseAssignIn = require_baseAssignIn();
      var cloneBuffer = require_cloneBuffer();
      var copyArray = require_copyArray();
      var copySymbols = require_copySymbols();
      var copySymbolsIn = require_copySymbolsIn();
      var getAllKeys = require_getAllKeys();
      var getAllKeysIn = require_getAllKeysIn();
      var getTag = require_getTag();
      var initCloneArray = require_initCloneArray();
      var initCloneByTag = require_initCloneByTag();
      var initCloneObject = require_initCloneObject();
      var isArray2 = require_isArray();
      var isBuffer = require_isBuffer();
      var isMap2 = require_isMap();
      var isObject2 = require_isObject();
      var isSet = require_isSet();
      var keys = require_keys();
      var keysIn = require_keysIn();
      var CLONE_DEEP_FLAG = 1;
      var CLONE_FLAT_FLAG = 2;
      var CLONE_SYMBOLS_FLAG = 4;
      var argsTag = "[object Arguments]";
      var arrayTag = "[object Array]";
      var boolTag = "[object Boolean]";
      var dateTag = "[object Date]";
      var errorTag = "[object Error]";
      var funcTag = "[object Function]";
      var genTag = "[object GeneratorFunction]";
      var mapTag = "[object Map]";
      var numberTag = "[object Number]";
      var objectTag = "[object Object]";
      var regexpTag = "[object RegExp]";
      var setTag = "[object Set]";
      var stringTag = "[object String]";
      var symbolTag = "[object Symbol]";
      var weakMapTag = "[object WeakMap]";
      var arrayBufferTag = "[object ArrayBuffer]";
      var dataViewTag = "[object DataView]";
      var float32Tag = "[object Float32Array]";
      var float64Tag = "[object Float64Array]";
      var int8Tag = "[object Int8Array]";
      var int16Tag = "[object Int16Array]";
      var int32Tag = "[object Int32Array]";
      var uint8Tag = "[object Uint8Array]";
      var uint8ClampedTag = "[object Uint8ClampedArray]";
      var uint16Tag = "[object Uint16Array]";
      var uint32Tag = "[object Uint32Array]";
      var cloneableTags = {};
      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
      cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
      function baseClone(value2, bitmask, customizer, key2, object, stack) {
        var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
        if (customizer) {
          result2 = object ? customizer(value2, key2, object, stack) : customizer(value2);
        }
        if (result2 !== void 0) {
          return result2;
        }
        if (!isObject2(value2)) {
          return value2;
        }
        var isArr = isArray2(value2);
        if (isArr) {
          result2 = initCloneArray(value2);
          if (!isDeep) {
            return copyArray(value2, result2);
          }
        } else {
          var tag = getTag(value2), isFunc = tag == funcTag || tag == genTag;
          if (isBuffer(value2)) {
            return cloneBuffer(value2, isDeep);
          }
          if (tag == objectTag || tag == argsTag || isFunc && !object) {
            result2 = isFlat || isFunc ? {} : initCloneObject(value2);
            if (!isDeep) {
              return isFlat ? copySymbolsIn(value2, baseAssignIn(result2, value2)) : copySymbols(value2, baseAssign(result2, value2));
            }
          } else {
            if (!cloneableTags[tag]) {
              return object ? value2 : {};
            }
            result2 = initCloneByTag(value2, tag, isDeep);
          }
        }
        stack || (stack = new Stack());
        var stacked = stack.get(value2);
        if (stacked) {
          return stacked;
        }
        stack.set(value2, result2);
        if (isSet(value2)) {
          value2.forEach(function(subValue) {
            result2.add(baseClone(subValue, bitmask, customizer, subValue, value2, stack));
          });
        } else if (isMap2(value2)) {
          value2.forEach(function(subValue, key3) {
            result2.set(key3, baseClone(subValue, bitmask, customizer, key3, value2, stack));
          });
        }
        var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
        var props = isArr ? void 0 : keysFunc(value2);
        arrayEach(props || value2, function(subValue, key3) {
          if (props) {
            key3 = subValue;
            subValue = value2[key3];
          }
          assignValue(result2, key3, baseClone(subValue, bitmask, customizer, key3, value2, stack));
        });
        return result2;
      }
      module2.exports = baseClone;
    }
  });

  // node_modules/lodash/cloneDeep.js
  var require_cloneDeep = __commonJS({
    "node_modules/lodash/cloneDeep.js"(exports2, module2) {
      var baseClone = require_baseClone();
      var CLONE_DEEP_FLAG = 1;
      var CLONE_SYMBOLS_FLAG = 4;
      function cloneDeep3(value2) {
        return baseClone(value2, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
      }
      module2.exports = cloneDeep3;
    }
  });

  // node_modules/lodash/transform.js
  var require_transform = __commonJS({
    "node_modules/lodash/transform.js"(exports2, module2) {
      var arrayEach = require_arrayEach();
      var baseCreate = require_baseCreate();
      var baseForOwn = require_baseForOwn();
      var baseIteratee = require_baseIteratee();
      var getPrototype = require_getPrototype();
      var isArray2 = require_isArray();
      var isBuffer = require_isBuffer();
      var isFunction3 = require_isFunction();
      var isObject2 = require_isObject();
      var isTypedArray = require_isTypedArray();
      function transform3(object, iteratee, accumulator) {
        var isArr = isArray2(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
        iteratee = baseIteratee(iteratee, 4);
        if (accumulator == null) {
          var Ctor = object && object.constructor;
          if (isArrLike) {
            accumulator = isArr ? new Ctor() : [];
          } else if (isObject2(object)) {
            accumulator = isFunction3(Ctor) ? baseCreate(getPrototype(object)) : {};
          } else {
            accumulator = {};
          }
        }
        (isArrLike ? arrayEach : baseForOwn)(object, function(value2, index2, object2) {
          return iteratee(accumulator, value2, index2, object2);
        });
        return accumulator;
      }
      module2.exports = transform3;
    }
  });

  // packages/shared/render/plugins/Commerce/modules/rendering.ts
  var import_escape2, import_cloneDeep, import_transform2, allowedFieldTypes, isBindingPropToFieldTypeAllowed, getIn2, applyBindingsMutation, applyBindings, applyConditionalVisibility, applySkuBoundConditionalVisibility, createStyleMutator, createAttributeMutator, valueMutator, checkedMutator, aspectRatio, mutators, hrefMutator, getPropertyMutator, getCommercePropValue, getTemplateScript, createDomFragment, getTemplateString, getTemplateCollection, checkForAndApplyTemplateCollection, checkForAndApplyBindings, checkForAndApplyConditionalVisibility, renderTree, shippingDataReplacementPaths, flattenCustomData, flattenOrderData;
  var init_rendering = __esm({
    "packages/shared/render/plugins/Commerce/modules/rendering.ts"() {
      "use strict";
      init_Transformers2();
      import_escape2 = __toESM(require_escape());
      import_cloneDeep = __toESM(require_cloneDeep());
      import_transform2 = __toESM(require_transform());
      init_constants();
      init_constants3();
      init_RenderingUtils2();
      init_commerceUtils();
      init_DynamoFormattingUtils();
      init_site();
      allowedFieldTypes = {
        ...SHARED_ALLOWED_FIELD_TYPES,
        "data-commerce-sku-id": ["ItemRef"]
      };
      isBindingPropToFieldTypeAllowed = (bindingProperty, type) => {
        const allowedTypes = allowedFieldTypes[bindingProperty];
        return allowedTypes instanceof Array ? allowedTypes.indexOf(type) > -1 : allowedTypes && type in allowedTypes;
      };
      getIn2 = (object, path) => {
        const nextDotIndex = path.indexOf(".");
        if (object == null) {
          return null;
        }
        if (nextDotIndex !== -1) {
          const pathPart = path.slice(0, nextDotIndex);
          const restOfPath = path.slice(nextDotIndex + 1, path.length);
          return getIn2(object[pathPart], restOfPath);
        }
        return object[path];
      };
      applyBindingsMutation = ({
        // @ts-expect-error - TS7031 - Binding element 'bindingProperty' implicitly has an 'any' type.
        bindingProperty,
        // @ts-expect-error - TS7031 - Binding element 'type' implicitly has an 'any' type.
        type,
        // @ts-expect-error - TS7031 - Binding element 'filter' implicitly has an 'any' type.
        filter,
        // @ts-expect-error - TS7031 - Binding element 'path' implicitly has an 'any' type.
        path,
        // @ts-expect-error - TS7031 - Binding element 'timezone' implicitly has an 'any' type.
        timezone,
        // @ts-expect-error - TS7031 - Binding element 'pageLinkHrefPrefix' implicitly has an 'any' type.
        pageLinkHrefPrefix,
        collectionSlugMap = {},
        // @ts-expect-error - TS7031 - Binding element 'data' implicitly has an 'any' type.
        data: data2,
        // @ts-expect-error - TS7031 - Binding element 'node' implicitly has an 'any' type.
        node,
        emailLinkSubject = ""
      }) => {
        if (!isBindingPropToFieldTypeAllowed(bindingProperty, type)) {
          return;
        }
        const prefix = "data.";
        let suffix = "";
        if (type === "ImageRef" && bindingProperty === "src") {
          suffix = ".url";
        }
        let rawValue;
        if (type === "CommercePropValues") {
          rawValue = getCommercePropValue(data2, `${prefix}${path}`);
        } else {
          rawValue = getIn2(data2, `${prefix}${path}${suffix}`);
        }
        const transformedValue = transformers(rawValue, filter, {
          timezone,
          pageLinkHrefPrefix,
          collectionSlugMap,
          // @ts-expect-error - TS2339 - Property '__WEBFLOW_CURRENCY_SETTINGS' does not exist on type 'Window & typeof globalThis'.
          currencySettings: window.__WEBFLOW_CURRENCY_SETTINGS
        });
        const propertyMutator = getPropertyMutator(bindingProperty, emailLinkSubject);
        if (typeof propertyMutator === "function") {
          propertyMutator(node, type, transformedValue);
        }
      };
      applyBindings = (bindings, data2, node) => {
        if (bindings == null) {
          return;
        }
        bindings.forEach((binding) => {
          Object.keys(binding).forEach((bindingProperty) => {
            const bindingValue = binding[bindingProperty];
            const {
              type,
              filter,
              dataPath: path,
              timezone,
              pageLinkHrefPrefix,
              collectionSlugMap,
              emailLinkSubject
            } = bindingValue;
            applyBindingsMutation({
              bindingProperty,
              type,
              filter,
              path,
              timezone,
              pageLinkHrefPrefix,
              collectionSlugMap,
              data: data2,
              node,
              emailLinkSubject
            });
          });
        });
      };
      applyConditionalVisibility = (conditionData, data2, node) => {
        if (!conditionData) {
          return;
        }
        const { dataPath, meta } = conditionData;
        const prefixedDataPath = `data.${dataPath}`;
        const item = meta && meta.type === "CommercePropValues" ? {
          name: getIn2(data2, `${prefixedDataPath}.name`),
          value: getCommercePropValue(data2, prefixedDataPath)
        } : getIn2(data2, prefixedDataPath);
        applyConditionToNode(node, item, conditionData, true);
      };
      applySkuBoundConditionalVisibility = ({
        conditionData,
        newSkuItem,
        node
      }) => {
        const { condition } = conditionData;
        const skuConditionData = (0, import_transform2.default)(condition.fields, (data2, val2, field) => {
          const skuField = field.split("default-sku:");
          if (skuField.length > 1) {
            data2[skuField[1]] = val2;
            return data2;
          }
        });
        const inventoryQuantity = newSkuItem.inventory.type === "infinite" ? null : newSkuItem.inventory.quantity;
        const itemWithFlattenedInventory = {
          ...newSkuItem,
          ecSkuInventoryQuantity: inventoryQuantity
        };
        applyConditionToNode(
          node,
          itemWithFlattenedInventory,
          {
            ...conditionData,
            condition: { fields: skuConditionData }
          },
          true
        );
      };
      createStyleMutator = // @ts-expect-error - TS7006 - Parameter 'node' implicitly has an 'any' type. | TS7006 - Parameter 'type' implicitly has an 'any' type.
      (property2) => (node, type, value2) => {
        if (!(node instanceof HTMLElement && typeof value2 === "string")) {
          return;
        }
        if (type === "ImageRef") {
          node.style.setProperty(property2, `url(${value2})`);
        }
        node.style.setProperty(property2, value2);
      };
      createAttributeMutator = // @ts-expect-error - TS7006 - Parameter 'node' implicitly has an 'any' type. | TS7006 - Parameter 'type' implicitly has an 'any' type.
      (attribute) => (node, type, value2) => {
        const sanitizedString = value2 != null ? String(value2) : "";
        node.setAttribute(attribute, sanitizedString);
        if (attribute === "src" && sanitizedString) {
          removeWDynBindEmptyClass(node);
        }
      };
      valueMutator = (node, type, value2) => {
        if (node.hasRendered) {
          return;
        }
        let sanitizedString;
        if (node.tagName === "SELECT") {
          sanitizedString = value2 != null ? String(value2) : node.value || "";
        } else {
          sanitizedString = value2 != null ? String(value2) : "";
        }
        node.setAttribute("value", sanitizedString);
        if (node.tagName === "INPUT" && String(node.type).toLowerCase() === "text") {
          node.hasRendered = true;
        }
        node.value = sanitizedString;
      };
      checkedMutator = (node, type, value2) => {
        node.checked = Boolean(value2);
      };
      aspectRatio = ({ height: height2, width: width2 }) => {
        return height2 && width2 ? height2 / width2 : 0;
      };
      mutators = {
        // @ts-expect-error - TS7006 - Parameter 'node' implicitly has an 'any' type. | TS7006 - Parameter 'type' implicitly has an 'any' type. | TS7006 - Parameter 'value' implicitly has an 'any' type.
        innerHTML: (node, type, value2) => {
          const originalValue = value2;
          if (type === "Video") {
            value2 = value2 != null && value2.metadata != null && typeof value2.metadata.html === "string" ? value2.metadata.html : null;
          }
          const valueString = value2 != null ? String(value2) : "";
          if (allowedFieldTypes.innerHTML[type] === "innerHTML") {
            node.innerHTML = valueString;
          } else if (allowedFieldTypes.innerHTML[type] === "innerText") {
            node.innerHTML = (0, import_escape2.default)(valueString);
          }
          if (type === "Video" && originalValue && originalValue.metadata && node instanceof HTMLElement) {
            node.style.setProperty(
              "padding-top",
              `${aspectRatio(originalValue.metadata) * 100}%`
            );
          }
          if (node.innerHTML) {
            removeWDynBindEmptyClass(node);
          }
        },
        "style.color": createStyleMutator("color"),
        "style.background-color": createStyleMutator("background-color"),
        "style.border-color": createStyleMutator("border-color"),
        "style.background-image": createStyleMutator("background-image"),
        src: createAttributeMutator("src"),
        alt: createAttributeMutator("alt"),
        id: createAttributeMutator("id"),
        for: createAttributeMutator("for"),
        value: valueMutator,
        checked: checkedMutator,
        "data-commerce-sku-id": createAttributeMutator("data-commerce-sku-id")
      };
      hrefMutator = (emailLinkSubject) => (node, type, value2) => {
        if (value2) {
          const href = String(value2);
          switch (type) {
            case "Phone": {
              node.setAttribute("href", formatPhone(href, "href"));
              break;
            }
            case "Email": {
              let subject;
              try {
                subject = encodeURIComponent(emailLinkSubject);
              } catch (e) {
                subject = "";
              }
              const formattedEmail = formatEmail(href, subject, "href");
              node.setAttribute("href", formattedEmail || "#");
              break;
            }
            default: {
              node.setAttribute("href", href);
              break;
            }
          }
        } else {
          node.setAttribute("href", "#");
        }
      };
      getPropertyMutator = (bindingProperty, emailLinkSubject) => {
        if (bindingProperty === "href" || bindingProperty === "dataWHref") {
          return hrefMutator(emailLinkSubject);
        }
        if (typeof mutators[bindingProperty] === "function") {
          return mutators[bindingProperty];
        }
        return null;
      };
      getCommercePropValue = (data2, path) => {
        const option = getIn2(data2, path);
        if (option) {
          const pathToOptionAsArray = path.split(".");
          const pathToCommercePropValues = pathToOptionAsArray.slice(0, pathToOptionAsArray.indexOf("product")).concat(["sku", "f_sku_values_3dr"]).join(".");
          const skuValues = getIn2(data2, pathToCommercePropValues);
          if (Array.isArray(skuValues)) {
            return getProductOptionValueName(option, simplifySkuValues(skuValues));
          }
        }
        return "";
      };
      getTemplateScript = (node) => {
        const templateId = node.getAttribute(WF_TEMPLATE_ID_DATA_KEY);
        const templateScript = templateId && node.parentElement && node.parentElement.querySelector(`#${templateId}`);
        return templateScript;
      };
      createDomFragment = (html) => {
        const div2 = document.createElement("div");
        div2.innerHTML = html;
        return div2.children[0];
      };
      getTemplateString = (node, index2) => {
        const templateScript = getTemplateScript(node);
        const rawTemplateContent = templateScript && templateScript.textContent;
        const instanceRegEx = /([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}_instance-)\d+/gi;
        const decodedTemplate = rawTemplateContent && decodeURIComponent(rawTemplateContent).replace(instanceRegEx, `$1${index2}`);
        if (Boolean(decodedTemplate) && node.hasAttribute(WF_COLLECTION_DATA_KEY)) {
          const collectionPath = node.getAttribute(WF_COLLECTION_DATA_KEY);
          if (collectionPath && typeof collectionPath === "string") {
            const searchTerm = encodeURIComponent(
              `${(0, import_escape2.default)(collectionPath)}[]`
            ).replace(/\./g, "\\.");
            const templateSearchTerm = encodeURIComponent(
              `${(0, import_escape2.default)(collectionPath)}${encodeURIComponent("[]")}`
            ).replace(/\./g, "\\.");
            const collectionPathRegExp = new RegExp(
              `${searchTerm}|${templateSearchTerm}`,
              "g"
            );
            return decodedTemplate && decodedTemplate.replace(
              collectionPathRegExp,
              `${collectionPath}.${index2}`
            );
          }
        }
        return decodedTemplate;
      };
      getTemplateCollection = (node, data2) => {
        const collectionPath = node.hasAttribute(WF_COLLECTION_DATA_KEY) && node.getAttribute(WF_COLLECTION_DATA_KEY);
        return collectionPath ? getIn2(data2, `data.${collectionPath}`) : [];
      };
      checkForAndApplyTemplateCollection = (node, data2) => {
        if (node && node.hasAttribute(WF_TEMPLATE_ID_DATA_KEY)) {
          const collection = getTemplateCollection(node, data2);
          node.innerHTML = "";
          if (collection != null && collection.length > 0) {
            for (let index2 = 0; index2 < collection.length; index2++) {
              const templateString = getTemplateString(node, index2);
              const template = templateString && createDomFragment(templateString);
              if (template instanceof Element) {
                if (typeof node.append === "function") {
                  node.append(renderTree(template, data2));
                } else if (typeof node.appendChild === "function") {
                  node.appendChild(renderTree(template, data2));
                } else {
                  throw new Error("Could not append child to node");
                }
              }
            }
          }
        }
      };
      checkForAndApplyBindings = (node, data2) => {
        if (node && node.hasAttribute(WF_BINDING_DATA_KEY)) {
          const bindingData = safeParseJson(node.getAttribute(WF_BINDING_DATA_KEY));
          applyBindings(bindingData, data2, node);
        }
      };
      checkForAndApplyConditionalVisibility = (node, data2) => {
        if (node && node.hasAttribute(WF_CONDITION_DATA_KEY)) {
          const conditionData = safeParseJson(
            node.getAttribute(WF_CONDITION_DATA_KEY)
          );
          applyConditionalVisibility(conditionData, data2, node);
        }
      };
      renderTree = (tree, data2) => {
        data2 = flattenOrderData(data2);
        return walkDOM(tree, (node) => {
          checkForAndApplyTemplateCollection(node, data2);
          checkForAndApplyBindings(node, data2);
          checkForAndApplyConditionalVisibility(node, data2);
        });
      };
      shippingDataReplacementPaths = {
        cardProvider: ["customerInfo", "stripePayment", "card", "provider"],
        cardLastFour: ["customerInfo", "stripePayment", "card", "last4"],
        cardExpiresMonth: [
          "customerInfo",
          "stripePayment",
          "card",
          "expires",
          "month"
        ],
        cardExpiresYear: ["customerInfo", "stripePayment", "card", "expires", "year"],
        customerEmail: ["customerInfo", "identity", "email"],
        shippingAddressAddressee: ["customerInfo", "shippingAddress", "addressee"],
        shippingAddressLine1: ["customerInfo", "shippingAddress", "line1"],
        shippingAddressLine2: ["customerInfo", "shippingAddress", "line2"],
        shippingAddressCity: ["customerInfo", "shippingAddress", "city"],
        shippingAddressState: ["customerInfo", "shippingAddress", "state"],
        shippingAddressCountry: ["customerInfo", "shippingAddress", "country"],
        shippingAddressPostalCode: ["customerInfo", "shippingAddress", "postalCode"],
        billingAddressAddressee: ["customerInfo", "billingAddress", "addressee"],
        billingAddressLine1: ["customerInfo", "billingAddress", "line1"],
        billingAddressLine2: ["customerInfo", "billingAddress", "line2"],
        billingAddressCity: ["customerInfo", "billingAddress", "city"],
        billingAddressPostalCode: ["customerInfo", "billingAddress", "postalCode"],
        billingAddressState: ["customerInfo", "billingAddress", "state"],
        billingAddressCountry: ["customerInfo", "billingAddress", "country"],
        requiresShipping: ["statusFlags", "requiresShipping"],
        hasDownloads: ["statusFlags", "hasDownloads"]
      };
      flattenCustomData = (customData) => (
        // @ts-expect-error - Flow 0.121.0
        customData.reduce((flattenedData, data2) => {
          if (data2.textArea) {
            flattenedData.additionalTextArea = data2.textArea;
          } else if (data2.textInput) {
            flattenedData.additionalTextInput = data2.textInput;
          } else if (data2.checkbox !== null) {
            flattenedData.additionalCheckbox = data2.checkbox;
          }
          return flattenedData;
        }, {})
      );
      flattenOrderData = (data2) => {
        const orderExists = data2 && data2.data && data2.data.database && data2.data.database.commerceOrder !== null;
        if (!orderExists) {
          return data2;
        }
        const { commerceOrder } = data2.data.database;
        const paymentProcessor = commerceOrder.paymentProcessor;
        const availableShippingMethods = commerceOrder.availableShippingMethods || [];
        const selectedShippingMethod = availableShippingMethods.find(
          // @ts-expect-error - TS7006 - Parameter 'shippingMethod' implicitly has an 'any' type.
          (shippingMethod) => shippingMethod.selected === true
        );
        const flattenedCustomData = commerceOrder.customData ? flattenCustomData(commerceOrder.customData) : {};
        const flattenedOrderData = {
          ...commerceOrder,
          shippingMethodName: selectedShippingMethod && selectedShippingMethod.name,
          shippingMethodDescription: selectedShippingMethod && selectedShippingMethod.description,
          ...flattenedCustomData
        };
        const clonedData = (0, import_cloneDeep.default)(data2);
        clonedData.data.database.commerceOrder = Object.keys(
          shippingDataReplacementPaths
        ).reduce((updatedData, flattenPath) => {
          if (flattenPath === "cardProvider" && paymentProcessor === "paypal") {
            updatedData = {
              ...updatedData,
              cardProvider: "PayPal"
            };
            return updatedData;
          }
          const replacementFrom = shippingDataReplacementPaths[flattenPath];
          const replacementData = replacementFrom.reduce(
            (acc, key2) => acc && acc[key2],
            updatedData
          );
          updatedData[flattenPath] = replacementData;
          return updatedData;
        }, flattenedOrderData);
        return clonedData;
      };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/addToCartStore.ts
  var initialState4, createNewStore;
  var init_addToCartStore = __esm({
    "packages/shared/render/plugins/Commerce/modules/addToCartStore.ts"() {
      "use strict";
      initialState4 = {
        selectedSku: "",
        skuValues: {},
        requiresUserSession: false
      };
      createNewStore = () => {
        const store = {};
        const watchers = {};
        const fetchFromStore2 = (instanceId, key2) => {
          return store[instanceId] ? store[instanceId][key2] : void 0;
        };
        const updateStore2 = (instanceId, newValues) => {
          if (!store[instanceId]) {
            store[instanceId] = { ...initialState4 };
          }
          for (const key2 of Object.keys(newValues)) {
            if (!store[instanceId].hasOwnProperty(key2)) {
              continue;
            }
            const previousValue = store[instanceId][key2];
            store[instanceId][key2] = newValues[key2];
            if (watchers[instanceId] && watchers[instanceId][key2]) {
              for (const watcher of watchers[instanceId][key2]) {
                watcher(newValues[key2], previousValue);
              }
            }
          }
        };
        const addStoreWatcher2 = (instanceId, key2, cb) => {
          if (!watchers[instanceId]) {
            watchers[instanceId] = {};
          }
          if (watchers[instanceId][key2]) {
            watchers[instanceId][key2].push(cb);
          } else {
            watchers[instanceId][key2] = [cb];
          }
        };
        return { fetchFromStore: fetchFromStore2, updateStore: updateStore2, addStoreWatcher: addStoreWatcher2 };
      };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/components/PillGroup/index.ts
  var KEY_CODES, PillGroups, PillGroup, Pill;
  var init_PillGroup = __esm({
    "packages/shared/render/plugins/Commerce/modules/components/PillGroup/index.ts"() {
      "use strict";
      init_constants();
      KEY_CODES = Object.freeze({
        RETURN: 13,
        SPACE: 32,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40
      });
      PillGroups = class {
        form;
        pillGroups;
        onSelect;
        static hasPillGroups(form) {
          return form.querySelectorAll(
            `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_PILL_GROUP}"]`
          ).length > 0;
        }
        constructor(form, onSelect) {
          this.form = form;
          this.pillGroups = {};
          this.onSelect = onSelect;
        }
        init() {
          const groupNodes = this.form.querySelectorAll(
            `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_PILL_GROUP}"]`
          );
          for (const group of groupNodes) {
            const pillGroup = new PillGroup(group, this.onSelect, this);
            pillGroup.init();
            this.pillGroups[pillGroup.optionSetId] = pillGroup;
          }
        }
        setSelectedPillsForSkuValues(skuValues) {
          for (const optionSetId of Object.keys(skuValues)) {
            const optionId = skuValues[optionSetId];
            const pillGroup = this.pillGroups[optionSetId];
            if (pillGroup) {
              const pill = pillGroup.findPillById(String(optionId));
              pillGroup.updatePillsWithNewSelected(pill);
            }
          }
        }
      };
      PillGroup = class {
        node;
        optionSetId;
        onSelect;
        pills;
        groups;
        constructor(node, onSelect, groups) {
          this.node = node;
          this.optionSetId = String(
            node.getAttribute(DATA_ATTR_COMMERCE_OPTION_SET_ID)
          );
          this.onSelect = onSelect;
          this.pills = [];
          this.groups = groups;
        }
        get firstEnabledPill() {
          return this.pills.find((pill) => pill.disabled === false);
        }
        // hacky fake option set compat
        get value() {
          const possiblePill = this.pills.find((pill) => pill.checked === true);
          return possiblePill ? possiblePill.value : "";
        }
        // hacky fake option set compat
        get options() {
          return this.pills;
        }
        // hacky fake option set compat
        // eslint-disable-next-line accessor-pairs
        set selectedIndex(index2) {
          const pill = this.pills[index2] || null;
          this.emitSelected(pill);
        }
        // hacky fake option set compat
        // we only want to support the one DOM attribute, which we have on this group, just not
        // directly exposed, as we don't directly expose the DOM element for the group
        getAttribute(attr) {
          if (attr === DATA_ATTR_COMMERCE_OPTION_SET_ID) {
            return this.optionSetId;
          } else {
            throw new Error(
              `PillGroup: Attempted to fetch unsupported attribute ${attr}`
            );
          }
        }
        init() {
          const pills = this.node.querySelectorAll(
            `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_PILL}"]`
          );
          this.pills = Array.from(pills).map((pillNode) => {
            const pill = new Pill(pillNode, this);
            pill.init();
            return pill;
          });
          if (this.firstEnabledPill) {
            this.firstEnabledPill.tabIndex = 0;
          }
          this.node._wfPillGroup = this;
        }
        findPillById(optionId) {
          return this.pills.find((pill) => pill.optionId === optionId);
        }
        updatePillsWithNewSelected(selectedPill) {
          for (const pill of this.pills) {
            pill.tabIndex = -1;
            pill.checked = false;
          }
          if (selectedPill instanceof Pill) {
            selectedPill.tabIndex = 0;
            selectedPill.checked = true;
          } else {
            if (this.firstEnabledPill) {
              this.firstEnabledPill.tabIndex = 0;
            }
          }
        }
        emitSelected(selectedPill) {
          this.onSelect({
            optionId: selectedPill.optionId,
            optionSetId: this.optionSetId,
            groups: Object.values(this.groups.pillGroups)
          });
        }
        traverseAndEmitSelected(currentPill, direction) {
          const currentIndex = this.pills.indexOf(currentPill);
          let found = false;
          let idx = currentIndex;
          let nextIndex;
          while (!found) {
            if (direction === "previous") {
              nextIndex = idx - 1;
              if (nextIndex < 0) {
                nextIndex = this.pills.length - 1;
              }
            } else if (direction === "next") {
              nextIndex = idx + 1;
              if (nextIndex === this.pills.length) {
                nextIndex = 0;
              }
            } else {
              throw new Error(
                `Unknown pill traversal direction "${direction}", use "previous" or "next"`
              );
            }
            if (nextIndex === currentIndex) {
              break;
            }
            const pill = this.pills[nextIndex];
            if (!pill.disabled) {
              this.emitSelected(pill);
              pill.focus();
              found = true;
            } else {
              idx = nextIndex;
            }
          }
        }
      };
      Pill = class {
        node;
        optionId;
        group;
        constructor(node, group) {
          this.node = node;
          this.optionId = String(this.node.getAttribute("data-option-id"));
          this.group = group;
        }
        init() {
          this.tabIndex = -1;
          this.checked = false;
          this.node.addEventListener("keydown", this.handleKeyDown);
          this.node.addEventListener("click", this.handleClick);
        }
        get tabIndex() {
          return this.node.tabIndex;
        }
        set tabIndex(index2) {
          this.node.tabIndex = index2;
        }
        get value() {
          return this.optionId;
        }
        get checked() {
          return this.node.getAttribute("aria-checked") === "true";
        }
        set checked(checked) {
          this.node.setAttribute("aria-checked", String(checked));
          if (checked) {
            this.node.classList.add("w--ecommerce-pill-selected");
          } else {
            this.node.classList.remove("w--ecommerce-pill-selected");
          }
        }
        get disabled() {
          return this.node.getAttribute("aria-disabled") === "true";
        }
        set disabled(disabled) {
          this.node.setAttribute("aria-disabled", String(disabled));
          if (disabled) {
            this.node.classList.add("w--ecommerce-pill-disabled");
            this.checked = false;
            this.tabIndex = -1;
          } else {
            this.node.classList.remove("w--ecommerce-pill-disabled");
          }
        }
        get enabled() {
          return !this.disabled;
        }
        set enabled(enabled) {
          this.disabled = !enabled;
        }
        focus() {
          this.node.focus();
        }
        handleKeyDown = (ev) => {
          let eventHandled = false;
          if (ev.altKey || ev.metaKey) {
            return;
          }
          switch (ev.keyCode) {
            case KEY_CODES.RETURN:
            case KEY_CODES.SPACE:
              this.handleClick();
              eventHandled = true;
              break;
            case KEY_CODES.UP:
            case KEY_CODES.LEFT:
              this.group.traverseAndEmitSelected(this, "previous");
              eventHandled = true;
              break;
            case KEY_CODES.DOWN:
            case KEY_CODES.RIGHT:
              this.group.traverseAndEmitSelected(this, "next");
              eventHandled = true;
              break;
            default:
              break;
          }
          if (eventHandled) {
            ev.stopPropagation();
            ev.preventDefault();
          }
        };
        handleClick = () => {
          if (this.disabled || this.checked) {
            return;
          }
          this.focus();
          this.group.emitSelected(this);
        };
      };
    }
  });

  // node_modules/promise-polyfill/src/finally.js
  function finally_default(callback) {
    var constructor = this.constructor;
    return this.then(
      function(value2) {
        return constructor.resolve(callback()).then(function() {
          return value2;
        });
      },
      function(reason) {
        return constructor.resolve(callback()).then(function() {
          return constructor.reject(reason);
        });
      }
    );
  }
  var init_finally = __esm({
    "node_modules/promise-polyfill/src/finally.js"() {
    }
  });

  // node_modules/promise-polyfill/src/index.js
  function noop() {
  }
  function bind2(fn, thisArg) {
    return function() {
      fn.apply(thisArg, arguments);
    };
  }
  function Promise2(fn) {
    if (!(this instanceof Promise2))
      throw new TypeError("Promises must be constructed via new");
    if (typeof fn !== "function")
      throw new TypeError("not a function");
    this._state = 0;
    this._handled = false;
    this._value = void 0;
    this._deferreds = [];
    doResolve(fn, this);
  }
  function handle(self2, deferred) {
    while (self2._state === 3) {
      self2 = self2._value;
    }
    if (self2._state === 0) {
      self2._deferreds.push(deferred);
      return;
    }
    self2._handled = true;
    Promise2._immediateFn(function() {
      var cb = self2._state === 1 ? deferred.onFulfilled : deferred.onRejected;
      if (cb === null) {
        (self2._state === 1 ? resolve : reject)(deferred.promise, self2._value);
        return;
      }
      var ret;
      try {
        ret = cb(self2._value);
      } catch (e) {
        reject(deferred.promise, e);
        return;
      }
      resolve(deferred.promise, ret);
    });
  }
  function resolve(self2, newValue) {
    try {
      if (newValue === self2)
        throw new TypeError("A promise cannot be resolved with itself.");
      if (newValue && (typeof newValue === "object" || typeof newValue === "function")) {
        var then = newValue.then;
        if (newValue instanceof Promise2) {
          self2._state = 3;
          self2._value = newValue;
          finale(self2);
          return;
        } else if (typeof then === "function") {
          doResolve(bind2(then, newValue), self2);
          return;
        }
      }
      self2._state = 1;
      self2._value = newValue;
      finale(self2);
    } catch (e) {
      reject(self2, e);
    }
  }
  function reject(self2, newValue) {
    self2._state = 2;
    self2._value = newValue;
    finale(self2);
  }
  function finale(self2) {
    if (self2._state === 2 && self2._deferreds.length === 0) {
      Promise2._immediateFn(function() {
        if (!self2._handled) {
          Promise2._unhandledRejectionFn(self2._value);
        }
      });
    }
    for (var i = 0, len = self2._deferreds.length; i < len; i++) {
      handle(self2, self2._deferreds[i]);
    }
    self2._deferreds = null;
  }
  function Handler(onFulfilled, onRejected, promise) {
    this.onFulfilled = typeof onFulfilled === "function" ? onFulfilled : null;
    this.onRejected = typeof onRejected === "function" ? onRejected : null;
    this.promise = promise;
  }
  function doResolve(fn, self2) {
    var done = false;
    try {
      fn(
        function(value2) {
          if (done)
            return;
          done = true;
          resolve(self2, value2);
        },
        function(reason) {
          if (done)
            return;
          done = true;
          reject(self2, reason);
        }
      );
    } catch (ex) {
      if (done)
        return;
      done = true;
      reject(self2, ex);
    }
  }
  var setTimeoutFunc, src_default;
  var init_src = __esm({
    "node_modules/promise-polyfill/src/index.js"() {
      init_finally();
      setTimeoutFunc = setTimeout;
      Promise2.prototype["catch"] = function(onRejected) {
        return this.then(null, onRejected);
      };
      Promise2.prototype.then = function(onFulfilled, onRejected) {
        var prom = new this.constructor(noop);
        handle(this, new Handler(onFulfilled, onRejected, prom));
        return prom;
      };
      Promise2.prototype["finally"] = finally_default;
      Promise2.all = function(arr) {
        return new Promise2(function(resolve2, reject2) {
          if (!arr || typeof arr.length === "undefined")
            throw new TypeError("Promise.all accepts an array");
          var args = Array.prototype.slice.call(arr);
          if (args.length === 0)
            return resolve2([]);
          var remaining = args.length;
          function res(i2, val2) {
            try {
              if (val2 && (typeof val2 === "object" || typeof val2 === "function")) {
                var then = val2.then;
                if (typeof then === "function") {
                  then.call(
                    val2,
                    function(val3) {
                      res(i2, val3);
                    },
                    reject2
                  );
                  return;
                }
              }
              args[i2] = val2;
              if (--remaining === 0) {
                resolve2(args);
              }
            } catch (ex) {
              reject2(ex);
            }
          }
          for (var i = 0; i < args.length; i++) {
            res(i, args[i]);
          }
        });
      };
      Promise2.resolve = function(value2) {
        if (value2 && typeof value2 === "object" && value2.constructor === Promise2) {
          return value2;
        }
        return new Promise2(function(resolve2) {
          resolve2(value2);
        });
      };
      Promise2.reject = function(value2) {
        return new Promise2(function(resolve2, reject2) {
          reject2(value2);
        });
      };
      Promise2.race = function(values2) {
        return new Promise2(function(resolve2, reject2) {
          for (var i = 0, len = values2.length; i < len; i++) {
            values2[i].then(resolve2, reject2);
          }
        });
      };
      Promise2._immediateFn = typeof setImmediate === "function" && function(fn) {
        setImmediate(fn);
      } || function(fn) {
        setTimeoutFunc(fn, 0);
      };
      Promise2._unhandledRejectionFn = function _unhandledRejectionFn(err) {
        if (typeof console !== "undefined" && console) {
          console.warn("Possible Unhandled Promise Rejection:", err);
        }
      };
      src_default = Promise2;
    }
  });

  // node_modules/promise-polyfill/src/polyfill.js
  var polyfill_exports = {};
  var globalNS;
  var init_polyfill2 = __esm({
    "node_modules/promise-polyfill/src/polyfill.js"() {
      init_src();
      init_finally();
      globalNS = function() {
        if (typeof self !== "undefined") {
          return self;
        }
        if (typeof window !== "undefined") {
          return window;
        }
        if (typeof global !== "undefined") {
          return global;
        }
        throw new Error("unable to locate global object");
      }();
      if (!globalNS.Promise) {
        globalNS.Promise = src_default;
      } else if (!globalNS.Promise.prototype["finally"]) {
        globalNS.Promise.prototype["finally"] = finally_default;
      }
    }
  });

  // node_modules/unfetch/dist/unfetch.js
  var require_unfetch = __commonJS({
    "node_modules/unfetch/dist/unfetch.js"(exports2, module2) {
      var e = "function" == typeof fetch ? fetch.bind() : function(e2, t) {
        return t = t || {}, new Promise(function(n, r) {
          function s() {
            var e3, t2 = [], n2 = [], r2 = {};
            return o.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function(s2, o2, u2) {
              t2.push(o2 = o2.toLowerCase()), n2.push([o2, u2]), e3 = r2[o2], r2[o2] = e3 ? e3 + "," + u2 : u2;
            }), { ok: 2 == (o.status / 100 | 0), status: o.status, statusText: o.statusText, url: o.responseURL, clone: s, text: function() {
              return Promise.resolve(o.responseText);
            }, json: function() {
              return Promise.resolve(o.responseText).then(JSON.parse);
            }, blob: function() {
              return Promise.resolve(new Blob([o.response]));
            }, headers: { keys: function() {
              return t2;
            }, entries: function() {
              return n2;
            }, get: function(e4) {
              return r2[e4.toLowerCase()];
            }, has: function(e4) {
              return e4.toLowerCase() in r2;
            } } };
          }
          var o = new XMLHttpRequest();
          o.open(t.method || "get", e2, true);
          for (var u in t.headers)
            o.setRequestHeader(u, t.headers[u]);
          o.withCredentials = "include" == t.credentials, o.onload = function() {
            n(s());
          }, o.onerror = r, o.send(t.body);
        });
      };
      module2.exports = e;
    }
  });

  // node_modules/unfetch/polyfill.js
  var require_polyfill = __commonJS({
    "node_modules/unfetch/polyfill.js"() {
      if (!window.fetch)
        window.fetch = require_unfetch().default || require_unfetch();
    }
  });

  // packages/systems/users/siteBundles/utils.ts
  var utils_exports = {};
  __export(utils_exports, {
    addHiddenClass: () => addHiddenClass,
    disableSubmit: () => disableSubmit,
    getDomParser: () => getDomParser,
    getErrorAttrName: () => getErrorAttrName,
    getRedirectPath: () => getRedirectPath,
    getSignupErrorCode: () => getSignupErrorCode,
    handleErrorNode: () => handleErrorNode,
    handleRedirect: () => handleRedirect,
    hideElement: () => hideElement2,
    redirectWithUsrdir: () => redirectWithUsrdir,
    removeHiddenClass: () => removeHiddenClass,
    resetSubmit: () => resetSubmit,
    showAndFocusElement: () => showAndFocusElement,
    showElement: () => showElement2,
    userFormError: () => userFormError,
    userSystemsRequestClient: () => userSystemsRequestClient
  });
  function addHiddenClass(el) {
    if (el) {
      el.classList.add("w-hidden");
    }
  }
  function removeHiddenClass(el) {
    if (el) {
      el.classList.remove("w-hidden");
    }
  }
  function showElement2(el) {
    if (el) {
      el.style.display = "block";
    }
  }
  function showAndFocusElement(el) {
    if (el) {
      el.style.display = "block";
      el.focus();
    }
  }
  function hideElement2(el) {
    if (el) {
      el.style.display = "none";
    }
  }
  function getDomParser() {
    const domParser = new window.DOMParser();
    return {
      /**
       * Returns an html node for an encoded string
       * @param {string} str - Encoded string to parse
       */
      getHtmlFromString(str) {
        const decodedString = decodeURIComponent(str);
        const parsedHtml = domParser.parseFromString(decodedString, "text/html");
        if (!parsedHtml || !parsedHtml.body || !parsedHtml.body.firstChild)
          return null;
        return parsedHtml.body.firstChild;
      }
    };
  }
  function disableSubmit(submit) {
    if (!submit)
      return "";
    submit.setAttribute("disabled", "true");
    const value2 = submit.getAttribute("value");
    const waitText = submit.getAttribute("data-wait");
    if (waitText)
      submit.setAttribute("value", waitText);
    return value2 ?? "";
  }
  function resetSubmit(submit, text2) {
    if (!submit)
      return;
    submit.removeAttribute("disabled");
    submit.setAttribute("value", text2);
  }
  function getRedirectPath() {
    const queryString2 = window.location.search;
    const redirectParam = queryString2.match(/[?|&]usredir=([^@&?=]+)/g);
    if (!redirectParam)
      return void 0;
    const encodedPath = redirectParam[0].substring("?usredir=".length);
    return decodeURIComponent(encodedPath);
  }
  function redirectWithUsrdir(location) {
    const redirectParam = getRedirectPath();
    let encodedPath;
    if (redirectParam) {
      encodedPath = redirectParam[0].substring("?usredir=".length);
    } else {
      encodedPath = encodeURIComponent(window.location.pathname);
    }
    window.location = location + `?usredir=${encodedPath}`;
  }
  function normalizedRedirectPath(path) {
    const hasLeadingSymbol = /\/|\.|\@/g.test(path[0]);
    return hasLeadingSymbol ? path.substring(1) : path;
  }
  function handleRedirect(defaultRedirectPath, includeDelay = false) {
    const redirectPath = getRedirectPath();
    const redirectUrl = (() => {
      if (redirectPath) {
        return `${window.location.origin}/${normalizedRedirectPath(
          redirectPath
        )}`;
      }
      if (defaultRedirectPath) {
        return `${window.location.origin}/${normalizedRedirectPath(
          defaultRedirectPath
        )}`;
      }
      return;
    })();
    if (!redirectUrl)
      return;
    return includeDelay ? (
      // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
      setTimeout(() => window.Webflow.location(redirectUrl), 3e3)
    ) : (
      // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
      window.Webflow.location(redirectUrl)
    );
  }
  var GQL_QUERY_PATH, userSystemsRequestClient, getErrorAttrName, handleErrorNode, wrapperSelectors, setErrorMsg, handleValidationErrors, defaultErrorCopy, userFormError, getSignupErrorCode;
  var init_utils4 = __esm({
    "packages/systems/users/siteBundles/utils.ts"() {
      "use strict";
      init_apolloClient();
      init_constants2();
      GQL_QUERY_PATH = "/.wf_graphql/usys/apollo";
      userSystemsRequestClient = createApolloClient({
        path: GQL_QUERY_PATH,
        useCsrf: true,
        retryConfig: {
          maxAttempts: 5
        }
      });
      getErrorAttrName = (errorAttr, errorCode) => {
        const formattedErrorCode = errorCode.replace("_", "-").toLowerCase();
        return `${errorAttr}-${formattedErrorCode}-error`;
      };
      handleErrorNode = (errorMsgNode4, errorStateNode, errorCode, errorAttrPrefix, defaultErrorCopy5) => {
        const errorAttr = getErrorAttrName(errorAttrPrefix, errorCode);
        const errorCopy = errorMsgNode4 && errorMsgNode4.getAttribute(errorAttr);
        errorMsgNode4.setAttribute("aria-live", "assertive");
        errorMsgNode4.textContent = errorCopy ? errorCopy : defaultErrorCopy5;
        showElement2(errorStateNode);
      };
      wrapperSelectors = [".w-file-upload-error"];
      setErrorMsg = (wrapper, fieldElements, name2) => {
        for (let i = 0; i < fieldElements.length; ++i) {
          const errorText = fieldElements[i].getAttribute(name2);
          if (errorText) {
            fieldElements[i].innerHTML = errorText;
            removeHiddenClass(wrapper);
            return true;
          }
        }
      };
      handleValidationErrors = (form, failedValidations) => {
        const wrappers = [];
        wrapperSelectors.forEach((wrapperSelector) => {
          const _wrappers = form.querySelectorAll(wrapperSelector);
          for (let i = 0; i < _wrappers.length; ++i) {
            wrappers.push(_wrappers[i]);
          }
        });
        wrappers.forEach((wrapper) => {
          for (let i = 0; i < failedValidations.length; ++i) {
            const failedValidation = failedValidations[i];
            const name2 = failedValidation.name;
            const fieldId = failedValidation.fieldId;
            const fieldElements = wrapper.querySelectorAll(
              "[" + USYS_DATA_ATTRS.field + '="' + fieldId + '"]'
            );
            if (fieldElements && setErrorMsg(wrapper, fieldElements, name2)) {
              break;
            }
          }
        });
      };
      defaultErrorCopy = // @ts-expect-error - TS2532 - Object is possibly 'undefined'.
      signUpErrorStates[SIGNUP_UI_ERROR_CODES.GENERAL_ERROR].copy;
      userFormError = (form, errorState4, formType) => (error) => {
        if (errorState4 === null || form === null)
          return;
        const errorMsgNode4 = errorState4.querySelector(`.${ERROR_MSG_CLASS}`);
        const failedValidations = error.graphQLErrors?.[0]?.failedValidations;
        if (failedValidations) {
          handleValidationErrors(form, failedValidations);
        }
        const elementErrorCode = error?.graphQLErrors?.[0]?.code ?? "";
        const errorCode = getSignupErrorCode(elementErrorCode);
        handleErrorNode(
          errorMsgNode4,
          errorState4,
          errorCode,
          ERROR_ATTRIBUTE_PREFIX[formType],
          defaultErrorCopy
        );
      };
      getSignupErrorCode = (error) => {
        let errorCode;
        switch (error) {
          case "UsysInvalidUserData":
            errorCode = SIGNUP_UI_ERROR_CODES.VALIDATION_FAILED;
            break;
          case "UsysUnauthorizedEmail":
            errorCode = SIGNUP_UI_ERROR_CODES.NOT_ALLOWED;
            break;
          case "UsysMustUseInvitation":
            errorCode = SIGNUP_UI_ERROR_CODES.USE_INVITE_EMAIL;
            break;
          case "UsysDuplicateEmail":
            errorCode = SIGNUP_UI_ERROR_CODES.EMAIL_ALREADY_EXIST;
            break;
          case "UsysInvalidEmail":
            errorCode = SIGNUP_UI_ERROR_CODES.INVALID_EMAIL;
            break;
          case "UsysInvalidPassword":
            errorCode = SIGNUP_UI_ERROR_CODES.INVALID_PASSWORD;
            break;
          case "UsysInvalidToken":
            errorCode = SIGNUP_UI_ERROR_CODES.NOT_VERIFIED;
            break;
          case "UsysExpiredToken":
            errorCode = SIGNUP_UI_ERROR_CODES.EXPIRED_TOKEN;
            break;
          default:
            errorCode = SIGNUP_UI_ERROR_CODES.GENERAL_ERROR;
        }
        return errorCode;
      };
    }
  });

  // packages/systems/users/siteBundles/mutations.ts
  var mutations_exports = {};
  __export(mutations_exports, {
    buildUpdateUsysUserDataMutation: () => buildUpdateUsysUserDataMutation,
    cancelSubscriptionMutation: () => cancelSubscriptionMutation,
    getUploadURLMutation: () => getUploadURLMutation,
    loginMutation: () => loginMutation,
    logoutMutation: () => logoutMutation,
    resetPasswordMutation: () => resetPasswordMutation,
    signupMutation: () => signupMutation,
    updatePasswordMutation: () => updatePasswordMutation,
    verifyEmailMutation: () => verifyEmailMutation
  });
  function buildUpdateUsysUserDataMutation(dataFields) {
    return lib_default2`
    mutation UpdateUsysUserData(
      $data: usys_update_user_data!
    ) {
      usysUpdateUserData(
        data: $data
    ) {
      data {
      ${dataFields.map((field) => {
      const base = `${field.key}: ${field.type}(id: "${field.id}")`;
      if (field.type === "option") {
        return base + "{\n slug \n}";
      }
      if (field.type === "fileRef") {
        return base + "{\n id \n}";
      }
      return base;
    }).join("\n")}
        }
      }
    }
  `;
  }
  var loginMutation, signupMutation, logoutMutation, resetPasswordMutation, updatePasswordMutation, verifyEmailMutation, cancelSubscriptionMutation, getUploadURLMutation;
  var init_mutations = __esm({
    "packages/systems/users/siteBundles/mutations.ts"() {
      "use strict";
      init_lib7();
      loginMutation = lib_default2`
  mutation UserLoginRequest($email: String!, $authPassword: String!) {
    usysCreateSession(email: $email, authPassword: $authPassword) {
      user {
        id
        email
        createdOn
        emailVerified
      }
    }
  }
`;
      signupMutation = lib_default2`
  mutation UserSignupRequest(
    $email: String!
    $name: String!
    $acceptPrivacy: Boolean
    $acceptCommunications: Boolean
    $authPassword: String!
    $inviteToken: String
    $captchaToken: String
    $redirectPath: String
    $data: usys_update_user_data
  ) {
    usysCreateUser(
      email: $email
      name: $name
      acceptPrivacy: $acceptPrivacy
      acceptCommunications: $acceptCommunications
      authPassword: $authPassword
      inviteToken: $inviteToken
      captchaToken: $captchaToken
      redirectPath: $redirectPath
      data: $data
    ) {
      user {
        id
        email
        name
        createdOn
        emailVerified
      }
    }
  }
`;
      logoutMutation = lib_default2`
  mutation UserLogoutRequest {
    usysDestroySession {
      ok
    }
  }
`;
      resetPasswordMutation = lib_default2`
  mutation UserResetPasswordRequest($email: String!) {
    usysResetPassword(email: $email) {
      ok
    }
  }
`;
      updatePasswordMutation = lib_default2`
  mutation UserUpdatePasswordRequest($authPassword: String!, $token: String!) {
    usysUpdatePassword(authPassword: $authPassword, token: $token) {
      ok
    }
  }
`;
      verifyEmailMutation = lib_default2`
  mutation UserVerifyEmail($verifyToken: String!, $redirectPath: String) {
    usysVerifyEmail(verifyToken: $verifyToken, redirectPath: $redirectPath) {
      ok
    }
  }
`;
      cancelSubscriptionMutation = lib_default2`
  mutation CancelSiteUserSubscription($subscriptionId: String!) {
    ecommerceCancelSubscriptionForSiteUser(subscriptionId: $subscriptionId) {
      ok
    }
  }
`;
      getUploadURLMutation = lib_default2`
  mutation getUploadURL($fieldId: String!, $filename: String!) {
    usysGetUploadURL(fieldId: $fieldId, filename: $filename) {
      presignedPOST {
        url
        fields {
          key
          value
        }
      }
      key
    }
  }
`;
    }
  });

  // packages/systems/users/siteBundles/login.ts
  var login_exports = {};
  __export(login_exports, {
    asyncLogInUser: () => asyncLogInUser,
    handleLogInForms: () => handleLogInForms,
    handleLoginRedirects: () => handleLoginRedirects
  });
  function getLoginLinks() {
    return Array.prototype.slice.call(document.links).filter((link) => link.getAttribute("href") === "/log-in");
  }
  function handleLoginRedirects() {
    getLoginLinks().forEach((link) => {
      const queryString2 = window.location.search;
      const redirectParam = queryString2.match(/\?usredir=([^&]+)/g);
      if (redirectParam) {
        link.href = link.href.concat(redirectParam[0]);
      }
    });
  }
  function getLoginForms() {
    const loginForms = document.querySelectorAll(loginFormQuerySelector);
    return Array.prototype.slice.call(loginForms).filter((loginForm) => loginForm instanceof HTMLFormElement);
  }
  function handleLogInForms() {
    getLoginForms().forEach((loginForm) => {
      loginForm.addEventListener("submit", (event) => {
        event.preventDefault();
        const form = event.currentTarget;
        if (!(form instanceof HTMLFormElement)) {
          return;
        }
        const submit = form.querySelector('input[type="submit"]');
        const submitText = disableSubmit(submit);
        hideElement2(errorState);
        const emailInput = form.querySelector(
          `input[${USYS_DATA_ATTRS.inputType}="${USYS_INPUT_TYPES.email}"]`
        );
        const passwordInput = form.querySelector(
          `input[${USYS_DATA_ATTRS.inputType}="${USYS_INPUT_TYPES.password}"]`
        );
        if (!(emailInput instanceof HTMLInputElement) || !(passwordInput instanceof HTMLInputElement)) {
          return;
        }
        const onSuccessRedirectUrl = form.getAttribute(
          USYS_DATA_ATTRS.redirectUrl
        );
        asyncLogInUser(emailInput.value, passwordInput.value).then(() => {
          handleRedirect(onSuccessRedirectUrl);
        }).catch((error) => {
          resetSubmit(submit, submitText);
          if (errorState) {
            const elementErrorCode = error?.graphQLErrors?.[0]?.code ?? "";
            const errorCode = getLogInErrorCode(elementErrorCode);
            handleErrorNode(
              errorMsgNode,
              // @ts-expect-error - TS2345 - Argument of type 'Element' is not assignable to parameter of type 'HTMLElement'.
              errorState,
              errorCode,
              ERROR_ATTRIBUTE_PREFIX.LOGIN,
              defaultErrorCopy2
            );
          }
        });
      });
    });
  }
  function asyncLogInUser(email, password) {
    return userSystemsRequestClient.mutate({
      mutation: loginMutation,
      variables: {
        email,
        authPassword: password
      }
    });
  }
  var loginFormQuerySelector, errorState, defaultErrorCopy2, errorMsgNode, getLogInErrorCode;
  var init_login = __esm({
    "packages/systems/users/siteBundles/login.ts"() {
      "use strict";
      init_utils4();
      init_constants2();
      init_mutations();
      loginFormQuerySelector = `form[${USYS_DATA_ATTRS.formType}="${USYS_FORM_TYPES.login}"]`;
      errorState = document.querySelector(`[${USYS_DATA_ATTRS.formError}]`);
      defaultErrorCopy2 = // @ts-expect-error - TS2532 - Object is possibly 'undefined'.
      logInErrorStates[LOGIN_UI_ERROR_CODES.GENERAL_ERROR].copy;
      errorMsgNode = document.querySelector(`.${ERROR_MSG_CLASS}`);
      getLogInErrorCode = (error) => {
        let errorCode;
        switch (error) {
          case "UsysInvalidCredentials":
            errorCode = LOGIN_UI_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD;
            break;
          default:
            errorCode = LOGIN_UI_ERROR_CODES.GENERAL_ERROR;
        }
        return errorCode;
      };
    }
  });

  // packages/systems/users/utils/universalUtils/index.ts
  var universalUtils_exports = {};
  __export(universalUtils_exports, {
    appendUserInputClasses: () => appendUserInputClasses,
    getTempUserFileKey: () => getTempUserFileKey,
    getUserFileKey: () => getUserFileKey,
    parseWfUsysVariant: () => parseWfUsysVariant,
    removeTempUserFileKey: () => removeTempUserFileKey,
    setTempUserFileKey: () => setTempUserFileKey,
    setUserFileKey: () => setUserFileKey,
    uploadFileToS3: () => uploadFileToS3
  });
  function uploadFileToS3(url, fields, file) {
    return new Promise(
      (resolve2, reject2) => {
        const formData = new FormData();
        Object.entries(fields).forEach(([key2, value2]) => {
          formData.append(key2, value2);
        });
        formData.append("file", file);
        fetch(url, {
          method: "POST",
          body: formData
        }).then((response) => {
          if (response.ok) {
            resolve2();
          } else {
            return response.text();
          }
        }).then((text2) => {
          reject2(text2);
        });
      }
    );
  }
  var appendUserInputClasses, parseWfUsysVariant, getUserFileKey, setUserFileKey, getTempUserFileKey, setTempUserFileKey, removeTempUserFileKey;
  var init_universalUtils = __esm({
    "packages/systems/users/utils/universalUtils/index.ts"() {
      "use strict";
      init_constants2();
      appendUserInputClasses = (node, classes) => {
        const updatedClasses = classes.push("w-input");
        if (node.getIn(["data", "attr", "disabled"])) {
          return updatedClasses.push("w-input-disabled");
        }
        return updatedClasses;
      };
      parseWfUsysVariant = (wfUsysVariant) => {
        if (!wfUsysVariant)
          return [];
        let results = [];
        for (const wfUsysVariantKey of wfUsysVariant.split(",")) {
          if (
            // @ts-expect-error - TS2345 - Argument of type 'string' is not assignable to parameter of type '"LOGGED_IN" | "ADMIN_ALWAYS_VISIBLE"'.
            USER_ACCESS_META_OPTIONS.includes(wfUsysVariantKey) && // @ts-expect-error - TS2345 - Argument of type 'string' is not assignable to parameter of type '"LOGGED_IN" | "ADMIN_ALWAYS_VISIBLE"'.
            !results.includes(wfUsysVariantKey)
          ) {
            results.push(wfUsysVariantKey);
          } else {
            console.error(
              `UnexpectedWfUsysVariant: Renderer received unexpected wf-usys-variant`
            );
            results = [];
            break;
          }
        }
        return results;
      };
      getUserFileKey = (element) => {
        return element.getAttribute(USYS_DATA_ATTRS.fileUploadKey);
      };
      setUserFileKey = (element, value2) => {
        element.setAttribute(USYS_DATA_ATTRS.fileUploadKey, value2);
      };
      getTempUserFileKey = (element) => {
        return element.getAttribute(USYS_DATA_ATTRS.unsavedFileUploadKey);
      };
      setTempUserFileKey = (element, value2) => {
        element.setAttribute(USYS_DATA_ATTRS.unsavedFileUploadKey, value2);
      };
      removeTempUserFileKey = (element) => {
        element.removeAttribute(USYS_DATA_ATTRS.unsavedFileUploadKey);
      };
    }
  });

  // packages/systems/users/siteBundles/fields.js
  var require_fields = __commonJS({
    "packages/systems/users/siteBundles/fields.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.getCustomFields = exports2.getCommonFields = exports2.commonFields = void 0;
      exports2.getFieldValueById = getFieldValueById2;
      exports2.getFieldsAsTypeKeys = getFieldsAsTypeKeys3;
      exports2.getFieldsForFetch = void 0;
      var _constants = (init_constants2(), __toCommonJS(constants_exports));
      var _universalUtils = (init_universalUtils(), __toCommonJS(universalUtils_exports));
      var getTextInput = (element) => element instanceof HTMLInputElement ? element.value : "";
      var typeGetter = {
        PlainText: getTextInput,
        Email: getTextInput,
        Bool: (element) => element instanceof HTMLInputElement ? element.checked : false,
        Number: getTextInput,
        Option: (element) => element instanceof HTMLSelectElement ? element.value : "",
        Link: getTextInput,
        FileRef: (element) => {
          const fileKey = (0, _universalUtils.getUserFileKey)(element);
          const tempFileKey = (0, _universalUtils.getTempUserFileKey)(element);
          if (tempFileKey) {
            return {
              key: tempFileKey
            };
          }
          if (fileKey === "DELETE") {
            return null;
          }
          if (fileKey) {
            return {
              _id: fileKey
            };
          }
        }
      };
      var customFieldTypes = ["PlainText", "Bool", "Email", "Number", "Option", "Link", "FileRef"];
      var commonFields = exports2.commonFields = [{
        type: "Email",
        slug: "email",
        selector: (container) => container.querySelector(`input[${_constants.USYS_DATA_ATTRS.inputType}="${_constants.USYS_INPUT_TYPES.email}"]`)
      }, {
        type: "PlainText",
        slug: "name",
        selector: (container) => container.querySelector(`input[${_constants.USYS_DATA_ATTRS.field}="${_constants.RESERVED_USER_FIELDS.name}"]`) || container.querySelector(`input[${_constants.USYS_DATA_ATTRS.inputType}="${_constants.USYS_INPUT_TYPES.name}"]`)
      }, {
        type: "PlainText",
        slug: "password",
        selector: (container) => container.querySelector(`input[${_constants.USYS_DATA_ATTRS.inputType}="${_constants.USYS_INPUT_TYPES.password}"]`)
      }, {
        type: "Bool",
        slug: "accept-privacy",
        selector: (container) => container.querySelector(`input[${_constants.USYS_DATA_ATTRS.field}="${_constants.RESERVED_USER_FIELDS.acceptPrivacy}"]`) || container.querySelector(`input[${_constants.USYS_DATA_ATTRS.inputType}="${_constants.USYS_INPUT_TYPES.acceptPrivacy}"]`)
      }, {
        type: "Bool",
        slug: "accept-communications",
        selector: (container) => container.querySelector(`input[${_constants.USYS_DATA_ATTRS.field}="${_constants.RESERVED_USER_FIELDS.acceptCommunications}"]`)
      }];
      var toCamelCase = (str) => {
        const pascalCase = str.split("-").map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join("");
        return pascalCase.charAt(0).toLowerCase() + pascalCase.slice(1);
      };
      var getCommonFields3 = (form, requestedFields) => {
        const payload = [];
        commonFields.forEach((field) => {
          if (requestedFields && !requestedFields.includes(field.slug))
            return;
          const ele = field.selector(form);
          if (!ele || !typeGetter[field.type])
            return;
          payload.push({
            key: toCamelCase(field.slug),
            type: toCamelCase(field.type),
            id: field.slug,
            value: typeGetter[field.type](ele, field.id)
          });
        });
        return payload;
      };
      exports2.getCommonFields = getCommonFields3;
      var getCustomFields3 = (form, includeValue = true) => {
        const payload = [];
        customFieldTypes.forEach((fieldType) => {
          const camelFieldType = toCamelCase(fieldType);
          const inputEles = form.querySelectorAll(`input[${_constants.USYS_DATA_ATTRS.fieldType}="${fieldType}"], select[${_constants.USYS_DATA_ATTRS.fieldType}="${fieldType}"]`);
          if (inputEles.length === 0 || !typeGetter[fieldType])
            return;
          inputEles.forEach((ele) => {
            const id = ele.getAttribute(_constants.USYS_DATA_ATTRS.field);
            if (!id)
              return;
            const elementData = {
              key: `f_${id}`,
              type: camelFieldType,
              id
            };
            if (includeValue) {
              const value2 = typeGetter[fieldType](ele, id);
              if (value2 === "") {
                elementData.value = null;
              } else {
                elementData.value = value2;
              }
            }
            payload.push(elementData);
          });
        });
        return payload;
      };
      exports2.getCustomFields = getCustomFields3;
      var getFieldsForFetch2 = (forms) => {
        const custom = [];
        const nested = [];
        const alreadyFound = (customField) => {
          return custom.find((item) => item.id === customField.id);
        };
        forms.forEach((form) => {
          nested.push([...getCommonFields3(form), ...getCustomFields3(form, false)]);
        });
        nested.forEach((getCustomFieldRes) => {
          getCustomFieldRes.forEach((customField) => {
            if (!alreadyFound(customField)) {
              custom.push(customField);
            }
          });
        });
        return custom;
      };
      exports2.getFieldsForFetch = getFieldsForFetch2;
      function getFieldValueById2(id, fieldsArray) {
        const match = fieldsArray.find((field) => field.id === id);
        if (!match)
          return null;
        return match.value;
      }
      function getFieldsAsTypeKeys3(fieldsArray) {
        const memo = {};
        fieldsArray.forEach((field) => {
          const {
            key: key2,
            type,
            value: value2
          } = field;
          if (!memo[type])
            memo[type] = [];
          memo[type].push({
            id: key2.replace("f_", ""),
            value: value2
          });
        });
        return memo;
      }
    }
  });

  // packages/systems/users/siteBundles/turnstileCaptcha.ts
  function setSplashScreenStyles(element) {
    element.style.display = "flex";
    element.style.position = "fixed";
    element.style.top = "0";
    element.style.left = "0";
    element.style.width = "100%";
    element.style.height = "100%";
    element.style.background = "rgba(255, 255, 255, 0.8)";
    element.style.justifyContent = "center";
    element.style.alignItems = "center";
    element.style.textAlign = "center";
    element.style.zIndex = "1000";
    element.style.opacity = "0";
    element.style.transition = "opacity 1s ease-in-out";
  }
  var addSplashScreen, renderTurnstileCaptcha;
  var init_turnstileCaptcha = __esm({
    "packages/systems/users/siteBundles/turnstileCaptcha.ts"() {
      "use strict";
      addSplashScreen = () => {
        const splashScreen = document.createElement("div");
        setSplashScreenStyles(splashScreen);
        const captchaContainer = document.createElement("div");
        splashScreen.appendChild(captchaContainer);
        document.body.appendChild(splashScreen);
        setTimeout(() => {
          splashScreen.style.opacity = "1";
        }, 10);
        return splashScreen;
      };
      renderTurnstileCaptcha = (captchaSiteKey, captchaMode, cb) => {
        let splashScreen;
        if (captchaMode !== "invisible") {
          splashScreen = addSplashScreen();
        }
        const captchaContainer = document.createElement("div");
        if (splashScreen) {
          splashScreen.appendChild(captchaContainer);
        } else {
          document.body.appendChild(captchaContainer);
        }
        turnstile.render(captchaContainer, {
          sitekey: captchaSiteKey,
          callback: function(token) {
            setTimeout(function() {
              if (splashScreen) {
                splashScreen.remove();
              }
            }, 1e3);
            return cb(token);
          }
        });
      };
    }
  });

  // packages/systems/users/siteBundles/signup.ts
  var signup_exports = {};
  __export(signup_exports, {
    asyncSignUpUser: () => asyncSignUpUser,
    handleSignUpForms: () => handleSignUpForms
  });
  function getSignupForms() {
    const signupForms = document.querySelectorAll(signupFormQuerySelector);
    return Array.prototype.slice.call(signupForms).filter((signupForm) => signupForm instanceof HTMLFormElement);
  }
  function handleUserInvite(email) {
    const form = document.querySelector(signupFormQuerySelector);
    if (!(form instanceof HTMLFormElement)) {
      return;
    }
    const emailInput = form.querySelector(
      `input[${USYS_DATA_ATTRS.inputType}="${USYS_INPUT_TYPES.email}"]`
    );
    if (!(emailInput instanceof HTMLInputElement)) {
      return;
    }
    emailInput.disabled = true;
    emailInput.classList.add("w-input-disabled");
    emailInput.value = email;
  }
  function handleEmailVerifcation(token, errorState4) {
    const form = document.querySelector(signupFormQuerySelector);
    hideElement2(form);
    asyncVerifyEmailToken(token).then(() => {
      const successMessage = document.querySelector(
        `.${USYS_DOM_CLASS_NAMES.formSuccess}`
      );
      const redirectAnchor = document.querySelector(
        `[${USYS_DATA_ATTRS.redirectUrl}] a`
      );
      const redirectPath = getRedirectPath();
      if (redirectPath && redirectAnchor) {
        redirectAnchor.setAttribute("href", encodeURIComponent(redirectPath));
      }
      showElement2(successMessage);
      handleRedirect(redirectAnchor?.getAttribute("href") ?? "/", true);
    }).catch((error) => {
      showElement2(verificationMessage);
      userFormError(form, errorState4, "SIGNUP")(error);
    });
  }
  function handleSignUpForms() {
    const params = new URLSearchParams(window.location.search);
    const inviteToken = params.get("inviteToken") || "";
    const verifyToken = params.get("verifyToken") || "";
    const errorState4 = document.querySelector(`[${USYS_DATA_ATTRS.formError}]`);
    let turnstileScript = null;
    getSignupForms().forEach((signupForm) => {
      const submitButton = signupForm.querySelector('input[type="submit"]');
      const sendSubmitData = (captchaToken) => {
        const submitText = disableSubmit(submitButton);
        const commonFields = (0, import_fields.getCommonFields)(signupForm);
        const customFields = (0, import_fields.getCustomFields)(signupForm);
        hideElement2(errorState4);
        asyncSignUpUser(
          (0, import_fields.getFieldValueById)("email", commonFields) || "",
          (0, import_fields.getFieldValueById)("name", commonFields) || "",
          (0, import_fields.getFieldValueById)("password", commonFields) || "",
          (0, import_fields.getFieldValueById)("accept-privacy", commonFields) || false,
          (0, import_fields.getFieldValueById)("accept-communications", commonFields) || false,
          customFields,
          inviteToken,
          captchaToken
        ).then(() => {
          if (inviteToken) {
            window.location = "/log-in";
          } else {
            hideElement2(signupForm);
            showAndFocusElement(verificationMessage);
          }
        }).catch(userFormError(signupForm, errorState4, "SIGNUP")).finally(() => {
          resetSubmit(submitButton, submitText);
        });
      };
      const captchaSiteKey = signupForm.getAttribute("wf-captcha-site-key");
      const captchaMode = signupForm.getAttribute("wf-captcha-mode");
      if (captchaSiteKey && captchaMode && !turnstileScript) {
        submitButton.setAttribute("disabled", "true");
        turnstileScript = document.createElement("script");
        turnstileScript.src = "https://challenges.cloudflare.com/turnstile/v0/api.js";
        document.head.appendChild(turnstileScript);
        turnstileScript.onload = () => {
          signupForm.addEventListener("submit", (e) => {
            e.preventDefault();
            renderTurnstileCaptcha(captchaSiteKey, captchaMode, sendSubmitData);
          });
          submitButton.removeAttribute("disabled");
        };
      } else {
        signupForm.addEventListener("submit", (e) => {
          e.preventDefault();
          sendSubmitData(null);
        });
      }
      if (inviteToken) {
        const email = params.get("email") || "";
        handleUserInvite(email);
      }
      if (verifyToken) {
        handleEmailVerifcation(verifyToken, errorState4);
      }
    });
  }
  function asyncSignUpUser(email, name2 = "", password, acceptPrivacy, acceptCommunications, customFields, inviteToken, captchaToken) {
    const variables = {
      email,
      name: name2,
      acceptPrivacy,
      acceptCommunications,
      authPassword: password,
      data: (0, import_fields.getFieldsAsTypeKeys)(customFields),
      inviteToken: inviteToken || void 0,
      captchaToken: captchaToken || void 0,
      redirectPath: getRedirectPath()
    };
    return userSystemsRequestClient.mutate({
      mutation: signupMutation,
      variables
    });
  }
  function asyncVerifyEmailToken(verifyToken) {
    return userSystemsRequestClient.mutate({
      mutation: verifyEmailMutation,
      variables: {
        verifyToken,
        redirectPath: getRedirectPath()
      }
    });
  }
  var import_fields, signupFormQuerySelector, verificationMessage;
  var init_signup = __esm({
    "packages/systems/users/siteBundles/signup.ts"() {
      "use strict";
      init_utils4();
      init_constants2();
      init_mutations();
      import_fields = __toESM(require_fields());
      init_turnstileCaptcha();
      signupFormQuerySelector = `form[${USYS_DATA_ATTRS.formType}="${USYS_FORM_TYPES.signup}"]`;
      verificationMessage = document.querySelector(
        `.${USYS_DOM_CLASS_NAMES.formVerfication}`
      );
    }
  });

  // packages/systems/users/siteBundles/logout.ts
  var logout_exports = {};
  __export(logout_exports, {
    asyncLogOutUser: () => asyncLogOutUser,
    handleLogInLogOutButton: () => handleLogInLogOutButton
  });
  function getLogoutButtons() {
    const logoutButtons = document.querySelectorAll(logoutButtonQuerySelector);
    return Array.prototype.slice.call(logoutButtons).filter((logoutButton) => logoutButton instanceof HTMLButtonElement);
  }
  function handleGoToLoginClick() {
    if (window.Webflow.env("preview")) {
      return;
    }
    window.location = "/log-in";
  }
  function handleLogOutButtonClick(event) {
    event.preventDefault();
    asyncLogOutUser().then(() => {
      window.Webflow.location("/");
    });
  }
  function handleLogInLogOutButton() {
    getLogoutButtons().forEach((logoutButton) => {
      if (document.cookie.split(";").some((cookie) => cookie.indexOf(LOGGEDIN_COOKIE_NAME) > -1)) {
        logoutButton.innerHTML = logoutButton.getAttribute(USYS_DATA_ATTRS.logout) || "Log out";
        logoutButton.removeEventListener("click", handleGoToLoginClick);
        logoutButton.addEventListener("click", handleLogOutButtonClick);
      } else if (!window.Webflow.env("design")) {
        logoutButton.innerHTML = logoutButton.getAttribute(USYS_DATA_ATTRS.login) || "Log in";
        logoutButton.removeEventListener("click", handleLogOutButtonClick);
        logoutButton.addEventListener("click", handleGoToLoginClick);
      }
    });
  }
  function asyncLogOutUser() {
    return userSystemsRequestClient.mutate({
      mutation: logoutMutation
    });
  }
  var logoutButtonQuerySelector;
  var init_logout = __esm({
    "packages/systems/users/siteBundles/logout.ts"() {
      "use strict";
      init_utils4();
      init_constants2();
      init_mutations();
      logoutButtonQuerySelector = `[${USYS_DATA_ATTRS.logout}]`;
    }
  });

  // packages/systems/users/siteBundles/resetPassword.ts
  var resetPassword_exports = {};
  __export(resetPassword_exports, {
    asyncRequestResetPassword: () => asyncRequestResetPassword,
    handleResetPasswordForms: () => handleResetPasswordForms
  });
  function getResetPasswordForms() {
    const resetPasswordForms = document.querySelectorAll(
      resetPasswordFormQuerySelector
    );
    return Array.prototype.slice.call(resetPasswordForms).filter(
      (resetPasswordForm) => resetPasswordForm instanceof HTMLFormElement
    );
  }
  function handleResetPasswordForms() {
    getResetPasswordForms().forEach((resetPasswordForm) => {
      resetPasswordForm.addEventListener("submit", (event) => {
        event.preventDefault();
        const form = event.currentTarget;
        const successMessage = document.querySelector(
          `.${USYS_DOM_CLASS_NAMES.formSuccess}`
        );
        if (!(form instanceof HTMLFormElement)) {
          return;
        }
        hideElement2(errorState2);
        const emailInput = form.querySelector(
          `input[${USYS_DATA_ATTRS.inputType}="${USYS_INPUT_TYPES.email}"]`
        );
        if (!(emailInput instanceof HTMLInputElement)) {
          return;
        }
        asyncRequestResetPassword(emailInput.value).then(() => {
          hideElement2(form);
          showAndFocusElement(successMessage);
        }).catch((error) => {
          if (errorState2) {
            const elementErrorCode = error?.graphQLErrors?.[0]?.code ?? "";
            const errorCode = getResetPasswordErrorCode(elementErrorCode);
            handleErrorNode(
              errorMsgNode2,
              // @ts-expect-error - TS2345 - Argument of type 'Element' is not assignable to parameter of type 'HTMLElement'.
              errorState2,
              errorCode,
              ERROR_ATTRIBUTE_PREFIX.RESET_PASSWORD,
              defaultErrorCopy3
            );
          }
        });
      });
    });
  }
  function asyncRequestResetPassword(email) {
    return userSystemsRequestClient.mutate({
      mutation: resetPasswordMutation,
      variables: {
        email
      }
    });
  }
  var resetPasswordFormQuerySelector, errorState2, defaultErrorCopy3, errorMsgNode2, getResetPasswordErrorCode;
  var init_resetPassword = __esm({
    "packages/systems/users/siteBundles/resetPassword.ts"() {
      "use strict";
      init_utils4();
      init_constants2();
      init_mutations();
      resetPasswordFormQuerySelector = `form[${USYS_DATA_ATTRS.formType}="${USYS_FORM_TYPES.resetPassword}"]`;
      errorState2 = document.querySelector(`[${USYS_DATA_ATTRS.formError}]`);
      defaultErrorCopy3 = // @ts-expect-error - TS2532 - Object is possibly 'undefined'.
      resetPasswordErrorStates[RESET_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR].copy;
      errorMsgNode2 = document.querySelector(`.${ERROR_MSG_CLASS}`);
      getResetPasswordErrorCode = (error) => {
        let errorCode;
        switch (error) {
          default:
            errorCode = RESET_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR;
        }
        return errorCode;
      };
    }
  });

  // packages/systems/users/siteBundles/updatePassword.ts
  var updatePassword_exports = {};
  __export(updatePassword_exports, {
    asyncRequestUpdatePassword: () => asyncRequestUpdatePassword,
    handleUpdatePasswordForms: () => handleUpdatePasswordForms
  });
  function getUpdatePasswordForms() {
    const updatePasswordForms = document.querySelectorAll(
      updatePasswordFormQuerySelector
    );
    return Array.prototype.slice.call(updatePasswordForms).filter(
      (updatePasswordForm) => updatePasswordForm instanceof HTMLFormElement
    );
  }
  function handleUpdatePasswordForms() {
    getUpdatePasswordForms().forEach((updatePasswordForm) => {
      updatePasswordForm.addEventListener("submit", (event) => {
        event.preventDefault();
        const form = event.currentTarget;
        const successMessage = document.querySelector(
          `.${USYS_DOM_CLASS_NAMES.formSuccess}`
        );
        if (!(form instanceof HTMLFormElement)) {
          return;
        }
        const errorElement = document.querySelector(
          `[${USYS_DATA_ATTRS.formError}]`
        );
        hideElement2(errorElement);
        const passwordInput = form.querySelector(
          `input[${USYS_DATA_ATTRS.inputType}="${USYS_INPUT_TYPES.password}"]`
        );
        if (!(passwordInput instanceof HTMLInputElement)) {
          return;
        }
        const params = new URLSearchParams(window.location.search);
        const token = params.get("token") || "";
        asyncRequestUpdatePassword(passwordInput.value, token).then(() => {
          hideElement2(form);
          showAndFocusElement(successMessage);
        }).catch((error) => {
          if (errorState3) {
            const elementErrorCode = error?.graphQLErrors?.[0]?.code ?? "";
            const errorCode = getUpdatePasswordErrorCode(elementErrorCode);
            handleErrorNode(
              errorMsgNode3,
              // @ts-expect-error - TS2345 - Argument of type 'Element' is not assignable to parameter of type 'HTMLElement'.
              errorState3,
              errorCode,
              ERROR_ATTRIBUTE_PREFIX.UPDATE_PASSWORD,
              defaultErrorCopy4
            );
          }
        });
      });
    });
  }
  function asyncRequestUpdatePassword(authPassword, token) {
    return userSystemsRequestClient.mutate({
      mutation: updatePasswordMutation,
      variables: {
        authPassword,
        token
      }
    });
  }
  var updatePasswordFormQuerySelector, errorState3, defaultErrorCopy4, errorMsgNode3, getUpdatePasswordErrorCode;
  var init_updatePassword = __esm({
    "packages/systems/users/siteBundles/updatePassword.ts"() {
      "use strict";
      init_utils4();
      init_constants2();
      init_mutations();
      updatePasswordFormQuerySelector = `form[${USYS_DATA_ATTRS.formType}="${USYS_FORM_TYPES.updatePassword}"]`;
      errorState3 = document.querySelector(`[${USYS_DATA_ATTRS.formError}]`);
      defaultErrorCopy4 = // @ts-expect-error - TS2532 - Object is possibly 'undefined'.
      updatePasswordErrorStates[UPDATE_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR].copy;
      errorMsgNode3 = document.querySelector(`.${ERROR_MSG_CLASS}`);
      getUpdatePasswordErrorCode = (error) => {
        let errorCode;
        switch (error) {
          case "UsysInvalidPassword":
            errorCode = UPDATE_PASSWORD_UI_ERROR_CODES.WEAK_PASSWORD;
            break;
          default:
            errorCode = UPDATE_PASSWORD_UI_ERROR_CODES.GENERAL_ERROR;
        }
        return errorCode;
      };
    }
  });

  // packages/systems/users/siteBundles/queries.ts
  var queries_exports = {};
  __export(queries_exports, {
    buildGetLoggedInUserQuery: () => buildGetLoggedInUserQuery,
    getFieldValidations: () => getFieldValidations,
    getUserSubscriptions: () => getUserSubscriptions
  });
  function buildGetLoggedInUserQuery(dataFields = []) {
    return lib_default2`
    query FetchUser {
        site {
          id
          siteUser {
            id
            createdOn
            ${dataFields.length > 0 ? `
            data {
              ${dataFields.map((field) => {
      const base = `${field.key}: ${field.type}(id: "${field.id}")`;
      if (field.type === "option") {
        return base + "{\n slug \n}";
      }
      if (field.type === "fileRef") {
        return base + "{\n url \n \n id \n}";
      }
      return base;
    }).join("\n")}
            }` : ""}
        }
      }
    }
  `;
  }
  var getUserSubscriptions, getFieldValidations;
  var init_queries = __esm({
    "packages/systems/users/siteBundles/queries.ts"() {
      "use strict";
      init_lib7();
      getUserSubscriptions = lib_default2`
  query FetchSubscriptions {
    database {
      id
      userSubscriptions {
        _id
        productName
        variantPrice {
          string
          unit
          value
        }
        variantImage {
          url
          alt
        }
        status
        lastInvoiced
        periodEnd
        subCreatedOn
        canceledOn
        billingAddressAddressee
        billingAddressLine1
        billingAddressLine2
        billingAddressCity
        billingAddressState
        billingAddressPostalCode
        billingAddressCountry
        cardLast4
        cardExpiresMonth
        cardExpiresYear
      }
    }
  }
`;
      getFieldValidations = lib_default2`
  query GetFieldValidations {
    site {
      id
      usysFieldSchema {
        id
        required
        validations {
          minLength
          maxLength
          min
          max
          step
          extensions
          options {
            slug
            name
          }
        }
      }
    }
  }
`;
    }
  });

  // packages/systems/users/siteBundles/rendering.ts
  function applyBindingsAndConditionalVisibility(node, data2) {
    if (node.hasAttribute(WF_BINDING_DATA_KEY)) {
      const bindingsStr = node.getAttribute(WF_BINDING_DATA_KEY) || "";
      const bindings = JSON.parse(decodeURIComponent(bindingsStr));
      if (bindings) {
        bindDataToNode(node, data2, bindings);
      }
    }
    if (node.hasAttribute(WF_CONDITION_DATA_KEY)) {
      const conditionsStr = node.getAttribute(WF_CONDITION_DATA_KEY) || "";
      const conditionData = JSON.parse(decodeURIComponent(conditionsStr));
      if (conditionData) {
        applyConditionToNode(node, data2, conditionData);
      }
    }
  }
  function getFirstAncestor(element, pred) {
    if (element.parentNode === null) {
      return null;
    }
    if (pred(element)) {
      return element;
    }
    return getFirstAncestor(element.parentNode, pred);
  }
  function hasFormFileUploadWrapperClass(element) {
    return element.classList.contains("w-file-upload");
  }
  function setFileUploadValue(node, fileId) {
    if (!fileId)
      return;
    setUserFileKey(node, fileId);
    const formFileUploadWrapper = getFirstAncestor(
      node,
      // @ts-expect-error - TS2345 - Argument of type '(element: any) => any' is not assignable to parameter of type '(element: never) => never'.
      hasFormFileUploadWrapperClass
    );
    if (formFileUploadWrapper === null)
      return;
    const formFileDefault = formFileUploadWrapper.querySelector(
      ".w-file-upload-default"
    );
    const formFileSuccess = formFileUploadWrapper.querySelector(
      ".w-file-upload-success"
    );
    const formFileError = formFileUploadWrapper.querySelector(
      ".w-file-upload-error"
    );
    const formFileUploading = formFileUploadWrapper.querySelector(
      ".w-file-upload-uploading"
    );
    addHiddenClass(formFileDefault);
    addHiddenClass(formFileError);
    addHiddenClass(formFileUploading);
    removeHiddenClass(formFileSuccess);
  }
  function applyUserAccountData(node, userData) {
    if (node.hasAttribute(USYS_DATA_ATTRS.field)) {
      const field = node.getAttribute(USYS_DATA_ATTRS.field) || "";
      const fieldType = node.getAttribute(USYS_DATA_ATTRS.fieldType) || "";
      if (fieldType === "Option") {
        node.value = (0, import_get5.default)(userData, [`f_${field}`, "slug"], "");
        return;
      }
      if (fieldType === "FileRef") {
        setFileUploadValue(node, (0, import_get5.default)(userData, [`f_${field}`, "id"], ""));
        return;
      }
      const dataPath = field && field.includes(RESERVED_USER_PREFIX) ? KEY_FROM_RESERVED_USER_FIELD[field] : `f_${field}`;
      const value2 = (0, import_get5.default)(userData, [dataPath], "");
      if (node.type === "checkbox" && node.checked !== Boolean(value2) && node.click) {
        node.click();
        return;
      }
      node.value = value2;
    }
    if (node.hasAttribute(USYS_DATA_ATTRS.inputType)) {
      const dataPath = node.getAttribute(USYS_DATA_ATTRS.inputType) || "";
      const value2 = (0, import_get5.default)(userData, [dataPath], "");
      if (value2) {
        node.value = value2;
      }
    }
  }
  var import_escape3, import_get5, getPropertyMutator2, mutators2, bindDataToNode;
  var init_rendering2 = __esm({
    "packages/systems/users/siteBundles/rendering.ts"() {
      "use strict";
      import_escape3 = __toESM(require_escape());
      import_get5 = __toESM(require_get());
      init_Transformers2();
      init_RenderingUtils2();
      init_constants3();
      init_constants();
      init_constants2();
      init_universalUtils();
      init_utils4();
      getPropertyMutator2 = (bindingProperty) => {
        if (typeof mutators2[bindingProperty] === "function") {
          return mutators2[bindingProperty];
        }
        return null;
      };
      mutators2 = {
        innerHTML: (node, type, value2) => {
          const valueString = value2 != null ? String(value2) : "";
          if (SHARED_ALLOWED_FIELD_TYPES.innerHTML[type] === "innerHTML") {
            node.innerHTML = valueString;
          } else if (SHARED_ALLOWED_FIELD_TYPES.innerHTML[type] === "innerText") {
            node.innerHTML = (0, import_escape3.default)(valueString);
          }
          if (node.innerHTML) {
            node.classList.remove("w-dyn-bind-empty");
          }
        },
        src: (node, type, value2) => {
          if (value2 && value2.url) {
            node.setAttribute("src", value2.url);
          }
          node.classList.remove("w-dyn-bind-empty");
        }
      };
      bindDataToNode = (node, data2, bindings) => {
        bindings.forEach((binding) => {
          Object.keys(binding).forEach((bindingProperty) => {
            const bindingValue = binding[bindingProperty];
            const { dataPath, filter, timezone, type } = bindingValue;
            const rawValue = (0, import_get5.default)(data2, dataPath);
            const transformedValue = transformers(rawValue, filter, {
              timezone,
              collectionSlugMap: {},
              // @ts-expect-error - TS2339 - Property '__WEBFLOW_CURRENCY_SETTINGS' does not exist on type 'Window & typeof globalThis'.
              currencySettings: window.__WEBFLOW_CURRENCY_SETTINGS
            });
            const propertyMutator = getPropertyMutator2(bindingProperty);
            if (propertyMutator) {
              propertyMutator(node, type, transformedValue);
            }
          });
        });
      };
    }
  });

  // packages/systems/users/siteBundles/account.ts
  var account_exports = {};
  __export(account_exports, {
    handleUserAccount: () => handleUserAccount,
    handleUserSubscriptionLists: () => handleUserSubscriptionLists
  });
  function asyncGetUserSubscriptions() {
    return userSystemsRequestClient.query({
      query: getUserSubscriptions
    });
  }
  function asyncGetUser(dataFields) {
    return userSystemsRequestClient.query({
      query: buildGetLoggedInUserQuery(dataFields)
    });
  }
  function asyncSubmitUserData(dataFields) {
    const data2 = (0, import_fields2.getFieldsAsTypeKeys)(dataFields);
    return userSystemsRequestClient.mutate({
      mutation: buildUpdateUsysUserDataMutation(dataFields),
      variables: { data: data2 }
    });
  }
  function getUserSubscriptionLists() {
    const subscriptionLists = document.querySelectorAll(subscriptionListSelector);
    return Array.from(subscriptionLists);
  }
  function getUserAccountForms() {
    const accountForms = document.querySelectorAll(userAccountFormQuerySelector);
    return Array.prototype.slice.call(accountForms).filter((accountForm) => accountForm instanceof HTMLFormElement);
  }
  function handleUserSubscriptionLists(domParser) {
    if (window.Webflow.env("design") || window.Webflow.env("preview")) {
      return;
    }
    const subscriptionLists = getUserSubscriptionLists();
    if (subscriptionLists.length > 0) {
      asyncGetUserSubscriptions().then((response) => {
        const userSubscriptions = response?.data?.database?.userSubscriptions;
        const noUserSubscriptions = userSubscriptions.length === 0;
        if (noUserSubscriptions)
          return renderEmptySubscriptionList(subscriptionLists);
        renderUserSubscriptionLists(
          subscriptionLists,
          domParser,
          userSubscriptions
        );
      }).catch((error) => {
        const graphQLErrors = error?.graphQLErrors || [];
        const errorsHandled = graphQLErrors.reduce(
          // @ts-expect-error - TS7006 - Parameter 'hasUnhandledError' implicitly has an 'any' type. | TS7006 - Parameter 'graphQLError' implicitly has an 'any' type.
          (hasUnhandledError, graphQLError) => {
            if (graphQLError?.code === "NoCommerceCustomerFound") {
              renderEmptySubscriptionList(subscriptionLists);
              return hasUnhandledError;
            }
            return false;
          },
          graphQLErrors.length > 0
        );
        if (!errorsHandled)
          throw error;
      });
    }
  }
  function renderEmptySubscriptionList(subscriptionListElements) {
    subscriptionListElements.forEach((subscriptionListElement) => {
      const EmptyStateElement = subscriptionListElement.querySelector(EmptyStateSelector);
      showElement2(EmptyStateElement);
    });
  }
  function renderUserSubscriptionLists(subscriptionListElements, domParser, userSubscriptions = []) {
    subscriptionListElements.forEach((subscriptionListElement) => {
      const EmptyStateElement = subscriptionListElement.querySelector(EmptyStateSelector);
      hideElement2(EmptyStateElement);
      const templateScript = subscriptionListElement.querySelector(templateSelector);
      if (!templateScript) {
        return;
      }
      const templateId = templateScript.getAttribute("id");
      if (!templateId) {
        return;
      }
      const listWrapperElement = document.querySelector(
        `[${WF_TEMPLATE_ID_DATA_KEY}='${templateId}']`
      );
      if (!(listWrapperElement instanceof Element)) {
        return;
      }
      const templateElement = domParser.getHtmlFromString(
        templateScript.innerHTML
      );
      if (!(templateElement instanceof Element)) {
        return;
      }
      userSubscriptions.forEach((subscription) => {
        const templateClone = templateElement.cloneNode(true);
        listWrapperElement.appendChild(templateClone);
        walkDOM(templateClone, (node) => {
          applyBindingsAndConditionalVisibility(node, subscription);
          if (node.hasAttribute(USYS_DATA_ATTRS.subscriptionCancel)) {
            addCancelButtonEventListener(node, subscription._id);
          }
        });
      });
    });
  }
  function addCancelButtonEventListener(node, subscriptionId) {
    node.addEventListener("click", function() {
      userSystemsRequestClient.mutate({
        mutation: cancelSubscriptionMutation,
        variables: {
          subscriptionId
        }
      }).then(() => {
        window.location.reload();
      });
    });
  }
  function handleUserAccount() {
    const userAccount = document.querySelector(
      `[${USYS_DATA_ATTRS.userAccount}]`
    );
    if (!userAccount || // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
    window.Webflow.env("design") || // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
    window.Webflow.env("preview")) {
      return;
    }
    const successMessage = userAccount.querySelector(
      "." + USYS_DOM_CLASS_NAMES.formSuccess
    );
    const errorMessage = userAccount.querySelector(
      "." + USYS_DOM_CLASS_NAMES.formError
    );
    const userAccountForms = getUserAccountForms();
    if (userAccountForms.length > 0) {
      const fields = (0, import_fields2.getFieldsForFetch)(userAccountForms);
      asyncGetUser(fields).then((response) => {
        const siteUser = response?.data?.site?.siteUser;
        if (!siteUser)
          return;
        const userData = siteUser.data;
        userAccountForms.forEach((accountForm) => {
          walkDOM(userAccount, (node) => {
            applyUserAccountData(node, userData);
          });
          if (!(accountForm instanceof HTMLFormElement))
            return;
          const submit = accountForm.querySelector(
            'input[type="submit"]'
          );
          accountForm.addEventListener("submit", (event) => {
            event.preventDefault();
            const form = event.currentTarget;
            if (!(form instanceof HTMLFormElement)) {
              return;
            }
            hideElement2(successMessage);
            hideElement2(errorMessage);
            const submitText = disableSubmit(submit);
            const commonFields = (0, import_fields2.getCommonFields)(form, [
              "name",
              "accept-communications"
            ]);
            const customFields = (0, import_fields2.getCustomFields)(form);
            asyncSubmitUserData([...commonFields, ...customFields]).then((res) => {
              const newUserData = res && res.data && res.data.usysUpdateUserData && res.data.usysUpdateUserData.data;
              if (newUserData) {
                addResetEventListener(accountForm, userAccount, newUserData);
              }
              successMessage && showAndFocusElement(successMessage);
            }).catch(userFormError(form, errorMessage, "ACCOUNT_UPDATE")).finally(() => {
              resetSubmit(submit, submitText);
            });
          });
          accountForm.querySelectorAll("input").forEach(
            (input) => input.addEventListener("input", () => {
              hideElement2(successMessage);
              hideElement2(errorMessage);
            })
          );
          addResetEventListener(accountForm, userAccount, userData);
        });
      });
    }
  }
  var import_fields2, subscriptionListSelector, EmptyStateSelector, templateSelector, userAccountFormQuerySelector, addResetEventListener;
  var init_account = __esm({
    "packages/systems/users/siteBundles/account.ts"() {
      "use strict";
      init_constants2();
      init_constants();
      init_RenderingUtils2();
      init_utils4();
      init_queries();
      init_mutations();
      init_rendering2();
      import_fields2 = __toESM(require_fields());
      subscriptionListSelector = `[${USYS_DATA_ATTRS.userSubscriptions}]`;
      EmptyStateSelector = `[${USYS_DATA_ATTRS.userSubscriptionsEmptyState}]`;
      templateSelector = `script[type='${WF_TEMPLATE_TYPE}']`;
      userAccountFormQuerySelector = `form[${USYS_DATA_ATTRS.formType}="${USYS_FORM_TYPES.account}"]`;
      addResetEventListener = (accountForm, userAccount, userData) => {
        accountForm.addEventListener("reset", (event) => {
          event.preventDefault();
          const form = event.currentTarget;
          if (!(form instanceof HTMLFormElement))
            return;
          if (userData) {
            walkDOM(userAccount, (node) => {
              applyUserAccountData(node, userData);
            });
          }
        });
      };
    }
  });

  // packages/systems/users/siteBundles/usysForm.js
  var require_usysForm = __commonJS({
    "packages/systems/users/siteBundles/usysForm.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.handleFields = handleFields;
      var _utils = (init_utils4(), __toCommonJS(utils_exports));
      var _queries = (init_queries(), __toCommonJS(queries_exports));
      var _constants = (init_constants2(), __toCommonJS(constants_exports));
      var _universalUtils = (init_universalUtils(), __toCommonJS(universalUtils_exports));
      var _mutations = (init_mutations(), __toCommonJS(mutations_exports));
      function asyncGetFieldValidations() {
        return _utils.userSystemsRequestClient.query({
          query: _queries.getFieldValidations
        });
      }
      function signFile(file, {
        fieldId
      }) {
        return _utils.userSystemsRequestClient.mutate({
          mutation: _mutations.getUploadURLMutation,
          variables: {
            fieldId,
            filename: file.name
          }
        });
      }
      function setRequired(input, userField) {
        if (userField.required == null)
          return;
        input.required = userField.required;
      }
      var inputAttributeMap = {
        minLength: "minlength",
        maxLength: "maxlength",
        min: "min",
        max: "max",
        step: "step",
        extensions: "accept"
      };
      var formatValueMap = {
        extensions: function accept(value2) {
          return value2.join(",");
        }
      };
      function convertToStr(value2) {
        return String(value2);
      }
      function setValidations(input, userField) {
        if (userField.validations == null)
          return;
        Object.keys(userField.validations).map((attr) => {
          const val2 = userField.validations[attr];
          if (attr === "options" && Array.isArray(val2) && input instanceof HTMLSelectElement) {
            val2.forEach((option) => {
              if (option.slug && option.name) {
                const opt = document.createElement("option");
                opt.value = option.slug;
                opt.innerHTML = option.name;
                input.appendChild(opt);
              }
            });
          }
          if (val2 !== null && inputAttributeMap[attr]) {
            let formatValue2;
            if (formatValueMap[attr]) {
              formatValue2 = formatValueMap[attr];
            } else {
              formatValue2 = convertToStr;
            }
            input.setAttribute(inputAttributeMap[attr], formatValue2(val2));
          }
          if (attr === "maxLength" && val2 === null) {
            input.removeAttribute("maxlength");
          }
        });
      }
      function setUserFieldValidationAttr(input, userField) {
        const fieldType = input.getAttribute(_constants.USYS_DATA_ATTRS.fieldType);
        if (!_constants.NO_REQUIRED_ATTRIBUTE.includes(fieldType)) {
          setRequired(input, userField);
        }
        setValidations(input, userField);
      }
      function matchInputToData(input, userFieldData) {
        const fieldId = input.getAttribute(_constants.USYS_DATA_ATTRS.field);
        if (!fieldId) {
          return null;
        }
        for (let i = 0; i < userFieldData.length; i++) {
          if (userFieldData[i].id === fieldId) {
            return userFieldData[i];
          }
        }
        return null;
      }
      function setFieldValidation(customFieldInputs) {
        asyncGetFieldValidations().then((response) => {
          const userFieldData = response.data.site.usysFieldSchema;
          if (!userFieldData)
            return;
          for (let i = 0; i < customFieldInputs.length; i++) {
            const input = customFieldInputs[i];
            if (!input || !(input instanceof HTMLInputElement || input instanceof HTMLSelectElement) || input.getAttribute(_constants.USYS_DATA_ATTRS.fieldType) === "Bool") {
              continue;
            }
            const userField = matchInputToData(input, userFieldData);
            if (!userField)
              continue;
            setUserFieldValidationAttr(input, userField);
          }
        }).catch((err) => {
          console.error(err);
        });
      }
      function getMatchingSiblings(e, pred) {
        const siblings = [];
        if (e.target.parentNode === null) {
          return siblings;
        }
        [].slice.call(e.target.parentNode.children).forEach((element) => {
          if (pred(element)) {
            siblings.push(element);
          }
        });
        return siblings;
      }
      function isFormFileUploadWrapper(element) {
        return element.classList.contains("w-file-upload");
      }
      function getFirstAncestor2(element, pred) {
        if (element.parentNode === null) {
          return null;
        }
        if (pred(element)) {
          return element;
        }
        return getFirstAncestor2(element.parentNode, pred);
      }
      function handleFileRemoveLink(cancelRemoveLinkElement, inputElement, props) {
        const {
          deleteFile,
          cancelFile
        } = props;
        cancelRemoveLinkElement.addEventListener("click", function(e) {
          if (e.type === "keydown") {
            if (e.which !== 13 && e.which !== 32) {
              return;
            }
            e.preventDefault();
          }
          if ((0, _universalUtils.getUserFileKey)(inputElement)) {
            deleteFile();
            return;
          }
          cancelFile();
        });
      }
      function handleFileUploadInput(element, props) {
        const {
          showUploading,
          successUpload,
          errorUpload,
          changeFileNameText,
          disableSubmitButton,
          filesState
        } = props;
        const fieldId = element.getAttribute(_constants.USYS_DATA_ATTRS.field);
        element.addEventListener("change", function(e) {
          if (filesState.isUploading)
            return;
          const file = e.target && e.target.files && e.target.files[0];
          if (!file) {
            return;
          }
          showUploading();
          changeFileNameText(file.name);
          filesState.isUploading = true;
          if (!filesState.isUploading) {
            disableSubmitButton();
          }
          let key2 = "";
          signFile(file, {
            fieldId
          }).then((res) => {
            if (!res.data || !res.data.usysGetUploadURL || !res.data.usysGetUploadURL.presignedPOST) {
              throw Error(res);
            }
            const presignedPOST = res.data.usysGetUploadURL.presignedPOST;
            key2 = res.data.usysGetUploadURL.key;
            const AWSFields = {};
            presignedPOST.fields.forEach((field) => {
              const _key = field.key;
              const value2 = field.value;
              AWSFields[_key] = value2;
            });
            return (0, _universalUtils.uploadFileToS3)(presignedPOST.url, AWSFields, file);
          }).then(() => {
            successUpload(key2);
          }).catch((err) => {
            let code = _constants.SERVER_DATA_VALIDATION_ERRORS.DefaultError;
            if (typeof err === "string") {
              const content2 = new window.DOMParser().parseFromString(err, "text/xml");
              const codeElements = content2.getElementsByTagName("Code");
              if (codeElements) {
                code = codeElements[0].innerHTML;
              }
            }
            if (typeof err === "object" && err.hasOwnProperty("graphQLErrors")) {
              if (err.graphQLErrors[0].code === "UsysForbiddenFileExtension") {
                code = _constants.SERVER_DATA_VALIDATION_ERRORS.ExtensionsError;
              }
            }
            errorUpload(code);
          }).finally(() => {
            filesState.isUploading = false;
          });
        });
      }
      var WF_SUBMIT_BUTTON_VALUE = "wf-submit-button-value";
      var adaptAWSErrors = (code) => {
        if (code === "EntityTooLarge")
          return _constants.SERVER_DATA_VALIDATION_ERRORS.MinSizeError;
        if (code === "EntityTooSmall")
          return _constants.SERVER_DATA_VALIDATION_ERRORS.MaxSizeError;
        return code;
      };
      function handleFileUploadInputs(customFieldInputs, props) {
        const {
          disableSubmitButton,
          enableSubmitButton
        } = props;
        const filesState = {
          isUploading: false
        };
        customFieldInputs.forEach((el) => {
          if (el.getAttribute("type") === "file") {
            let showUploading = function() {
              (0, _utils.addHiddenClass)(formFileDefault);
              (0, _utils.addHiddenClass)(formFileError);
              (0, _utils.addHiddenClass)(formFileSuccess);
              (0, _utils.removeHiddenClass)(formFileUploading);
              formFileUploading.focus();
              disableSubmitButton();
            }, successUpload = function(fileUrl) {
              (0, _utils.addHiddenClass)(formFileDefault);
              (0, _utils.addHiddenClass)(formFileError);
              (0, _utils.addHiddenClass)(formFileUploading);
              (0, _utils.removeHiddenClass)(formFileSuccess);
              formFileSuccess.focus();
              enableSubmitButton();
              (0, _universalUtils.setTempUserFileKey)(el, fileUrl);
            }, errorUpload = function(code = _constants.SERVER_DATA_VALIDATION_ERRORS.DefaultError) {
              const errorText = formFileErrorMsg.getAttribute(adaptAWSErrors(code).toLowerCase());
              (0, _utils.addHiddenClass)(formFileSuccess);
              (0, _utils.addHiddenClass)(formFileUploading);
              (0, _utils.removeHiddenClass)(formFileDefault);
              (0, _utils.removeHiddenClass)(formFileError);
              if (errorText) {
                formFileErrorMsg.innerHTML = errorText;
              }
              formFileError.focus();
              enableSubmitButton();
            }, showDefault = function() {
              (0, _utils.addHiddenClass)(formFileSuccess);
              (0, _utils.addHiddenClass)(formFileUploading);
              (0, _utils.addHiddenClass)(formFileError);
              (0, _utils.removeHiddenClass)(formFileDefault);
              fileUploadLabel.focus();
            }, changeFileNameText = function(filename) {
              fileUploadFileName.innerHTML = filename;
            }, cancelFile = function() {
              changeFileNameText("");
              (0, _universalUtils.removeTempUserFileKey)(el);
              showDefault();
            }, deleteFile = function() {
              (0, _universalUtils.setUserFileKey)(el, "DELETE");
              cancelFile();
            };
            const formFileUploadWrapper = getFirstAncestor2(el, isFormFileUploadWrapper);
            const formFileDefault = formFileUploadWrapper.querySelector(".w-file-upload-default");
            const formFileSuccess = formFileUploadWrapper.querySelector(".w-file-upload-success");
            const formFileError = formFileUploadWrapper.querySelector(".w-file-upload-error");
            const formFileErrorMsg = formFileError.querySelector(".w-file-upload-error-msg");
            const formFileUploading = formFileUploadWrapper.querySelector(".w-file-upload-uploading");
            const fileUploadFileName = formFileUploadWrapper.querySelector(".w-file-upload-file-name");
            const fileRemoveLink = formFileUploadWrapper.querySelector(".w-file-remove-link");
            const fileUploadLabel = formFileUploadWrapper.querySelector(".w-file-upload-label");
            handleFileRemoveLink(fileRemoveLink, el, {
              deleteFile,
              cancelFile
            });
            handleFileUploadInput(el, {
              showUploading,
              successUpload,
              errorUpload,
              changeFileNameText,
              fileRemoveLink,
              filesState
            });
          }
        });
      }
      function handleFields() {
        const userForms = document.querySelectorAll(`form[${_constants.USYS_DATA_ATTRS.formType}]`);
        userForms.forEach((userForm) => {
          const customFieldInputs = userForm.querySelectorAll(`input[${_constants.USYS_DATA_ATTRS.field}], select[${_constants.USYS_DATA_ATTRS.field}]`);
          const submitButton = userForm.querySelector('input[type="submit"]');
          submitButton.setAttribute(WF_SUBMIT_BUTTON_VALUE, submitButton.value);
          function disableSubmitButton() {
            if (submitButton) {
              (0, _utils.disableSubmit)(submitButton);
            }
          }
          function enableSubmitButton() {
            if (submitButton) {
              submitButton.removeAttribute("disabled");
              submitButton.setAttribute("value", submitButton.getAttribute(WF_SUBMIT_BUTTON_VALUE) || "Submit");
            }
          }
          if (customFieldInputs.length > 0) {
            setFieldValidation(customFieldInputs);
            handleFileUploadInputs(customFieldInputs, {
              disableSubmitButton,
              enableSubmitButton
            });
          }
          const CHECKBOX_CLASS_NAME = "w-checkbox-input";
          const CHECKED_CLASS = "w--redirected-checked";
          const customCheckboxes = document.querySelectorAll(`form[${_constants.USYS_DATA_ATTRS.formType}] input[type="checkbox"]:not(` + CHECKBOX_CLASS_NAME + ")");
          customCheckboxes.forEach((checkbox) => {
            checkbox.addEventListener("change", function(e) {
              getMatchingSiblings(e, (element) => {
                return element.classList.contains(CHECKBOX_CLASS_NAME);
              }).forEach((sibling) => {
                sibling.classList.toggle(CHECKED_CLASS);
              });
            });
          });
        });
      }
    }
  });

  // packages/systems/users/siteBundles/index.js
  var require_siteBundles = __commonJS({
    "packages/systems/users/siteBundles/index.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      var _exportNames = {
        usysSiteBundle: true,
        usysFormBundle: true
      };
      exports2.usysSiteBundle = exports2.usysFormBundle = void 0;
      require_esnext_array_from_async();
      require_esnext_array_filter_out();
      require_esnext_array_filter_reject();
      require_esnext_array_group_by();
      require_esnext_array_is_template_object();
      require_esnext_array_last_index();
      require_esnext_array_last_item();
      require_esnext_array_unique_by();
      init_polyfill2();
      require_polyfill();
      var _login = (init_login(), __toCommonJS(login_exports));
      var _signup = (init_signup(), __toCommonJS(signup_exports));
      var _logout = (init_logout(), __toCommonJS(logout_exports));
      var _resetPassword = (init_resetPassword(), __toCommonJS(resetPassword_exports));
      var _updatePassword = (init_updatePassword(), __toCommonJS(updatePassword_exports));
      var _account = (init_account(), __toCommonJS(account_exports));
      var _utils = (init_utils4(), __toCommonJS(utils_exports));
      Object.keys(_utils).forEach(function(key2) {
        if (key2 === "default" || key2 === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key2))
          return;
        if (key2 in exports2 && exports2[key2] === _utils[key2])
          return;
        Object.defineProperty(exports2, key2, {
          enumerable: true,
          get: function() {
            return _utils[key2];
          }
        });
      });
      var _usysForm = require_usysForm();
      var usysSiteBundle = () => {
        function init3() {
          const domParser = (0, _utils.getDomParser)();
          (0, _login.handleLogInForms)();
          (0, _login.handleLoginRedirects)();
          (0, _signup.handleSignUpForms)();
          (0, _logout.handleLogInLogOutButton)();
          (0, _resetPassword.handleResetPasswordForms)();
          (0, _updatePassword.handleUpdatePasswordForms)();
          (0, _account.handleUserAccount)();
          (0, _account.handleUserSubscriptionLists)(domParser);
        }
        const ready2 = init3;
        const design2 = init3;
        const preview2 = init3;
        return {
          init: init3,
          ready: ready2,
          design: design2,
          preview: preview2
        };
      };
      exports2.usysSiteBundle = usysSiteBundle;
      var usysFormBundle = function(env) {
        function init3() {
          if (env("design"))
            return;
          (0, _usysForm.handleFields)();
        }
        return {
          init: init3,
          ready: init3,
          preview: init3
        };
      };
      exports2.usysFormBundle = usysFormBundle;
    }
  });

  // packages/shared/render/plugins/Commerce/modules/addToCartEvents.ts
  function trackAddToCartUsage(skuId, count, itemPrice) {
    const { decimalValue, unit } = itemPrice;
    if (typeof fbq === "function") {
      fbq("track", "AddToCart", {
        value: count * decimalValue,
        currency: unit,
        content_ids: [skuId],
        content_type: "product",
        contents: [{ id: skuId, quantity: count, item_price: decimalValue }]
      });
    }
    if (typeof gtag === "function") {
      gtag("event", "add_to_cart", {
        items: [
          {
            id: skuId,
            quantity: count,
            price: decimalValue
          }
        ]
      });
    }
  }
  var import_get6, import_forEach2, import_find3, import_siteBundles, fetchFromStore, updateStore, addStoreWatcher, getInstanceId3, addToCartMutation, collectionsQuery, getAllVariants, getAllVariantsAndMemberships, findCollectionItemWrapper, addToCartFormEventTargetMatcher, getErrorType, handleAtcSubmit, addToCartOptionSelectEventTargetMatcher, queryAllWithoutOtherItemWrapperContents, queryAllReferenceRepeaters, removeClass2, showElement3, hideElement3, updateEmptyStateVisibility, showEmptyStateAndHideItemsList, hideEmptyStateAndShowItemsList, updateDropdownsOnPage, disableOptionsOnChange, handleAtcOptionSelectChange, updateSkuBindings, updatePageWithNewSkuValuesData, updateSkuValuesOnPillSelect, handleAtcPageLoad, disableVariantsWithNoStockForRemainingSelections, disableVariantsWithNoStock, updateTextNodeVisibility, updateLightboxJson, isBuyNowButtonEvent, handleBuyNow, register, addToCartEvents_default;
  var init_addToCartEvents = __esm({
    "packages/shared/render/plugins/Commerce/modules/addToCartEvents.ts"() {
      "use strict";
      init_lib7();
      init_constants();
      init_constants2();
      init_constants3();
      init_constants4();
      init_utils3();
      import_get6 = __toESM(require_get());
      init_site();
      init_commerceUtils();
      init_RenderingUtils2();
      init_CurrencyUtils2();
      init_debug();
      import_forEach2 = __toESM(require_forEach());
      import_find3 = __toESM(require_find());
      init_rendering();
      init_addToCartStore();
      init_PillGroup();
      import_siteBundles = __toESM(require_siteBundles());
      ({ fetchFromStore, updateStore, addStoreWatcher } = createNewStore());
      getInstanceId3 = (form) => {
        const instanceId = form.getAttribute(DATA_ATTR_COMMERCE_PRODUCT_ID);
        if (instanceId) {
          return instanceId;
        } else {
          throw new Error("Incorrect form instance provided, has no instance ID");
        }
      };
      addToCartMutation = lib_default2`
  mutation AddToCart($skuId: String!, $count: Int!, $buyNow: Boolean) {
    ecommerceAddToCart(sku: $skuId, count: $count, buyNow: $buyNow) {
      ok
      itemId
      itemCount
      itemPrice {
        unit
        decimalValue
      }
    }
  }
`;
      collectionsQuery = `
      collections {
        c_sku_ {
          id
          items(filter: {f_product_: {eq: $productId}}) {
            id
            f_price_ {
              value
              unit
            }
            f_weight_
            f_width_
            f_length_
            f_height_
            f_sku_
            f_main_image_4dr {
              url
            }
            f_more_images_4dr {
              url
              alt
              file {
                origFileName
              }
            }
            f_sku_values_3dr {
              value {
                id
              }
              property {
                id
              }
            }
            inventory {
              type
              quantity
            }
            f_compare_at_price_7dr10dr {
              unit
              value
            }
            f_ec_sku_billing_method_2dr6dr14dr
          }
        }
        c_product_ {
          id
          items(filter: {id: {eq: $productId}}) {
            id
            f_default_sku_7dr {
              id
            }
            f_ec_product_type_2dr10dr {
              name
            }
          }
        }
      }`;
      getAllVariants = lib_default2`
  query FetchAllVariants($productId: BasicId!) {
    database {
      id
      ${collectionsQuery}
    }
  }
`;
      getAllVariantsAndMemberships = lib_default2`
  query FetchAllVariantsAndMemberships($productId: BasicId!) {
    database {
      id
      ${collectionsQuery}
      commerceMemberships(productIds: [$productId]) {
        productId
        orderId
        active
      }
    }
  }
`;
      findCollectionItemWrapper = (node) => {
        const dynamoItemSelector = `.${CLASS_NAME_DYNAMIC_LIST_ITEM}:not(.${CLASS_NAME_DYNAMIC_LIST_REPEATER_ITEM})`;
        return $(node).closest(dynamoItemSelector)[0] || document.body;
      };
      addToCartFormEventTargetMatcher = (event) => {
        if (event != null && event.target instanceof HTMLElement && event.target.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_ADD_TO_CART_FORM) {
          return event.target;
        }
        return false;
      };
      getErrorType = (error) => {
        const defaultErrorType = "general";
        if (error && error.graphQLErrors && error.graphQLErrors.length > 0) {
          switch (error.graphQLErrors[0].code) {
            case "OutOfInventory":
              return "quantity";
            case "MixedCartError":
              return "mixed-cart";
            default:
              return defaultErrorType;
          }
        }
        return defaultErrorType;
      };
      handleAtcSubmit = (event, apolloClient2) => {
        event.preventDefault();
        const eventTarget = event.currentTarget;
        if (!(eventTarget instanceof HTMLFormElement && eventTarget.parentNode instanceof Element) || eventTarget.hasAttribute(ADD_TO_CART_LOADING)) {
          return;
        }
        const { parentNode } = eventTarget;
        const inputButton = eventTarget.querySelector('input[type="submit"]');
        if (!isProtocolHttps()) {
          window.alert(
            "This site is currently unsecured so you cannot add products to your cart."
          );
          return;
        }
        if (!(inputButton instanceof HTMLInputElement)) {
          return;
        }
        const errorElement = parentNode.querySelector(
          `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_ERROR}"]`
        );
        if (errorElement instanceof Element) {
          errorElement.style.display = "none";
        }
        eventTarget.setAttribute(ADD_TO_CART_LOADING, "");
        const previousButtonValue = inputButton.value;
        const loadingTextFromButton = inputButton.getAttribute(
          DATA_ATTR_LOADING_TEXT
        );
        inputButton.value = loadingTextFromButton ? loadingTextFromButton : eventTarget.getAttribute(DATA_ATTR_LOADING_TEXT) || "";
        inputButton.setAttribute("aria-busy", "true");
        const skuId = fetchFromStore(getInstanceId3(eventTarget), "selectedSku") || "";
        const formData = formToObject(eventTarget);
        const formCount = formData[NODE_NAME_COMMERCE_ADD_TO_CART_QUANTITY_INPUT];
        const count = formCount ? parseInt(formCount, 10) : 1;
        if (!skuId && errorElement instanceof Element) {
          eventTarget.removeAttribute(ADD_TO_CART_LOADING);
          inputButton.value = previousButtonValue;
          inputButton.setAttribute("aria-busy", "false");
          const errorMsg = errorElement.querySelector(
            `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_ADD_TO_CART_ERROR}"]`
          );
          if (!errorMsg) {
            return;
          }
          const errorText = errorMsg.getAttribute(getATCErrorMessageForType("select-all-options")) || "Please select an option in each set.";
          errorMsg.textContent = errorText;
          errorElement.style.removeProperty("display");
          return;
        }
        const requiresUserSession = fetchFromStore(
          getInstanceId3(eventTarget),
          "requiresUserSession"
        );
        const hasUserSession = document.cookie.split(";").some((cookie) => cookie.indexOf(LOGGEDIN_COOKIE_NAME) > -1);
        if (requiresUserSession && !hasUserSession) {
          (0, import_siteBundles.redirectWithUsrdir)(`/${USYS_PAGE_SETTINGS.signup.slug}`);
          return;
        }
        apolloClient2.mutate({
          mutation: addToCartMutation,
          variables: { skuId, count, buyNow: false }
        }).then(({ data: data2 }) => {
          addLoadingCallback(() => {
            eventTarget.removeAttribute(ADD_TO_CART_LOADING);
            inputButton.value = previousButtonValue;
            inputButton.setAttribute("aria-busy", "false");
            const cartElements = document.querySelectorAll(
              `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_CART_WRAPPER}"][${DATA_ATTR_OPEN_PRODUCT}]`
            );
            cartElements.forEach((cart) => {
              const evt = new CustomEvent(CHANGE_CART_EVENT, {
                bubbles: true,
                detail: {
                  open: true
                }
              });
              cart.dispatchEvent(evt);
            });
          });
          triggerRender(null);
          const itemPrice = data2.ecommerceAddToCart.itemPrice || {};
          trackAddToCartUsage(skuId, count, itemPrice);
        }).catch((error) => {
          eventTarget.removeAttribute(ADD_TO_CART_LOADING);
          inputButton.value = previousButtonValue;
          inputButton.setAttribute("aria-busy", "false");
          if (errorElement) {
            errorElement.style.removeProperty("display");
            const errorMsg = errorElement.querySelector(
              `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_ADD_TO_CART_ERROR}"]`
            );
            if (!errorMsg) {
              return;
            }
            const errorMessage = getATCErrorMessageForType(getErrorType(error));
            const errorText = errorMsg.getAttribute(errorMessage) || "";
            errorMsg.textContent = errorText;
          }
          debug_default.error(error);
          triggerRender(null);
        });
      };
      addToCartOptionSelectEventTargetMatcher = (event) => {
        if (event != null && event.target instanceof HTMLElement && event.target.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_SELECT) {
          return event.target;
        }
        return false;
      };
      queryAllWithoutOtherItemWrapperContents = (collectionItemWrapper, selector) => {
        return Array.from(collectionItemWrapper.querySelectorAll(selector)).filter(
          (node) => findCollectionItemWrapper(node) === collectionItemWrapper
        );
      };
      queryAllReferenceRepeaters = (collectionItemWrapper) => {
        return Array.from(
          collectionItemWrapper.querySelectorAll(
            `.${CLASS_NAME_DYNAMIC_LIST_REPEATER_REF}`
          )
        );
      };
      removeClass2 = (element, className) => {
        element && // eslint-disable-next-line no-undef
        element.classList instanceof DOMTokenList && element.classList.remove(className);
        if (element.classList.length === 0) {
          element.removeAttribute("class");
        }
      };
      showElement3 = (element) => removeClass2(element, "w-dyn-hide");
      hideElement3 = (element) => element && // eslint-disable-next-line no-undef
      element.classList instanceof DOMTokenList && element.classList.add("w-dyn-hide");
      updateEmptyStateVisibility = (node, fn1, fn2) => {
        const emptyStateNodes = Array.from(node.querySelectorAll(".w-dyn-empty"));
        const emptyStateMoreImageFieldNodes = emptyStateNodes.filter((n) => {
          const itemsList = n.parentElement.querySelector(".w-dyn-items");
          return itemsList.dataset && itemsList.dataset.wfCollection && itemsList.dataset.wfCollection === "f_more_images_4dr";
        });
        return emptyStateMoreImageFieldNodes && emptyStateMoreImageFieldNodes.map((n) => {
          fn1(n);
          const itemsList = n.parentElement.querySelector(".w-dyn-items");
          if (itemsList && itemsList.dataset && itemsList.dataset.wfCollection && itemsList.dataset.wfCollection === "f_more_images_4dr" && // eslint-disable-next-line no-undef
          itemsList.classList instanceof DOMTokenList && itemsList.parentElement.classList.contains(
            CLASS_NAME_DYNAMIC_LIST_REPEATER_REF
          )) {
            return fn2(itemsList);
          }
        });
      };
      showEmptyStateAndHideItemsList = (node) => {
        updateEmptyStateVisibility(node, showElement3, hideElement3);
      };
      hideEmptyStateAndShowItemsList = (node) => {
        updateEmptyStateVisibility(node, hideElement3, showElement3);
      };
      updateDropdownsOnPage = (instanceId) => (newSkuValues) => {
        const dropdownsForProduct = Array.from(
          document.querySelectorAll(
            `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_LIST}"][${DATA_ATTR_COMMERCE_PRODUCT_ID}="${instanceId}"] [${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_SELECT}"]`
          )
        );
        for (const optionSetId of Object.keys(newSkuValues)) {
          const optionSetValue = newSkuValues[optionSetId];
          const matchingDropdownsForOptionSet = dropdownsForProduct.filter(
            (d) => d.getAttribute(DATA_ATTR_COMMERCE_OPTION_SET_ID) === optionSetId
          );
          for (const dropdown of matchingDropdownsForOptionSet) {
            dropdown.value = String(optionSetValue);
          }
        }
      };
      disableOptionsOnChange = ({
        apolloClient: apolloClient2,
        productId,
        optionSets,
        optionSetId
      }) => {
        apolloClient2.query({ query: getAllVariants, variables: { productId } }).then(({ data: data2 }) => {
          const items = data2?.database?.collections?.c_sku_?.items ?? [];
          const optionSetData = optionSets.reduce(
            (parsedSelectorOptionSets, selectorOptionSet) => {
              if (selectorOptionSet.value) {
                parsedSelectorOptionSets.selectedOptionSets.push(selectorOptionSet);
                if (selectorOptionSet.getAttribute(
                  DATA_ATTR_COMMERCE_OPTION_SET_ID
                ) === optionSetId) {
                  parsedSelectorOptionSets.recentlySelectedOptionSet = selectorOptionSet;
                } else {
                  parsedSelectorOptionSets.previouslySelectedOptionSets.push(
                    selectorOptionSet
                  );
                }
              } else {
                parsedSelectorOptionSets.unselectedOptionSets.push(
                  selectorOptionSet
                );
              }
              return parsedSelectorOptionSets;
            },
            {
              selectedOptionSets: [],
              recentlySelectedOptionSet: void 0,
              previouslySelectedOptionSets: [],
              unselectedOptionSets: []
            }
          );
          let { selectedOptionSets, unselectedOptionSets } = optionSetData;
          const { recentlySelectedOptionSet, previouslySelectedOptionSets } = optionSetData;
          if (recentlySelectedOptionSet && selectedOptionSets.length > 1) {
            const recentlySelectedOptionSetValue = recentlySelectedOptionSet.value;
            (0, import_forEach2.default)(previouslySelectedOptionSets, (previouslySelectedOptionSet) => {
              const optionSetValueCombinationWithMostRecent = [
                recentlySelectedOptionSetValue,
                previouslySelectedOptionSet.value
              ];
              const someAvailableItem = items.some((item) => {
                if (item.inventory.type === INVENTORY_TYPE_FINITE && item.inventory.quantity <= 0) {
                  return false;
                }
                const itemMappedBySkuValues = item.f_sku_values_3dr.map(
                  // @ts-expect-error - TS7006 - Parameter 'skuValues' implicitly has an 'any' type.
                  (skuValues) => skuValues.value.id
                );
                return optionSetValueCombinationWithMostRecent.every(
                  (value2) => itemMappedBySkuValues.includes(value2)
                );
              });
              if (!someAvailableItem) {
                previouslySelectedOptionSet.selectedIndex = 0;
                selectedOptionSets = selectedOptionSets.filter(
                  // @ts-expect-error - TS7006 - Parameter 'selectedOptionSet' implicitly has an 'any' type.
                  (selectedOptionSet) => selectedOptionSet.getAttribute(
                    DATA_ATTR_COMMERCE_OPTION_SET_ID
                  ) !== previouslySelectedOptionSet.getAttribute(
                    DATA_ATTR_COMMERCE_OPTION_SET_ID
                  )
                );
                unselectedOptionSets = unselectedOptionSets.concat(
                  previouslySelectedOptionSet
                );
              }
            });
          }
          (0, import_forEach2.default)(selectedOptionSets, (optionSet) => {
            const id = optionSet.getAttribute(DATA_ATTR_COMMERCE_OPTION_SET_ID);
            (0, import_forEach2.default)(optionSet.options, (option) => {
              if (!option.value) {
                option.enabled = true;
              } else {
                disableVariantsWithNoStock(items, id, option);
              }
            });
          });
          (0, import_forEach2.default)(unselectedOptionSets, (optionSet) => {
            const id = optionSet.getAttribute(DATA_ATTR_COMMERCE_OPTION_SET_ID);
            disableVariantsWithNoStockForRemainingSelections(
              items,
              selectedOptionSets,
              optionSet,
              id
            );
          });
        });
      };
      handleAtcOptionSelectChange = (event, apolloClient2) => {
        const eventTarget = event.currentTarget;
        if (!(eventTarget instanceof HTMLSelectElement)) {
          return;
        }
        const $2 = window.jQuery;
        const optionSetId = eventTarget.getAttribute(
          DATA_ATTR_COMMERCE_OPTION_SET_ID
        );
        const optionSetValue = eventTarget.value;
        const optionListElement = $2(eventTarget).closest(
          `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_LIST}"]`
        )[0];
        const addToCartForm = $2(eventTarget).closest(
          `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_FORM}"]`
        )[0];
        if (!(optionListElement instanceof Element) || !optionSetId || !(addToCartForm instanceof HTMLFormElement)) {
          return;
        }
        const instanceId = getInstanceId3(addToCartForm);
        const currentSkuValues = fetchFromStore(instanceId, "skuValues");
        const newSkuValues = {
          ...currentSkuValues,
          [optionSetId]: optionSetValue
        };
        updateStore(instanceId, {
          skuValues: newSkuValues
        });
        const productId = optionListElement && optionListElement.getAttribute(DATA_ATTR_COMMERCE_PRODUCT_ID);
        const allVariantSelectorsInCartForm = findAllElementsByNodeType(
          NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_SELECT,
          addToCartForm
        );
        if (productId && allVariantSelectorsInCartForm.length > 0) {
          disableOptionsOnChange({
            apolloClient: apolloClient2,
            productId,
            optionSets: allVariantSelectorsInCartForm,
            optionSetId
          });
        }
      };
      updateSkuBindings = (binding, node, newSkuItem) => {
        if (["f_weight_", "f_width_", "f_length_", "f_height_", "f_sku_"].some(
          (slug) => binding.from === slug
        )) {
          node[binding.to === "innerHTML" ? "innerText" : binding.to] = newSkuItem[binding.from] || "";
          updateTextNodeVisibility(node);
        }
        if (binding.from === "f_price_" && newSkuItem.f_price_) {
          node[binding.to === "innerHTML" ? "innerText" : binding.to] = renderPriceFromSettings(
            newSkuItem.f_price_,
            // @ts-expect-error - TS2339 - Property '__WEBFLOW_CURRENCY_SETTINGS' does not exist on type 'Window & typeof globalThis'.
            window.__WEBFLOW_CURRENCY_SETTINGS
          );
          updateTextNodeVisibility(node);
        }
        if (binding.from === "f_compare_at_price_7dr10dr") {
          if (newSkuItem.f_compare_at_price_7dr10dr) {
            node[binding.to === "innerHTML" ? "innerText" : binding.to] = renderPriceFromSettings(
              newSkuItem.f_compare_at_price_7dr10dr,
              // @ts-expect-error - TS2339 - Property '__WEBFLOW_CURRENCY_SETTINGS' does not exist on type 'Window & typeof globalThis'.
              window.__WEBFLOW_CURRENCY_SETTINGS
            );
          } else {
            node[binding.to === "innerHTML" ? "innerText" : binding.to] = "";
          }
          updateTextNodeVisibility(node);
        }
        if (binding.from === "f_main_image_4dr" || binding.from === "f_main_image_4dr.url") {
          const mainImage = (0, import_get6.default)(newSkuItem, binding.from.replace(/\.url$/, ""));
          if (binding.to === "style.background-image") {
            node.style.backgroundImage = mainImage && mainImage.url ? `url("${mainImage.url}")` : "none";
          } else if (binding.to === "media") {
            if (node.classList.contains("w-lightbox")) {
              updateLightboxJson(node, mainImage);
            }
          } else if (binding.to === "src") {
            if (mainImage && mainImage.url) {
              node.src = mainImage.url;
              removeWDynBindEmptyClass(node);
              if (node.hasAttribute("srcset")) {
                node.removeAttribute("srcset");
              }
            } else {
              node.removeAttribute("src");
              node.classList.add(CLASS_NAME_W_DYN_BIND_EMPTY);
            }
          }
        }
        if (binding.from === "f_more_images_4dr" || binding.from.startsWith("f_more_images_4dr.")) {
          const image = (0, import_get6.default)(newSkuItem, binding.from.replace(/\.url$/, ""));
          if (binding.to === "style.background-image") {
            node.style.backgroundImage = image ? `url("${image.url}")` : "none";
          } else if (binding.to === "media") {
            if (node.classList.contains("w-lightbox")) {
              updateLightboxJson(node, image);
            }
          } else if (binding.to === "src") {
            if (image && image.url) {
              node.src = image.url;
              node.alt = image.alt || "";
              removeWDynBindEmptyClass(node);
              if (node.hasAttribute("srcset")) {
                node.removeAttribute("srcset");
                node.removeAttribute("sizes");
              }
            } else {
              node.removeAttribute("src");
              node.removeAttribute("srcset");
              node.removeAttribute("sizes");
              node.removeAttribute("alt");
              node.classList.add(CLASS_NAME_W_DYN_BIND_EMPTY);
            }
          }
        }
        if (binding.from === "ecSkuInventoryQuantity") {
          const inventoryQuantity = (0, import_get6.default)(newSkuItem, "inventory.type") === "infinite" ? null : (0, import_get6.default)(newSkuItem, "inventory.quantity");
          node[binding.to === "innerHTML" ? "innerText" : binding.to] = inventoryQuantity;
          updateTextNodeVisibility(node);
        }
      };
      updatePageWithNewSkuValuesData = // @ts-expect-error - TS2314 - Generic type 'ApolloClient<TCacheShape>' requires 1 type argument(s).
      (instanceId, apolloClient2) => (newSkuValues) => {
        const $2 = window.jQuery;
        apolloClient2.query({ query: getAllVariants, variables: { productId: instanceId } }).then(({ data: data2 }) => {
          const items = data2?.database?.collections?.c_sku_?.items ?? [];
          const products = data2?.database?.collections?.c_product_?.items ?? [];
          const productType = products[0] ? products[0].f_ec_product_type_2dr10dr.name : "Advanced";
          const newSkuItem = (0, import_find3.default)(items, (item) => {
            if (item.f_sku_values_3dr && Array.isArray(item.f_sku_values_3dr)) {
              const skuValues = simplifySkuValues(item.f_sku_values_3dr);
              return Object.keys(newSkuValues).every(
                (key2) => newSkuValues[key2] === skuValues[key2]
              );
            }
          });
          if (newSkuItem && newSkuItem.id) {
            updateStore(instanceId, {
              selectedSku: newSkuItem.id
            });
            if (newSkuItem["f_ec_sku_billing_method_2dr6dr14dr"] === "subscription" || productType === "Membership") {
              updateStore(instanceId, {
                requiresUserSession: true
              });
            }
            const formsForProduct = document.querySelectorAll(
              `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_FORM}"][${DATA_ATTR_COMMERCE_PRODUCT_ID}="${instanceId}"]`
            );
            Array.from(formsForProduct).forEach((addToCartForm) => {
              const collectionItemWrapper = findCollectionItemWrapper(addToCartForm);
              const referenceRepeaters = queryAllReferenceRepeaters(
                collectionItemWrapper
              );
              const buyNowButton = findElementByNodeType(
                NODE_TYPE_COMMERCE_BUY_NOW_BUTTON,
                addToCartForm
              );
              if (buyNowButton) {
                if (newSkuItem["f_ec_sku_billing_method_2dr6dr14dr"] === "subscription") {
                  const addToCartButton = findElementByNodeType(
                    NODE_TYPE_COMMERCE_ADD_TO_CART_BUTTON,
                    addToCartForm
                  );
                  const buyNowSubscriptionText = buyNowButton.getAttribute(DATA_ATTR_SUBSCRIPTION_TEXT) || "Subscribe now";
                  hideElement3(addToCartButton);
                  buyNowButton.innerText = buyNowSubscriptionText;
                } else {
                  const buyNowDefaultText = buyNowButton.getAttribute(DATA_ATTR_DEFAULT_TEXT) || "Buy now";
                  buyNowButton.innerText = buyNowDefaultText;
                }
              }
              const moreImagesFieldLength = newSkuItem.f_more_images_4dr && newSkuItem.f_more_images_4dr.length || 0;
              if (referenceRepeaters.length > 0) {
                referenceRepeaters.forEach((referenceRepeater) => {
                  renderTree(referenceRepeater, { data: newSkuItem });
                  if (moreImagesFieldLength > 0) {
                    hideEmptyStateAndShowItemsList(referenceRepeater);
                  } else {
                    showEmptyStateAndHideItemsList(referenceRepeater);
                  }
                });
              }
              const skuBoundNodes = queryAllWithoutOtherItemWrapperContents(
                collectionItemWrapper,
                `[${WF_SKU_BINDING_DATA_KEY}]`
              );
              (0, import_forEach2.default)(skuBoundNodes, (node) => {
                const skuBindingsData = node.getAttribute(
                  WF_SKU_BINDING_DATA_KEY
                );
                if (skuBindingsData) {
                  const skuBindings = safeParseJson(skuBindingsData);
                  if (Array.isArray(skuBindings)) {
                    skuBindings.forEach(
                      (binding) => updateSkuBindings(binding, node, newSkuItem)
                    );
                  }
                }
              });
              const skuConditionBoundNodes = queryAllWithoutOtherItemWrapperContents(
                collectionItemWrapper,
                `[${WF_SKU_CONDITION_DATA_KEY}]`
              );
              (0, import_forEach2.default)(skuConditionBoundNodes, (node) => {
                const conditionData = safeParseJson(
                  // @ts-expect-error - TS18046 - 'node' is of type 'unknown'.
                  node.getAttribute(WF_SKU_CONDITION_DATA_KEY)
                );
                if (conditionData) {
                  applySkuBoundConditionalVisibility({
                    conditionData,
                    newSkuItem,
                    // @ts-expect-error - TS2322 - Type 'unknown' is not assignable to type 'Element'.
                    node
                  });
                }
              });
              const errorElement = $2(collectionItemWrapper).siblings(
                `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_ERROR}"]`
              )[0];
              if (errorElement instanceof Element) {
                errorElement.style.display = "none";
              }
            });
            if (window.Webflow.require("lightbox")) {
              window.Webflow.require("lightbox").ready();
            }
          } else {
            updateStore(instanceId, {
              selectedSku: ""
            });
          }
        });
      };
      updateSkuValuesOnPillSelect = // @ts-expect-error - TS2314 - Generic type 'ApolloClient<TCacheShape>' requires 1 type argument(s).
      (instanceId, apolloClient2) => (
        // @ts-expect-error - TS7031 - Binding element 'optionId' implicitly has an 'any' type. | TS7031 - Binding element 'optionSetId' implicitly has an 'any' type. | TS7031 - Binding element 'groups' implicitly has an 'any' type.
        ({ optionId, optionSetId, groups }) => {
          const currentSkuValues = fetchFromStore(instanceId, "skuValues");
          const newSkuValues = {
            ...currentSkuValues,
            [optionSetId]: optionId
          };
          updateStore(instanceId, {
            skuValues: newSkuValues
          });
          disableOptionsOnChange({
            apolloClient: apolloClient2,
            productId: instanceId,
            optionSets: Object.values(groups),
            optionSetId
          });
        }
      );
      handleAtcPageLoad = (event, apolloClient2, stripeStore2) => {
        if (!(event instanceof CustomEvent && event.type === RENDER_TREE_EVENT)) {
          return;
        }
        const addToCartForms = document.querySelectorAll(
          `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_ADD_TO_CART_FORM}"]`
        );
        if (window.Webflow.env("preview")) {
          if (event.detail.isInitial) {
            (0, import_forEach2.default)(addToCartForms, (addToCartForm) => {
              const groups = new PillGroups(
                // @ts-expect-error - TS2345 - Argument of type 'Element' is not assignable to parameter of type 'HTMLElement'.
                addToCartForm,
                ({ optionId, optionSetId }) => {
                  groups.setSelectedPillsForSkuValues({
                    [optionSetId]: optionId
                  });
                }
              );
              groups.init();
            });
          }
          return;
        }
        if (window.Webflow.env("design")) {
          return;
        }
        (0, import_forEach2.default)(addToCartForms, (addToCartForm) => {
          const addToCartButton = findElementByNodeType(
            NODE_TYPE_COMMERCE_ADD_TO_CART_BUTTON,
            addToCartForm
          );
          if (addToCartButton) {
            const cartElementsThatOpenOnAdd = document.querySelectorAll(
              `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_COMMERCE_CART_WRAPPER}"][${DATA_ATTR_OPEN_PRODUCT}]`
            );
            addToCartButton.setAttribute(
              "aria-haspopup",
              cartElementsThatOpenOnAdd.length > 0 ? "dialog" : "false"
            );
          }
          const buyNowButton = findElementByNodeType(
            NODE_TYPE_COMMERCE_BUY_NOW_BUTTON,
            addToCartForm
          );
          if (stripeStore2 && !stripeStore2.isInitialized()) {
            if (buyNowButton) {
              hideElement3(buyNowButton);
            }
          }
          const instanceId = getInstanceId3(addToCartForm);
          if (event.detail.isInitial) {
            updateStore(instanceId, {
              // @ts-expect-error - TS2322 - Type 'string | null' is not assignable to type 'string | undefined'.
              selectedSku: addToCartForm instanceof Element ? addToCartForm.getAttribute(DATA_ATTR_COMMERCE_SKU_ID) : ""
            });
            addStoreWatcher(
              instanceId,
              "skuValues",
              updatePageWithNewSkuValuesData(instanceId, apolloClient2)
            );
            addStoreWatcher(
              instanceId,
              "skuValues",
              updateDropdownsOnPage(instanceId)
            );
            if (PillGroups.hasPillGroups(addToCartForm)) {
              const pillGroup = new PillGroups(
                // @ts-expect-error - TS2345 - Argument of type 'Element' is not assignable to parameter of type 'HTMLElement'.
                addToCartForm,
                updateSkuValuesOnPillSelect(instanceId, apolloClient2)
              );
              addStoreWatcher(instanceId, "skuValues", (newSkuValues) => {
                pillGroup.setSelectedPillsForSkuValues(newSkuValues);
              });
              pillGroup.init();
            }
          }
          const currentSkuId = fetchFromStore(instanceId, "selectedSku");
          if (!currentSkuId) {
            return;
          }
          const productId = addToCartForm && addToCartForm.getAttribute(DATA_ATTR_COMMERCE_PRODUCT_ID);
          if (productId) {
            apolloClient2.query({
              query: getAllVariantsAndMemberships,
              variables: { productId }
            }).then(({ data: data2 }) => {
              const items = data2?.database?.collections?.c_sku_?.items ?? [];
              const products = data2?.database?.collections?.c_product_?.items ?? [];
              const productType = products[0] ? products[0].f_ec_product_type_2dr10dr.name : "Advanced";
              if (event.detail.isInitial && items[0].f_sku_values_3dr && items[0].f_sku_values_3dr.length > 0) {
                const skuValuesMap = items[0].f_sku_values_3dr.reduce((map, sku) => {
                  map[sku.property.id] = "";
                  return map;
                }, {});
                updateStore(instanceId, {
                  skuValues: skuValuesMap
                });
              }
              const memberships = data2?.database?.commerceMemberships ?? [];
              const hasActiveMemebership = Boolean(memberships[0]?.active);
              if (hasActiveMemebership) {
                if (buyNowButton) {
                  buyNowButton.removeAttribute("href");
                  buyNowButton.setAttribute("role", "link");
                  buyNowButton.setAttribute("aria-disabled", "true");
                  buyNowButton.classList.add("w--ecommerce-buy-now-disabled");
                }
                if (addToCartButton) {
                  addToCartButton.setAttribute("disabled", "true");
                  addToCartButton.classList.add(
                    "w--ecommerce-add-to-cart-disabled"
                  );
                }
              }
              const currentSku = items.find((item) => item.id === currentSkuId);
              if (currentSku) {
                if (currentSku["f_ec_sku_billing_method_2dr6dr14dr"] === "subscription" || productType === "Membership") {
                  updateStore(instanceId, {
                    requiresUserSession: true
                  });
                }
                if (currentSku["f_ec_sku_billing_method_2dr6dr14dr"] === "subscription") {
                  hideElement3(addToCartButton);
                  if (buyNowButton) {
                    const buyNowSubscriptionText = buyNowButton.getAttribute(DATA_ATTR_SUBSCRIPTION_TEXT) || "Subscribe now";
                    buyNowButton.innerText = buyNowSubscriptionText;
                  }
                } else if (buyNowButton) {
                  const buyNowDefaultText = buyNowButton.getAttribute(DATA_ATTR_DEFAULT_TEXT) || "Buy now";
                  buyNowButton.innerText = buyNowDefaultText;
                }
                const addToCartWrapper = addToCartForm.parentElement;
                const optionListElement = findElementByNodeType(
                  NODE_TYPE_COMMERCE_ADD_TO_CART_OPTION_LIST,
                  // @ts-expect-error - TS2345 - Argument of type 'HTMLElement | null' is not assignable to parameter of type 'Document | Element | undefined'.
                  addToCartWrapper
                );
                const outOfStockState = addToCartWrapper && addToCartWrapper.getElementsByClassName(
                  "w-commerce-commerceaddtocartoutofstock"
                )[0];
                const hasVariantsWithStock = items.some(
                  // @ts-expect-error - TS7006 - Parameter 'variant' implicitly has an 'any' type.
                  (variant) => variant.inventory.type === INVENTORY_TYPE_FINITE && variant.inventory.quantity > 0 || variant.inventory.type === INVENTORY_TYPE_INFINITE
                );
                if (!hasVariantsWithStock && outOfStockState) {
                  outOfStockState.style.display = "";
                  addToCartForm.style.display = "none";
                }
                const optionSetsToUpdate = items[0].f_sku_values_3dr.map(
                  // @ts-expect-error - TS7006 - Parameter 'skuValue' implicitly has an 'any' type.
                  (skuValue) => skuValue.property.id
                );
                optionSetsToUpdate.forEach((optionToUpdateSetId) => {
                  let optionSet = addToCartForm.querySelector(
                    `[${DATA_ATTR_COMMERCE_OPTION_SET_ID}="${optionToUpdateSetId}"]`
                  );
                  if (!(optionSet instanceof HTMLElement)) {
                    return;
                  }
                  const optionSetId = optionSet.getAttribute(
                    DATA_ATTR_COMMERCE_OPTION_SET_ID
                  );
                  if (optionSet.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_ADD_TO_CART_PILL_GROUP) {
                    optionSet = optionSet._wfPillGroup;
                  }
                  (0, import_forEach2.default)(optionSet.options, (option) => {
                    if (!option.value) {
                      option.enabled = true;
                    } else {
                      disableVariantsWithNoStock(items, optionSetId, option);
                    }
                  });
                  const selectedOptionSets = optionSetsToUpdate.filter(
                    // @ts-expect-error - TS7006 - Parameter 'optionSetToUpdate' implicitly has an 'any' type.
                    (optionSetToUpdate) => optionSetToUpdate.value
                  );
                  disableVariantsWithNoStockForRemainingSelections(
                    items,
                    selectedOptionSets,
                    optionSet,
                    optionSetId
                  );
                  if (event.detail.isInitial && optionListElement && optionListElement.getAttribute(
                    DATA_ATTR_PRESELECT_DEFAULT_VARIANT
                  ) === "true") {
                    const defaultSkuId = (0, import_get6.default)(data2, [
                      "database",
                      "collections",
                      "c_product_",
                      "items",
                      0,
                      "f_default_sku_7dr",
                      "id"
                    ]);
                    const defaultSku = items.find(
                      // @ts-expect-error - TS7006 - Parameter 'item' implicitly has an 'any' type.
                      (item) => item.id === defaultSkuId
                    );
                    if (defaultSku && !(defaultSku.inventory.type === INVENTORY_TYPE_FINITE && defaultSku.inventory.quantity <= 0)) {
                      const defaultSkuIndex = Array.from(
                        // @ts-expect-error - TS18047 - 'optionSet' is possibly 'null'. | TS2339 - Property 'options' does not exist on type 'Element'.
                        optionSet.options
                      ).findIndex(
                        (option) => defaultSku.f_sku_values_3dr.some(
                          // @ts-expect-error - TS7006 - Parameter 'value' implicitly has an 'any' type. | TS18046 - 'option' is of type 'unknown'.
                          (value2) => value2.value.id === option.value
                        )
                      );
                      if (defaultSkuIndex > -1) {
                        optionSet.selectedIndex = defaultSkuIndex;
                        updateStore(instanceId, {
                          selectedSku: defaultSku.id,
                          // update the sku values map to set each property id to the value id
                          // for the current variant
                          skuValues: simplifySkuValues(defaultSku.f_sku_values_3dr)
                        });
                      }
                    }
                  }
                });
              }
            });
          }
        });
      };
      disableVariantsWithNoStockForRemainingSelections = (items, selectedOptionSets, optionSet, id) => {
        let possibleVariantSelections = items.filter((item) => {
          const itemMappedBySkuValues = item.f_sku_values_3dr.map(
            // @ts-expect-error - TS7006 - Parameter 'skuValues' implicitly has an 'any' type.
            (skuValues) => skuValues.value.id
          );
          const currentlySelectedSkuValues = selectedOptionSets.map(
            // @ts-expect-error - TS7006 - Parameter 'selectedOptionSet' implicitly has an 'any' type.
            (selectedOptionSet) => selectedOptionSet.value
          );
          return currentlySelectedSkuValues.every(
            (selectedValue) => itemMappedBySkuValues.includes(selectedValue)
          );
        });
        if (possibleVariantSelections.length === 1) {
          possibleVariantSelections = items;
        }
        (0, import_forEach2.default)(optionSet.options, (option) => {
          if (!option.value) {
            option.enabled = true;
          } else {
            const variantsFiltered = possibleVariantSelections.filter((variant) => {
              const sku = variant.f_sku_values_3dr.find(
                // @ts-expect-error - TS7006 - Parameter 'value' implicitly has an 'any' type.
                (value2) => value2.property.id === id
              );
              return sku.value.id === option.value;
            });
            const hasVariantsWithStock = variantsFiltered.some(
              // @ts-expect-error - TS7006 - Parameter 'variant' implicitly has an 'any' type.
              (variant) => variant.inventory.type === INVENTORY_TYPE_FINITE && variant.inventory.quantity > 0 || variant.inventory.type === INVENTORY_TYPE_INFINITE
            );
            if (!hasVariantsWithStock) {
              option.disabled = true;
            } else {
              option.disabled = false;
            }
          }
        });
      };
      disableVariantsWithNoStock = (items, optionSetId, option) => {
        if (!option.value) {
          return;
        }
        const variantsFiltered = items.filter((variant) => {
          const sku = variant.f_sku_values_3dr.find(
            // @ts-expect-error - TS7006 - Parameter 'value' implicitly has an 'any' type.
            (value2) => value2.property.id === optionSetId
          );
          return sku.value.id === option.value;
        });
        const hasVariantsWithStock = variantsFiltered.some(
          // @ts-expect-error - TS7006 - Parameter 'variant' implicitly has an 'any' type.
          (variant) => variant.inventory.type === INVENTORY_TYPE_FINITE && variant.inventory.quantity > 0 || variant.inventory.type === INVENTORY_TYPE_INFINITE
        );
        if (!hasVariantsWithStock) {
          option.disabled = true;
        } else {
          option.disabled = false;
        }
      };
      updateTextNodeVisibility = (node) => {
        if (node.innerText) {
          removeWDynBindEmptyClass(node);
        }
        if (!node.innerText && !node.classList.contains(CLASS_NAME_W_DYN_BIND_EMPTY)) {
          node.classList.add(CLASS_NAME_W_DYN_BIND_EMPTY);
        }
      };
      updateLightboxJson = (node, binding) => {
        const lightboxScript = node.querySelector("script.w-json");
        if (lightboxScript) {
          const nodeJsonData = JSON.parse(lightboxScript.innerHTML);
          lightboxScript.innerHTML = JSON.stringify(
            createJsonFromBoundMedia(binding, nodeJsonData) || {
              items: [],
              group: nodeJsonData && nodeJsonData.group
            }
          );
        }
      };
      isBuyNowButtonEvent = ({ target }) => target instanceof Element && target.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_BUY_NOW_BUTTON;
      handleBuyNow = (event, apolloClient2) => {
        event.preventDefault();
        if (window.Webflow.env("preview")) {
          return;
        }
        const buyNowButton = event.target;
        const addToCartForm = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_ADD_TO_CART_FORM,
          // @ts-expect-error - TS2345 - Argument of type 'EventTarget | null' is not assignable to parameter of type 'EventTarget'.
          buyNowButton
        );
        if (!(buyNowButton instanceof HTMLAnchorElement) || !(addToCartForm instanceof HTMLFormElement)) {
          return;
        }
        if (buyNowButton.classList.contains("w--ecommerce-buy-now-disabled")) {
          return;
        }
        const addToCartWrapper = addToCartForm.parentElement;
        if (!(addToCartWrapper instanceof Element)) {
          return;
        }
        const addToCartErrorElement = findElementByNodeType(
          NODE_TYPE_COMMERCE_ADD_TO_CART_ERROR,
          addToCartWrapper
        );
        if (!(addToCartErrorElement instanceof Element)) {
          return;
        }
        addToCartErrorElement.style.display = "none";
        if (!isProtocolHttps()) {
          window.alert(
            "This site is currently unsecured so you cannot purchase this item."
          );
          return;
        }
        if (!addToCartForm.reportValidity()) {
          return;
        }
        const requiresUserSession = fetchFromStore(
          getInstanceId3(addToCartForm),
          "requiresUserSession"
        );
        const hasUserSession = document.cookie.split(";").some((cookie) => cookie.indexOf(LOGGEDIN_COOKIE_NAME) > -1);
        if (requiresUserSession && !hasUserSession) {
          (0, import_siteBundles.redirectWithUsrdir)(`/${USYS_PAGE_SETTINGS.signup.slug}`);
          return;
        }
        const publishableKey = buyNowButton.getAttribute(DATA_ATTR_PUBLISHABLE_KEY);
        if (!publishableKey) {
          const errorMsg = addToCartErrorElement.querySelector(
            `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_ADD_TO_CART_ERROR}"]`
          );
          if (!errorMsg) {
            return;
          }
          const errorText = errorMsg.getAttribute(CHECKOUT_DISABLED_ERROR_MESSAGE) || "Checkout is disabled.";
          errorMsg.textContent = errorText;
          addToCartErrorElement.style.removeProperty("display");
          return;
        }
        const skuId = fetchFromStore(getInstanceId3(addToCartForm), "selectedSku") || "";
        const formData = formToObject(addToCartForm);
        const formCount = formData[NODE_NAME_COMMERCE_ADD_TO_CART_QUANTITY_INPUT];
        const count = formCount ? parseInt(formCount, 10) : 1;
        if (!skuId) {
          const errorMsg = addToCartErrorElement.querySelector(
            `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_ADD_TO_CART_ERROR}"]`
          );
          if (!errorMsg) {
            return;
          }
          const errorText = errorMsg.getAttribute(getATCErrorMessageForType("select-all-options")) || "Please select an option in each set.";
          errorMsg.textContent = errorText;
          addToCartErrorElement.style.removeProperty("display");
          return;
        }
        apolloClient2.mutate({
          mutation: addToCartMutation,
          variables: { skuId, count, buyNow: true }
        }).then(({ data: data2 }) => {
          const itemPrice = data2.ecommerceAddToCart.itemPrice || {};
          trackAddToCartUsage(skuId, count, itemPrice);
          window.location = buyNowButton.href;
        }).catch((error) => {
          if (addToCartErrorElement) {
            addToCartErrorElement.style.removeProperty("display");
            const errorMsg = addToCartErrorElement.querySelector(
              `[${DATA_ATTR_NODE_TYPE}="${NODE_TYPE_ADD_TO_CART_ERROR}"]`
            );
            if (!errorMsg) {
              return;
            }
            const errorType = error.graphQLErrors && error.graphQLErrors.length > 0 && error.graphQLErrors[0].code === "OutOfInventory" ? "quantity" : "buy-now";
            const errorText = errorMsg.getAttribute(getATCErrorMessageForType(errorType)) || "";
            errorMsg.textContent = errorText;
          }
          debug_default.error(error);
          triggerRender(null);
        });
      };
      register = (handlerProxy2) => {
        handlerProxy2.on("submit", addToCartFormEventTargetMatcher, handleAtcSubmit);
        handlerProxy2.on(
          "change",
          addToCartOptionSelectEventTargetMatcher,
          handleAtcOptionSelectChange
        );
        handlerProxy2.on("click", isBuyNowButtonEvent, handleBuyNow);
        handlerProxy2.on(RENDER_TREE_EVENT, Boolean, handleAtcPageLoad);
      };
      addToCartEvents_default = { register };
    }
  });

  // node_modules/lodash/_assignMergeValue.js
  var require_assignMergeValue = __commonJS({
    "node_modules/lodash/_assignMergeValue.js"(exports2, module2) {
      var baseAssignValue = require_baseAssignValue();
      var eq = require_eq();
      function assignMergeValue(object, key2, value2) {
        if (value2 !== void 0 && !eq(object[key2], value2) || value2 === void 0 && !(key2 in object)) {
          baseAssignValue(object, key2, value2);
        }
      }
      module2.exports = assignMergeValue;
    }
  });

  // node_modules/lodash/isArrayLikeObject.js
  var require_isArrayLikeObject = __commonJS({
    "node_modules/lodash/isArrayLikeObject.js"(exports2, module2) {
      var isArrayLike = require_isArrayLike();
      var isObjectLike2 = require_isObjectLike();
      function isArrayLikeObject(value2) {
        return isObjectLike2(value2) && isArrayLike(value2);
      }
      module2.exports = isArrayLikeObject;
    }
  });

  // node_modules/lodash/_safeGet.js
  var require_safeGet = __commonJS({
    "node_modules/lodash/_safeGet.js"(exports2, module2) {
      function safeGet(object, key2) {
        if (key2 === "constructor" && typeof object[key2] === "function") {
          return;
        }
        if (key2 == "__proto__") {
          return;
        }
        return object[key2];
      }
      module2.exports = safeGet;
    }
  });

  // node_modules/lodash/toPlainObject.js
  var require_toPlainObject = __commonJS({
    "node_modules/lodash/toPlainObject.js"(exports2, module2) {
      var copyObject = require_copyObject();
      var keysIn = require_keysIn();
      function toPlainObject(value2) {
        return copyObject(value2, keysIn(value2));
      }
      module2.exports = toPlainObject;
    }
  });

  // node_modules/lodash/_baseMergeDeep.js
  var require_baseMergeDeep = __commonJS({
    "node_modules/lodash/_baseMergeDeep.js"(exports2, module2) {
      var assignMergeValue = require_assignMergeValue();
      var cloneBuffer = require_cloneBuffer();
      var cloneTypedArray = require_cloneTypedArray();
      var copyArray = require_copyArray();
      var initCloneObject = require_initCloneObject();
      var isArguments = require_isArguments();
      var isArray2 = require_isArray();
      var isArrayLikeObject = require_isArrayLikeObject();
      var isBuffer = require_isBuffer();
      var isFunction3 = require_isFunction();
      var isObject2 = require_isObject();
      var isPlainObject = require_isPlainObject();
      var isTypedArray = require_isTypedArray();
      var safeGet = require_safeGet();
      var toPlainObject = require_toPlainObject();
      function baseMergeDeep(object, source, key2, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key2), srcValue = safeGet(source, key2), stacked = stack.get(srcValue);
        if (stacked) {
          assignMergeValue(object, key2, stacked);
          return;
        }
        var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object, source, stack) : void 0;
        var isCommon = newValue === void 0;
        if (isCommon) {
          var isArr = isArray2(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
          newValue = srcValue;
          if (isArr || isBuff || isTyped) {
            if (isArray2(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
            newValue = objValue;
            if (isArguments(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (!isObject2(objValue) || isFunction3(objValue)) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }
        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack["delete"](srcValue);
        }
        assignMergeValue(object, key2, newValue);
      }
      module2.exports = baseMergeDeep;
    }
  });

  // node_modules/lodash/_baseMerge.js
  var require_baseMerge = __commonJS({
    "node_modules/lodash/_baseMerge.js"(exports2, module2) {
      var Stack = require_Stack();
      var assignMergeValue = require_assignMergeValue();
      var baseFor = require_baseFor();
      var baseMergeDeep = require_baseMergeDeep();
      var isObject2 = require_isObject();
      var keysIn = require_keysIn();
      var safeGet = require_safeGet();
      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }
        baseFor(source, function(srcValue, key2) {
          stack || (stack = new Stack());
          if (isObject2(srcValue)) {
            baseMergeDeep(object, source, key2, srcIndex, baseMerge, customizer, stack);
          } else {
            var newValue = customizer ? customizer(safeGet(object, key2), srcValue, key2 + "", object, source, stack) : void 0;
            if (newValue === void 0) {
              newValue = srcValue;
            }
            assignMergeValue(object, key2, newValue);
          }
        }, keysIn);
      }
      module2.exports = baseMerge;
    }
  });

  // node_modules/lodash/_baseRest.js
  var require_baseRest = __commonJS({
    "node_modules/lodash/_baseRest.js"(exports2, module2) {
      var identity3 = require_identity();
      var overRest = require_overRest();
      var setToString = require_setToString();
      function baseRest(func, start) {
        return setToString(overRest(func, start, identity3), func + "");
      }
      module2.exports = baseRest;
    }
  });

  // node_modules/lodash/_isIterateeCall.js
  var require_isIterateeCall = __commonJS({
    "node_modules/lodash/_isIterateeCall.js"(exports2, module2) {
      var eq = require_eq();
      var isArrayLike = require_isArrayLike();
      var isIndex = require_isIndex();
      var isObject2 = require_isObject();
      function isIterateeCall(value2, index2, object) {
        if (!isObject2(object)) {
          return false;
        }
        var type = typeof index2;
        if (type == "number" ? isArrayLike(object) && isIndex(index2, object.length) : type == "string" && index2 in object) {
          return eq(object[index2], value2);
        }
        return false;
      }
      module2.exports = isIterateeCall;
    }
  });

  // node_modules/lodash/_createAssigner.js
  var require_createAssigner = __commonJS({
    "node_modules/lodash/_createAssigner.js"(exports2, module2) {
      var baseRest = require_baseRest();
      var isIterateeCall = require_isIterateeCall();
      function createAssigner(assigner) {
        return baseRest(function(object, sources) {
          var index2 = -1, length2 = sources.length, customizer = length2 > 1 ? sources[length2 - 1] : void 0, guard = length2 > 2 ? sources[2] : void 0;
          customizer = assigner.length > 3 && typeof customizer == "function" ? (length2--, customizer) : void 0;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length2 < 3 ? void 0 : customizer;
            length2 = 1;
          }
          object = Object(object);
          while (++index2 < length2) {
            var source = sources[index2];
            if (source) {
              assigner(object, source, index2, customizer);
            }
          }
          return object;
        });
      }
      module2.exports = createAssigner;
    }
  });

  // node_modules/lodash/mergeWith.js
  var require_mergeWith = __commonJS({
    "node_modules/lodash/mergeWith.js"(exports2, module2) {
      var baseMerge = require_baseMerge();
      var createAssigner = require_createAssigner();
      var mergeWith2 = createAssigner(function(object, source, srcIndex, customizer) {
        baseMerge(object, source, srcIndex, customizer);
      });
      module2.exports = mergeWith2;
    }
  });

  // packages/shared/render/plugins/Commerce/modules/stripeStore.ts
  var StripeStore, generateDisplayItemsFromOrder, generateShippingOptionsFromMethods;
  var init_stripeStore = __esm({
    "packages/shared/render/plugins/Commerce/modules/stripeStore.ts"() {
      "use strict";
      init_debug();
      init_constants();
      StripeStore = class {
        constructor(docElement) {
          if (window.Webflow.env("design") || window.Webflow.env("preview")) {
            return;
          }
          const stripeJsElement = docElement.querySelector(
            `[${STRIPE_ECOMMERCE_KEY}]`
          );
          if (!stripeJsElement) {
            this.store = {
              initialized: false,
              stripe: {},
              elements: [],
              elementInstances: [],
              cartPaymentRequests: [],
              styleMapObservers: {}
            };
            return debug_default.error(
              "Stripe has not been set up for this project \u2013 Go to the project's Ecommerce Payment settings in the Designer to link Stripe."
            );
          }
          const ecommKey = stripeJsElement.getAttribute(STRIPE_ECOMMERCE_KEY);
          const ecommAccountId = stripeJsElement.getAttribute(
            STRIPE_ECOMMERCE_ACCOUNT_ID
          );
          const stripeOpts = ecommAccountId ? {
            stripeAccount: ecommAccountId,
            apiVersion: "2020-03-02"
          } : null;
          const stripe = window.Stripe(ecommKey, stripeOpts);
          this.store = {
            initialized: true,
            stripe,
            elements: [],
            elementInstances: [],
            cartPaymentRequests: [],
            styleMapObservers: {}
          };
        }
        isInitialized() {
          return this.store.initialized;
        }
        getStripeInstance() {
          return this.store.stripe;
        }
        getElementsInstance(index2) {
          return this.store.elements[index2];
        }
        getElement(type, index2) {
          return this.store.elementInstances[index2][type];
        }
        createElementsInstance(index2) {
          if (this.store.elements[index2]) {
            throw new Error(
              `Storage already exists for checkout form instance ${index2}`
            );
          } else {
            const stripeInstance = this.getStripeInstance();
            this.store.elements[index2] = stripeInstance.elements();
            this.store.elementInstances[index2] = {};
          }
        }
        createElement(type, index2, options) {
          if (!this.isInitialized()) {
            throw new Error(
              "Stripe has not been set up for this project \u2013 Go to the project's Ecommerce Payment settings in the Designer to link Stripe."
            );
          }
          if (this.store.elementInstances[index2][type]) {
            throw new Error(
              `Stripe Element of type ${type} for instance ${index2} already exists on this page`
            );
          }
          const el = this.store.elements[index2].create(type, options);
          this.store.elementInstances[index2][type] = el;
          return el;
        }
        updateCartPaymentRequest(index2, orderData, siteData) {
          const stripeInstance = this.getStripeInstance();
          const requiresShipping = Boolean(orderData.statusFlags.requiresShipping);
          const options = {
            country: siteData.businessAddress.country || siteData.defaultCountry || "US",
            currency: siteData.defaultCurrency.toLowerCase(),
            total: {
              amount: orderData.subtotal.value,
              label: "Subtotal",
              pending: true
            },
            displayItems: generateDisplayItemsFromOrder(orderData, false),
            requestPayerName: true,
            requestPayerEmail: true,
            requestPayerPhone: false,
            requestShipping: requiresShipping
          };
          try {
            this.store.cartPaymentRequests[index2] = stripeInstance.paymentRequest(options);
          } catch (error) {
            let ignoreError = false;
            if (error.name === "IntegrationError") {
              const unsupportedCountryPattern = /country should be one of the following strings(?:.*)You specified: (.*)./;
              const matches = error.message.match(unsupportedCountryPattern);
              ignoreError = Boolean(matches);
            }
            if (!ignoreError) {
              throw error;
            } else {
              console.error(error);
            }
          }
          return this.store.cartPaymentRequests[index2];
        }
        getCartPaymentRequest(index2) {
          return this.store.cartPaymentRequests[index2];
        }
      };
      generateDisplayItemsFromOrder = (orderData, showExtraItems) => [
        // @ts-expect-error - TS7006 - Parameter 'item' implicitly has an 'any' type.
        ...orderData.userItems.map((item) => ({
          label: `${item.product.f_name_} ${item.count > 1 ? `(${item.count})` : ""}`,
          amount: item.rowTotal.value
        })),
        ...showExtraItems ? (
          // @ts-expect-error - TS7006 - Parameter 'item' implicitly has an 'any' type.
          orderData.extraItems.map((item) => ({
            label: item.name,
            amount: item.price.value
          }))
        ) : []
      ];
      generateShippingOptionsFromMethods = (shippingMethods) => shippingMethods.map((method) => ({
        id: method.id,
        label: method.name,
        detail: method.description || "",
        amount: method.price.value
      }));
    }
  });

  // node_modules/lodash/merge.js
  var require_merge = __commonJS({
    "node_modules/lodash/merge.js"(exports2, module2) {
      var baseMerge = require_baseMerge();
      var createAssigner = require_createAssigner();
      var merge4 = createAssigner(function(object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });
      module2.exports = merge4;
    }
  });

  // node_modules/tinycolor2/tinycolor.js
  var require_tinycolor = __commonJS({
    "node_modules/tinycolor2/tinycolor.js"(exports2, module2) {
      (function(Math2) {
        var trimLeft = /^\s+/, trimRight = /\s+$/, tinyCounter = 0, mathRound = Math2.round, mathMin = Math2.min, mathMax = Math2.max, mathRandom = Math2.random;
        function tinycolor2(color, opts) {
          color = color ? color : "";
          opts = opts || {};
          if (color instanceof tinycolor2) {
            return color;
          }
          if (!(this instanceof tinycolor2)) {
            return new tinycolor2(color, opts);
          }
          var rgb = inputToRGB(color);
          this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;
          this._gradientType = opts.gradientType;
          if (this._r < 1) {
            this._r = mathRound(this._r);
          }
          if (this._g < 1) {
            this._g = mathRound(this._g);
          }
          if (this._b < 1) {
            this._b = mathRound(this._b);
          }
          this._ok = rgb.ok;
          this._tc_id = tinyCounter++;
        }
        tinycolor2.prototype = {
          isDark: function() {
            return this.getBrightness() < 128;
          },
          isLight: function() {
            return !this.isDark();
          },
          isValid: function() {
            return this._ok;
          },
          getOriginalInput: function() {
            return this._originalInput;
          },
          getFormat: function() {
            return this._format;
          },
          getAlpha: function() {
            return this._a;
          },
          getBrightness: function() {
            var rgb = this.toRgb();
            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
          },
          getLuminance: function() {
            var rgb = this.toRgb();
            var RsRGB, GsRGB, BsRGB, R, G, B;
            RsRGB = rgb.r / 255;
            GsRGB = rgb.g / 255;
            BsRGB = rgb.b / 255;
            if (RsRGB <= 0.03928) {
              R = RsRGB / 12.92;
            } else {
              R = Math2.pow((RsRGB + 0.055) / 1.055, 2.4);
            }
            if (GsRGB <= 0.03928) {
              G = GsRGB / 12.92;
            } else {
              G = Math2.pow((GsRGB + 0.055) / 1.055, 2.4);
            }
            if (BsRGB <= 0.03928) {
              B = BsRGB / 12.92;
            } else {
              B = Math2.pow((BsRGB + 0.055) / 1.055, 2.4);
            }
            return 0.2126 * R + 0.7152 * G + 0.0722 * B;
          },
          setAlpha: function(value2) {
            this._a = boundAlpha(value2);
            this._roundA = mathRound(100 * this._a) / 100;
            return this;
          },
          toHsv: function() {
            var hsv = rgbToHsv(this._r, this._g, this._b);
            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
          },
          toHsvString: function() {
            var hsv = rgbToHsv(this._r, this._g, this._b);
            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);
            return this._a == 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")";
          },
          toHsl: function() {
            var hsl = rgbToHsl2(this._r, this._g, this._b);
            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
          },
          toHslString: function() {
            var hsl = rgbToHsl2(this._r, this._g, this._b);
            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);
            return this._a == 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")";
          },
          toHex: function(allow3Char) {
            return rgbToHex2(this._r, this._g, this._b, allow3Char);
          },
          toHexString: function(allow3Char) {
            return "#" + this.toHex(allow3Char);
          },
          toHex8: function(allow4Char) {
            return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
          },
          toHex8String: function(allow4Char) {
            return "#" + this.toHex8(allow4Char);
          },
          toRgb: function() {
            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
          },
          toRgbString: function() {
            return this._a == 1 ? "rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" : "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
          },
          toPercentageRgb: function() {
            return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
          },
          toPercentageRgbString: function() {
            return this._a == 1 ? "rgb(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" : "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
          },
          toName: function() {
            if (this._a === 0) {
              return "transparent";
            }
            if (this._a < 1) {
              return false;
            }
            return hexNames[rgbToHex2(this._r, this._g, this._b, true)] || false;
          },
          toFilter: function(secondColor) {
            var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
            var secondHex8String = hex8String;
            var gradientType = this._gradientType ? "GradientType = 1, " : "";
            if (secondColor) {
              var s = tinycolor2(secondColor);
              secondHex8String = "#" + rgbaToArgbHex(s._r, s._g, s._b, s._a);
            }
            return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
          },
          toString: function(format) {
            var formatSet = !!format;
            format = format || this._format;
            var formattedString = false;
            var hasAlpha = this._a < 1 && this._a >= 0;
            var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");
            if (needsAlphaFormat) {
              if (format === "name" && this._a === 0) {
                return this.toName();
              }
              return this.toRgbString();
            }
            if (format === "rgb") {
              formattedString = this.toRgbString();
            }
            if (format === "prgb") {
              formattedString = this.toPercentageRgbString();
            }
            if (format === "hex" || format === "hex6") {
              formattedString = this.toHexString();
            }
            if (format === "hex3") {
              formattedString = this.toHexString(true);
            }
            if (format === "hex4") {
              formattedString = this.toHex8String(true);
            }
            if (format === "hex8") {
              formattedString = this.toHex8String();
            }
            if (format === "name") {
              formattedString = this.toName();
            }
            if (format === "hsl") {
              formattedString = this.toHslString();
            }
            if (format === "hsv") {
              formattedString = this.toHsvString();
            }
            return formattedString || this.toHexString();
          },
          clone: function() {
            return tinycolor2(this.toString());
          },
          _applyModification: function(fn, args) {
            var color = fn.apply(null, [this].concat([].slice.call(args)));
            this._r = color._r;
            this._g = color._g;
            this._b = color._b;
            this.setAlpha(color._a);
            return this;
          },
          lighten: function() {
            return this._applyModification(lighten, arguments);
          },
          brighten: function() {
            return this._applyModification(brighten, arguments);
          },
          darken: function() {
            return this._applyModification(darken, arguments);
          },
          desaturate: function() {
            return this._applyModification(desaturate, arguments);
          },
          saturate: function() {
            return this._applyModification(saturate, arguments);
          },
          greyscale: function() {
            return this._applyModification(greyscale, arguments);
          },
          spin: function() {
            return this._applyModification(spin, arguments);
          },
          _applyCombination: function(fn, args) {
            return fn.apply(null, [this].concat([].slice.call(args)));
          },
          analogous: function() {
            return this._applyCombination(analogous, arguments);
          },
          complement: function() {
            return this._applyCombination(complement2, arguments);
          },
          monochromatic: function() {
            return this._applyCombination(monochromatic, arguments);
          },
          splitcomplement: function() {
            return this._applyCombination(splitcomplement, arguments);
          },
          triad: function() {
            return this._applyCombination(triad, arguments);
          },
          tetrad: function() {
            return this._applyCombination(tetrad, arguments);
          }
        };
        tinycolor2.fromRatio = function(color, opts) {
          if (typeof color == "object") {
            var newColor = {};
            for (var i in color) {
              if (color.hasOwnProperty(i)) {
                if (i === "a") {
                  newColor[i] = color[i];
                } else {
                  newColor[i] = convertToPercentage(color[i]);
                }
              }
            }
            color = newColor;
          }
          return tinycolor2(color, opts);
        };
        function inputToRGB(color) {
          var rgb = { r: 0, g: 0, b: 0 };
          var a = 1;
          var s = null;
          var v = null;
          var l = null;
          var ok = false;
          var format = false;
          if (typeof color == "string") {
            color = stringInputToObject(color);
          }
          if (typeof color == "object") {
            if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
              rgb = rgbToRgb(color.r, color.g, color.b);
              ok = true;
              format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
            } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
              s = convertToPercentage(color.s);
              v = convertToPercentage(color.v);
              rgb = hsvToRgb(color.h, s, v);
              ok = true;
              format = "hsv";
            } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
              s = convertToPercentage(color.s);
              l = convertToPercentage(color.l);
              rgb = hslToRgb2(color.h, s, l);
              ok = true;
              format = "hsl";
            }
            if (color.hasOwnProperty("a")) {
              a = color.a;
            }
          }
          a = boundAlpha(a);
          return {
            ok,
            format: color.format || format,
            r: mathMin(255, mathMax(rgb.r, 0)),
            g: mathMin(255, mathMax(rgb.g, 0)),
            b: mathMin(255, mathMax(rgb.b, 0)),
            a
          };
        }
        function rgbToRgb(r, g, b) {
          return {
            r: bound01(r, 255) * 255,
            g: bound01(g, 255) * 255,
            b: bound01(b, 255) * 255
          };
        }
        function rgbToHsl2(r, g, b) {
          r = bound01(r, 255);
          g = bound01(g, 255);
          b = bound01(b, 255);
          var max = mathMax(r, g, b), min = mathMin(r, g, b);
          var h, s, l = (max + min) / 2;
          if (max == min) {
            h = s = 0;
          } else {
            var d = max - min;
            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
            switch (max) {
              case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
              case g:
                h = (b - r) / d + 2;
                break;
              case b:
                h = (r - g) / d + 4;
                break;
            }
            h /= 6;
          }
          return { h, s, l };
        }
        function hslToRgb2(h, s, l) {
          var r, g, b;
          h = bound01(h, 360);
          s = bound01(s, 100);
          l = bound01(l, 100);
          function hue2rgb2(p2, q2, t) {
            if (t < 0)
              t += 1;
            if (t > 1)
              t -= 1;
            if (t < 1 / 6)
              return p2 + (q2 - p2) * 6 * t;
            if (t < 1 / 2)
              return q2;
            if (t < 2 / 3)
              return p2 + (q2 - p2) * (2 / 3 - t) * 6;
            return p2;
          }
          if (s === 0) {
            r = g = b = l;
          } else {
            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
            var p = 2 * l - q;
            r = hue2rgb2(p, q, h + 1 / 3);
            g = hue2rgb2(p, q, h);
            b = hue2rgb2(p, q, h - 1 / 3);
          }
          return { r: r * 255, g: g * 255, b: b * 255 };
        }
        function rgbToHsv(r, g, b) {
          r = bound01(r, 255);
          g = bound01(g, 255);
          b = bound01(b, 255);
          var max = mathMax(r, g, b), min = mathMin(r, g, b);
          var h, s, v = max;
          var d = max - min;
          s = max === 0 ? 0 : d / max;
          if (max == min) {
            h = 0;
          } else {
            switch (max) {
              case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
              case g:
                h = (b - r) / d + 2;
                break;
              case b:
                h = (r - g) / d + 4;
                break;
            }
            h /= 6;
          }
          return { h, s, v };
        }
        function hsvToRgb(h, s, v) {
          h = bound01(h, 360) * 6;
          s = bound01(s, 100);
          v = bound01(v, 100);
          var i = Math2.floor(h), f = h - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod2 = i % 6, r = [v, q, p, p, t, v][mod2], g = [t, v, v, q, p, p][mod2], b = [p, p, t, v, v, q][mod2];
          return { r: r * 255, g: g * 255, b: b * 255 };
        }
        function rgbToHex2(r, g, b, allow3Char) {
          var hex = [
            pad2(mathRound(r).toString(16)),
            pad2(mathRound(g).toString(16)),
            pad2(mathRound(b).toString(16))
          ];
          if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
          }
          return hex.join("");
        }
        function rgbaToHex(r, g, b, a, allow4Char) {
          var hex = [
            pad2(mathRound(r).toString(16)),
            pad2(mathRound(g).toString(16)),
            pad2(mathRound(b).toString(16)),
            pad2(convertDecimalToHex(a))
          ];
          if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
          }
          return hex.join("");
        }
        function rgbaToArgbHex(r, g, b, a) {
          var hex = [
            pad2(convertDecimalToHex(a)),
            pad2(mathRound(r).toString(16)),
            pad2(mathRound(g).toString(16)),
            pad2(mathRound(b).toString(16))
          ];
          return hex.join("");
        }
        tinycolor2.equals = function(color1, color2) {
          if (!color1 || !color2) {
            return false;
          }
          return tinycolor2(color1).toRgbString() == tinycolor2(color2).toRgbString();
        };
        tinycolor2.random = function() {
          return tinycolor2.fromRatio({
            r: mathRandom(),
            g: mathRandom(),
            b: mathRandom()
          });
        };
        function desaturate(color, amount) {
          amount = amount === 0 ? 0 : amount || 10;
          var hsl = tinycolor2(color).toHsl();
          hsl.s -= amount / 100;
          hsl.s = clamp01(hsl.s);
          return tinycolor2(hsl);
        }
        function saturate(color, amount) {
          amount = amount === 0 ? 0 : amount || 10;
          var hsl = tinycolor2(color).toHsl();
          hsl.s += amount / 100;
          hsl.s = clamp01(hsl.s);
          return tinycolor2(hsl);
        }
        function greyscale(color) {
          return tinycolor2(color).desaturate(100);
        }
        function lighten(color, amount) {
          amount = amount === 0 ? 0 : amount || 10;
          var hsl = tinycolor2(color).toHsl();
          hsl.l += amount / 100;
          hsl.l = clamp01(hsl.l);
          return tinycolor2(hsl);
        }
        function brighten(color, amount) {
          amount = amount === 0 ? 0 : amount || 10;
          var rgb = tinycolor2(color).toRgb();
          rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));
          rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));
          rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));
          return tinycolor2(rgb);
        }
        function darken(color, amount) {
          amount = amount === 0 ? 0 : amount || 10;
          var hsl = tinycolor2(color).toHsl();
          hsl.l -= amount / 100;
          hsl.l = clamp01(hsl.l);
          return tinycolor2(hsl);
        }
        function spin(color, amount) {
          var hsl = tinycolor2(color).toHsl();
          var hue = (hsl.h + amount) % 360;
          hsl.h = hue < 0 ? 360 + hue : hue;
          return tinycolor2(hsl);
        }
        function complement2(color) {
          var hsl = tinycolor2(color).toHsl();
          hsl.h = (hsl.h + 180) % 360;
          return tinycolor2(hsl);
        }
        function triad(color) {
          var hsl = tinycolor2(color).toHsl();
          var h = hsl.h;
          return [
            tinycolor2(color),
            tinycolor2({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),
            tinycolor2({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })
          ];
        }
        function tetrad(color) {
          var hsl = tinycolor2(color).toHsl();
          var h = hsl.h;
          return [
            tinycolor2(color),
            tinycolor2({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),
            tinycolor2({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),
            tinycolor2({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })
          ];
        }
        function splitcomplement(color) {
          var hsl = tinycolor2(color).toHsl();
          var h = hsl.h;
          return [
            tinycolor2(color),
            tinycolor2({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),
            tinycolor2({ h: (h + 216) % 360, s: hsl.s, l: hsl.l })
          ];
        }
        function analogous(color, results, slices) {
          results = results || 6;
          slices = slices || 30;
          var hsl = tinycolor2(color).toHsl();
          var part = 360 / slices;
          var ret = [tinycolor2(color)];
          for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
            hsl.h = (hsl.h + part) % 360;
            ret.push(tinycolor2(hsl));
          }
          return ret;
        }
        function monochromatic(color, results) {
          results = results || 6;
          var hsv = tinycolor2(color).toHsv();
          var h = hsv.h, s = hsv.s, v = hsv.v;
          var ret = [];
          var modification = 1 / results;
          while (results--) {
            ret.push(tinycolor2({ h, s, v }));
            v = (v + modification) % 1;
          }
          return ret;
        }
        tinycolor2.mix = function(color1, color2, amount) {
          amount = amount === 0 ? 0 : amount || 50;
          var rgb1 = tinycolor2(color1).toRgb();
          var rgb2 = tinycolor2(color2).toRgb();
          var p = amount / 100;
          var rgba = {
            r: (rgb2.r - rgb1.r) * p + rgb1.r,
            g: (rgb2.g - rgb1.g) * p + rgb1.g,
            b: (rgb2.b - rgb1.b) * p + rgb1.b,
            a: (rgb2.a - rgb1.a) * p + rgb1.a
          };
          return tinycolor2(rgba);
        };
        tinycolor2.readability = function(color1, color2) {
          var c1 = tinycolor2(color1);
          var c2 = tinycolor2(color2);
          return (Math2.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math2.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
        };
        tinycolor2.isReadable = function(color1, color2, wcag2) {
          var readability = tinycolor2.readability(color1, color2);
          var wcag2Parms, out;
          out = false;
          wcag2Parms = validateWCAG2Parms(wcag2);
          switch (wcag2Parms.level + wcag2Parms.size) {
            case "AAsmall":
            case "AAAlarge":
              out = readability >= 4.5;
              break;
            case "AAlarge":
              out = readability >= 3;
              break;
            case "AAAsmall":
              out = readability >= 7;
              break;
          }
          return out;
        };
        tinycolor2.mostReadable = function(baseColor, colorList, args) {
          var bestColor = null;
          var bestScore = 0;
          var readability;
          var includeFallbackColors, level, size2;
          args = args || {};
          includeFallbackColors = args.includeFallbackColors;
          level = args.level;
          size2 = args.size;
          for (var i = 0; i < colorList.length; i++) {
            readability = tinycolor2.readability(baseColor, colorList[i]);
            if (readability > bestScore) {
              bestScore = readability;
              bestColor = tinycolor2(colorList[i]);
            }
          }
          if (tinycolor2.isReadable(baseColor, bestColor, { "level": level, "size": size2 }) || !includeFallbackColors) {
            return bestColor;
          } else {
            args.includeFallbackColors = false;
            return tinycolor2.mostReadable(baseColor, ["#fff", "#000"], args);
          }
        };
        var names = tinycolor2.names = {
          aliceblue: "f0f8ff",
          antiquewhite: "faebd7",
          aqua: "0ff",
          aquamarine: "7fffd4",
          azure: "f0ffff",
          beige: "f5f5dc",
          bisque: "ffe4c4",
          black: "000",
          blanchedalmond: "ffebcd",
          blue: "00f",
          blueviolet: "8a2be2",
          brown: "a52a2a",
          burlywood: "deb887",
          burntsienna: "ea7e5d",
          cadetblue: "5f9ea0",
          chartreuse: "7fff00",
          chocolate: "d2691e",
          coral: "ff7f50",
          cornflowerblue: "6495ed",
          cornsilk: "fff8dc",
          crimson: "dc143c",
          cyan: "0ff",
          darkblue: "00008b",
          darkcyan: "008b8b",
          darkgoldenrod: "b8860b",
          darkgray: "a9a9a9",
          darkgreen: "006400",
          darkgrey: "a9a9a9",
          darkkhaki: "bdb76b",
          darkmagenta: "8b008b",
          darkolivegreen: "556b2f",
          darkorange: "ff8c00",
          darkorchid: "9932cc",
          darkred: "8b0000",
          darksalmon: "e9967a",
          darkseagreen: "8fbc8f",
          darkslateblue: "483d8b",
          darkslategray: "2f4f4f",
          darkslategrey: "2f4f4f",
          darkturquoise: "00ced1",
          darkviolet: "9400d3",
          deeppink: "ff1493",
          deepskyblue: "00bfff",
          dimgray: "696969",
          dimgrey: "696969",
          dodgerblue: "1e90ff",
          firebrick: "b22222",
          floralwhite: "fffaf0",
          forestgreen: "228b22",
          fuchsia: "f0f",
          gainsboro: "dcdcdc",
          ghostwhite: "f8f8ff",
          gold: "ffd700",
          goldenrod: "daa520",
          gray: "808080",
          green: "008000",
          greenyellow: "adff2f",
          grey: "808080",
          honeydew: "f0fff0",
          hotpink: "ff69b4",
          indianred: "cd5c5c",
          indigo: "4b0082",
          ivory: "fffff0",
          khaki: "f0e68c",
          lavender: "e6e6fa",
          lavenderblush: "fff0f5",
          lawngreen: "7cfc00",
          lemonchiffon: "fffacd",
          lightblue: "add8e6",
          lightcoral: "f08080",
          lightcyan: "e0ffff",
          lightgoldenrodyellow: "fafad2",
          lightgray: "d3d3d3",
          lightgreen: "90ee90",
          lightgrey: "d3d3d3",
          lightpink: "ffb6c1",
          lightsalmon: "ffa07a",
          lightseagreen: "20b2aa",
          lightskyblue: "87cefa",
          lightslategray: "789",
          lightslategrey: "789",
          lightsteelblue: "b0c4de",
          lightyellow: "ffffe0",
          lime: "0f0",
          limegreen: "32cd32",
          linen: "faf0e6",
          magenta: "f0f",
          maroon: "800000",
          mediumaquamarine: "66cdaa",
          mediumblue: "0000cd",
          mediumorchid: "ba55d3",
          mediumpurple: "9370db",
          mediumseagreen: "3cb371",
          mediumslateblue: "7b68ee",
          mediumspringgreen: "00fa9a",
          mediumturquoise: "48d1cc",
          mediumvioletred: "c71585",
          midnightblue: "191970",
          mintcream: "f5fffa",
          mistyrose: "ffe4e1",
          moccasin: "ffe4b5",
          navajowhite: "ffdead",
          navy: "000080",
          oldlace: "fdf5e6",
          olive: "808000",
          olivedrab: "6b8e23",
          orange: "ffa500",
          orangered: "ff4500",
          orchid: "da70d6",
          palegoldenrod: "eee8aa",
          palegreen: "98fb98",
          paleturquoise: "afeeee",
          palevioletred: "db7093",
          papayawhip: "ffefd5",
          peachpuff: "ffdab9",
          peru: "cd853f",
          pink: "ffc0cb",
          plum: "dda0dd",
          powderblue: "b0e0e6",
          purple: "800080",
          rebeccapurple: "663399",
          red: "f00",
          rosybrown: "bc8f8f",
          royalblue: "4169e1",
          saddlebrown: "8b4513",
          salmon: "fa8072",
          sandybrown: "f4a460",
          seagreen: "2e8b57",
          seashell: "fff5ee",
          sienna: "a0522d",
          silver: "c0c0c0",
          skyblue: "87ceeb",
          slateblue: "6a5acd",
          slategray: "708090",
          slategrey: "708090",
          snow: "fffafa",
          springgreen: "00ff7f",
          steelblue: "4682b4",
          tan: "d2b48c",
          teal: "008080",
          thistle: "d8bfd8",
          tomato: "ff6347",
          turquoise: "40e0d0",
          violet: "ee82ee",
          wheat: "f5deb3",
          white: "fff",
          whitesmoke: "f5f5f5",
          yellow: "ff0",
          yellowgreen: "9acd32"
        };
        var hexNames = tinycolor2.hexNames = flip2(names);
        function flip2(o) {
          var flipped = {};
          for (var i in o) {
            if (o.hasOwnProperty(i)) {
              flipped[o[i]] = i;
            }
          }
          return flipped;
        }
        function boundAlpha(a) {
          a = parseFloat(a);
          if (isNaN(a) || a < 0 || a > 1) {
            a = 1;
          }
          return a;
        }
        function bound01(n, max) {
          if (isOnePointZero(n)) {
            n = "100%";
          }
          var processPercent = isPercentage(n);
          n = mathMin(max, mathMax(0, parseFloat(n)));
          if (processPercent) {
            n = parseInt(n * max, 10) / 100;
          }
          if (Math2.abs(n - max) < 1e-6) {
            return 1;
          }
          return n % max / parseFloat(max);
        }
        function clamp01(val2) {
          return mathMin(1, mathMax(0, val2));
        }
        function parseIntFromHex(val2) {
          return parseInt(val2, 16);
        }
        function isOnePointZero(n) {
          return typeof n == "string" && n.indexOf(".") != -1 && parseFloat(n) === 1;
        }
        function isPercentage(n) {
          return typeof n === "string" && n.indexOf("%") != -1;
        }
        function pad2(c) {
          return c.length == 1 ? "0" + c : "" + c;
        }
        function convertToPercentage(n) {
          if (n <= 1) {
            n = n * 100 + "%";
          }
          return n;
        }
        function convertDecimalToHex(d) {
          return Math2.round(parseFloat(d) * 255).toString(16);
        }
        function convertHexToDecimal(h) {
          return parseIntFromHex(h) / 255;
        }
        var matchers = function() {
          var CSS_INTEGER = "[-\\+]?\\d+%?";
          var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
          var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
          var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
          var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
          return {
            CSS_UNIT: new RegExp(CSS_UNIT),
            rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
            rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
            hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
            hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
            hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
            hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
            hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
            hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
            hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
            hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
          };
        }();
        function isValidCSSUnit(color) {
          return !!matchers.CSS_UNIT.exec(color);
        }
        function stringInputToObject(color) {
          color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
          var named = false;
          if (names[color]) {
            color = names[color];
            named = true;
          } else if (color == "transparent") {
            return { r: 0, g: 0, b: 0, a: 0, format: "name" };
          }
          var match;
          if (match = matchers.rgb.exec(color)) {
            return { r: match[1], g: match[2], b: match[3] };
          }
          if (match = matchers.rgba.exec(color)) {
            return { r: match[1], g: match[2], b: match[3], a: match[4] };
          }
          if (match = matchers.hsl.exec(color)) {
            return { h: match[1], s: match[2], l: match[3] };
          }
          if (match = matchers.hsla.exec(color)) {
            return { h: match[1], s: match[2], l: match[3], a: match[4] };
          }
          if (match = matchers.hsv.exec(color)) {
            return { h: match[1], s: match[2], v: match[3] };
          }
          if (match = matchers.hsva.exec(color)) {
            return { h: match[1], s: match[2], v: match[3], a: match[4] };
          }
          if (match = matchers.hex8.exec(color)) {
            return {
              r: parseIntFromHex(match[1]),
              g: parseIntFromHex(match[2]),
              b: parseIntFromHex(match[3]),
              a: convertHexToDecimal(match[4]),
              format: named ? "name" : "hex8"
            };
          }
          if (match = matchers.hex6.exec(color)) {
            return {
              r: parseIntFromHex(match[1]),
              g: parseIntFromHex(match[2]),
              b: parseIntFromHex(match[3]),
              format: named ? "name" : "hex"
            };
          }
          if (match = matchers.hex4.exec(color)) {
            return {
              r: parseIntFromHex(match[1] + "" + match[1]),
              g: parseIntFromHex(match[2] + "" + match[2]),
              b: parseIntFromHex(match[3] + "" + match[3]),
              a: convertHexToDecimal(match[4] + "" + match[4]),
              format: named ? "name" : "hex8"
            };
          }
          if (match = matchers.hex3.exec(color)) {
            return {
              r: parseIntFromHex(match[1] + "" + match[1]),
              g: parseIntFromHex(match[2] + "" + match[2]),
              b: parseIntFromHex(match[3] + "" + match[3]),
              format: named ? "name" : "hex"
            };
          }
          return false;
        }
        function validateWCAG2Parms(parms) {
          var level, size2;
          parms = parms || { "level": "AA", "size": "small" };
          level = (parms.level || "AA").toUpperCase();
          size2 = (parms.size || "small").toLowerCase();
          if (level !== "AA" && level !== "AAA") {
            level = "AA";
          }
          if (size2 !== "small" && size2 !== "large") {
            size2 = "small";
          }
          return { "level": level, "size": size2 };
        }
        if (typeof module2 !== "undefined" && module2.exports) {
          module2.exports = tinycolor2;
        } else if (typeof define === "function" && define.amd) {
          define(function() {
            return tinycolor2;
          });
        } else {
          window.tinycolor = tinycolor2;
        }
      })(Math);
    }
  });

  // packages/systems/style/breakpoint-ids/index.ts
  var BREAKPOINT_ID_XXL, BREAKPOINT_ID_XL, BREAKPOINT_ID_LARGE, BREAKPOINT_ID_MAIN, BREAKPOINT_ID_MEDIUM, BREAKPOINT_ID_SMALL, BREAKPOINT_ID_TINY;
  var init_breakpoint_ids = __esm({
    "packages/systems/style/breakpoint-ids/index.ts"() {
      "use strict";
      BREAKPOINT_ID_XXL = "xxl";
      BREAKPOINT_ID_XL = "xl";
      BREAKPOINT_ID_LARGE = "large";
      BREAKPOINT_ID_MAIN = "main";
      BREAKPOINT_ID_MEDIUM = "medium";
      BREAKPOINT_ID_SMALL = "small";
      BREAKPOINT_ID_TINY = "tiny";
    }
  });

  // packages/systems/style/breakpoints-config/index.ts
  var DEFAULT_BREAKPOINTS_CONFIG, LARGER_BREAKPOINTS_CONFIG, LARGER_BREAKPOINTS_WORDING;
  var init_breakpoints_config = __esm({
    "packages/systems/style/breakpoints-config/index.ts"() {
      "use strict";
      init_breakpoint_ids();
      DEFAULT_BREAKPOINTS_CONFIG = {
        [BREAKPOINT_ID_MAIN]: {
          maxWidth: 1e4
        },
        [BREAKPOINT_ID_MEDIUM]: {
          maxWidth: 991
        },
        [BREAKPOINT_ID_SMALL]: {
          maxWidth: 767
        },
        [BREAKPOINT_ID_TINY]: {
          maxWidth: 479
        }
      };
      LARGER_BREAKPOINTS_CONFIG = {
        [BREAKPOINT_ID_MAIN]: {
          maxWidth: 1e4
        },
        [BREAKPOINT_ID_XXL]: {
          minWidth: 1920
        },
        [BREAKPOINT_ID_XL]: {
          minWidth: 1440
        },
        [BREAKPOINT_ID_LARGE]: {
          minWidth: 1280
        },
        [BREAKPOINT_ID_MEDIUM]: {
          maxWidth: 991
        },
        [BREAKPOINT_ID_SMALL]: {
          maxWidth: 767
        },
        [BREAKPOINT_ID_TINY]: {
          maxWidth: 479
        }
      };
      LARGER_BREAKPOINTS_WORDING = {
        [BREAKPOINT_ID_XXL]: {
          label: "1920px and up",
          description: null,
          copy: "Styles added here will apply at 1920px and up."
        },
        [BREAKPOINT_ID_XL]: {
          label: "1440px and up",
          description: null,
          copy: "Styles added here will apply at 1440px and up, unless they\u2019re edited at a larger breakpoint."
        },
        [BREAKPOINT_ID_LARGE]: {
          label: "1280px and up",
          description: null,
          copy: "Styles added here will apply at 1280px and up, unless they\u2019re edited at a larger breakpoint."
        },
        [BREAKPOINT_ID_MAIN]: {
          label: "Desktop",
          description: "Base breakpoint",
          copy: "Desktop styles apply at all breakpoints, unless they\u2019re edited at a larger or smaller breakpoint. Start your styling here."
        },
        [BREAKPOINT_ID_MEDIUM]: {
          label: "Tablet",
          description: "991px and down",
          copy: "Styles added here will apply at 991px and down, unless they\u2019re edited at a smaller breakpoint."
        },
        [BREAKPOINT_ID_SMALL]: {
          label: "Mobile landscape",
          description: "767px and down",
          copy: "Styles added here will apply at 767px and down, unless they\u2019re edited at a smaller breakpoint."
        },
        [BREAKPOINT_ID_TINY]: {
          label: "Mobile portrait",
          description: "478px and down",
          copy: "Styles added here will apply at 478px and down."
        }
      };
    }
  });

  // packages/shared/render/plugins/Commerce/StyleMapObserver.ts
  var import_merge, import_tinycolor2, STYLE_MAP_ATTR, orderedBreakpointIds, ORDERED_MEDIA_QUERIES, StyleMapObserver;
  var init_StyleMapObserver = __esm({
    "packages/shared/render/plugins/Commerce/StyleMapObserver.ts"() {
      "use strict";
      import_merge = __toESM(require_merge());
      import_tinycolor2 = __toESM(require_tinycolor());
      init_breakpoints_config();
      init_breakpoint_ids();
      STYLE_MAP_ATTR = "data-wf-style-map";
      orderedBreakpointIds = [
        BREAKPOINT_ID_MAIN,
        BREAKPOINT_ID_LARGE,
        BREAKPOINT_ID_XL,
        BREAKPOINT_ID_XXL,
        BREAKPOINT_ID_MEDIUM,
        BREAKPOINT_ID_SMALL,
        BREAKPOINT_ID_TINY
      ];
      ORDERED_MEDIA_QUERIES = orderedBreakpointIds.map((breakpointId) => {
        const config = LARGER_BREAKPOINTS_CONFIG[breakpointId];
        let prop;
        let value2;
        if ("minWidth" in config) {
          prop = "min-width";
          value2 = config.minWidth;
        }
        if ("maxWidth" in config) {
          prop = "max-width";
          value2 = config.maxWidth;
        }
        if (prop === void 0 || value2 === void 0) {
          throw new Error(
            'Bad breakpoint config, expected either "minWidth" or "maxWidth".'
          );
        }
        return {
          name: breakpointId,
          query: `(${prop}: ${value2}px)`
        };
      });
      StyleMapObserver = class {
        styles = void 0;
        observer = void 0;
        mediaQueries = [];
        options = { onChange: () => {
        } };
        constructor(element, options) {
          this.options = options;
          if (element.hasAttribute(STYLE_MAP_ATTR)) {
            const styleMapJSON = element.getAttribute(STYLE_MAP_ATTR);
            if (styleMapJSON) {
              this.setStylesFromJSON(styleMapJSON);
              const doc = element.ownerDocument;
              const win = doc.defaultView;
              this.mediaQueries = ORDERED_MEDIA_QUERIES.map((mq) => ({
                ...mq,
                // @ts-expect-error - TS18047 - 'win' is possibly 'null'.
                listener: win.matchMedia(mq.query)
              }));
              this.observer = new win.MutationObserver(this.handleMutationObserver);
              this.observer.observe(element, {
                attributes: true
              });
              this.mediaQueries.forEach(({ listener }) => {
                listener.addListener(this.dispatch);
              });
              this.dispatch();
            }
          }
        }
        setStylesFromJSON(styleMapJSON) {
          try {
            this.styles = JSON.parse(styleMapJSON);
          } catch (e) {
            this.styles = {};
          }
        }
        getAppliedStyles() {
          if (!this.styles) {
            return;
          }
          const styles = this.styles;
          const appliedStyles = this.mediaQueries.reduce(
            (stylesMap, { listener, name: name2 }) => listener.matches ? (0, import_merge.default)(stylesMap, styles[name2]) : stylesMap,
            {}
          );
          return appliedStyles;
        }
        dispatch = () => {
          this.options.onChange(this.getAppliedStyles());
        };
        handleMutationObserver = (mutationList) => {
          mutationList.forEach((mutation) => {
            if (mutation.type === "attributes" && mutation.attributeName === STYLE_MAP_ATTR && mutation.target.hasAttribute(STYLE_MAP_ATTR)) {
              const styleMapJSON = mutation.target.getAttribute(STYLE_MAP_ATTR);
              if (styleMapJSON) {
                this.setStylesFromJSON(styleMapJSON);
                this.dispatch();
              }
            }
          });
        };
        destroy() {
          if (this.observer) {
            this.observer.disconnect();
          }
          this.mediaQueries.forEach(({ listener }) => {
            listener.removeListener(this.dispatch);
          });
        }
      };
      __publicField(StyleMapObserver, "appliedStylesToStripeElementStyles", (appliedStylesMap) => {
        if (!appliedStylesMap) {
          return {};
        }
        const appliedStylesMapWithUpdatedColorValues = Object.keys(
          appliedStylesMap
        ).reduce((updatedStyles, styleKey) => {
          const colorVal = appliedStylesMap[styleKey].color;
          const textShadowVal = (
            // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'Partial<Record<"lang" | "active" | "placeholder" | "focus" | "after" | "before" | "hover" | "empty" | "noPseudo" | "nth-child(odd)" | "nth-child(even)" | "first-child" | "last-child" | "pressed" | "visited" | "focus-visible" | "focus-within", { ...; }>>'.
            appliedStylesMap[styleKey].textShadow && // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'Partial<Record<"lang" | "active" | "placeholder" | "focus" | "after" | "before" | "hover" | "empty" | "noPseudo" | "nth-child(odd)" | "nth-child(even)" | "first-child" | "last-child" | "pressed" | "visited" | "focus-visible" | "focus-within", { ...; }>>'.
            appliedStylesMap[styleKey].textShadow.split(/(?=hsla)/)
          );
          updatedStyles[styleKey] = appliedStylesMap[styleKey];
          if (colorVal) {
            updatedStyles[styleKey].color = (0, import_tinycolor2.default)(colorVal).toRgbString();
          }
          if (textShadowVal && textShadowVal.length > 1) {
            updatedStyles[styleKey].textShadow = textShadowVal[0] + (0, import_tinycolor2.default)(textShadowVal[1]).toRgbString();
          }
          return updatedStyles;
        }, {});
        const styles = {
          ...appliedStylesMapWithUpdatedColorValues.noPseudo,
          ":hover": appliedStylesMapWithUpdatedColorValues.hover,
          ":focus": appliedStylesMapWithUpdatedColorValues.focus,
          "::placeholder": appliedStylesMapWithUpdatedColorValues.placeholder
        };
        return {
          base: styles,
          invalid: styles,
          empty: styles,
          complete: styles
        };
      });
    }
  });

  // packages/shared/render/plugins/Commerce/modules/checkoutMutations.ts
  var updateOrderIdentityMutation, updateOrderAddressMutation, updateObfuscatedOrderAddressMutation, updateOrderShippingMethodMutation, updateOrderStripePaymentMethodMutation, updateCustomData, estimateOrderTaxesMutation, recalcOrderEstimationsMutation, requestPayPalOrderMutation, syncPayPalOrderInfo, attemptSubmitOrderMutation, applyDiscountMutation;
  var init_checkoutMutations = __esm({
    "packages/shared/render/plugins/Commerce/modules/checkoutMutations.ts"() {
      "use strict";
      init_lib7();
      updateOrderIdentityMutation = lib_default2`
  mutation CheckoutUpdateOrderIdentity($email: String) {
    ecommerceUpdateIdentity(email: $email) {
      ok
    }
  }
`;
      updateOrderAddressMutation = lib_default2`
  mutation CheckoutUpdateOrderAddress(
    $type: String!
    $name: String
    $address_line1: String
    $address_line2: String
    $address_city: String
    $address_state: String
    $address_country: String
    $address_zip: String
  ) {
    ecommerceUpdateAddress(
      type: $type
      addressee: $name
      line1: $address_line1
      line2: $address_line2
      city: $address_city
      state: $address_state
      country: $address_country
      postalCode: $address_zip
    ) {
      ok
    }
  }
`;
      updateObfuscatedOrderAddressMutation = lib_default2`
  mutation CheckoutUpdateObfuscatedOrderAddress(
    $type: String!
    $name: String
    $address_line1: String
    $address_line2: String
    $address_city: String
    $address_state: String
    $address_country: String
    $address_zip: String
  ) {
    ecommerceUpdateObfuscatedAddress(
      type: $type
      addressee: $name
      line1: $address_line1
      line2: $address_line2
      city: $address_city
      state: $address_state
      country: $address_country
      postalCode: $address_zip
    ) {
      ok
    }
  }
`;
      updateOrderShippingMethodMutation = lib_default2`
  mutation CheckoutUpdateShippingMethod($id: String) {
    ecommerceUpdateShippingMethod(methodId: $id) {
      ok
    }
  }
`;
      updateOrderStripePaymentMethodMutation = lib_default2`
  mutation CheckoutUpdateStripePaymentMethod($paymentMethod: String!) {
    ecommerceStoreStripePaymentMethod(paymentMethod: $paymentMethod) {
      ok
    }
  }
`;
      updateCustomData = lib_default2`
  mutation CheckoutUpdateCustomData(
    $customData: [mutation_commerce_update_custom_data]!
  ) {
    ecommerceUpdateCustomData(customData: $customData) {
      ok
    }
  }
`;
      estimateOrderTaxesMutation = lib_default2`
  mutation CheckoutEstimateOrderTaxes {
    ecommerceEstimateTaxes {
      ok
    }
  }
`;
      recalcOrderEstimationsMutation = lib_default2`
  mutation CheckoutRecalcOrderEstimations {
    ecommerceRecalcEstimations {
      ok
    }
  }
`;
      requestPayPalOrderMutation = lib_default2`
  mutation CheckoutRequestPayPalOrder {
    ecommercePaypalOrderRequest {
      orderId
    }
  }
`;
      syncPayPalOrderInfo = lib_default2`
  mutation CheckoutSyncPayPalInfo {
    ecommerceSyncPaypalOrderInfoToWF {
      ok
    }
  }
`;
      attemptSubmitOrderMutation = lib_default2`
  mutation CheckoutAttemptSubmitOrder(
    $checkoutType: mutation_commerce_checkout_type
    $paymentIntentId: String
  ) {
    ecommerceAttemptSubmitOrder(
      checkoutType: $checkoutType
      paymentIntentId: $paymentIntentId
    ) {
      orderId
      token
      ok
      customerPaid {
        decimalValue
        unit
      }
      purchasedItems {
        id
        name
        count
        price {
          decimalValue
        }
      }
      status
      clientSecret
      nextAction
    }
  }
`;
      applyDiscountMutation = lib_default2`
  mutation CheckoutApplyDiscount($discountCode: String!) {
    ecommerceApplyDiscount(discountCode: $discountCode) {
      ok
    }
  }
`;
    }
  });

  // packages/shared/render/plugins/Commerce/modules/checkoutUtils.ts
  var syncStylesToStripeElement, initializeStripeElements, errorCodeToCheckoutErrorType, getErrorType2, updateErrorMessage, elementNameByGraphQLError, updateRequiredFields, showErrorMessageForError, beforeUnloadHandler, createOrderIdentityMutation, createOrderAddressMutation, createOrderShippingMethodMutation, createCustomDataMutation, createStripePaymentMethodMutation, createRecalcOrderEstimationsMutation, createUpdateObfuscatedOrderAddressMutation, renderCheckout, runRenderOnCheckoutElement, renderCheckoutFormContainers, createAttemptSubmitOrderRequest, getOrderDataFromGraphQLResponse, orderRequiresAdditionalAction, redirectToOrderConfirmation, applyDiscount;
  var init_checkoutUtils = __esm({
    "packages/shared/render/plugins/Commerce/modules/checkoutUtils.ts"() {
      "use strict";
      init_lib7();
      init_commerceUtils();
      init_StyleMapObserver();
      init_constants();
      init_rendering();
      init_webPaymentsEvents();
      init_checkoutMutations();
      syncStylesToStripeElement = (stripeElement) => (appliedStyles) => {
        stripeElement.update({
          style: StyleMapObserver.appliedStylesToStripeElementStyles(appliedStyles)
        });
      };
      initializeStripeElements = (store) => {
        if (
          // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
          window.Webflow.env("design") || // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
          window.Webflow.env("preview") || !store.isInitialized()
        ) {
          return;
        }
        const checkoutFormContainers = findAllElementsByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER
        );
        const cartWrappers = findAllElementsByNodeType(
          NODE_TYPE_COMMERCE_CART_WRAPPER
        );
        const allStripeElements = [...checkoutFormContainers, ...cartWrappers];
        allStripeElements.forEach((element, index2) => {
          store.createElementsInstance(index2);
          element.setAttribute(STRIPE_ELEMENT_INSTANCE, String(index2));
        });
        const stripeElements = document.querySelectorAll(`[${STRIPE_ELEMENT_TYPE}]`);
        Array.from(stripeElements).forEach((element) => {
          const type = element.getAttribute(STRIPE_ELEMENT_TYPE);
          if (!type) {
            throw new Error("Stripe element missing type string");
          }
          const checkoutFormContainer = findClosestElementByNodeType(
            NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER,
            element
          );
          if (!checkoutFormContainer) {
            return;
          }
          const index2 = parseInt(
            // @ts-expect-error - TS2345 - Argument of type 'string | null' is not assignable to parameter of type 'string'.
            checkoutFormContainer.getAttribute(STRIPE_ELEMENT_INSTANCE),
            10
          );
          const el = store.createElement(type, index2, {
            style: safeParseJson(element.getAttribute(STRIPE_ELEMENT_STYLE) || "{}"),
            classes: {
              focus: "-wfp-focus"
            }
          });
          el.mount(element);
          const styleMapObserver = new StyleMapObserver(element, {
            onChange: syncStylesToStripeElement(el)
          });
        });
      };
      errorCodeToCheckoutErrorType = (code, msg) => {
        switch (code) {
          case "OrderTotalRange":
            if (msg && msg.match(/too small/i)) {
              return "minimum";
            } else {
              return "info";
            }
          case "OrderExtrasChanged":
            return "extras";
          case "PriceChanged":
            return "pricing";
          case "StripeRejected":
            return "billing";
          case "NeedShippingAddress":
          case "InvalidShippingAddress":
          case "NeedShippingMethod":
            return "shipping";
          case "NeedPaymentMethod":
          case "StripeFailure":
            return "payment";
          case "ItemNotFound":
            return "product";
          case "InvalidDiscount":
          case "DiscountInvalid":
          case "DiscountDoesNotExist": {
            return "invalid-discount";
          }
          case "DiscountExpired": {
            return "expired-discount";
          }
          case "DiscountUsageReached": {
            return "usage-reached-discount";
          }
          case "DiscountRequirementsNotMet": {
            return "requirements-not-met";
          }
          default:
            return "info";
        }
      };
      getErrorType2 = (error) => {
        if (error.graphQLErrors && error.graphQLErrors.length > 0) {
          return errorCodeToCheckoutErrorType(
            error.graphQLErrors[0].code,
            error.graphQLErrors[0].message
          );
        }
        if (error.code) {
          return errorCodeToCheckoutErrorType(error.code, error.message);
        }
        return "info";
      };
      updateErrorMessage = (element, error) => {
        const errorText = element.querySelector(CART_CHECKOUT_ERROR_MESSAGE_SELECTOR);
        if (!errorText) {
          return;
        }
        if (error.type && error.type === "validation_error") {
          errorText.textContent = error.message;
          return;
        }
        const errorType = getErrorType2(error);
        const errorData = (
          // @ts-expect-error Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{...}'
          CHECKOUT_ERRORS[errorType.toUpperCase().replace(/\W/g, "_")] || {}
        );
        const defaultErrorMessage = errorData.copy;
        const errorMessage = errorText.getAttribute(getCheckoutErrorMessageForType(errorType)) || defaultErrorMessage;
        errorText.textContent = errorMessage;
        if (errorData.requiresRefresh) {
          errorText.setAttribute(NEEDS_REFRESH, "true");
        } else {
          errorText.removeAttribute(NEEDS_REFRESH);
        }
        if (errorType === "shipping") {
          updateRequiredFields(error);
        }
      };
      elementNameByGraphQLError = {
        MISSING_STATE: "address_state"
      };
      updateRequiredFields = (error) => {
        if (!error.graphQLErrors || error.graphQLErrors.length === 0) {
          return;
        }
        const invalidShippingAddressError = error.graphQLErrors.find(
          // @ts-expect-error - TS7006 - Parameter 'gqlError' implicitly has an 'any' type.
          (gqlError) => gqlError.code === "InvalidShippingAddress"
        );
        if (!invalidShippingAddressError) {
          return;
        }
        invalidShippingAddressError.problems.forEach((problem) => {
          const { type } = problem;
          const elementName = elementNameByGraphQLError[type];
          if (!elementName) {
            return;
          }
          const element = document.getElementsByName(elementName)[0];
          if (!(element instanceof HTMLInputElement)) {
            return;
          }
          element.required = true;
          if (typeof element.reportValidity === "function") {
            element.reportValidity();
          }
        });
      };
      showErrorMessageForError = (err, scope) => {
        const errorState4 = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_ERROR_STATE,
          scope
        );
        if (errorState4) {
          errorState4.style.removeProperty("display");
          updateErrorMessage(errorState4, err);
        }
      };
      beforeUnloadHandler = (e) => {
        e.preventDefault();
        e.returnValue = "";
      };
      createOrderIdentityMutation = (apolloClient2, email) => apolloClient2.mutate({
        mutation: updateOrderIdentityMutation,
        variables: { email }
      });
      createOrderAddressMutation = (apolloClient2, addressInfo) => apolloClient2.mutate({
        mutation: updateOrderAddressMutation,
        variables: addressInfo
      });
      createOrderShippingMethodMutation = (apolloClient2, id) => apolloClient2.mutate({
        mutation: updateOrderShippingMethodMutation,
        variables: { id }
      });
      createCustomDataMutation = (apolloClient2, customData) => apolloClient2.mutate({
        mutation: updateCustomData,
        variables: { customData }
      });
      createStripePaymentMethodMutation = (apolloClient2, id) => apolloClient2.mutate({
        mutation: updateOrderStripePaymentMethodMutation,
        variables: {
          paymentMethod: id
        }
      });
      createRecalcOrderEstimationsMutation = (apolloClient2) => apolloClient2.mutate({
        mutation: recalcOrderEstimationsMutation,
        errorPolicy: "ignore"
      });
      createUpdateObfuscatedOrderAddressMutation = (apolloClient2, addressInfo) => apolloClient2.mutate({
        mutation: updateObfuscatedOrderAddressMutation,
        variables: addressInfo
      });
      renderCheckout = (checkout, data2, prevFocusedInput) => {
        renderTree(checkout, data2);
        const shippingMethodsList = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_LIST,
          checkout
        );
        const shippingMethodsEmpty = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_EMPTY_STATE,
          checkout
        );
        const shippingAddressWrapper = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_WRAPPER,
          checkout
        );
        const billingAddressWrapper = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_WRAPPER,
          checkout
        );
        const billingAddressToggle = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_TOGGLE_CHECKBOX,
          checkout
        );
        const paymentInfoWrapper = checkout.querySelector(
          ".w-commerce-commercecheckoutpaymentinfowrapper"
        );
        if (!(shippingMethodsList instanceof Element) || !(shippingAddressWrapper instanceof Element) || !(billingAddressWrapper instanceof Element) || !(billingAddressToggle instanceof HTMLInputElement) || !(paymentInfoWrapper instanceof Element)) {
          return;
        }
        if (data2.data && data2.data.database && data2.data.database.commerceOrder) {
          const {
            data: {
              database: {
                commerceOrder: {
                  availableShippingMethods,
                  statusFlags: {
                    requiresShipping,
                    isFreeOrder: isFreeOrder2,
                    shippingAddressRequiresPostalCode,
                    billingAddressRequiresPostalCode,
                    hasSubscription: hasSubscription2
                  }
                }
              }
            }
          } = data2;
          const shippingZipField = findElementByNodeType(
            NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_ZIP_FIELD,
            shippingAddressWrapper
          );
          if (shippingZipField instanceof HTMLInputElement) {
            shippingZipField.required = shippingAddressRequiresPostalCode;
          }
          const billingZipField = findElementByNodeType(
            NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_ZIP_FIELD,
            billingAddressWrapper
          );
          if (billingZipField instanceof HTMLInputElement) {
            billingZipField.required = billingAddressRequiresPostalCode;
          }
          const paypalElement = document.querySelector(
            `[${PAYPAL_ELEMENT_INSTANCE}]`
          );
          const paypalButton = checkout.querySelector(
            `[${PAYPAL_BUTTON_ELEMENT_INSTANCE}]`
          );
          if (paypalElement && paypalButton) {
            if (isFreeOrder2 || hasSubscription2) {
              hideElement(paypalButton);
            } else {
              showElement(paypalButton);
            }
          }
          if (!requiresShipping && billingAddressToggle.checked && billingAddressToggle.parentElement && billingAddressToggle.parentElement.classList.contains(
            "w-condition-invisible"
          )) {
            showElement(billingAddressWrapper);
          }
          if (!availableShippingMethods || availableShippingMethods.length < 1) {
            hideElement(shippingMethodsList);
            if (shippingMethodsEmpty instanceof Element) {
              showElement(shippingMethodsEmpty);
            }
          } else {
            if (shippingMethodsEmpty instanceof Element) {
              hideElement(shippingMethodsEmpty);
            }
            showElement(shippingMethodsList);
          }
          if (isFreeOrder2) {
            hideElement(paymentInfoWrapper);
          } else if (!isFreeOrder2 && // @ts-expect-error - TS2339 - Property 'style' does not exist on type 'Element'.
          paymentInfoWrapper.style.getPropertyValue("display") === "none") {
            showElement(paymentInfoWrapper);
          }
        } else {
          hideElement(shippingMethodsList);
          if (shippingMethodsEmpty instanceof Element) {
            showElement(shippingMethodsEmpty);
          }
          showElement(paymentInfoWrapper);
        }
        if (data2.errors.length === 0 && prevFocusedInput) {
          let prevFocusedInputEle = document.getElementById(prevFocusedInput);
          if (!prevFocusedInputEle) {
            prevFocusedInputEle = document.querySelector(
              `[data-wf-bindings="${prevFocusedInput}"]`
            );
          }
          if (prevFocusedInputEle) {
            prevFocusedInputEle.focus();
          }
        }
      };
      runRenderOnCheckoutElement = (checkoutFormContainer, data2, errors, stripeStore2, prevFocusedInput) => {
        renderCheckout(
          checkoutFormContainer,
          {
            ...data2,
            errors: errors.concat(data2.errors).filter(Boolean)
          },
          prevFocusedInput
        );
        if (stripeStore2) {
          updateWebPaymentsButton(checkoutFormContainer, data2, stripeStore2);
        }
      };
      renderCheckoutFormContainers = (checkoutFormContainers, errors, apolloClient2, stripeStore2, prevFocusedInput) => {
        if (checkoutFormContainers.length === 0) {
          return;
        }
        checkoutFormContainers.forEach((checkoutFormContainer) => {
          const queryOptions = {
            query: lib_default2`
        ${checkoutFormContainer.getAttribute(CHECKOUT_QUERY)}
      `,
            fetchPolicy: "network-only",
            // errorPolicy is set to `all` so that we continue to get the cart data when an error occurs
            // this is important in cases like when the address entered doesn't have a shipping zone, as that returns
            // a graphQL error, but we still want to render what the customer has entered
            errorPolicy: "all"
          };
          apolloClient2.query(queryOptions).then((data2) => {
            if (data2.data && data2.data.database && data2.data.database.commerceOrder && data2.data.database.commerceOrder.availableShippingMethods) {
              const {
                data: {
                  database: {
                    commerceOrder: {
                      availableShippingMethods,
                      statusFlags: { requiresShipping }
                    }
                  }
                }
              } = data2;
              const selectedMethod = availableShippingMethods.find(
                // @ts-expect-error - TS7006 - Parameter 'method' implicitly has an 'any' type.
                (method) => method.selected === true
              );
              if (!selectedMethod && requiresShipping) {
                const id = availableShippingMethods[0] ? availableShippingMethods[0].id : null;
                return createOrderShippingMethodMutation(apolloClient2, id).then(() => {
                  return createRecalcOrderEstimationsMutation(apolloClient2);
                }).then(() => {
                  return apolloClient2.query(queryOptions);
                }).then((newData) => {
                  runRenderOnCheckoutElement(
                    checkoutFormContainer,
                    newData,
                    errors,
                    stripeStore2,
                    prevFocusedInput
                  );
                });
              }
            }
            if (data2.data && data2.data.database && data2.data.database.commerceOrder && data2.data.database.commerceOrder.statusFlags && data2.data.database.commerceOrder.statusFlags.shouldRecalc) {
              return createRecalcOrderEstimationsMutation(apolloClient2).then(() => {
                return apolloClient2.query(queryOptions);
              }).then((newData) => {
                runRenderOnCheckoutElement(
                  checkoutFormContainer,
                  newData,
                  errors,
                  stripeStore2,
                  prevFocusedInput
                );
              });
            } else {
              runRenderOnCheckoutElement(
                checkoutFormContainer,
                data2,
                errors,
                stripeStore2,
                prevFocusedInput
              );
            }
          }).catch((err) => {
            errors.push(err);
            renderCheckout(checkoutFormContainer, { errors }, prevFocusedInput);
          });
        });
      };
      createAttemptSubmitOrderRequest = (apolloClient2, variables) => {
        return apolloClient2.mutate({
          mutation: attemptSubmitOrderMutation,
          variables
        });
      };
      getOrderDataFromGraphQLResponse = (data2) => {
        return data2 && data2.data && data2.data.ecommerceAttemptSubmitOrder;
      };
      orderRequiresAdditionalAction = (status) => status === REQUIRES_ACTION;
      redirectToOrderConfirmation = (order, isPayPal = false) => {
        const redirectUrl = `/order-confirmation?orderId=${order.orderId}&token=${order.token}`;
        if (isPayPal) {
          const message = {
            isWebflow: true,
            type: "success",
            detail: redirectUrl
          };
          window.parent.postMessage(JSON.stringify(message), window.location.origin);
        } else {
          window.location.href = redirectUrl;
        }
      };
      applyDiscount = (apolloClient2, variables) => {
        return apolloClient2.mutate({
          mutation: applyDiscountMutation,
          variables
        });
      };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/cartUtils.ts
  var isCartOpen, updateErrorMessage2, errorCodeToCartErrorType, getErrorType3, showErrorMessageForError2;
  var init_cartUtils = __esm({
    "packages/shared/render/plugins/Commerce/modules/cartUtils.ts"() {
      "use strict";
      init_constants();
      init_commerceUtils();
      isCartOpen = () => {
        const cartContainerEl = findElementByNodeType(
          NODE_TYPE_COMMERCE_CART_CONTAINER_WRAPPER
        );
        if (!cartContainerEl)
          return false;
        return window.getComputedStyle(cartContainerEl).display !== "none";
      };
      updateErrorMessage2 = (element, error) => {
        const errorText = element.querySelector(CART_ERROR_MESSAGE_SELECTOR);
        if (!errorText)
          return;
        const errorType = getErrorType3(error);
        const errorData = CART_ERRORS[errorType.toUpperCase()] || {};
        const defaultErrorMessage = errorData.msg;
        const errorMessage = errorText.getAttribute(getCheckoutErrorMessageForType(errorType)) || defaultErrorMessage;
        errorText.textContent = errorMessage;
        if (errorData.requiresRefresh) {
          errorText.setAttribute(NEEDS_REFRESH, "true");
        } else {
          errorText.removeAttribute(NEEDS_REFRESH);
        }
      };
      errorCodeToCartErrorType = (code, msg) => {
        switch (code) {
          case "OrderTotalRange": {
            if (msg && msg.match(/too small/i)) {
              return "cart_order_min";
            }
            return "general";
          }
          default:
            return "general";
        }
      };
      getErrorType3 = (error) => {
        if (error.graphQLErrors && error.graphQLErrors.length > 0) {
          return errorCodeToCartErrorType(
            error.graphQLErrors[0].code,
            error.graphQLErrors[0].message
          );
        }
        if (error.code) {
          return errorCodeToCartErrorType(error.code, error.message);
        }
        return "general";
      };
      showErrorMessageForError2 = (err, scope) => {
        const cartErrorState = findElementByNodeType(
          NODE_TYPE_COMMERCE_CART_ERROR,
          scope
        );
        if (cartErrorState) {
          cartErrorState.style.removeProperty("display");
          updateErrorMessage2(cartErrorState, err);
        }
      };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/webPaymentsEvents.ts
  var hasItems, isWebPaymentsButtonEvent, updateWebPaymentsButton, getShippingMethodsQuery, handleWebPaymentsButton, register2, webPaymentsEvents_default;
  var init_webPaymentsEvents = __esm({
    "packages/shared/render/plugins/Commerce/modules/webPaymentsEvents.ts"() {
      "use strict";
      init_lib7();
      init_commerceUtils();
      init_stripeStore();
      init_checkoutUtils();
      init_cartUtils();
      init_constants();
      init_debug();
      hasItems = (response) => response && response.data && response.data.database && response.data.database.commerceOrder && response.data.database.commerceOrder.userItems && response.data.database.commerceOrder.userItems.length > 0;
      isWebPaymentsButtonEvent = ({ target }) => {
        const cartCheckoutButton = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_QUICK_CHECKOUT_BUTTON,
          target
        );
        const cartApplePayButton = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_APPLE_PAY_BUTTON,
          target
        );
        if (cartCheckoutButton) {
          return cartCheckoutButton;
        } else if (cartApplePayButton) {
          return cartApplePayButton;
        } else {
          return false;
        }
      };
      updateWebPaymentsButton = (wrapper, data2, stripeStore2) => {
        const webPaymentsActionsElements = findAllElementsByNodeType(
          NODE_TYPE_COMMERCE_CART_QUICK_CHECKOUT_ACTIONS,
          wrapper
        );
        if (!webPaymentsActionsElements || webPaymentsActionsElements.length === 0 || !hasItems(data2)) {
          return;
        }
        webPaymentsActionsElements.forEach((webPaymentsActions) => {
          hideElement(webPaymentsActions);
          if (!stripeStore2 || !stripeStore2.isInitialized() || !data2.data.site.commerce.quickCheckoutEnabled) {
            return;
          }
          const stripeInstance = parseInt(
            // @ts-expect-error - TS2345 - Argument of type 'string | null' is not assignable to parameter of type 'string'.
            wrapper.getAttribute(STRIPE_ELEMENT_INSTANCE),
            10
          );
          const paymentRequest = stripeStore2.updateCartPaymentRequest(
            stripeInstance,
            data2.data.database.commerceOrder,
            data2.data.site.commerce
          );
          if (!paymentRequest || typeof paymentRequest.canMakePayment !== "function") {
            return;
          }
          if (isFreeOrder(data2)) {
            return;
          }
          paymentRequest.canMakePayment().then((result2) => {
            if (!result2) {
              return;
            }
            const { applePay } = result2;
            showElement(webPaymentsActions);
            const cartCheckoutButton = findElementByNodeType(
              NODE_TYPE_COMMERCE_CART_QUICK_CHECKOUT_BUTTON,
              webPaymentsActions
            );
            const cartApplePayButton = findElementByNodeType(
              NODE_TYPE_COMMERCE_CART_APPLE_PAY_BUTTON,
              webPaymentsActions
            );
            if (!cartCheckoutButton || !cartApplePayButton) {
              return;
            }
            if (applePay) {
              hideElement(cartCheckoutButton);
              showElement(cartApplePayButton);
            } else {
              hideElement(cartApplePayButton);
              showElement(cartCheckoutButton);
            }
          }).catch(() => {
            debug_default.log(
              "PaymentRequest not available in this browser \u2013 silently exiting"
            );
          });
        });
      };
      getShippingMethodsQuery = lib_default2`
  query FetchShippingMethods {
    database {
      id
      commerceOrder {
        id
        availableShippingMethods {
          id
          name
          description
          price {
            value
          }
        }
      }
    }
  }
`;
      handleWebPaymentsButton = (event, apolloClient2, stripeStore2) => {
        event.preventDefault();
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          if (window.Webflow.env("preview")) {
            window.alert("Web Payments is not available in preview mode.");
          }
          return;
        }
        const { currentTarget } = event;
        const stripeElement = findClosestElementWithAttribute(
          STRIPE_ELEMENT_INSTANCE,
          // @ts-expect-error - TS2345 - Argument of type 'EventTarget | null' is not assignable to parameter of type 'EventTarget'.
          currentTarget
        );
        if (!(stripeElement instanceof Element)) {
          return;
        }
        const stripeInstance = parseInt(
          // @ts-expect-error - TS2345 - Argument of type 'string | null' is not assignable to parameter of type 'string'.
          stripeElement.getAttribute(STRIPE_ELEMENT_INSTANCE),
          10
        );
        const paymentRequest = stripeStore2.getCartPaymentRequest(stripeInstance);
        paymentRequest.show();
        if (paymentRequest.hasRegisteredListener("paymentmethod")) {
          paymentRequest.removeAllListeners();
        }
        paymentRequest.on(
          "shippingaddresschange",
          // @ts-expect-error - TS7031 - Binding element 'updateWith' implicitly has an 'any' type. | TS7031 - Binding element 'shippingAddress' implicitly has an 'any' type.
          ({ updateWith, shippingAddress }) => {
            let shippingMethods = [];
            const graphQlQuery = stripeElement.getAttribute(CART_QUERY) || stripeElement.getAttribute(CHECKOUT_QUERY);
            createUpdateObfuscatedOrderAddressMutation(apolloClient2, {
              type: "shipping",
              name: shippingAddress.recipient,
              address_line1: shippingAddress.addressLine[0],
              address_line2: shippingAddress.addressLine[1],
              address_city: shippingAddress.city,
              address_state: shippingAddress.region,
              address_country: shippingAddress.country,
              address_zip: shippingAddress.postalCode
            }).then(() => {
              return apolloClient2.query({
                query: getShippingMethodsQuery,
                fetchPolicy: "network-only",
                errorPolicy: "all"
              });
            }).then(({ data: data2 }) => {
              if (!data2.database.commerceOrder.availableShippingMethods || data2.database.commerceOrder.availableShippingMethods.length === 0) {
                updateWith({
                  status: "invalid_shipping_address"
                });
                return Promise.reject("No valid shipping addresses");
              } else {
                shippingMethods = data2.database.commerceOrder.availableShippingMethods;
                return createOrderShippingMethodMutation(
                  apolloClient2,
                  data2.database.commerceOrder.availableShippingMethods[0].id
                );
              }
            }).then(() => {
              return createRecalcOrderEstimationsMutation(apolloClient2);
            }).then(() => {
              return apolloClient2.query({
                query: lib_default2`
              ${graphQlQuery}
            `,
                fetchPolicy: "network-only",
                errorPolicy: "all"
              });
            }).then(({ data: data2 }) => {
              updateWith({
                status: "success",
                displayItems: generateDisplayItemsFromOrder(
                  data2.database.commerceOrder,
                  true
                ),
                shippingOptions: (
                  // @ts-expect-error - TS7005 - Variable 'shippingMethods' implicitly has an 'any[]' type.
                  generateShippingOptionsFromMethods(shippingMethods)
                ),
                total: {
                  amount: data2.database.commerceOrder.total.value,
                  label: "Total",
                  pending: false
                }
              });
            });
          }
        );
        paymentRequest.on("shippingoptionchange", ({ updateWith, shippingOption }) => {
          const graphQlQuery = stripeElement.getAttribute(CART_QUERY) || stripeElement.getAttribute(CHECKOUT_QUERY);
          createOrderShippingMethodMutation(apolloClient2, shippingOption.id).then(() => {
            return createRecalcOrderEstimationsMutation(apolloClient2);
          }).then(() => {
            return apolloClient2.query({
              query: lib_default2`
            ${graphQlQuery}
          `,
              fetchPolicy: "network-only",
              errorPolicy: "all"
            });
          }).then(({ data: data2 }) => {
            updateWith({
              status: "success",
              displayItems: generateDisplayItemsFromOrder(
                data2.database.commerceOrder,
                true
              ),
              total: {
                amount: data2.database.commerceOrder.total.value,
                label: "Total",
                pending: false
              }
            });
          });
        });
        paymentRequest.on("paymentmethod", (ev) => {
          fetchOrderStatusFlags(apolloClient2).then(({ requiresShipping }) => {
            return Promise.all([
              createOrderIdentityMutation(apolloClient2, ev.payerEmail),
              requiresShipping ? createOrderAddressMutation(apolloClient2, {
                type: "shipping",
                name: ev.shippingAddress.recipient,
                address_line1: ev.shippingAddress.addressLine[0],
                address_line2: ev.shippingAddress.addressLine[1],
                address_city: ev.shippingAddress.city,
                address_state: ev.shippingAddress.region,
                address_country: ev.shippingAddress.country,
                address_zip: ev.shippingAddress.postalCode
              }) : Promise.resolve(),
              createOrderAddressMutation(apolloClient2, {
                type: "billing",
                name: ev.paymentMethod.billing_details.name,
                address_line1: ev.paymentMethod.billing_details.address.line1,
                address_line2: ev.paymentMethod.billing_details.address.line2,
                address_city: ev.paymentMethod.billing_details.address.city,
                address_state: ev.paymentMethod.billing_details.address.state,
                address_country: ev.paymentMethod.billing_details.address.country,
                address_zip: ev.paymentMethod.billing_details.address.postal_code
              }),
              requiresShipping ? createOrderShippingMethodMutation(
                apolloClient2,
                ev.shippingOption.id
              ) : Promise.resolve(),
              createStripePaymentMethodMutation(apolloClient2, ev.paymentMethod.id)
            ]);
          }).then(() => {
            return createAttemptSubmitOrderRequest(apolloClient2, {
              checkoutType: "quickCheckout"
            });
          }).then((data2) => {
            const order = getOrderDataFromGraphQLResponse(data2);
            if (orderRequiresAdditionalAction(order.status)) {
              ev.complete("success");
              const stripe = stripeStore2.getStripeInstance();
              return stripe.handleCardAction(order.clientSecret).then((result2) => {
                if (result2.error) {
                  return Promise.reject(new Error("payment_intent_failed"));
                }
                return createAttemptSubmitOrderRequest(apolloClient2, {
                  checkoutType: "quickCheckout",
                  paymentIntentId: result2.paymentIntent.id
                  // @ts-expect-error - TS7006 - Parameter 'resp' implicitly has an 'any' type.
                }).then((resp) => {
                  const finishedOrder = getOrderDataFromGraphQLResponse(resp);
                  if (finishedOrder.ok) {
                    redirectToOrderConfirmation(finishedOrder);
                  } else {
                    return Promise.reject(new Error("payment_intent_failed"));
                  }
                });
              });
            }
            if (order.ok) {
              ev.complete("success");
              redirectToOrderConfirmation(order);
            } else {
              return Promise.reject(new Error("order_failed"));
            }
          }).catch((err) => {
            const hasGraphQLErrors = err && err.graphQLErrors && err.graphQLErrors.length > 0;
            if (hasGraphQLErrors) {
              switch (err.graphQLErrors[0].code) {
                case "PriceChanged": {
                  ev.complete("success");
                  setTimeout(() => {
                    window.alert(
                      "The prices of one or more items in your cart have changed. Please refresh this page and try again."
                    );
                  }, 100);
                  return;
                }
                case "ItemNotFound": {
                  ev.complete("success");
                  setTimeout(() => {
                    window.alert(
                      "One or more of the products in your cart have been removed. Please refresh the page and try again."
                    );
                  }, 100);
                  return;
                }
                case "OrderTotalRange": {
                  ev.complete("success");
                  showErrorMessageForError(err, ev.currentTarget);
                  if (isCartOpen()) {
                    showErrorMessageForError2(err, ev.currentTarget);
                  }
                  return;
                }
                default:
              }
            }
            if (err && err.message && err.message === "payment_intent_failed") {
              window.alert(
                "There was an error processing your payment. Please try again, or contact us if you continue to have problems."
              );
            } else {
              ev.complete("fail");
            }
          });
        });
      };
      register2 = (handlerProxy2) => {
        handlerProxy2.on("click", isWebPaymentsButtonEvent, handleWebPaymentsButton);
        handlerProxy2.on("keydown", isWebPaymentsButtonEvent, (event, ...rest) => {
          if (event.which === 32) {
            event.preventDefault();
          }
          if (event.which === 13) {
            return handleWebPaymentsButton(event, ...rest);
          }
        });
        handlerProxy2.on("keyup", isWebPaymentsButtonEvent, (event, ...rest) => {
          if (event.which === 32) {
            return handleWebPaymentsButton(event, ...rest);
          }
        });
      };
      webPaymentsEvents_default = { register: register2 };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/cartEvents.ts
  var import_mergeWith, import_forEach3, import_defaultTo2, MODAL, LEFT_SIDEBAR, RIGHT_SIDEBAR, LEFT_DROPDOWN, RIGHT_DROPDOWN, REMOVE_ITEM, UPDATE_ITEM_QUANTITY, updateItemQuantityMutation, forEachElementInForm, disableAllFormElements, enableAllFormElements, searchTreeForRemoveLink, isItemRemovedEvent, isItemQuantityChangedEvent, isItemQuantityInputEvent, isCartButtonEvent, isCartCheckoutButtonEvent, isCartWrapperEvent, isCartFormEvent, getFormElement, handleItemRemoved, handleItemQuantityChanged, handleItemInputChanged, handleChangeCartStateEvent, handleCartButton, handleCartCheckoutButton, handleSubmitForm, handleCartContainerLeave, cartContainerStates, handlePreviewMode, handleDesignMode, doForAllMatchingClass, showCartDefaultState, showCartEmptyState, hideErrorState, showErrorState, hasItems2, hasErrors, updateCartA11Y, renderCart, handleRenderCart, handleCartKeyUp, getCartContainer, handleClickCloseCart, getFocusableElements, handleCartFocusTrap, register3, cartEvents_default;
  var init_cartEvents = __esm({
    "packages/shared/render/plugins/Commerce/modules/cartEvents.ts"() {
      "use strict";
      init_lib7();
      import_mergeWith = __toESM(require_mergeWith());
      import_forEach3 = __toESM(require_forEach());
      init_constants();
      init_commerceUtils();
      init_debug();
      init_webPaymentsEvents();
      init_rendering();
      import_defaultTo2 = __toESM(require_defaultTo());
      ({ MODAL, LEFT_SIDEBAR, RIGHT_SIDEBAR, LEFT_DROPDOWN, RIGHT_DROPDOWN } = CART_TYPES);
      ({ REMOVE_ITEM, UPDATE_ITEM_QUANTITY } = COMMERCE_CART_PUBLISHED_SITE_ACTIONS);
      updateItemQuantityMutation = lib_default2`
  mutation AddToCart($skuId: String!, $count: Int!) {
    ecommerceUpdateCartItem(sku: $skuId, count: $count) {
      ok
      itemId
      itemCount
    }
  }
`;
      forEachElementInForm = (form, callback) => {
        if (form instanceof HTMLFormElement && form.elements instanceof HTMLCollection) {
          Array.from(form.elements).forEach((input) => {
            if (input instanceof HTMLInputElement) {
              callback(input);
            }
          });
        }
      };
      disableAllFormElements = (form) => {
        forEachElementInForm(form, (input) => {
          input.disabled = true;
        });
      };
      enableAllFormElements = (form) => {
        forEachElementInForm(form, (input) => {
          input.disabled = false;
        });
      };
      searchTreeForRemoveLink = (element) => {
        if (element instanceof Element && element.hasAttribute(COMMERCE_CART_PUBLISHED_SITE_ACTION_ATTR) && element.getAttribute(COMMERCE_CART_PUBLISHED_SITE_ACTION_ATTR) === REMOVE_ITEM && element.hasAttribute(DATA_ATTR_COMMERCE_SKU_ID)) {
          return element;
        } else {
          return element instanceof Element && element.parentElement ? searchTreeForRemoveLink(element.parentElement) : false;
        }
      };
      isItemRemovedEvent = (event) => {
        return searchTreeForRemoveLink(event.target);
      };
      isItemQuantityChangedEvent = (event) => event.target instanceof Element && event.target.hasAttribute(COMMERCE_CART_PUBLISHED_SITE_ACTION_ATTR) && event.target.getAttribute(COMMERCE_CART_PUBLISHED_SITE_ACTION_ATTR) === UPDATE_ITEM_QUANTITY && event.target.hasAttribute(DATA_ATTR_COMMERCE_SKU_ID) && event.target;
      isItemQuantityInputEvent = (event) => event.target instanceof Element && event.target.hasAttribute(COMMERCE_CART_PUBLISHED_SITE_ACTION_ATTR) && event.target.getAttribute(COMMERCE_CART_PUBLISHED_SITE_ACTION_ATTR) === UPDATE_ITEM_QUANTITY && event.target.hasAttribute(DATA_ATTR_COMMERCE_SKU_ID) && event.target;
      isCartButtonEvent = ({ target }) => {
        const cartOpenLink = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_OPEN_LINK,
          target
        );
        const cartCloseLink = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_CLOSE_LINK,
          target
        );
        if (cartOpenLink) {
          return cartOpenLink;
        } else if (cartCloseLink) {
          return cartCloseLink;
        } else {
          return false;
        }
      };
      isCartCheckoutButtonEvent = ({ target }) => {
        const cartCheckoutButton = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_CHECKOUT_BUTTON,
          target
        );
        if (cartCheckoutButton) {
          return cartCheckoutButton;
        } else {
          return false;
        }
      };
      isCartWrapperEvent = ({ target }) => target instanceof Element && target.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CART_WRAPPER && target;
      isCartFormEvent = ({ target }) => target instanceof Element && target.hasAttribute(DATA_ATTR_NODE_TYPE) && target.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CART_FORM;
      getFormElement = (element) => {
        if (!(element instanceof Element)) {
          return null;
        }
        return element instanceof HTMLFormElement ? element : getFormElement(element.parentElement);
      };
      handleItemRemoved = (event, apolloClient2) => {
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          return;
        }
        event.preventDefault();
        const { currentTarget } = event;
        if (!(currentTarget instanceof HTMLElement)) {
          return;
        }
        const commerceCartWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_WRAPPER,
          currentTarget
        );
        if (!(commerceCartWrapper instanceof Element)) {
          return;
        }
        const errorElement = findElementByNodeType(
          NODE_TYPE_COMMERCE_CART_ERROR,
          commerceCartWrapper
        );
        if (!(errorElement instanceof Element)) {
          return;
        }
        errorElement.style.setProperty("display", "none");
        const skuId = currentTarget.getAttribute(DATA_ATTR_COMMERCE_SKU_ID);
        const count = 0;
        const form = getFormElement(currentTarget);
        disableAllFormElements(form);
        const cartItem = findClosestElementByClassName(
          "w-commerce-commercecartitem",
          currentTarget
        );
        if (!(cartItem instanceof Element)) {
          return;
        }
        addLoadingCallback(setElementLoading(cartItem));
        const removeLinkElement = searchTreeForRemoveLink(event.target);
        if (removeLinkElement instanceof HTMLAnchorElement) {
          removeLinkElement.style.pointerEvents = "none";
        }
        apolloClient2.mutate({
          mutation: updateItemQuantityMutation,
          variables: { skuId, count }
        }).then(
          // eslint-disable-next-line unused-imports/no-unused-vars
          // @ts-expect-error - TS7006 - Parameter 'data' implicitly has an 'any' type.
          // eslint-disable-next-line unused-imports/no-unused-vars
          (data2) => {
            triggerRender(null);
          },
          // @ts-expect-error - TS7006 - Parameter 'error' implicitly has an 'any' type.
          (error) => {
            debug_default.error(error);
            errorElement.style.removeProperty("display");
            const errorMsg = errorElement.querySelector(
              CART_ERROR_MESSAGE_SELECTOR
            );
            if (!errorMsg) {
              return;
            }
            const errorText = errorMsg.getAttribute(CART_GENERAL_ERROR_MESSAGE) || "";
            errorMsg.textContent = errorText;
            triggerRender(error);
          }
        ).then(() => {
          if (removeLinkElement instanceof HTMLAnchorElement) {
            removeLinkElement.style.pointerEvents = "auto";
          }
          const cartContainer = currentTarget.closest(
            ".w-commerce-commercecartcontainer"
          );
          if (cartContainer instanceof HTMLElement) {
            const itemContainer = cartContainer.getElementsByClassName(
              "w-commerce-commercecartitem"
            );
            const focusableContent = getFocusableElements(cartContainer);
            if (itemContainer.length === 1 && focusableContent.length > 0) {
              focusableContent[0].focus();
            }
          }
        });
      };
      handleItemQuantityChanged = (event, apolloClient2) => {
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          return;
        }
        event.preventDefault();
        const { currentTarget } = event;
        if (!(currentTarget instanceof HTMLInputElement)) {
          return;
        }
        if (currentTarget.form instanceof HTMLFormElement && currentTarget.form.reportValidity() === false) {
          return;
        }
        const commerceCartWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_WRAPPER,
          currentTarget
        );
        if (!(commerceCartWrapper instanceof Element)) {
          return;
        }
        const errorElement = findElementByNodeType(
          NODE_TYPE_COMMERCE_CART_ERROR,
          commerceCartWrapper
        );
        if (!(errorElement instanceof Element)) {
          return;
        }
        errorElement.style.setProperty("display", "none");
        const cartItem = currentTarget.parentElement;
        if (!(cartItem instanceof Element)) {
          return;
        }
        addLoadingCallback(setElementLoading(cartItem));
        const skuId = currentTarget.getAttribute(DATA_ATTR_COMMERCE_SKU_ID);
        const count = currentTarget.value;
        disableAllFormElements(currentTarget.form);
        apolloClient2.mutate({
          mutation: updateItemQuantityMutation,
          variables: { skuId, count }
        }).then(
          // eslint-disable-next-line unused-imports/no-unused-vars
          // @ts-expect-error - TS7006 - Parameter 'data' implicitly has an 'any' type.
          // eslint-disable-next-line unused-imports/no-unused-vars
          (data2) => {
            enableAllFormElements(currentTarget.form);
            triggerRender(null);
          },
          // @ts-expect-error - TS7006 - Parameter 'error' implicitly has an 'any' type.
          (error) => {
            enableAllFormElements(currentTarget.form);
            debug_default.error(error);
            errorElement.style.removeProperty("display");
            const errorMsg = errorElement.querySelector(
              CART_ERROR_MESSAGE_SELECTOR
            );
            if (!errorMsg) {
              return;
            }
            const errorType = error.graphQLErrors && error.graphQLErrors.length > 0 && error.graphQLErrors[0].code === "OutOfInventory" ? "quantity" : "general";
            const errorText = errorMsg.getAttribute(getCartErrorMessageForType(errorType)) || "";
            errorMsg.textContent = errorText;
            triggerRender(error);
          }
        );
      };
      handleItemInputChanged = (event) => {
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          return;
        }
        event.preventDefault();
        const { currentTarget } = event;
        if (!(currentTarget instanceof HTMLInputElement)) {
          return;
        }
        if (currentTarget.validity.valid === false && currentTarget.form instanceof HTMLFormElement) {
          currentTarget.form.reportValidity();
        }
      };
      handleChangeCartStateEvent = (event) => {
        if (!(event.currentTarget instanceof Element) || !(event instanceof CustomEvent)) {
          return;
        }
        const { currentTarget, detail } = event;
        const isOpen = currentTarget.hasAttribute(CART_OPEN);
        const shouldOpen = detail && detail.open != null ? detail.open : !isOpen;
        const wrapper = findElementByNodeType(
          NODE_TYPE_COMMERCE_CART_CONTAINER_WRAPPER,
          currentTarget
        );
        if (!wrapper) {
          return;
        }
        const cartContainer = getCartContainer(wrapper);
        if (!cartContainer) {
          return;
        }
        const cartElement = wrapper.parentElement;
        if (!cartElement) {
          return;
        }
        const cartType = cartElement.getAttribute(CART_TYPE);
        const duration = (0, import_defaultTo2.default)(
          cartElement.getAttribute(DATA_ATTR_ANIMATION_DURATION),
          ANIMATION_DURATION_DEFAULT
        ) + "ms";
        const containerEasing = (0, import_defaultTo2.default)(
          cartElement.getAttribute(DATA_ATTR_ANIMATION_EASING),
          ANIMATION_EASING_DEFAULT
        );
        const wrapperTransition = `opacity ${duration} ease 0ms`;
        const containerOutDelay = "50ms";
        const shouldAnimate = duration !== "0ms";
        let containerStepA;
        let containerStepB;
        switch (cartType) {
          case MODAL: {
            containerStepA = { scale: 0.95 };
            containerStepB = { scale: 1 };
            break;
          }
          case LEFT_SIDEBAR: {
            containerStepA = { x: -30 };
            containerStepB = { x: 0 };
            break;
          }
          case RIGHT_SIDEBAR: {
            containerStepA = { x: 30 };
            containerStepB = { x: 0 };
            break;
          }
          case LEFT_DROPDOWN:
          case RIGHT_DROPDOWN: {
            containerStepA = { y: -10 };
            containerStepB = { y: 0 };
            break;
          }
        }
        if (shouldOpen) {
          document.addEventListener("keydown", handleCartFocusTrap);
          currentTarget.setAttribute(CART_OPEN, "");
          wrapper.style.removeProperty("display");
          const focusableContent = getFocusableElements(cartContainer);
          if (focusableContent.length > 0) {
            focusableContent[0].focus();
          }
          if (shouldAnimate && !isOpen) {
            window.Webflow.tram(wrapper).add(wrapperTransition).set({ opacity: 0 }).start({ opacity: 1 });
            window.Webflow.tram(cartContainer).add(`transform ${duration} ${containerEasing} 0ms`).set(containerStepA).start(containerStepB);
          }
        } else {
          document.removeEventListener("keydown", handleCartFocusTrap);
          currentTarget.removeAttribute(CART_OPEN);
          if (shouldAnimate) {
            window.Webflow.tram(wrapper).add(wrapperTransition).start({ opacity: 0 }).then(() => {
              wrapper.style.display = "none";
              window.Webflow.tram(cartContainer).stop();
            });
            window.Webflow.tram(cartContainer).add(`transform ${duration} ${containerEasing} ${containerOutDelay}`).start(containerStepA);
          } else {
            wrapper.style.display = "none";
          }
          const cartOpenButton = findElementByNodeType(
            NODE_TYPE_COMMERCE_CART_OPEN_LINK,
            cartElement
          );
          if (cartOpenButton instanceof Element) {
            cartOpenButton.focus();
          }
        }
      };
      handleCartButton = (event) => {
        if (window.Webflow.env("design")) {
          return;
        }
        const { currentTarget, type } = event;
        if (!(currentTarget instanceof Element)) {
          return;
        }
        const commerceCartWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_WRAPPER,
          currentTarget
        );
        if (!(commerceCartWrapper instanceof Element)) {
          return;
        }
        const cartContainerWrapper = findElementByNodeType(
          NODE_TYPE_COMMERCE_CART_CONTAINER_WRAPPER,
          commerceCartWrapper
        );
        let evt;
        if (type === "click" && (currentTarget.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CART_CLOSE_LINK || currentTarget.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CART_OPEN_LINK && !commerceCartWrapper.hasAttribute(DATA_ATTR_OPEN_ON_HOVER))) {
          evt = new CustomEvent(CHANGE_CART_EVENT, {
            bubbles: true
          });
          if (cartContainerWrapper && currentTarget.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CART_CLOSE_LINK) {
            cartContainerWrapper.removeEventListener(
              "mouseleave",
              handleCartContainerLeave
            );
            commerceCartWrapper.removeEventListener(
              "mouseleave",
              handleCartContainerLeave
            );
          }
        } else if (type === "mouseover" && commerceCartWrapper.hasAttribute(DATA_ATTR_OPEN_ON_HOVER) && currentTarget.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CART_OPEN_LINK) {
          evt = new CustomEvent(CHANGE_CART_EVENT, {
            bubbles: true,
            detail: {
              open: true
            }
          });
          if (cartContainerWrapper) {
            cartContainerWrapper.addEventListener(
              "mouseleave",
              handleCartContainerLeave
            );
            currentTarget.addEventListener("mouseleave", handleCartContainerLeave);
          }
        }
        if (evt) {
          commerceCartWrapper.dispatchEvent(evt);
        }
      };
      handleCartCheckoutButton = (event) => {
        if (window.Webflow.env("preview")) {
          return;
        }
        event.preventDefault();
        const { currentTarget: checkoutButton } = event;
        if (!(checkoutButton instanceof Element)) {
          return;
        }
        if (!isProtocolHttps()) {
          window.alert(
            "This site is currently unsecured so you cannot enter checkout."
          );
          return;
        }
        const loadingText = checkoutButton.getAttribute(DATA_ATTR_LOADING_TEXT);
        const buttonText = checkoutButton.innerHTML;
        checkoutButton.innerHTML = loadingText ? loadingText : CART_CHECKOUT_LOADING_TEXT_DEFAULT;
        const commerceCartWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_WRAPPER,
          checkoutButton
        );
        if (!(commerceCartWrapper instanceof Element)) {
          return;
        }
        const publishableKey = checkoutButton.getAttribute(DATA_ATTR_PUBLISHABLE_KEY);
        const paypalElement = document.querySelector(`[${PAYPAL_ELEMENT_INSTANCE}]`);
        if (!publishableKey && !paypalElement) {
          const errorElement = findElementByNodeType(
            NODE_TYPE_COMMERCE_CART_ERROR,
            commerceCartWrapper
          );
          if (!(errorElement instanceof Element)) {
            return;
          }
          errorElement.style.setProperty("display", "none");
          errorElement.style.removeProperty("display");
          const errorMsg = errorElement.querySelector(".w-cart-error-msg");
          if (!errorMsg) {
            return;
          }
          const errorText = errorMsg.getAttribute(`data-w-cart-checkout-error`) || "";
          errorMsg.textContent = errorText;
          checkoutButton.innerHTML = buttonText ? buttonText : CART_CHECKOUT_BUTTON_TEXT_DEFAULT;
          return;
        }
        if (!(checkoutButton instanceof HTMLAnchorElement)) {
          checkoutButton.innerHTML = buttonText ? buttonText : CART_CHECKOUT_BUTTON_TEXT_DEFAULT;
          return;
        }
        window.location = checkoutButton.href;
      };
      handleSubmitForm = (event) => {
        if (window.Webflow.env("preview")) {
          return;
        }
        event.preventDefault();
      };
      handleCartContainerLeave = (event) => {
        const { target, relatedTarget } = event;
        if (!(target instanceof Element) || !(relatedTarget instanceof Element)) {
          return;
        }
        const { parentElement } = target;
        if (!(parentElement instanceof Element)) {
          return;
        }
        const cartWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_WRAPPER,
          relatedTarget
        );
        const cartContainer = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CART_CONTAINER,
          relatedTarget
        );
        if (cartWrapper || cartContainer) {
          return;
        }
        const evt = new CustomEvent(CHANGE_CART_EVENT, {
          bubbles: true,
          detail: {
            open: false
          }
        });
        parentElement.dispatchEvent(evt);
        cartWrapper && // @ts-expect-error - TS2358 - The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
        cartWrapper instanceof Element && // @ts-expect-error - TS2339 - Property 'removeEventListener' does not exist on type 'never'.
        cartWrapper.removeEventListener("mouseleave", handleCartContainerLeave);
        cartContainer && // @ts-expect-error - TS2358 - The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
        cartContainer instanceof Element && // @ts-expect-error - TS2339 - Property 'removeEventListener' does not exist on type 'never'.
        cartContainer.removeEventListener("mouseleave", handleCartContainerLeave);
      };
      cartContainerStates = [];
      handlePreviewMode = () => {
        const cartContainerElements = findAllElementsByNodeType(
          NODE_TYPE_COMMERCE_CART_CONTAINER_WRAPPER
        );
        cartContainerElements.forEach((element) => {
          const wasOpen = element.style.display !== "none";
          cartContainerStates.push({
            element,
            wasOpen
          });
          if (wasOpen) {
            const evt = new CustomEvent(CHANGE_CART_EVENT, {
              bubbles: true,
              detail: {
                open: true
              }
            });
            const { parentElement } = element;
            if (parentElement) {
              parentElement.dispatchEvent(evt);
            }
          }
        });
      };
      handleDesignMode = () => {
        cartContainerStates.forEach(({ element: wrapper, wasOpen }) => {
          window.Webflow.tram(wrapper).destroy();
          wrapper.style.opacity = "1";
          const cartContainer = getCartContainer(wrapper);
          if (cartContainer) {
            window.Webflow.tram(cartContainer).destroy();
            cartContainer.style.transform = "";
          }
          if (wasOpen) {
            wrapper.style.removeProperty("display");
          } else {
            wrapper.style.display = "none";
          }
          const cartElement = wrapper.parentElement;
          if (cartElement) {
            cartElement.removeAttribute(CART_OPEN);
          }
        });
        cartContainerStates = [];
      };
      doForAllMatchingClass = (cart, className, fn) => Array.from(cart.getElementsByClassName(className)).forEach(fn);
      showCartDefaultState = (cart) => {
        doForAllMatchingClass(cart, "w-commerce-commercecartemptystate", hideElement);
        doForAllMatchingClass(cart, "w-commerce-commercecartform", showElement);
      };
      showCartEmptyState = (cart) => {
        doForAllMatchingClass(cart, "w-commerce-commercecartemptystate", showElement);
        doForAllMatchingClass(cart, "w-commerce-commercecartform", hideElement);
      };
      hideErrorState = (cart) => {
        doForAllMatchingClass(cart, "w-commerce-commercecarterrorstate", hideElement);
      };
      showErrorState = (cart) => {
        doForAllMatchingClass(cart, "w-commerce-commercecarterrorstate", showElement);
      };
      hasItems2 = (response) => response && response.data && response.data.database && response.data.database.commerceOrder && response.data.database.commerceOrder.userItems && response.data.database.commerceOrder.userItems.length > 0;
      hasErrors = (response) => response && response.errors && response.errors.length > 0;
      updateCartA11Y = (cart) => {
        doForAllMatchingClass(
          cart,
          "w-commerce-commercecartopenlinkcount",
          // @ts-expect-error - TS7006 - Parameter 'element' implicitly has an 'any' type.
          (element) => {
            doForAllMatchingClass(
              cart,
              "w-commerce-commercecartopenlink",
              // @ts-expect-error - TS7006 - Parameter 'openLinkElement' implicitly has an 'any' type.
              (openLinkElement) => {
                openLinkElement.setAttribute(
                  "aria-label",
                  element.textContent === "0" ? "Open empty cart" : `Open cart containing ${element.textContent} items`
                );
              }
            );
          }
        );
      };
      renderCart = (cart, data2, stripeStore2) => {
        hideErrorState(cart);
        if (hasErrors(data2)) {
          showErrorState(cart);
        }
        doForAllMatchingClass(
          cart,
          "w-commerce-commercecartopenlinkcount",
          // @ts-expect-error - TS7006 - Parameter 'element' implicitly has an 'any' type.
          (element) => {
            const hideRule = element.getAttribute(DATA_ATTR_COUNT_HIDE_RULE);
            if (hideRule === CART_COUNT_HIDE_RULES.ALWAYS || hideRule === CART_COUNT_HIDE_RULES.EMPTY && !hasItems2(data2)) {
              hideElement(element);
            } else {
              showElement(element);
            }
          }
        );
        const dataWithDefaults = (0, import_mergeWith.default)({}, data2, (obj, src, key2) => {
          if (key2 === "commerceOrder" && src === null) {
            return { userItemsCount: 0 };
          }
        });
        renderTree(cart, dataWithDefaults);
        if (hasItems2(data2)) {
          showCartDefaultState(cart);
        } else {
          showCartEmptyState(cart);
        }
        const cartForm = cart.querySelector("form");
        if (cartForm instanceof HTMLFormElement) {
          enableAllFormElements(cartForm);
        }
        const paypalElement = document.querySelector(`[${PAYPAL_ELEMENT_INSTANCE}]`);
        const checkoutButton = findElementByNodeType(
          NODE_TYPE_COMMERCE_CART_CHECKOUT_BUTTON,
          cart
        );
        if (checkoutButton && paypalElement && stripeStore2 && !stripeStore2.isInitialized()) {
          if (isFreeOrder(data2)) {
            showElement(checkoutButton);
          } else {
            hideElement(checkoutButton);
          }
        }
        const paypalButton = cart.querySelector(
          `[${PAYPAL_BUTTON_ELEMENT_INSTANCE}]`
        );
        if (paypalElement && paypalButton) {
          if (isFreeOrder(data2) || hasSubscription(data2)) {
            hideElement(paypalButton);
          } else {
            showElement(paypalButton);
          }
        }
        updateWebPaymentsButton(cart, data2, stripeStore2);
        return cart;
      };
      handleRenderCart = (event, apolloClient2, stripeStore2) => {
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          return;
        }
        if (!(event instanceof CustomEvent && event.type === RENDER_TREE_EVENT)) {
          return;
        }
        const errors = [];
        const { detail } = event;
        if (detail != null && detail.error) {
          errors.push(detail.error);
        }
        const orderConfirmationContainer = findElementByNodeType(
          NODE_TYPE_COMMERCE_ORDER_CONFIRMATION_WRAPPER
        );
        if (orderConfirmationContainer) {
          return;
        }
        const carts = findAllElementsByNodeType(NODE_TYPE_COMMERCE_CART_WRAPPER);
        if (!carts.length) {
          executeLoadingCallbacks();
          return;
        }
        carts.forEach((cart) => {
          apolloClient2.query({
            query: lib_default2`
          ${cart.getAttribute(CART_QUERY)}
        `,
            fetchPolicy: "network-only",
            errorPolicy: "all"
          }).then((data2) => {
            executeLoadingCallbacks();
            renderCart(
              cart,
              {
                ...data2,
                errors: errors.concat(data2.errors).filter(Boolean)
              },
              stripeStore2
            );
            updateCartA11Y(cart);
          }).catch((err) => {
            executeLoadingCallbacks();
            errors.push(err);
            renderCart(cart, { errors });
            updateCartA11Y(cart);
          });
        });
      };
      handleCartKeyUp = (event) => {
        if (event.keyCode === 27) {
          const openCarts = Array.from(document.querySelectorAll(`[${CART_OPEN}]`));
          (0, import_forEach3.default)(openCarts, (cart) => {
            const evt = new CustomEvent(CHANGE_CART_EVENT, {
              bubbles: true,
              detail: {
                open: false
              }
            });
            cart.dispatchEvent(evt);
          });
        }
        if (event.keyCode === 32 && event.target instanceof HTMLElement) {
          const htmlElement = event.target;
          if ((htmlElement.getAttribute("role") === "button" || htmlElement.getAttribute("role") === "link" || htmlElement.hasAttribute("href") || htmlElement.hasAttribute("onClick")) && findClosestElementByNodeType(
            NODE_TYPE_COMMERCE_CART_WRAPPER,
            event.target
          ) != null) {
            event.preventDefault();
            htmlElement.click();
          }
        }
      };
      getCartContainer = (parent2) => findElementByNodeType(NODE_TYPE_COMMERCE_CART_CONTAINER, parent2);
      handleClickCloseCart = ({ target }) => {
        if (!(target instanceof Element)) {
          return;
        }
        const openCarts = Array.from(document.querySelectorAll(`[${CART_OPEN}]`));
        (0, import_forEach3.default)(openCarts, (cart) => {
          const cartContainer = getCartContainer(cart);
          const cartOpenButton = findElementByNodeType(
            NODE_TYPE_COMMERCE_CART_OPEN_LINK,
            cart
          );
          if (!(cartContainer instanceof Element) || !(cartOpenButton instanceof Element)) {
            return;
          }
          const cartType = cart.getAttribute(CART_TYPE);
          const isNotInside = cartType === LEFT_DROPDOWN || cartType === RIGHT_DROPDOWN ? !cart.contains(target) : !cartContainer.contains(target) && !cartOpenButton.contains(target);
          if (isNotInside) {
            const evt = new CustomEvent(CHANGE_CART_EVENT, {
              bubbles: true,
              detail: {
                open: false
              }
            });
            cart.dispatchEvent(evt);
          }
        });
      };
      getFocusableElements = (container) => {
        const focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])';
        return [...container.querySelectorAll(focusableElements)].filter(
          // @ts-expect-error - TS2339 - Property 'offsetHeight' does not exist on type 'Element'.
          (element) => !element.hasAttribute("disabled") && element.offsetHeight > 0
        );
      };
      handleCartFocusTrap = (event) => {
        if (event.key !== "Tab" && event.keyCode !== 9) {
          return;
        }
        const openCarts = Array.from(document.querySelectorAll(`[${CART_OPEN}]`));
        (0, import_forEach3.default)(openCarts, (cart) => {
          const cartContainer = getCartContainer(cart);
          if (!(cartContainer instanceof Element)) {
            return;
          }
          const focusableContent = getFocusableElements(cartContainer);
          const firstFocusableElement = focusableContent[0];
          const lastFocusableElement = focusableContent[focusableContent.length - 1];
          if (event.shiftKey) {
            if (document.activeElement === firstFocusableElement) {
              lastFocusableElement.focus();
              event.preventDefault();
            }
          } else {
            if (document.activeElement === lastFocusableElement) {
              firstFocusableElement.focus();
              event.preventDefault();
            }
          }
        });
      };
      register3 = (handlerProxy2) => {
        handlerProxy2.on("click", isItemRemovedEvent, handleItemRemoved);
        handlerProxy2.on(
          "change",
          isItemQuantityChangedEvent,
          handleItemQuantityChanged
        );
        handlerProxy2.on("focus", isItemQuantityInputEvent, handleItemInputChanged);
        handlerProxy2.on("click", isCartButtonEvent, handleCartButton);
        handlerProxy2.on("click", isCartCheckoutButtonEvent, handleCartCheckoutButton);
        handlerProxy2.on("mouseover", isCartButtonEvent, handleCartButton);
        handlerProxy2.on(
          CHANGE_CART_EVENT,
          isCartWrapperEvent,
          handleChangeCartStateEvent
        );
        handlerProxy2.on(RENDER_TREE_EVENT, Boolean, handleRenderCart);
        handlerProxy2.on("submit", isCartFormEvent, handleSubmitForm);
        handlerProxy2.on("keyup", Boolean, handleCartKeyUp);
        handlerProxy2.on("click", Boolean, handleClickCloseCart);
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          window.addEventListener("__wf_preview", handlePreviewMode);
          window.addEventListener("__wf_design", handleDesignMode);
        }
      };
      cartEvents_default = { register: register3 };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/checkoutEvents.ts
  var import_debounce, isInputInsideCustomerInfoEvent, isInputInsideAddressWrapperEvent, isInputInsideShippingMethodEvent, isBillingAddressToggleEvent, isPlaceOrderButtonEvent, isApplyDiscountFormEvent, isFormInsideCheckoutContainerEvent, isInputInsideCheckoutFormEvent, handleRenderCheckout, checkFormValidity, placingOrder, startOrderFlow, handlePlaceOrder, handleApplyDiscount, handleUpdateCustomerInfo, handleUpdateAddress, handleToggleBillingAddress, handleChooseShippingMethod, handleSubmitFormInsideCheckoutContainer, register4, checkoutEvents_default;
  var init_checkoutEvents = __esm({
    "packages/shared/render/plugins/Commerce/modules/checkoutEvents.ts"() {
      "use strict";
      import_debounce = __toESM(require_debounce());
      init_constants();
      init_commerceUtils();
      init_checkoutUtils();
      init_debug();
      isInputInsideCustomerInfoEvent = ({ target }) => {
        const checkoutFormContainer = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER
        );
        if (!checkoutFormContainer) {
          return false;
        }
        const customerInfoWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_CUSTOMER_INFO_WRAPPER,
          target
        );
        if (customerInfoWrapper && target instanceof Element && target.tagName === "INPUT") {
          return target;
        } else {
          return false;
        }
      };
      isInputInsideAddressWrapperEvent = ({ target }) => {
        const checkoutFormContainer = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER
        );
        if (!checkoutFormContainer || !(target instanceof Element)) {
          return false;
        }
        const shippingAddressWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_WRAPPER,
          target
        );
        const billingAddressWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_WRAPPER,
          target
        );
        if (shippingAddressWrapper) {
          return shippingAddressWrapper;
        } else if (billingAddressWrapper) {
          return billingAddressWrapper;
        } else {
          return false;
        }
      };
      isInputInsideShippingMethodEvent = ({ target }) => {
        const checkoutFormContainer = findElementByNodeType(NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER) || findElementByNodeType(NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_FORM_CONTAINER);
        if (!checkoutFormContainer) {
          return false;
        }
        const shippingMethodWrapper = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_WRAPPER,
          target
        );
        if (shippingMethodWrapper && target instanceof Element && target.tagName === "INPUT") {
          return target;
        } else {
          return false;
        }
      };
      isBillingAddressToggleEvent = ({ target }) => {
        if (target instanceof Element && target.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_TOGGLE_CHECKBOX) {
          return target;
        } else {
          return false;
        }
      };
      isPlaceOrderButtonEvent = ({ target }) => {
        const placeOrderButton = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_PLACE_ORDER_BUTTON,
          target
        );
        if (placeOrderButton && target instanceof Element) {
          return target;
        } else {
          return false;
        }
      };
      isApplyDiscountFormEvent = ({ target }) => {
        if (target instanceof Element && target.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CHECKOUT_DISCOUNT_FORM) {
          return target;
        } else {
          return false;
        }
      };
      isFormInsideCheckoutContainerEvent = ({ target }) => {
        const checkoutForm = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER,
          target
        );
        if (target instanceof HTMLFormElement && checkoutForm) {
          return target;
        } else {
          return false;
        }
      };
      isInputInsideCheckoutFormEvent = ({ target }) => {
        const checkoutForm = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER,
          target
        );
        if (target instanceof HTMLInputElement && checkoutForm) {
          return target;
        } else {
          return false;
        }
      };
      handleRenderCheckout = (event, apolloClient2, stripeStore2) => {
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          return;
        }
        if (!(event instanceof CustomEvent && event.type === RENDER_TREE_EVENT)) {
          return;
        }
        const errors = [];
        const { detail } = event;
        if (detail != null && detail.error) {
          errors.push(detail.error);
        }
        const focusedEle = window.document.activeElement;
        const checkoutForm = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER,
          // @ts-expect-error - TS2345 - Argument of type 'Element | null' is not assignable to parameter of type 'EventTarget'.
          focusedEle
        );
        let prevFocusedInput = null;
        if (focusedEle instanceof HTMLInputElement && checkoutForm) {
          prevFocusedInput = focusedEle.id;
          if (!prevFocusedInput) {
            prevFocusedInput = focusedEle.getAttribute("data-wf-bindings");
          }
          prevFocusedInput = prevFocusedInput ? null : prevFocusedInput;
        }
        const checkoutFormContainers = findAllElementsByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER
        );
        renderCheckoutFormContainers(
          checkoutFormContainers,
          errors,
          apolloClient2,
          stripeStore2,
          prevFocusedInput
        );
      };
      checkFormValidity = ({
        customerInfo,
        shippingAddress,
        shippingInfo,
        billingAddress,
        billingAddressToggle,
        additionalInfo,
        requiresShipping
      }) => {
        if (!HTMLFormElement.prototype.reportValidity) {
          return true;
        }
        if (!customerInfo.reportValidity() || requiresShipping && !shippingAddress.reportValidity() || requiresShipping && !shippingInfo.reportValidity() || // only check the billing address if the toggle is off, i.e. the billing address
        // form is being shown or if it does not require shipping
        (!requiresShipping || !billingAddressToggle.checked) && !billingAddress.reportValidity() || additionalInfo && additionalInfo instanceof HTMLFormElement && !additionalInfo.reportValidity()) {
          return false;
        }
        return true;
      };
      placingOrder = false;
      startOrderFlow = (placeOrderButton) => {
        placingOrder = true;
        window.addEventListener("beforeunload", beforeUnloadHandler);
        const buttonText = placeOrderButton.innerHTML;
        const loadingText = placeOrderButton.getAttribute(DATA_ATTR_LOADING_TEXT);
        placeOrderButton.innerHTML = loadingText ? loadingText : CHECKOUT_PLACE_ORDER_LOADING_TEXT_DEFAULT;
        const finishOrderFlow = (isRedirecting = false) => {
          if (!isRedirecting) {
            placingOrder = false;
          }
          window.removeEventListener("beforeunload", beforeUnloadHandler);
          placeOrderButton.innerHTML = buttonText ? buttonText : CHECKOUT_PLACE_ORDER_BUTTON_TEXT_DEFAULT;
        };
        return finishOrderFlow;
      };
      handlePlaceOrder = (event, apolloClient2, stripeStore2) => {
        if (
          // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
          window.Webflow.env("design") || // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
          window.Webflow.env("preview") || placingOrder
        ) {
          return;
        }
        const { currentTarget } = event;
        if (!(currentTarget instanceof Element)) {
          return;
        }
        const checkoutFormContainer = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER,
          currentTarget
        );
        if (!(checkoutFormContainer instanceof Element)) {
          return;
        }
        const errorState4 = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_ERROR_STATE,
          checkoutFormContainer
        );
        const customerInfo = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_CUSTOMER_INFO_WRAPPER,
          checkoutFormContainer
        );
        const shippingAddress = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_WRAPPER,
          checkoutFormContainer
        );
        const shippingInfo = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_WRAPPER,
          checkoutFormContainer
        );
        const billingAddress = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_WRAPPER,
          checkoutFormContainer
        );
        const billingAddressToggle = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_TOGGLE_CHECKBOX,
          checkoutFormContainer
        );
        const placeOrderButton = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_PLACE_ORDER_BUTTON,
          checkoutFormContainer
        );
        const additionalInfo = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_ADDITIONAL_INFO,
          checkoutFormContainer
        );
        if (!(errorState4 instanceof HTMLElement) || !(customerInfo instanceof HTMLFormElement) || !(shippingAddress instanceof HTMLFormElement) || !(shippingInfo instanceof HTMLFormElement) || !(billingAddress instanceof HTMLFormElement) || !(billingAddressToggle instanceof HTMLInputElement) || !(placeOrderButton instanceof Element)) {
          return;
        }
        const errorMessage = errorState4.querySelector(
          CART_CHECKOUT_ERROR_MESSAGE_SELECTOR
        );
        if (errorMessage && errorMessage.hasAttribute(NEEDS_REFRESH)) {
          return;
        }
        const hasAdditionalInfo = additionalInfo && additionalInfo instanceof HTMLElement;
        const finishOrderFlow = startOrderFlow(placeOrderButton);
        errorState4.style.setProperty("display", "none");
        fetchOrderStatusFlags(apolloClient2).then(
          ({ requiresShipping, isFreeOrder: isFreeOrder2 }) => {
            const isFormValid = checkFormValidity({
              customerInfo,
              shippingAddress,
              shippingInfo,
              billingAddress,
              billingAddressToggle,
              additionalInfo,
              requiresShipping
            });
            if (!isFormValid) {
              finishOrderFlow();
              return;
            }
            const customerInfoFormData = formToObject(customerInfo);
            const email = String(customerInfoFormData.email).trim();
            const shippingAddressInfo = {
              type: "shipping",
              ...formToObject(shippingAddress, true)
            };
            const billingAddressInfo = {
              type: "billing",
              ...formToObject(
                !billingAddressToggle.checked || !requiresShipping ? billingAddress : shippingAddress,
                true
              )
            };
            const stripeBillingAddressInfo = {
              billing_details: {
                // @ts-expect-error - TS2339 - Property 'name' does not exist on type '{ readonly type: "billing"; }'.
                name: billingAddressInfo.name,
                email,
                address: {
                  // @ts-expect-error - TS2339 - Property 'address_line1' does not exist on type '{ readonly type: "billing"; }'.
                  line1: billingAddressInfo.address_line1,
                  // @ts-expect-error - TS2339 - Property 'address_line2' does not exist on type '{ readonly type: "billing"; }'.
                  line2: billingAddressInfo.address_line2,
                  // @ts-expect-error - TS2339 - Property 'address_city' does not exist on type '{ readonly type: "billing"; }'.
                  city: billingAddressInfo.address_city,
                  // @ts-expect-error - TS2339 - Property 'address_state' does not exist on type '{ readonly type: "billing"; }'.
                  state: billingAddressInfo.address_state,
                  // @ts-expect-error - TS2339 - Property 'address_country' does not exist on type '{ readonly type: "billing"; }'.
                  country: billingAddressInfo.address_country,
                  // @ts-expect-error - TS2339 - Property 'address_zip' does not exist on type '{ readonly type: "billing"; }'.
                  postal_code: billingAddressInfo.address_zip
                }
              }
            };
            let shippingMethodId = "";
            if (requiresShipping && shippingInfo.elements["shipping-method-choice"]) {
              const shippingMethodChoice = shippingInfo.querySelector(
                'input[name="shipping-method-choice"]:checked'
              );
              if (shippingMethodChoice) {
                shippingMethodId = shippingMethodChoice.value;
              }
            }
            const customData = hasAdditionalInfo ? customDataFormToArray(additionalInfo) : [];
            const syncCheckoutForm = Promise.all([
              createOrderIdentityMutation(apolloClient2, email),
              createOrderAddressMutation(apolloClient2, billingAddressInfo),
              requiresShipping ? createOrderAddressMutation(apolloClient2, shippingAddressInfo) : Promise.resolve(),
              requiresShipping ? createOrderShippingMethodMutation(apolloClient2, shippingMethodId) : Promise.resolve(),
              hasAdditionalInfo ? (
                // @ts-expect-error - TS2345 - Argument of type 'any[]' is not assignable to parameter of type '[]'.
                createCustomDataMutation(apolloClient2, customData)
              ) : Promise.resolve()
            ]);
            syncCheckoutForm.then(() => {
              if (isFreeOrder2) {
                return Promise.resolve();
              }
              if (!stripeStore2.isInitialized()) {
                return Promise.reject(
                  new Error(
                    "Stripe has not been set up for this project \u2013 Go to the project's Ecommerce Payment settings in the Designer to link Stripe."
                  )
                );
              }
              const stripe = stripeStore2.getStripeInstance();
              const checkoutFormInstance = parseInt(
                // @ts-expect-error - TS2345 - Argument of type 'string | null' is not assignable to parameter of type 'string'.
                checkoutFormContainer.getAttribute(STRIPE_ELEMENT_INSTANCE),
                10
              );
              const card = stripeStore2.getElement(
                "cardNumber",
                checkoutFormInstance
              );
              return stripe.createPaymentMethod(
                "card",
                card,
                stripeBillingAddressInfo
              );
            }).then((data2) => {
              if (!data2 || isFreeOrder2) {
                return Promise.resolve();
              }
              if (data2.error) {
                return Promise.reject(data2.error);
              }
              return createStripePaymentMethodMutation(
                apolloClient2,
                data2.paymentMethod.id
              );
            }).then(() => {
              return createAttemptSubmitOrderRequest(apolloClient2, {
                checkoutType: "normal"
              });
            }).then((data2) => {
              debug_default.log(data2);
              const order = getOrderDataFromGraphQLResponse(data2);
              if (orderRequiresAdditionalAction(order.status)) {
                const stripe = stripeStore2.getStripeInstance();
                return stripe.retrievePaymentIntent(order.clientSecret).then((retrieveResult) => {
                  const intent = retrieveResult && retrieveResult.paymentIntent || {};
                  const actionPromise = intent.confirmation_method === "automatic" ? stripe.confirmCardPayment(order.clientSecret) : stripe.handleCardAction(order.clientSecret);
                  return actionPromise.then((result2) => {
                    if (result2.error) {
                      return Promise.reject(result2.error);
                    }
                    return createAttemptSubmitOrderRequest(apolloClient2, {
                      checkoutType: "normal",
                      paymentIntentId: result2.paymentIntent.id
                      // @ts-expect-error - TS7006 - Parameter 'resp' implicitly has an 'any' type.
                    }).then((resp) => {
                      const finishedOrder = getOrderDataFromGraphQLResponse(resp);
                      if (finishedOrder.ok) {
                        finishOrderFlow(true);
                        redirectToOrderConfirmation(finishedOrder);
                      }
                    });
                  });
                });
              }
              if (order.ok) {
                finishOrderFlow(true);
                redirectToOrderConfirmation(order);
              }
            }).catch((err) => {
              finishOrderFlow();
              debug_default.error(err);
              errorState4.style.removeProperty("display");
              updateErrorMessage(errorState4, err);
            });
          }
        );
      };
      handleApplyDiscount = (event, apolloClient2) => {
        event.preventDefault();
        event.stopImmediatePropagation();
        const { currentTarget } = event;
        if (!(currentTarget instanceof Element)) {
          return;
        }
        const inputEl = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_DISCOUNT_INPUT,
          currentTarget
        );
        const checkoutFormContainer = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER,
          currentTarget
        ) || findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_FORM_CONTAINER,
          currentTarget
        );
        if (!checkoutFormContainer) {
          return;
        }
        const errorStateEl = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_ERROR_STATE,
          checkoutFormContainer
        );
        if (!(inputEl instanceof HTMLInputElement && errorStateEl instanceof HTMLElement)) {
          return;
        }
        const discountCode = inputEl.value.trim().toUpperCase();
        applyDiscount(apolloClient2, { discountCode }).then(() => {
          inputEl.value = "";
          errorStateEl.style.display = "none";
          triggerRender(null);
        }).catch((error) => showErrorMessageForError(error, checkoutFormContainer));
      };
      handleUpdateCustomerInfo = (event, apolloClient2) => {
        const { currentTarget } = event;
        if (!(currentTarget instanceof HTMLInputElement)) {
          return;
        }
        const value2 = currentTarget.value.trim();
        const email = value2 == null || value2 === "" ? null : value2;
        createOrderIdentityMutation(apolloClient2, email).then(() => {
          triggerRender(null);
        }).catch((err) => {
          triggerRender(err);
        });
      };
      handleUpdateAddress = (0, import_debounce.default)((event, apolloClient2) => {
        const { currentTarget } = event;
        if (!(currentTarget instanceof HTMLFormElement)) {
          return;
        }
        const type = currentTarget.getAttribute(DATA_ATTR_NODE_TYPE) === NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_WRAPPER ? "shipping" : "billing";
        const addressInfo = {
          type,
          ...formToObject(currentTarget, true)
        };
        createOrderAddressMutation(apolloClient2, addressInfo).then(() => {
          triggerRender(null);
        }).catch((err) => {
          triggerRender(err);
        });
      }, 500);
      handleToggleBillingAddress = ({ currentTarget }) => {
        const checkoutFormContainer = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER,
          currentTarget
        );
        if (!checkoutFormContainer) {
          return;
        }
        const billingAddressWrapper = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_WRAPPER,
          checkoutFormContainer
        );
        if (!billingAddressWrapper || !(currentTarget instanceof HTMLInputElement)) {
          return;
        }
        if (currentTarget.checked) {
          billingAddressWrapper.style.setProperty("display", "none");
        } else {
          billingAddressWrapper.style.removeProperty("display");
        }
      };
      handleChooseShippingMethod = ({ currentTarget }, apolloClient2) => {
        if (!(currentTarget instanceof HTMLInputElement)) {
          return;
        }
        createOrderShippingMethodMutation(apolloClient2, currentTarget.id).then(() => {
          triggerRender(null);
        }).catch((err) => {
          triggerRender(err);
        });
      };
      handleSubmitFormInsideCheckoutContainer = (event, apolloClient2) => {
        if (event.type === "submit") {
          event.preventDefault();
        }
        if (
          // @ts-expect-error - TS2339 - Property 'keyCode' does not exist on type 'Event | KeyboardEvent'.
          event.type === "keyup" && event.keyCode !== 13 || !(event.currentTarget instanceof Element)
        ) {
          return;
        }
        if (event.target === findElementByNodeType(NODE_TYPE_COMMERCE_CHECKOUT_DISCOUNT_INPUT)) {
          return;
        }
        const checkoutFormContainer = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_FORM_CONTAINER,
          event.currentTarget
        );
        if (!(checkoutFormContainer instanceof Element)) {
          return;
        }
        const customerInfo = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_CUSTOMER_INFO_WRAPPER,
          checkoutFormContainer
        );
        const shippingAddress = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_ADDRESS_WRAPPER,
          checkoutFormContainer
        );
        const shippingInfo = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_WRAPPER,
          checkoutFormContainer
        );
        const billingAddress = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_WRAPPER,
          checkoutFormContainer
        );
        const billingAddressToggle = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_BILLING_ADDRESS_TOGGLE_CHECKBOX,
          checkoutFormContainer
        );
        const additionalInfo = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_ADDITIONAL_INFO,
          checkoutFormContainer
        );
        if (!(customerInfo instanceof HTMLFormElement) || !(shippingAddress instanceof HTMLFormElement) || !(shippingInfo instanceof HTMLFormElement) || !(billingAddress instanceof HTMLFormElement) || !(billingAddressToggle instanceof HTMLInputElement)) {
          return;
        }
        const hasAdditionalInfo = additionalInfo && additionalInfo instanceof HTMLFormElement;
        fetchOrderStatusFlags(apolloClient2).then(({ requiresShipping }) => {
          checkFormValidity({
            customerInfo,
            shippingAddress,
            shippingInfo,
            billingAddress,
            billingAddressToggle,
            additionalInfo: hasAdditionalInfo ? additionalInfo : null,
            requiresShipping
          });
        });
      };
      register4 = (handlerProxy2) => {
        handlerProxy2.on(RENDER_TREE_EVENT, Boolean, handleRenderCheckout);
        handlerProxy2.on("click", isPlaceOrderButtonEvent, handlePlaceOrder);
        handlerProxy2.on(
          "keydown",
          isPlaceOrderButtonEvent,
          // eslint-disable-next-line @typescript-eslint/no-shadow
          (event, apolloClient2, StripeStore3) => {
            if (event.which === 32) {
              event.preventDefault();
            }
            if (event.which === 13) {
              return handlePlaceOrder(event, apolloClient2, StripeStore3);
            }
          }
        );
        handlerProxy2.on(
          "keyup",
          isPlaceOrderButtonEvent,
          // eslint-disable-next-line @typescript-eslint/no-shadow
          (event, apolloClient2, StripeStore3) => {
            if (event.which === 32) {
              return handlePlaceOrder(event, apolloClient2, StripeStore3);
            }
          }
        );
        handlerProxy2.on("submit", isApplyDiscountFormEvent, handleApplyDiscount);
        handlerProxy2.on(
          "change",
          isInputInsideCustomerInfoEvent,
          handleUpdateCustomerInfo
        );
        handlerProxy2.on(
          "change",
          isInputInsideAddressWrapperEvent,
          handleUpdateAddress
        );
        handlerProxy2.on(
          "change",
          isBillingAddressToggleEvent,
          handleToggleBillingAddress
        );
        handlerProxy2.on(
          "change",
          isInputInsideShippingMethodEvent,
          handleChooseShippingMethod
        );
        handlerProxy2.on(
          "submit",
          isFormInsideCheckoutContainerEvent,
          handleSubmitFormInsideCheckoutContainer
        );
        handlerProxy2.on(
          "keyup",
          isInputInsideCheckoutFormEvent,
          handleSubmitFormInsideCheckoutContainer
        );
      };
      checkoutEvents_default = { register: register4 };
    }
  });

  // node_modules/qs/lib/formats.js
  var require_formats = __commonJS({
    "node_modules/qs/lib/formats.js"(exports2, module2) {
      "use strict";
      var replace = String.prototype.replace;
      var percentTwenties = /%20/g;
      var Format = {
        RFC1738: "RFC1738",
        RFC3986: "RFC3986"
      };
      module2.exports = {
        "default": Format.RFC3986,
        formatters: {
          RFC1738: function(value2) {
            return replace.call(value2, percentTwenties, "+");
          },
          RFC3986: function(value2) {
            return String(value2);
          }
        },
        RFC1738: Format.RFC1738,
        RFC3986: Format.RFC3986
      };
    }
  });

  // node_modules/qs/lib/utils.js
  var require_utils = __commonJS({
    "node_modules/qs/lib/utils.js"(exports2, module2) {
      "use strict";
      var formats = require_formats();
      var has = Object.prototype.hasOwnProperty;
      var isArray2 = Array.isArray;
      var hexTable = function() {
        var array = [];
        for (var i = 0; i < 256; ++i) {
          array.push("%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase());
        }
        return array;
      }();
      var compactQueue = function compactQueue2(queue) {
        while (queue.length > 1) {
          var item = queue.pop();
          var obj = item.obj[item.prop];
          if (isArray2(obj)) {
            var compacted = [];
            for (var j = 0; j < obj.length; ++j) {
              if (typeof obj[j] !== "undefined") {
                compacted.push(obj[j]);
              }
            }
            item.obj[item.prop] = compacted;
          }
        }
      };
      var arrayToObject = function arrayToObject2(source, options) {
        var obj = options && options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
        for (var i = 0; i < source.length; ++i) {
          if (typeof source[i] !== "undefined") {
            obj[i] = source[i];
          }
        }
        return obj;
      };
      var merge4 = function merge5(target, source, options) {
        if (!source) {
          return target;
        }
        if (typeof source !== "object") {
          if (isArray2(target)) {
            target.push(source);
          } else if (target && typeof target === "object") {
            if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
              target[source] = true;
            }
          } else {
            return [target, source];
          }
          return target;
        }
        if (!target || typeof target !== "object") {
          return [target].concat(source);
        }
        var mergeTarget = target;
        if (isArray2(target) && !isArray2(source)) {
          mergeTarget = arrayToObject(target, options);
        }
        if (isArray2(target) && isArray2(source)) {
          source.forEach(function(item, i) {
            if (has.call(target, i)) {
              var targetItem = target[i];
              if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
                target[i] = merge5(targetItem, item, options);
              } else {
                target.push(item);
              }
            } else {
              target[i] = item;
            }
          });
          return target;
        }
        return Object.keys(source).reduce(function(acc, key2) {
          var value2 = source[key2];
          if (has.call(acc, key2)) {
            acc[key2] = merge5(acc[key2], value2, options);
          } else {
            acc[key2] = value2;
          }
          return acc;
        }, mergeTarget);
      };
      var assign2 = function assignSingleSource(target, source) {
        return Object.keys(source).reduce(function(acc, key2) {
          acc[key2] = source[key2];
          return acc;
        }, target);
      };
      var decode = function(str, decoder, charset) {
        var strWithoutPlus = str.replace(/\+/g, " ");
        if (charset === "iso-8859-1") {
          return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
        }
        try {
          return decodeURIComponent(strWithoutPlus);
        } catch (e) {
          return strWithoutPlus;
        }
      };
      var encode = function encode2(str, defaultEncoder, charset, kind, format) {
        if (str.length === 0) {
          return str;
        }
        var string = str;
        if (typeof str === "symbol") {
          string = Symbol.prototype.toString.call(str);
        } else if (typeof str !== "string") {
          string = String(str);
        }
        if (charset === "iso-8859-1") {
          return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
            return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
          });
        }
        var out = "";
        for (var i = 0; i < string.length; ++i) {
          var c = string.charCodeAt(i);
          if (c === 45 || c === 46 || c === 95 || c === 126 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 || format === formats.RFC1738 && (c === 40 || c === 41)) {
            out += string.charAt(i);
            continue;
          }
          if (c < 128) {
            out = out + hexTable[c];
            continue;
          }
          if (c < 2048) {
            out = out + (hexTable[192 | c >> 6] + hexTable[128 | c & 63]);
            continue;
          }
          if (c < 55296 || c >= 57344) {
            out = out + (hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63]);
            continue;
          }
          i += 1;
          c = 65536 + ((c & 1023) << 10 | string.charCodeAt(i) & 1023);
          out += hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
        }
        return out;
      };
      var compact2 = function compact3(value2) {
        var queue = [{ obj: { o: value2 }, prop: "o" }];
        var refs = [];
        for (var i = 0; i < queue.length; ++i) {
          var item = queue[i];
          var obj = item.obj[item.prop];
          var keys = Object.keys(obj);
          for (var j = 0; j < keys.length; ++j) {
            var key2 = keys[j];
            var val2 = obj[key2];
            if (typeof val2 === "object" && val2 !== null && refs.indexOf(val2) === -1) {
              queue.push({ obj, prop: key2 });
              refs.push(val2);
            }
          }
        }
        compactQueue(queue);
        return value2;
      };
      var isRegExp = function isRegExp2(obj) {
        return Object.prototype.toString.call(obj) === "[object RegExp]";
      };
      var isBuffer = function isBuffer2(obj) {
        if (!obj || typeof obj !== "object") {
          return false;
        }
        return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
      };
      var combine = function combine2(a, b) {
        return [].concat(a, b);
      };
      var maybeMap = function maybeMap2(val2, fn) {
        if (isArray2(val2)) {
          var mapped = [];
          for (var i = 0; i < val2.length; i += 1) {
            mapped.push(fn(val2[i]));
          }
          return mapped;
        }
        return fn(val2);
      };
      module2.exports = {
        arrayToObject,
        assign: assign2,
        combine,
        compact: compact2,
        decode,
        encode,
        isBuffer,
        isRegExp,
        maybeMap,
        merge: merge4
      };
    }
  });

  // node_modules/qs/lib/stringify.js
  var require_stringify = __commonJS({
    "node_modules/qs/lib/stringify.js"(exports2, module2) {
      "use strict";
      var utils = require_utils();
      var formats = require_formats();
      var has = Object.prototype.hasOwnProperty;
      var arrayPrefixGenerators = {
        brackets: function brackets(prefix) {
          return prefix + "[]";
        },
        comma: "comma",
        indices: function indices(prefix, key2) {
          return prefix + "[" + key2 + "]";
        },
        repeat: function repeat(prefix) {
          return prefix;
        }
      };
      var isArray2 = Array.isArray;
      var split = String.prototype.split;
      var push = Array.prototype.push;
      var pushToArray = function(arr, valueOrArray) {
        push.apply(arr, isArray2(valueOrArray) ? valueOrArray : [valueOrArray]);
      };
      var toISO = Date.prototype.toISOString;
      var defaultFormat = formats["default"];
      var defaults = {
        addQueryPrefix: false,
        allowDots: false,
        charset: "utf-8",
        charsetSentinel: false,
        delimiter: "&",
        encode: true,
        encoder: utils.encode,
        encodeValuesOnly: false,
        format: defaultFormat,
        formatter: formats.formatters[defaultFormat],
        // deprecated
        indices: false,
        serializeDate: function serializeDate(date2) {
          return toISO.call(date2);
        },
        skipNulls: false,
        strictNullHandling: false
      };
      var isNonNullishPrimitive = function isNonNullishPrimitive2(v) {
        return typeof v === "string" || typeof v === "number" || typeof v === "boolean" || typeof v === "symbol" || typeof v === "bigint";
      };
      var stringify3 = function stringify4(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset) {
        var obj = object;
        if (typeof filter === "function") {
          obj = filter(prefix, obj);
        } else if (obj instanceof Date) {
          obj = serializeDate(obj);
        } else if (generateArrayPrefix === "comma" && isArray2(obj)) {
          obj = utils.maybeMap(obj, function(value3) {
            if (value3 instanceof Date) {
              return serializeDate(value3);
            }
            return value3;
          });
        }
        if (obj === null) {
          if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, "key", format) : prefix;
          }
          obj = "";
        }
        if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
          if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, "key", format);
            if (generateArrayPrefix === "comma" && encodeValuesOnly) {
              var valuesArray = split.call(String(obj), ",");
              var valuesJoined = "";
              for (var i = 0; i < valuesArray.length; ++i) {
                valuesJoined += (i === 0 ? "" : ",") + formatter(encoder(valuesArray[i], defaults.encoder, charset, "value", format));
              }
              return [formatter(keyValue) + "=" + valuesJoined];
            }
            return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults.encoder, charset, "value", format))];
          }
          return [formatter(prefix) + "=" + formatter(String(obj))];
        }
        var values2 = [];
        if (typeof obj === "undefined") {
          return values2;
        }
        var objKeys;
        if (generateArrayPrefix === "comma" && isArray2(obj)) {
          objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : void 0 }];
        } else if (isArray2(filter)) {
          objKeys = filter;
        } else {
          var keys = Object.keys(obj);
          objKeys = sort ? keys.sort(sort) : keys;
        }
        for (var j = 0; j < objKeys.length; ++j) {
          var key2 = objKeys[j];
          var value2 = typeof key2 === "object" && typeof key2.value !== "undefined" ? key2.value : obj[key2];
          if (skipNulls && value2 === null) {
            continue;
          }
          var keyPrefix = isArray2(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(prefix, key2) : prefix : prefix + (allowDots ? "." + key2 : "[" + key2 + "]");
          pushToArray(values2, stringify4(
            value2,
            keyPrefix,
            generateArrayPrefix,
            strictNullHandling,
            skipNulls,
            encoder,
            filter,
            sort,
            allowDots,
            serializeDate,
            format,
            formatter,
            encodeValuesOnly,
            charset
          ));
        }
        return values2;
      };
      var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
        if (!opts) {
          return defaults;
        }
        if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
          throw new TypeError("Encoder has to be a function.");
        }
        var charset = opts.charset || defaults.charset;
        if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
          throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        }
        var format = formats["default"];
        if (typeof opts.format !== "undefined") {
          if (!has.call(formats.formatters, opts.format)) {
            throw new TypeError("Unknown format option provided.");
          }
          format = opts.format;
        }
        var formatter = formats.formatters[format];
        var filter = defaults.filter;
        if (typeof opts.filter === "function" || isArray2(opts.filter)) {
          filter = opts.filter;
        }
        return {
          addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults.addQueryPrefix,
          allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
          charset,
          charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
          delimiter: typeof opts.delimiter === "undefined" ? defaults.delimiter : opts.delimiter,
          encode: typeof opts.encode === "boolean" ? opts.encode : defaults.encode,
          encoder: typeof opts.encoder === "function" ? opts.encoder : defaults.encoder,
          encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
          filter,
          format,
          formatter,
          serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults.serializeDate,
          skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults.skipNulls,
          sort: typeof opts.sort === "function" ? opts.sort : null,
          strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
        };
      };
      module2.exports = function(object, opts) {
        var obj = object;
        var options = normalizeStringifyOptions(opts);
        var objKeys;
        var filter;
        if (typeof options.filter === "function") {
          filter = options.filter;
          obj = filter("", obj);
        } else if (isArray2(options.filter)) {
          filter = options.filter;
          objKeys = filter;
        }
        var keys = [];
        if (typeof obj !== "object" || obj === null) {
          return "";
        }
        var arrayFormat;
        if (opts && opts.arrayFormat in arrayPrefixGenerators) {
          arrayFormat = opts.arrayFormat;
        } else if (opts && "indices" in opts) {
          arrayFormat = opts.indices ? "indices" : "repeat";
        } else {
          arrayFormat = "indices";
        }
        var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
        if (!objKeys) {
          objKeys = Object.keys(obj);
        }
        if (options.sort) {
          objKeys.sort(options.sort);
        }
        for (var i = 0; i < objKeys.length; ++i) {
          var key2 = objKeys[i];
          if (options.skipNulls && obj[key2] === null) {
            continue;
          }
          pushToArray(keys, stringify3(
            obj[key2],
            key2,
            generateArrayPrefix,
            options.strictNullHandling,
            options.skipNulls,
            options.encode ? options.encoder : null,
            options.filter,
            options.sort,
            options.allowDots,
            options.serializeDate,
            options.format,
            options.formatter,
            options.encodeValuesOnly,
            options.charset
          ));
        }
        var joined = keys.join(options.delimiter);
        var prefix = options.addQueryPrefix === true ? "?" : "";
        if (options.charsetSentinel) {
          if (options.charset === "iso-8859-1") {
            prefix += "utf8=%26%2310003%3B&";
          } else {
            prefix += "utf8=%E2%9C%93&";
          }
        }
        return joined.length > 0 ? prefix + joined : "";
      };
    }
  });

  // node_modules/qs/lib/parse.js
  var require_parse = __commonJS({
    "node_modules/qs/lib/parse.js"(exports2, module2) {
      "use strict";
      var utils = require_utils();
      var has = Object.prototype.hasOwnProperty;
      var isArray2 = Array.isArray;
      var defaults = {
        allowDots: false,
        allowPrototypes: false,
        arrayLimit: 20,
        charset: "utf-8",
        charsetSentinel: false,
        comma: false,
        decoder: utils.decode,
        delimiter: "&",
        depth: 5,
        ignoreQueryPrefix: false,
        interpretNumericEntities: false,
        parameterLimit: 1e3,
        parseArrays: true,
        plainObjects: false,
        strictNullHandling: false
      };
      var interpretNumericEntities = function(str) {
        return str.replace(/&#(\d+);/g, function($0, numberStr) {
          return String.fromCharCode(parseInt(numberStr, 10));
        });
      };
      var parseArrayValue = function(val2, options) {
        if (val2 && typeof val2 === "string" && options.comma && val2.indexOf(",") > -1) {
          return val2.split(",");
        }
        return val2;
      };
      var isoSentinel = "utf8=%26%2310003%3B";
      var charsetSentinel = "utf8=%E2%9C%93";
      var parseValues = function parseQueryStringValues(str, options) {
        var obj = {};
        var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
        var limit = options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
        var parts = cleanStr.split(options.delimiter, limit);
        var skipIndex = -1;
        var i;
        var charset = options.charset;
        if (options.charsetSentinel) {
          for (i = 0; i < parts.length; ++i) {
            if (parts[i].indexOf("utf8=") === 0) {
              if (parts[i] === charsetSentinel) {
                charset = "utf-8";
              } else if (parts[i] === isoSentinel) {
                charset = "iso-8859-1";
              }
              skipIndex = i;
              i = parts.length;
            }
          }
        }
        for (i = 0; i < parts.length; ++i) {
          if (i === skipIndex) {
            continue;
          }
          var part = parts[i];
          var bracketEqualsPos = part.indexOf("]=");
          var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
          var key2, val2;
          if (pos === -1) {
            key2 = options.decoder(part, defaults.decoder, charset, "key");
            val2 = options.strictNullHandling ? null : "";
          } else {
            key2 = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
            val2 = utils.maybeMap(
              parseArrayValue(part.slice(pos + 1), options),
              function(encodedVal) {
                return options.decoder(encodedVal, defaults.decoder, charset, "value");
              }
            );
          }
          if (val2 && options.interpretNumericEntities && charset === "iso-8859-1") {
            val2 = interpretNumericEntities(val2);
          }
          if (part.indexOf("[]=") > -1) {
            val2 = isArray2(val2) ? [val2] : val2;
          }
          if (has.call(obj, key2)) {
            obj[key2] = utils.combine(obj[key2], val2);
          } else {
            obj[key2] = val2;
          }
        }
        return obj;
      };
      var parseObject = function(chain, val2, options, valuesParsed) {
        var leaf = valuesParsed ? val2 : parseArrayValue(val2, options);
        for (var i = chain.length - 1; i >= 0; --i) {
          var obj;
          var root2 = chain[i];
          if (root2 === "[]" && options.parseArrays) {
            obj = [].concat(leaf);
          } else {
            obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
            var cleanRoot = root2.charAt(0) === "[" && root2.charAt(root2.length - 1) === "]" ? root2.slice(1, -1) : root2;
            var index2 = parseInt(cleanRoot, 10);
            if (!options.parseArrays && cleanRoot === "") {
              obj = { 0: leaf };
            } else if (!isNaN(index2) && root2 !== cleanRoot && String(index2) === cleanRoot && index2 >= 0 && (options.parseArrays && index2 <= options.arrayLimit)) {
              obj = [];
              obj[index2] = leaf;
            } else if (cleanRoot !== "__proto__") {
              obj[cleanRoot] = leaf;
            }
          }
          leaf = obj;
        }
        return leaf;
      };
      var parseKeys = function parseQueryStringKeys(givenKey, val2, options, valuesParsed) {
        if (!givenKey) {
          return;
        }
        var key2 = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
        var brackets = /(\[[^[\]]*])/;
        var child = /(\[[^[\]]*])/g;
        var segment = options.depth > 0 && brackets.exec(key2);
        var parent2 = segment ? key2.slice(0, segment.index) : key2;
        var keys = [];
        if (parent2) {
          if (!options.plainObjects && has.call(Object.prototype, parent2)) {
            if (!options.allowPrototypes) {
              return;
            }
          }
          keys.push(parent2);
        }
        var i = 0;
        while (options.depth > 0 && (segment = child.exec(key2)) !== null && i < options.depth) {
          i += 1;
          if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
              return;
            }
          }
          keys.push(segment[1]);
        }
        if (segment) {
          keys.push("[" + key2.slice(segment.index) + "]");
        }
        return parseObject(keys, val2, options, valuesParsed);
      };
      var normalizeParseOptions = function normalizeParseOptions2(opts) {
        if (!opts) {
          return defaults;
        }
        if (opts.decoder !== null && opts.decoder !== void 0 && typeof opts.decoder !== "function") {
          throw new TypeError("Decoder has to be a function.");
        }
        if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
          throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        }
        var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
        return {
          allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
          allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
          arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
          charset,
          charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
          comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
          decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
          delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
          // eslint-disable-next-line no-implicit-coercion, no-extra-parens
          depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
          ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
          interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
          parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
          parseArrays: opts.parseArrays !== false,
          plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
          strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
        };
      };
      module2.exports = function(str, opts) {
        var options = normalizeParseOptions(opts);
        if (str === "" || str === null || typeof str === "undefined") {
          return options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
        }
        var tempObj = typeof str === "string" ? parseValues(str, options) : str;
        var obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
        var keys = Object.keys(tempObj);
        for (var i = 0; i < keys.length; ++i) {
          var key2 = keys[i];
          var newObj = parseKeys(key2, tempObj[key2], options, typeof str === "string");
          obj = utils.merge(obj, newObj, options);
        }
        return utils.compact(obj);
      };
    }
  });

  // node_modules/qs/lib/index.js
  var require_lib4 = __commonJS({
    "node_modules/qs/lib/index.js"(exports2, module2) {
      "use strict";
      var stringify3 = require_stringify();
      var parse2 = require_parse();
      var formats = require_formats();
      module2.exports = {
        formats,
        parse: parse2,
        stringify: stringify3
      };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/orderConfirmationEvents.ts
  var import_qs, renderOrderConfirmation, handleRenderOrderConfirmation, register5, orderConfirmationEvents_default;
  var init_orderConfirmationEvents = __esm({
    "packages/shared/render/plugins/Commerce/modules/orderConfirmationEvents.ts"() {
      "use strict";
      init_lib7();
      import_qs = __toESM(require_lib4());
      init_commerceUtils();
      init_rendering();
      init_constants();
      renderOrderConfirmation = (orderConfirmation, data2) => {
        renderTree(orderConfirmation, data2);
      };
      handleRenderOrderConfirmation = (event, apolloClient2) => {
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          return;
        }
        if (!(event instanceof CustomEvent && event.type === RENDER_TREE_EVENT)) {
          return;
        }
        const errors = [];
        const { detail } = event;
        if (detail != null && detail.error) {
          errors.push(detail.error);
        }
        const orderConfirmationContainer = findElementByNodeType(
          NODE_TYPE_COMMERCE_ORDER_CONFIRMATION_WRAPPER
        );
        if (!orderConfirmationContainer) {
          return;
        }
        const {
          orderId,
          token
        } = import_qs.default.parse(window.location.search.substring(1));
        if (!orderId || !token) {
          return;
        }
        const finalizedOrder = { orderId, token };
        trackOrder(apolloClient2, finalizedOrder);
        const allOrderConfirmationContainers = findAllElementsByNodeType(
          NODE_TYPE_COMMERCE_ORDER_CONFIRMATION_WRAPPER
        );
        apolloClient2.query({
          query: lib_default2`
        ${orderConfirmationContainer.getAttribute(ORDER_QUERY)}
      `,
          variables: { finalizedOrder },
          fetchPolicy: "network-only",
          // errorPolicy is set to `all` so that we continue to get the cart data when an error occurs
          // this is important in cases like when the address entered doesn't have a shipping zone, as that returns
          // a graphQL error, but we still want to render what the customer has entered
          errorPolicy: "all"
        }).then((data2) => {
          allOrderConfirmationContainers.forEach(
            (orderConfirmationContainerNode) => {
              renderOrderConfirmation(orderConfirmationContainerNode, {
                ...data2,
                errors: errors.concat(data2.errors).filter(Boolean)
              });
            }
          );
        }).catch((err) => {
          errors.push(err);
          allOrderConfirmationContainers.forEach(
            (orderConfirmationContainerNode) => {
              renderOrderConfirmation(orderConfirmationContainerNode, { errors });
            }
          );
        });
      };
      register5 = (handlerProxy2) => {
        handlerProxy2.on(RENDER_TREE_EVENT, Boolean, handleRenderOrderConfirmation);
      };
      orderConfirmationEvents_default = { register: register5 };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/paypalEvents.ts
  var isPlaceOrderButtonEvent2, hasSyncedWithPaypal, handleRenderPayPalCheckout, placingOrder2, startOrderFlow2, checkFormValidity2, handlePlaceOrder2, iframeStyle, createConfirmationIframe, renderPaypalButtons, register6, paypalEvents_default;
  var init_paypalEvents = __esm({
    "packages/shared/render/plugins/Commerce/modules/paypalEvents.ts"() {
      "use strict";
      init_commerceUtils();
      init_checkoutUtils();
      init_cartUtils();
      init_debug();
      init_checkoutMutations();
      init_constants();
      isPlaceOrderButtonEvent2 = ({ target }) => {
        const placeOrderButton = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_PLACE_ORDER_BUTTON,
          target
        );
        if (placeOrderButton && target instanceof Element) {
          return target;
        } else {
          return false;
        }
      };
      hasSyncedWithPaypal = false;
      handleRenderPayPalCheckout = (event, apolloClient2) => {
        if (window.Webflow.env("design") || window.Webflow.env("preview")) {
          return;
        }
        if (!(event instanceof CustomEvent && event.type === RENDER_TREE_EVENT)) {
          return;
        }
        const checkoutFormContainers = findAllElementsByNodeType(
          NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_FORM_CONTAINER
        );
        if (!checkoutFormContainers || checkoutFormContainers.length === 0) {
          return;
        }
        const errors = [];
        const { detail } = event;
        if (detail != null && detail.error) {
          errors.push(detail.error);
        }
        const focusedEle = window.document.activeElement;
        const checkoutForm = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_FORM_CONTAINER,
          // @ts-expect-error - TS2345 - Argument of type 'Element | null' is not assignable to parameter of type 'EventTarget'.
          focusedEle
        );
        let prevFocusedInput = null;
        if (focusedEle instanceof HTMLInputElement && checkoutForm) {
          prevFocusedInput = focusedEle.id;
          if (!prevFocusedInput) {
            prevFocusedInput = focusedEle.getAttribute("data-wf-bindings");
          }
          prevFocusedInput = prevFocusedInput ? null : prevFocusedInput;
        }
        const syncWithPayPalIfNeeded = !hasSyncedWithPaypal ? apolloClient2.mutate({
          mutation: syncPayPalOrderInfo
        }) : Promise.resolve();
        syncWithPayPalIfNeeded.then(() => {
          hasSyncedWithPaypal = true;
          renderCheckoutFormContainers(
            checkoutFormContainers,
            errors,
            apolloClient2,
            void 0,
            // @ts-expect-error - TS7005 - Variable 'prevFocusedInput' implicitly has an 'any' type.
            prevFocusedInput
          );
        });
      };
      placingOrder2 = false;
      startOrderFlow2 = (placeOrderButton) => {
        placingOrder2 = true;
        window.addEventListener("beforeunload", beforeUnloadHandler);
        const buttonText = placeOrderButton.innerHTML;
        const loadingText = placeOrderButton.getAttribute(DATA_ATTR_LOADING_TEXT);
        placeOrderButton.innerHTML = loadingText ? loadingText : CHECKOUT_PLACE_ORDER_LOADING_TEXT_DEFAULT;
        const finishOrderFlow = (isRedirecting = false) => {
          if (!isRedirecting) {
            placingOrder2 = false;
          }
          window.removeEventListener("beforeunload", beforeUnloadHandler);
          placeOrderButton.innerHTML = buttonText ? buttonText : CHECKOUT_PLACE_ORDER_BUTTON_TEXT_DEFAULT;
        };
        return finishOrderFlow;
      };
      checkFormValidity2 = ({
        shippingInfo,
        additionalInfo,
        requiresShipping
      }) => {
        if (!HTMLFormElement.prototype.reportValidity) {
          return true;
        }
        if (requiresShipping && !shippingInfo.reportValidity() || additionalInfo && additionalInfo instanceof HTMLFormElement && !additionalInfo.reportValidity()) {
          return false;
        }
        return true;
      };
      handlePlaceOrder2 = (event, apolloClient2) => {
        if (
          // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
          window.Webflow.env("design") || // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
          window.Webflow.env("preview") || placingOrder2
        ) {
          return;
        }
        const { currentTarget } = event;
        if (!(currentTarget instanceof Element)) {
          return;
        }
        const checkoutFormContainer = findClosestElementByNodeType(
          NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_FORM_CONTAINER,
          currentTarget
        );
        if (!(checkoutFormContainer instanceof Element)) {
          return;
        }
        const errorState4 = findElementByNodeType(
          NODE_TYPE_COMMERCE_PAYPAL_CHECKOUT_ERROR_STATE,
          checkoutFormContainer
        );
        const shippingInfo = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_SHIPPING_METHODS_WRAPPER,
          checkoutFormContainer
        );
        const placeOrderButton = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_PLACE_ORDER_BUTTON,
          checkoutFormContainer
        );
        const additionalInfo = findElementByNodeType(
          NODE_TYPE_COMMERCE_CHECKOUT_ADDITIONAL_INFO,
          checkoutFormContainer
        );
        if (!(errorState4 instanceof HTMLElement) || !(shippingInfo instanceof HTMLFormElement) || !(placeOrderButton instanceof Element)) {
          return;
        }
        const errorMessage = errorState4.querySelector(
          CART_CHECKOUT_ERROR_MESSAGE_SELECTOR
        );
        if (errorMessage && errorMessage.hasAttribute(NEEDS_REFRESH)) {
          return;
        }
        const hasAdditionalInfo = additionalInfo && additionalInfo instanceof HTMLElement;
        const finishOrderFlow = startOrderFlow2(placeOrderButton);
        errorState4.style.setProperty("display", "none");
        fetchOrderStatusFlags(apolloClient2).then(({ requiresShipping }) => {
          const isFormValid = checkFormValidity2({
            shippingInfo,
            additionalInfo,
            requiresShipping
          });
          if (!isFormValid) {
            finishOrderFlow();
            return;
          }
          let shippingMethodId = "";
          if (requiresShipping && shippingInfo.elements["shipping-method-choice"]) {
            const shippingMethodChoice = shippingInfo.querySelector(
              'input[name="shipping-method-choice"]:checked'
            );
            if (shippingMethodChoice) {
              shippingMethodId = shippingMethodChoice.value;
            }
          }
          const customData = hasAdditionalInfo ? customDataFormToArray(additionalInfo) : [];
          const syncPayPalCheckoutForm = Promise.all([
            requiresShipping ? createOrderShippingMethodMutation(apolloClient2, shippingMethodId) : Promise.resolve(),
            hasAdditionalInfo ? (
              // @ts-expect-error - TS2345 - Argument of type 'any[]' is not assignable to parameter of type '[]'.
              createCustomDataMutation(apolloClient2, customData)
            ) : Promise.resolve()
          ]);
          syncPayPalCheckoutForm.then(() => {
            return createAttemptSubmitOrderRequest(apolloClient2, {
              checkoutType: "paypal"
            });
          }).then((data2) => {
            debug_default.log(data2);
            const order = getOrderDataFromGraphQLResponse(data2);
            if (order.ok) {
              finishOrderFlow(true);
              redirectToOrderConfirmation(order, true);
            }
          }).catch((err) => {
            finishOrderFlow();
            debug_default.error(err);
            errorState4.style.removeProperty("display");
            updateErrorMessage(errorState4, err);
            if (err.graphQLErrors && err.graphQLErrors[0] && err.graphQLErrors[0].message) {
              const parsedError = safeParseJson(err.graphQLErrors[0].message);
              if (!parsedError) {
                return;
              }
              if (parsedError.details && parsedError.details[0] && parsedError.details[0].issue === "INSTRUMENT_DECLINED") {
                const message = {
                  isWebflow: true,
                  type: "error",
                  detail: parsedError
                };
                window.parent.postMessage(
                  JSON.stringify(message),
                  window.location.origin
                );
              }
            }
          });
        });
      };
      iframeStyle = `
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  width: 100vw;
  height: 100vh;
  min-width: 100%;
  min-height: 100%;
  max-width: 100%;
  max-height: 100%;
  z-index: 2147483647;
  border: 0;
  background-color: #ffffff;
`;
      createConfirmationIframe = (actions) => {
        const documentRoot = document.documentElement;
        const documentBody = document.querySelector("body");
        if (!documentRoot || !documentBody) {
          return;
        }
        const iframe = document.createElement("iframe");
        iframe.setAttribute("style", iframeStyle);
        iframe.setAttribute("src", "/paypal-checkout");
        if (!documentBody.parentNode) {
          return;
        }
        documentBody.parentNode.appendChild(iframe);
        const previousRootOverflow = documentRoot.style.overflow;
        documentRoot.style.overflow = "hidden";
        const previousBodyDisplay = documentBody.style.display;
        documentBody.style.display = "none";
        const paypalMessageHandler = (event) => {
          if (event.origin !== window.location.origin) {
            return;
          }
          const data2 = safeParseJson(String(event.data));
          if (!data2 || data2.isWebflow !== true || !data2.type || !data2.detail) {
            return;
          }
          if (data2.type === "success") {
            window.removeEventListener("message", paypalMessageHandler);
            window.location.href = data2.detail;
          }
          if (data2.type === "error") {
            window.removeEventListener("message", paypalMessageHandler);
            if (previousRootOverflow) {
              documentRoot.style.overflow = previousRootOverflow;
            } else {
              documentRoot.style.overflow = "";
            }
            if (previousBodyDisplay) {
              documentBody.style.display = previousBodyDisplay;
            } else {
              documentBody.style.display = "";
            }
            if (documentBody.parentNode) {
              documentBody.parentNode.removeChild(iframe);
            }
            actions.restart();
          }
        };
        window.addEventListener("message", paypalMessageHandler);
      };
      renderPaypalButtons = (apolloClient2) => () => {
        const paypalElement = document.querySelector(`[${PAYPAL_ELEMENT_INSTANCE}]`);
        const buttons = Array.from(
          document.querySelectorAll(`[${PAYPAL_BUTTON_ELEMENT_INSTANCE}]`)
        );
        if (paypalElement && buttons && buttons.length > 0) {
          buttons.forEach((button) => {
            const style2 = safeParseJson(
              button.getAttribute(PAYPAL_BUTTON_ELEMENT_INSTANCE)
            );
            window.paypal.Buttons({
              style: style2,
              createOrder() {
                return apolloClient2.mutate({
                  mutation: requestPayPalOrderMutation
                }).then((data2) => {
                  const {
                    data: {
                      ecommercePaypalOrderRequest: { orderId }
                    }
                  } = data2;
                  return orderId;
                }).catch((err) => {
                  showErrorMessageForError(err);
                  if (isCartOpen()) {
                    showErrorMessageForError2(err);
                  }
                  throw err;
                });
              },
              onApprove(data2, actions) {
                createConfirmationIframe(actions);
              }
            }).render(button);
          });
        }
      };
      register6 = (handlerProxy2) => {
        handlerProxy2.on(RENDER_TREE_EVENT, Boolean, handleRenderPayPalCheckout);
        handlerProxy2.on("click", isPlaceOrderButtonEvent2, handlePlaceOrder2);
        handlerProxy2.on("keydown", isPlaceOrderButtonEvent2, (event, apolloClient2) => {
          if (event.which === 32) {
            event.preventDefault();
          }
          if (event.which === 13) {
            return handlePlaceOrder2(event, apolloClient2);
          }
        });
        handlerProxy2.on("keyup", isPlaceOrderButtonEvent2, (event, apolloClient2) => {
          if (event.which === 32) {
            return handlePlaceOrder2(event, apolloClient2);
          }
        });
      };
      paypalEvents_default = { register: register6 };
    }
  });

  // packages/shared/render/plugins/Commerce/modules/index.ts
  var modules_exports = {};
  __export(modules_exports, {
    design: () => design,
    destroy: () => destroy2,
    init: () => init2,
    preview: () => preview
  });
  function attachHandlers() {
    handlerProxy && handlerProxy.attachHandlers(window);
  }
  function detachHandlers() {
    handlerProxy && handlerProxy.removeHandlers(window);
  }
  function init2({ siteId }) {
    apolloClient = createApolloClient({
      path: (
        // @ts-expect-error - TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'. | TS2339 - Property 'Webflow' does not exist on type 'Window & typeof globalThis'.
        window.Webflow.env("design") || window.Webflow.env("preview") ? `/api/v1/sites/${siteId}/apollo` : GQL_QUERY_PATH2
      ),
      retryConfig: {
        maxAttempts: 5
      },
      useCsrf: true
    });
    stripeStore = new StripeStore(document);
    handlerProxy = new EventHandlerProxyWithApolloClient(
      apolloClient,
      stripeStore
    );
    addToCartEvents_default.register(handlerProxy);
    cartEvents_default.register(handlerProxy);
    checkoutEvents_default.register(handlerProxy);
    orderConfirmationEvents_default.register(handlerProxy);
    webPaymentsEvents_default.register(handlerProxy);
    paypalEvents_default.register(handlerProxy);
    initializeStripeElements(stripeStore);
    detachHandlers();
    attachHandlers();
    triggerRender(null, true);
    if (!window.Webflow.env()) {
      window.Webflow.load(renderPaypalButtons(apolloClient));
    }
  }
  function preview() {
    detachHandlers();
    attachHandlers();
    triggerRender(null, true);
  }
  function design() {
    detachHandlers();
    if (apolloClient && apolloClient.store) {
      apolloClient.resetStore();
    }
  }
  function destroy2() {
    detachHandlers();
  }
  var import_symbol, import_array2, import_repeat, import_entries, import_for_each, import_number, import_polyfill2, GQL_QUERY_PATH2, handlerProxy, apolloClient, stripeStore;
  var init_modules = __esm({
    "packages/shared/render/plugins/Commerce/modules/index.ts"() {
      "use strict";
      init_polyfill();
      import_symbol = __toESM(require_symbol3());
      import_array2 = __toESM(require_array3());
      import_repeat = __toESM(require_repeat3());
      import_entries = __toESM(require_entries3());
      import_for_each = __toESM(require_for_each2());
      import_number = __toESM(require_number3());
      init_apolloClient();
      init_eventHandlerProxyWithApolloClient();
      init_addToCartEvents();
      init_cartEvents();
      init_checkoutEvents();
      init_orderConfirmationEvents();
      init_webPaymentsEvents();
      init_stripeStore();
      init_commerceUtils();
      init_polyfill2();
      import_polyfill2 = __toESM(require_polyfill());
      init_checkoutUtils();
      init_paypalEvents();
      GQL_QUERY_PATH2 = "/.wf_graphql/apollo";
    }
  });

  // packages/shared/render/plugins/Commerce/webflow-commerce.js
  var require_webflow_commerce = __commonJS({
    "packages/shared/render/plugins/Commerce/webflow-commerce.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      var {
        design: design2,
        destroy: destroy3,
        init: init3,
        preview: preview2
      } = (init_modules(), __toCommonJS(modules_exports));
      Webflow.define("commerce", module2.exports = function() {
        return {
          design: design2,
          destroy: destroy3,
          init: init3,
          preview: preview2
        };
      });
    }
  });

  // packages/shared/render/plugins/Form/webflow-forms-hosted.js
  var require_webflow_forms_hosted = __commonJS({
    "packages/shared/render/plugins/Form/webflow-forms-hosted.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.default = hostedSubmitWebflow;
      function hostedSubmitWebflow(reset, loc, Webflow, collectEnterpriseTrackingCookies, preventDefault, findFields, alert, findFileUploads, disableBtn, siteId, afterSubmit, $2, formUrl) {
        return function(data2) {
          reset(data2);
          var form = data2.form;
          var payload = {
            name: form.attr("data-name") || form.attr("name") || "Untitled Form",
            pageId: form.attr("data-wf-page-id") || "",
            elementId: form.attr("data-wf-element-id") || "",
            source: loc.href,
            test: Webflow.env(),
            fields: {},
            fileUploads: {},
            dolphin: /pass[\s-_]?(word|code)|secret|login|credentials/i.test(form.html()),
            trackingCookies: collectEnterpriseTrackingCookies()
          };
          const wfFlow = form.attr("data-wf-flow");
          if (wfFlow) {
            payload.wfFlow = wfFlow;
          }
          preventDefault(data2);
          var status = findFields(form, payload.fields);
          if (status) {
            return alert(status);
          }
          payload.fileUploads = findFileUploads(form);
          disableBtn(data2);
          if (!siteId) {
            afterSubmit(data2);
            return;
          }
          $2.ajax({
            url: formUrl,
            type: "POST",
            data: payload,
            dataType: "json",
            crossDomain: true
          }).done(function(response) {
            if (response && response.code === 200) {
              data2.success = true;
            }
            afterSubmit(data2);
          }).fail(function() {
            afterSubmit(data2);
          });
        };
      }
    }
  });

  // packages/shared/render/plugins/Form/webflow-forms.js
  var require_webflow_forms = __commonJS({
    "packages/shared/render/plugins/Form/webflow-forms.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      Webflow.define("forms", module2.exports = function($2, _) {
        var api = {};
        var $doc = $2(document);
        var $forms;
        var loc = window.location;
        var retro = window.XDomainRequest && !window.atob;
        var namespace = ".w-form";
        var siteId;
        var emailField = /e(-)?mail/i;
        var emailValue = /^\S+@\S+$/;
        var alert = window.alert;
        var inApp = Webflow.env();
        var listening;
        var formUrl;
        var signFileUrl;
        var chimpRegex = /list-manage[1-9]?.com/i;
        var disconnected = _.debounce(function() {
          alert("Oops! This page has improperly configured forms. Please contact your website administrator to fix this issue.");
        }, 100);
        api.ready = api.design = api.preview = function() {
          init3();
          if (!inApp && !listening) {
            addListeners();
          }
        };
        function init3() {
          siteId = $2("html").attr("data-wf-site");
          formUrl = "https://webflow.com/api/v1/form/" + siteId;
          if (retro && formUrl.indexOf("https://webflow.com") >= 0) {
            formUrl = formUrl.replace("https://webflow.com", "https://formdata.webflow.com");
          }
          signFileUrl = `${formUrl}/signFile`;
          $forms = $2(namespace + " form");
          if (!$forms.length) {
            return;
          }
          $forms.each(build);
        }
        function build(i, el) {
          var $el = $2(el);
          var data2 = $2.data(el, namespace);
          if (!data2) {
            data2 = $2.data(el, namespace, {
              form: $el
            });
          }
          reset(data2);
          var wrap4 = $el.closest("div.w-form");
          data2.done = wrap4.find("> .w-form-done");
          data2.fail = wrap4.find("> .w-form-fail");
          data2.fileUploads = wrap4.find(".w-file-upload");
          data2.fileUploads.each(function(j) {
            initFileUpload(j, data2);
          });
          var formName = data2.form.attr("aria-label") || data2.form.attr("data-name") || "Form";
          if (!data2.done.attr("aria-label")) {
            data2.form.attr("aria-label", formName);
          }
          data2.done.attr("tabindex", "-1");
          data2.done.attr("role", "region");
          if (!data2.done.attr("aria-label")) {
            data2.done.attr("aria-label", formName + " success");
          }
          data2.fail.attr("tabindex", "-1");
          data2.fail.attr("role", "region");
          if (!data2.fail.attr("aria-label")) {
            data2.fail.attr("aria-label", formName + " failure");
          }
          var action = data2.action = $el.attr("action");
          data2.handler = null;
          data2.redirect = $el.attr("data-redirect");
          if (chimpRegex.test(action)) {
            data2.handler = submitMailChimp;
            return;
          }
          if (action) {
            return;
          }
          if (siteId) {
            data2.handler = false ? exportedSubmitWebflow : (() => {
              const hostedSubmitHandler = require_webflow_forms_hosted().default;
              return hostedSubmitHandler(reset, loc, Webflow, collectEnterpriseTrackingCookies, preventDefault, findFields, alert, findFileUploads, disableBtn, siteId, afterSubmit, $2, formUrl);
            })();
            return;
          }
          disconnected();
        }
        function addListeners() {
          listening = true;
          $doc.on("submit", namespace + " form", function(evt) {
            var data2 = $2.data(this, namespace);
            if (data2.handler) {
              data2.evt = evt;
              data2.handler(data2);
            }
          });
          const CHECKBOX_CLASS_NAME = ".w-checkbox-input";
          const RADIO_INPUT_CLASS_NAME = ".w-radio-input";
          const CHECKED_CLASS = "w--redirected-checked";
          const FOCUSED_CLASS = "w--redirected-focus";
          const FOCUSED_VISIBLE_CLASS = "w--redirected-focus-visible";
          const focusVisibleSelectors = ":focus-visible, [data-wf-focus-visible]";
          const CUSTOM_CONTROLS = [["checkbox", CHECKBOX_CLASS_NAME], ["radio", RADIO_INPUT_CLASS_NAME]];
          $doc.on("change", namespace + ` form input[type="checkbox"]:not(` + CHECKBOX_CLASS_NAME + ")", (evt) => {
            $2(evt.target).siblings(CHECKBOX_CLASS_NAME).toggleClass(CHECKED_CLASS);
          });
          $doc.on("change", namespace + ` form input[type="radio"]`, (evt) => {
            $2(`input[name="${evt.target.name}"]:not(${CHECKBOX_CLASS_NAME})`).map((i, el) => $2(el).siblings(RADIO_INPUT_CLASS_NAME).removeClass(CHECKED_CLASS));
            const $target = $2(evt.target);
            if (!$target.hasClass("w-radio-input")) {
              $target.siblings(RADIO_INPUT_CLASS_NAME).addClass(CHECKED_CLASS);
            }
          });
          CUSTOM_CONTROLS.forEach(([controlType, customControlClassName]) => {
            $doc.on("focus", namespace + ` form input[type="${controlType}"]:not(` + customControlClassName + ")", (evt) => {
              $2(evt.target).siblings(customControlClassName).addClass(FOCUSED_CLASS);
              $2(evt.target).filter(focusVisibleSelectors).siblings(customControlClassName).addClass(FOCUSED_VISIBLE_CLASS);
            });
            $doc.on("blur", namespace + ` form input[type="${controlType}"]:not(` + customControlClassName + ")", (evt) => {
              $2(evt.target).siblings(customControlClassName).removeClass(`${FOCUSED_CLASS} ${FOCUSED_VISIBLE_CLASS}`);
            });
          });
        }
        function reset(data2) {
          var btn = data2.btn = data2.form.find(':input[type="submit"]');
          data2.wait = data2.btn.attr("data-wait") || null;
          data2.success = false;
          btn.prop("disabled", false);
          data2.label && btn.val(data2.label);
        }
        function disableBtn(data2) {
          var btn = data2.btn;
          var wait = data2.wait;
          btn.prop("disabled", true);
          if (wait) {
            data2.label = btn.val();
            btn.val(wait);
          }
        }
        function findFields(form, result2) {
          var status = null;
          result2 = result2 || {};
          form.find(':input:not([type="submit"]):not([type="file"])').each(function(i, el) {
            var field = $2(el);
            var type = field.attr("type");
            var name2 = field.attr("data-name") || field.attr("name") || "Field " + (i + 1);
            name2 = encodeURIComponent(name2);
            var value2 = field.val();
            if (type === "checkbox") {
              value2 = field.is(":checked");
            } else if (type === "radio") {
              if (result2[name2] === null || typeof result2[name2] === "string") {
                return;
              }
              value2 = form.find('input[name="' + field.attr("name") + '"]:checked').val() || null;
            }
            if (typeof value2 === "string") {
              value2 = $2.trim(value2);
            }
            result2[name2] = value2;
            status = status || getStatus(field, type, name2, value2);
          });
          return status;
        }
        function findFileUploads(form) {
          var result2 = {};
          form.find(':input[type="file"]').each(function(i, el) {
            var field = $2(el);
            var name2 = field.attr("data-name") || field.attr("name") || "File " + (i + 1);
            var value2 = field.attr("data-value");
            if (typeof value2 === "string") {
              value2 = $2.trim(value2);
            }
            result2[name2] = value2;
          });
          return result2;
        }
        const trackingCookieNameMap = {
          _mkto_trk: "marketo"
          // __hstc: 'hubspot',
        };
        function collectEnterpriseTrackingCookies() {
          const cookies = document.cookie.split("; ").reduce(function(acc, cookie) {
            const splitCookie = cookie.split("=");
            const name2 = splitCookie[0];
            if (name2 in trackingCookieNameMap) {
              const mappedName = trackingCookieNameMap[name2];
              const value2 = splitCookie.slice(1).join("=");
              acc[mappedName] = value2;
            }
            return acc;
          }, {});
          return cookies;
        }
        function getStatus(field, type, name2, value2) {
          var status = null;
          if (type === "password") {
            status = "Passwords cannot be submitted.";
          } else if (field.attr("required")) {
            if (!value2) {
              status = "Please fill out the required field: " + name2;
            } else if (emailField.test(field.attr("type"))) {
              if (!emailValue.test(value2)) {
                status = "Please enter a valid email address for: " + name2;
              }
            }
          } else if (name2 === "g-recaptcha-response" && !value2) {
            status = "Please confirm you\u2019re not a robot.";
          }
          return status;
        }
        function exportedSubmitWebflow(data2) {
          preventDefault(data2);
          afterSubmit(data2);
        }
        function submitMailChimp(data2) {
          reset(data2);
          var form = data2.form;
          var payload = {};
          if (/^https/.test(loc.href) && !/^https/.test(data2.action)) {
            form.attr("method", "post");
            return;
          }
          preventDefault(data2);
          var status = findFields(form, payload);
          if (status) {
            return alert(status);
          }
          disableBtn(data2);
          var fullName;
          _.each(payload, function(value2, key2) {
            if (emailField.test(key2)) {
              payload.EMAIL = value2;
            }
            if (/^((full[ _-]?)?name)$/i.test(key2)) {
              fullName = value2;
            }
            if (/^(first[ _-]?name)$/i.test(key2)) {
              payload.FNAME = value2;
            }
            if (/^(last[ _-]?name)$/i.test(key2)) {
              payload.LNAME = value2;
            }
          });
          if (fullName && !payload.FNAME) {
            fullName = fullName.split(" ");
            payload.FNAME = fullName[0];
            payload.LNAME = payload.LNAME || fullName[1];
          }
          var url = data2.action.replace("/post?", "/post-json?") + "&c=?";
          var userId = url.indexOf("u=") + 2;
          userId = url.substring(userId, url.indexOf("&", userId));
          var listId = url.indexOf("id=") + 3;
          listId = url.substring(listId, url.indexOf("&", listId));
          payload["b_" + userId + "_" + listId] = "";
          $2.ajax({
            url,
            data: payload,
            dataType: "jsonp"
          }).done(function(resp) {
            data2.success = resp.result === "success" || /already/.test(resp.msg);
            if (!data2.success) {
              console.info("MailChimp error: " + resp.msg);
            }
            afterSubmit(data2);
          }).fail(function() {
            afterSubmit(data2);
          });
        }
        function afterSubmit(data2) {
          var form = data2.form;
          var redirect = data2.redirect;
          var success = data2.success;
          if (success && redirect) {
            Webflow.location(redirect);
            return;
          }
          data2.done.toggle(success);
          data2.fail.toggle(!success);
          if (success) {
            data2.done.focus();
          } else {
            data2.fail.focus();
          }
          form.toggle(!success);
          reset(data2);
        }
        function preventDefault(data2) {
          data2.evt && data2.evt.preventDefault();
          data2.evt = null;
        }
        function initFileUpload(i, form) {
          if (!form.fileUploads || !form.fileUploads[i]) {
            return;
          }
          var file;
          var $el = $2(form.fileUploads[i]);
          var $defaultWrap = $el.find("> .w-file-upload-default");
          var $uploadingWrap = $el.find("> .w-file-upload-uploading");
          var $successWrap = $el.find("> .w-file-upload-success");
          var $errorWrap = $el.find("> .w-file-upload-error");
          var $input = $defaultWrap.find(".w-file-upload-input");
          var $label = $defaultWrap.find(".w-file-upload-label");
          var $labelChildren = $label.children();
          var $errorMsgEl = $errorWrap.find(".w-file-upload-error-msg");
          var $fileEl = $successWrap.find(".w-file-upload-file");
          var $removeEl = $successWrap.find(".w-file-remove-link");
          var $fileNameEl = $fileEl.find(".w-file-upload-file-name");
          var sizeErrMsg = $errorMsgEl.attr("data-w-size-error");
          var typeErrMsg = $errorMsgEl.attr("data-w-type-error");
          var genericErrMsg = $errorMsgEl.attr("data-w-generic-error");
          if (!inApp) {
            $label.on("click keydown", function(e) {
              if (e.type === "keydown" && e.which !== 13 && e.which !== 32) {
                return;
              }
              e.preventDefault();
              $input.click();
            });
          }
          $label.find(".w-icon-file-upload-icon").attr("aria-hidden", "true");
          $removeEl.find(".w-icon-file-upload-remove").attr("aria-hidden", "true");
          if (!inApp) {
            $removeEl.on("click keydown", function(e) {
              if (e.type === "keydown") {
                if (e.which !== 13 && e.which !== 32) {
                  return;
                }
                e.preventDefault();
              }
              $input.removeAttr("data-value");
              $input.val("");
              $fileNameEl.html("");
              $defaultWrap.toggle(true);
              $successWrap.toggle(false);
              $label.focus();
            });
            $input.on("change", function(e) {
              file = e.target && e.target.files && e.target.files[0];
              if (!file) {
                return;
              }
              $defaultWrap.toggle(false);
              $errorWrap.toggle(false);
              $uploadingWrap.toggle(true);
              $uploadingWrap.focus();
              $fileNameEl.text(file.name);
              if (!isUploading()) {
                disableBtn(form);
              }
              form.fileUploads[i].uploading = true;
              signFile(file, afterSign);
            });
            var height2 = $label.outerHeight();
            $input.height(height2);
            $input.width(1);
          } else {
            $input.on("click", function(e) {
              e.preventDefault();
            });
            $label.on("click", function(e) {
              e.preventDefault();
            });
            $labelChildren.on("click", function(e) {
              e.preventDefault();
            });
          }
          function parseError(err) {
            var errorMsg = err.responseJSON && err.responseJSON.msg;
            var userError = genericErrMsg;
            if (typeof errorMsg === "string" && errorMsg.indexOf("InvalidFileTypeError") === 0) {
              userError = typeErrMsg;
            } else if (typeof errorMsg === "string" && errorMsg.indexOf("MaxFileSizeError") === 0) {
              userError = sizeErrMsg;
            }
            $errorMsgEl.text(userError);
            $input.removeAttr("data-value");
            $input.val("");
            $uploadingWrap.toggle(false);
            $defaultWrap.toggle(true);
            $errorWrap.toggle(true);
            $errorWrap.focus();
            form.fileUploads[i].uploading = false;
            if (!isUploading()) {
              reset(form);
            }
          }
          function afterSign(err, data2) {
            if (err) {
              return parseError(err);
            }
            var fileName = data2.fileName;
            var postData = data2.postData;
            var fileId = data2.fileId;
            var s3Url = data2.s3Url;
            $input.attr("data-value", fileId);
            uploadS3(s3Url, postData, file, fileName, afterUpload);
          }
          function afterUpload(err) {
            if (err) {
              return parseError(err);
            }
            $uploadingWrap.toggle(false);
            $successWrap.css("display", "inline-block");
            $successWrap.focus();
            form.fileUploads[i].uploading = false;
            if (!isUploading()) {
              reset(form);
            }
          }
          function isUploading() {
            var uploads = form.fileUploads && form.fileUploads.toArray() || [];
            return uploads.some(function(value2) {
              return value2.uploading;
            });
          }
        }
        function signFile(file, cb) {
          var payload = new URLSearchParams({
            name: file.name,
            size: file.size
          });
          $2.ajax({
            type: "GET",
            url: `${signFileUrl}?${payload}`,
            crossDomain: true
          }).done(function(data2) {
            cb(null, data2);
          }).fail(function(err) {
            cb(err);
          });
        }
        function uploadS3(url, data2, file, fileName, cb) {
          var formData = new FormData();
          for (var k in data2) {
            formData.append(k, data2[k]);
          }
          formData.append("file", file, fileName);
          $2.ajax({
            type: "POST",
            url,
            data: formData,
            processData: false,
            contentType: false
          }).done(function() {
            cb(null);
          }).fail(function(err) {
            cb(err);
          });
        }
        return api;
      });
    }
  });

  // packages/shared/render/plugins/Lightbox/webflow-lightbox.js
  var require_webflow_lightbox = __commonJS({
    "packages/shared/render/plugins/Lightbox/webflow-lightbox.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      var CONDITION_INVISIBLE_CLASS2 = "w-condition-invisible";
      var CONDVIS_SELECTOR = "." + CONDITION_INVISIBLE_CLASS2;
      function withoutConditionallyHidden(items) {
        return items.filter(function(item) {
          return !isConditionallyHidden(item);
        });
      }
      function isConditionallyHidden(item) {
        return Boolean(item.$el && item.$el.closest(CONDVIS_SELECTOR).length);
      }
      function getPreviousVisibleIndex(start, items) {
        for (var i = start; i >= 0; i--) {
          if (!isConditionallyHidden(items[i])) {
            return i;
          }
        }
        return -1;
      }
      function getNextVisibleIndex(start, items) {
        for (var i = start; i <= items.length - 1; i++) {
          if (!isConditionallyHidden(items[i])) {
            return i;
          }
        }
        return -1;
      }
      function shouldSetArrowLeftInactive(currentIndex, items) {
        return getPreviousVisibleIndex(currentIndex - 1, items) === -1;
      }
      function shouldSetArrowRightInactive(currentIndex, items) {
        return getNextVisibleIndex(currentIndex + 1, items) === -1;
      }
      function setAriaLabelIfEmpty($element, labelText) {
        if (!$element.attr("aria-label")) {
          $element.attr("aria-label", labelText);
        }
      }
      function createLightbox(window2, document2, $2, container) {
        var tram = $2.tram;
        var isArray2 = Array.isArray;
        var namespace = "w-lightbox";
        var prefix = namespace + "-";
        var prefixRegex = /(^|\s+)/g;
        var items = [];
        var currentIndex;
        var $refs;
        var spinner;
        var resetVisibilityState = [];
        function lightbox(thing, index2) {
          items = isArray2(thing) ? thing : [thing];
          if (!$refs) {
            lightbox.build();
          }
          if (withoutConditionallyHidden(items).length > 1) {
            $refs.items = $refs.empty;
            items.forEach(function(item, idx) {
              var $thumbnail = dom("thumbnail");
              var $item = dom("item").prop("tabIndex", 0).attr("aria-controls", "w-lightbox-view").attr("role", "tab").append($thumbnail);
              setAriaLabelIfEmpty($item, `show item ${idx + 1} of ${items.length}`);
              if (isConditionallyHidden(item)) {
                $item.addClass(CONDITION_INVISIBLE_CLASS2);
              }
              $refs.items = $refs.items.add($item);
              loadImage(item.thumbnailUrl || item.url, function($image) {
                if ($image.prop("width") > $image.prop("height")) {
                  addClass($image, "wide");
                } else {
                  addClass($image, "tall");
                }
                $thumbnail.append(addClass($image, "thumbnail-image"));
              });
            });
            $refs.strip.empty().append($refs.items);
            addClass($refs.content, "group");
          }
          tram(
            // Focus the lightbox to receive keyboard events.
            removeClass3($refs.lightbox, "hide").trigger("focus")
          ).add("opacity .3s").start({
            opacity: 1
          });
          addClass($refs.html, "noscroll");
          return lightbox.show(index2 || 0);
        }
        lightbox.build = function() {
          lightbox.destroy();
          $refs = {
            html: $2(document2.documentElement),
            // Empty jQuery object can be used to build new ones using `.add`.
            empty: $2()
          };
          $refs.arrowLeft = dom("control left inactive").attr("role", "button").attr("aria-hidden", true).attr("aria-controls", "w-lightbox-view");
          $refs.arrowRight = dom("control right inactive").attr("role", "button").attr("aria-hidden", true).attr("aria-controls", "w-lightbox-view");
          $refs.close = dom("control close").attr("role", "button");
          setAriaLabelIfEmpty($refs.arrowLeft, "previous image");
          setAriaLabelIfEmpty($refs.arrowRight, "next image");
          setAriaLabelIfEmpty($refs.close, "close lightbox");
          $refs.spinner = dom("spinner").attr("role", "progressbar").attr("aria-live", "polite").attr("aria-hidden", false).attr("aria-busy", true).attr("aria-valuemin", 0).attr("aria-valuemax", 100).attr("aria-valuenow", 0).attr("aria-valuetext", "Loading image");
          $refs.strip = dom("strip").attr("role", "tablist");
          spinner = new Spinner($refs.spinner, prefixed("hide"));
          $refs.content = dom("content").append($refs.spinner, $refs.arrowLeft, $refs.arrowRight, $refs.close);
          $refs.container = dom("container").append($refs.content, $refs.strip);
          $refs.lightbox = dom("backdrop hide").append($refs.container);
          $refs.strip.on("click", selector("item"), itemTapHandler);
          $refs.content.on("swipe", swipeHandler).on("click", selector("left"), handlerPrev).on("click", selector("right"), handlerNext).on("click", selector("close"), handlerHide).on("click", selector("image, caption"), handlerNext);
          $refs.container.on("click", selector("view"), handlerHide).on("dragstart", selector("img"), preventDefault);
          $refs.lightbox.on("keydown", keyHandler).on("focusin", focusThis);
          $2(container).append($refs.lightbox);
          return lightbox;
        };
        lightbox.destroy = function() {
          if (!$refs) {
            return;
          }
          removeClass3($refs.html, "noscroll");
          $refs.lightbox.remove();
          $refs = void 0;
        };
        lightbox.show = function(index2) {
          if (index2 === currentIndex) {
            return;
          }
          var item = items[index2];
          if (!item) {
            return lightbox.hide();
          }
          if (isConditionallyHidden(item)) {
            if (index2 < currentIndex) {
              var previousVisibleIndex = getPreviousVisibleIndex(index2 - 1, items);
              index2 = previousVisibleIndex > -1 ? previousVisibleIndex : index2;
            } else {
              var nextVisibleIndex = getNextVisibleIndex(index2 + 1, items);
              index2 = nextVisibleIndex > -1 ? nextVisibleIndex : index2;
            }
            item = items[index2];
          }
          var previousIndex = currentIndex;
          currentIndex = index2;
          $refs.spinner.attr("aria-hidden", false).attr("aria-busy", true).attr("aria-valuenow", 0).attr("aria-valuetext", "Loading image");
          spinner.show();
          var url = item.html && svgDataUri(item.width, item.height) || item.url;
          loadImage(url, function($image) {
            if (index2 !== currentIndex) {
              return;
            }
            var $figure = dom("figure", "figure").append(addClass($image, "image"));
            var $frame = dom("frame").append($figure);
            var $newView = dom("view").prop("tabIndex", 0).attr("id", "w-lightbox-view").append($frame);
            var $html;
            var isIframe;
            if (item.html) {
              $html = $2(item.html);
              isIframe = $html.is("iframe");
              if (isIframe) {
                $html.on("load", transitionToNewView);
              }
              $figure.append(addClass($html, "embed"));
            }
            if (item.caption) {
              $figure.append(dom("caption", "figcaption").text(item.caption));
            }
            $refs.spinner.before($newView);
            if (!isIframe) {
              transitionToNewView();
            }
            function transitionToNewView() {
              $refs.spinner.attr("aria-hidden", true).attr("aria-busy", false).attr("aria-valuenow", 100).attr("aria-valuetext", "Loaded image");
              spinner.hide();
              if (index2 !== currentIndex) {
                $newView.remove();
                return;
              }
              const shouldHideLeftArrow = shouldSetArrowLeftInactive(index2, items);
              toggleClass($refs.arrowLeft, "inactive", shouldHideLeftArrow);
              toggleHidden($refs.arrowLeft, shouldHideLeftArrow);
              if (shouldHideLeftArrow && $refs.arrowLeft.is(":focus")) {
                $refs.arrowRight.focus();
              }
              const shouldHideRightArrow = shouldSetArrowRightInactive(index2, items);
              toggleClass($refs.arrowRight, "inactive", shouldHideRightArrow);
              toggleHidden($refs.arrowRight, shouldHideRightArrow);
              if (shouldHideRightArrow && $refs.arrowRight.is(":focus")) {
                $refs.arrowLeft.focus();
              }
              if ($refs.view) {
                tram($refs.view).add("opacity .3s").start({
                  opacity: 0
                }).then(remover($refs.view));
                tram($newView).add("opacity .3s").add("transform .3s").set({
                  x: index2 > previousIndex ? "80px" : "-80px"
                }).start({
                  opacity: 1,
                  x: 0
                });
              } else {
                $newView.css("opacity", 1);
              }
              $refs.view = $newView;
              $refs.view.prop("tabIndex", 0);
              if ($refs.items) {
                removeClass3($refs.items, "active");
                $refs.items.removeAttr("aria-selected");
                var $activeThumb = $refs.items.eq(index2);
                addClass($activeThumb, "active");
                $activeThumb.attr("aria-selected", true);
                maybeScroll($activeThumb);
              }
            }
          });
          $refs.close.prop("tabIndex", 0);
          $2(":focus").addClass("active-lightbox");
          if (resetVisibilityState.length === 0) {
            $2("body").children().each(function() {
              if ($2(this).hasClass("w-lightbox-backdrop") || $2(this).is("script")) {
                return;
              }
              resetVisibilityState.push({
                node: $2(this),
                hidden: $2(this).attr("aria-hidden"),
                tabIndex: $2(this).attr("tabIndex")
              });
              $2(this).attr("aria-hidden", true).attr("tabIndex", -1);
            });
            $refs.close.focus();
          }
          return lightbox;
        };
        lightbox.hide = function() {
          tram($refs.lightbox).add("opacity .3s").start({
            opacity: 0
          }).then(hideLightbox);
          return lightbox;
        };
        lightbox.prev = function() {
          var previousVisibleIndex = getPreviousVisibleIndex(currentIndex - 1, items);
          if (previousVisibleIndex > -1) {
            lightbox.show(previousVisibleIndex);
          }
        };
        lightbox.next = function() {
          var nextVisibleIndex = getNextVisibleIndex(currentIndex + 1, items);
          if (nextVisibleIndex > -1) {
            lightbox.show(nextVisibleIndex);
          }
        };
        function createHandler(action) {
          return function(event) {
            if (this !== event.target) {
              return;
            }
            event.stopPropagation();
            event.preventDefault();
            action();
          };
        }
        var handlerPrev = createHandler(lightbox.prev);
        var handlerNext = createHandler(lightbox.next);
        var handlerHide = createHandler(lightbox.hide);
        var itemTapHandler = function(event) {
          var index2 = $2(this).index();
          event.preventDefault();
          lightbox.show(index2);
        };
        var swipeHandler = function(event, data2) {
          event.preventDefault();
          if (data2.direction === "left") {
            lightbox.next();
          } else if (data2.direction === "right") {
            lightbox.prev();
          }
        };
        var focusThis = function() {
          this.focus();
        };
        function preventDefault(event) {
          event.preventDefault();
        }
        function keyHandler(event) {
          var keyCode = event.keyCode;
          if (keyCode === 27 || checkForFocusTrigger(keyCode, "close")) {
            lightbox.hide();
          } else if (keyCode === 37 || checkForFocusTrigger(keyCode, "left")) {
            lightbox.prev();
          } else if (keyCode === 39 || checkForFocusTrigger(keyCode, "right")) {
            lightbox.next();
          } else if (checkForFocusTrigger(keyCode, "item")) {
            $2(":focus").click();
          }
        }
        function checkForFocusTrigger(keyCode, classMatch) {
          if (keyCode !== 13 && keyCode !== 32) {
            return false;
          }
          var currentElementClasses = $2(":focus").attr("class");
          var classToFind = prefixed(classMatch).trim();
          return currentElementClasses.includes(classToFind);
        }
        function hideLightbox() {
          if ($refs) {
            $refs.strip.scrollLeft(0).empty();
            removeClass3($refs.html, "noscroll");
            addClass($refs.lightbox, "hide");
            $refs.view && $refs.view.remove();
            removeClass3($refs.content, "group");
            addClass($refs.arrowLeft, "inactive");
            addClass($refs.arrowRight, "inactive");
            currentIndex = $refs.view = void 0;
            resetVisibilityState.forEach(function(visibilityState) {
              var node = visibilityState.node;
              if (!node) {
                return;
              }
              if (visibilityState.hidden) {
                node.attr("aria-hidden", visibilityState.hidden);
              } else {
                node.removeAttr("aria-hidden");
              }
              if (visibilityState.tabIndex) {
                node.attr("tabIndex", visibilityState.tabIndex);
              } else {
                node.removeAttr("tabIndex");
              }
            });
            resetVisibilityState = [];
            $2(".active-lightbox").removeClass("active-lightbox").focus();
          }
        }
        function loadImage(url, callback) {
          var $image = dom("img", "img");
          $image.one("load", function() {
            callback($image);
          });
          $image.attr("src", url);
          return $image;
        }
        function remover($element) {
          return function() {
            $element.remove();
          };
        }
        function maybeScroll($item) {
          var itemElement = $item.get(0);
          var stripElement = $refs.strip.get(0);
          var itemLeft = itemElement.offsetLeft;
          var itemWidth = itemElement.clientWidth;
          var stripScrollLeft = stripElement.scrollLeft;
          var stripWidth = stripElement.clientWidth;
          var stripScrollLeftMax = stripElement.scrollWidth - stripWidth;
          var newScrollLeft;
          if (itemLeft < stripScrollLeft) {
            newScrollLeft = Math.max(0, itemLeft + itemWidth - stripWidth);
          } else if (itemLeft + itemWidth > stripWidth + stripScrollLeft) {
            newScrollLeft = Math.min(itemLeft, stripScrollLeftMax);
          }
          if (newScrollLeft != null) {
            tram($refs.strip).add("scroll-left 500ms").start({
              "scroll-left": newScrollLeft
            });
          }
        }
        function Spinner($spinner, className, delay) {
          this.$element = $spinner;
          this.className = className;
          this.delay = delay || 200;
          this.hide();
        }
        Spinner.prototype.show = function() {
          var spinner2 = this;
          if (spinner2.timeoutId) {
            return;
          }
          spinner2.timeoutId = setTimeout(function() {
            spinner2.$element.removeClass(spinner2.className);
            delete spinner2.timeoutId;
          }, spinner2.delay);
        };
        Spinner.prototype.hide = function() {
          var spinner2 = this;
          if (spinner2.timeoutId) {
            clearTimeout(spinner2.timeoutId);
            delete spinner2.timeoutId;
            return;
          }
          spinner2.$element.addClass(spinner2.className);
        };
        function prefixed(string, isSelector) {
          return string.replace(prefixRegex, (isSelector ? " ." : " ") + prefix);
        }
        function selector(string) {
          return prefixed(string, true);
        }
        function addClass($element, className) {
          return $element.addClass(prefixed(className));
        }
        function removeClass3($element, className) {
          return $element.removeClass(prefixed(className));
        }
        function toggleClass($element, className, shouldAdd) {
          return $element.toggleClass(prefixed(className), shouldAdd);
        }
        function toggleHidden($element, isHidden) {
          return $element.attr("aria-hidden", isHidden).attr("tabIndex", isHidden ? -1 : 0);
        }
        function dom(className, tag) {
          return addClass($2(document2.createElement(tag || "div")), className);
        }
        function svgDataUri(width2, height2) {
          var svg = '<svg xmlns="http://www.w3.org/2000/svg" width="' + width2 + '" height="' + height2 + '"/>';
          return "data:image/svg+xml;charset=utf-8," + encodeURI(svg);
        }
        (function() {
          var ua2 = window2.navigator.userAgent;
          var iOSRegex = /(iPhone|iPad|iPod);[^OS]*OS (\d)/;
          var iOSMatches = ua2.match(iOSRegex);
          var android = ua2.indexOf("Android ") > -1 && ua2.indexOf("Chrome") === -1;
          if (!android && (!iOSMatches || iOSMatches[2] > 7)) {
            return;
          }
          var styleNode = document2.createElement("style");
          document2.head.appendChild(styleNode);
          window2.addEventListener("resize", refresh, true);
          function refresh() {
            var vh = window2.innerHeight;
            var vw = window2.innerWidth;
            var content2 = ".w-lightbox-content, .w-lightbox-view, .w-lightbox-view:before {height:" + vh + "px}.w-lightbox-view {width:" + vw + "px}.w-lightbox-group, .w-lightbox-group .w-lightbox-view, .w-lightbox-group .w-lightbox-view:before {height:" + 0.86 * vh + "px}.w-lightbox-image {max-width:" + vw + "px;max-height:" + vh + "px}.w-lightbox-group .w-lightbox-image {max-height:" + 0.86 * vh + "px}.w-lightbox-strip {padding: 0 " + 0.01 * vh + "px}.w-lightbox-item {width:" + 0.1 * vh + "px;padding:" + 0.02 * vh + "px " + 0.01 * vh + "px}.w-lightbox-thumbnail {height:" + 0.1 * vh + "px}@media (min-width: 768px) {.w-lightbox-content, .w-lightbox-view, .w-lightbox-view:before {height:" + 0.96 * vh + "px}.w-lightbox-content {margin-top:" + 0.02 * vh + "px}.w-lightbox-group, .w-lightbox-group .w-lightbox-view, .w-lightbox-group .w-lightbox-view:before {height:" + 0.84 * vh + "px}.w-lightbox-image {max-width:" + 0.96 * vw + "px;max-height:" + 0.96 * vh + "px}.w-lightbox-group .w-lightbox-image {max-width:" + 0.823 * vw + "px;max-height:" + 0.84 * vh + "px}}";
            styleNode.textContent = content2;
          }
          refresh();
        })();
        return lightbox;
      }
      Webflow.define("lightbox", module2.exports = function($2) {
        var api = {};
        var inApp = Webflow.env();
        var lightbox = createLightbox(window, document, $2, inApp ? "#lightbox-mountpoint" : "body");
        var $doc = $2(document);
        var $lightboxes;
        var designer;
        var namespace = ".w-lightbox";
        var groups;
        api.ready = api.design = api.preview = init3;
        function init3() {
          designer = inApp && Webflow.env("design");
          lightbox.destroy();
          groups = {};
          $lightboxes = $doc.find(namespace);
          $lightboxes.webflowLightBox();
          $lightboxes.each(function() {
            setAriaLabelIfEmpty($2(this), "open lightbox");
            $2(this).attr("aria-haspopup", "dialog");
          });
        }
        jQuery.fn.extend({
          webflowLightBox: function() {
            var $el = this;
            $2.each($el, function(i, el) {
              var data2 = $2.data(el, namespace);
              if (!data2) {
                data2 = $2.data(el, namespace, {
                  el: $2(el),
                  mode: "images",
                  images: [],
                  embed: ""
                });
              }
              data2.el.off(namespace);
              configure(data2);
              if (designer) {
                data2.el.on("setting" + namespace, configure.bind(null, data2));
              } else {
                data2.el.on("click" + namespace, clickHandler(data2)).on("click" + namespace, function(e) {
                  e.preventDefault();
                });
              }
            });
          }
        });
        function configure(data2) {
          var json = data2.el.children(".w-json").html();
          var groupName;
          var groupItems;
          if (!json) {
            data2.items = [];
            return;
          }
          try {
            json = JSON.parse(json);
          } catch (e) {
            console.error("Malformed lightbox JSON configuration.", e);
          }
          supportOldLightboxJson(json);
          json.items.forEach(function(item) {
            item.$el = data2.el;
          });
          groupName = json.group;
          if (groupName) {
            groupItems = groups[groupName];
            if (!groupItems) {
              groupItems = groups[groupName] = [];
            }
            data2.items = groupItems;
            if (json.items.length) {
              data2.index = groupItems.length;
              groupItems.push.apply(groupItems, json.items);
            }
          } else {
            data2.items = json.items;
            data2.index = 0;
          }
        }
        function clickHandler(data2) {
          return function() {
            data2.items.length && lightbox(data2.items, data2.index || 0);
          };
        }
        function supportOldLightboxJson(data2) {
          if (data2.images) {
            data2.images.forEach(function(item) {
              item.type = "image";
            });
            data2.items = data2.images;
          }
          if (data2.embed) {
            data2.embed.type = "video";
            data2.items = [data2.embed];
          }
          if (data2.groupId) {
            data2.group = data2.groupId;
          }
        }
        return api;
      });
    }
  });

  // packages/shared/render/plugins/Navbar/webflow-navbar.js
  var require_webflow_navbar = __commonJS({
    "packages/shared/render/plugins/Navbar/webflow-navbar.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      var IXEvents = require_webflow_ix2_events();
      var KEY_CODES2 = {
        ARROW_LEFT: 37,
        ARROW_UP: 38,
        ARROW_RIGHT: 39,
        ARROW_DOWN: 40,
        ESCAPE: 27,
        SPACE: 32,
        ENTER: 13,
        HOME: 36,
        END: 35
      };
      Webflow.define("navbar", module2.exports = function($2, _) {
        var api = {};
        var tram = $2.tram;
        var $win = $2(window);
        var $doc = $2(document);
        var debounce2 = _.debounce;
        var $body;
        var $navbars;
        var designer;
        var inEditor;
        var inApp = Webflow.env();
        var overlay = '<div class="w-nav-overlay" data-wf-ignore />';
        var namespace = ".w-nav";
        var navbarOpenedButton = "w--open";
        var navbarOpenedDropdown = "w--nav-dropdown-open";
        var navbarOpenedDropdownToggle = "w--nav-dropdown-toggle-open";
        var navbarOpenedDropdownList = "w--nav-dropdown-list-open";
        var navbarOpenedLink = "w--nav-link-open";
        var ix = IXEvents.triggers;
        var menuSibling = $2();
        api.ready = api.design = api.preview = init3;
        api.destroy = function() {
          menuSibling = $2();
          removeListeners();
          if ($navbars && $navbars.length) {
            $navbars.each(teardown);
          }
        };
        function init3() {
          designer = inApp && Webflow.env("design");
          inEditor = Webflow.env("editor");
          $body = $2(document.body);
          $navbars = $doc.find(namespace);
          if (!$navbars.length) {
            return;
          }
          $navbars.each(build);
          removeListeners();
          addListeners();
        }
        function removeListeners() {
          Webflow.resize.off(resizeAll);
        }
        function addListeners() {
          Webflow.resize.on(resizeAll);
        }
        function resizeAll() {
          $navbars.each(resize);
        }
        function build(i, el) {
          var $el = $2(el);
          var data2 = $2.data(el, namespace);
          if (!data2) {
            data2 = $2.data(el, namespace, {
              open: false,
              el: $el,
              config: {},
              selectedIdx: -1
            });
          }
          data2.menu = $el.find(".w-nav-menu");
          data2.links = data2.menu.find(".w-nav-link");
          data2.dropdowns = data2.menu.find(".w-dropdown");
          data2.dropdownToggle = data2.menu.find(".w-dropdown-toggle");
          data2.dropdownList = data2.menu.find(".w-dropdown-list");
          data2.button = $el.find(".w-nav-button");
          data2.container = $el.find(".w-container");
          data2.overlayContainerId = "w-nav-overlay-" + i;
          data2.outside = outside(data2);
          var navBrandLink = $el.find(".w-nav-brand");
          if (navBrandLink && navBrandLink.attr("href") === "/" && navBrandLink.attr("aria-label") == null) {
            navBrandLink.attr("aria-label", "home");
          }
          data2.button.attr("style", "-webkit-user-select: text;");
          if (data2.button.attr("aria-label") == null) {
            data2.button.attr("aria-label", "menu");
          }
          data2.button.attr("role", "button");
          data2.button.attr("tabindex", "0");
          data2.button.attr("aria-controls", data2.overlayContainerId);
          data2.button.attr("aria-haspopup", "menu");
          data2.button.attr("aria-expanded", "false");
          data2.el.off(namespace);
          data2.button.off(namespace);
          data2.menu.off(namespace);
          configure(data2);
          if (designer) {
            removeOverlay(data2);
            data2.el.on("setting" + namespace, handler(data2));
          } else {
            addOverlay(data2);
            data2.button.on("click" + namespace, toggle(data2));
            data2.menu.on("click" + namespace, "a", navigate(data2));
            data2.button.on("keydown" + namespace, makeToggleButtonKeyboardHandler(data2));
            data2.el.on("keydown" + namespace, makeLinksKeyboardHandler(data2));
          }
          resize(i, el);
        }
        function teardown(i, el) {
          var data2 = $2.data(el, namespace);
          if (data2) {
            removeOverlay(data2);
            $2.removeData(el, namespace);
          }
        }
        function removeOverlay(data2) {
          if (!data2.overlay) {
            return;
          }
          close(data2, true);
          data2.overlay.remove();
          data2.overlay = null;
        }
        function addOverlay(data2) {
          if (data2.overlay) {
            return;
          }
          data2.overlay = $2(overlay).appendTo(data2.el);
          data2.overlay.attr("id", data2.overlayContainerId);
          data2.parent = data2.menu.parent();
          close(data2, true);
        }
        function configure(data2) {
          var config = {};
          var old = data2.config || {};
          var animation = config.animation = data2.el.attr("data-animation") || "default";
          config.animOver = /^over/.test(animation);
          config.animDirect = /left$/.test(animation) ? -1 : 1;
          if (old.animation !== animation) {
            data2.open && _.defer(reopen, data2);
          }
          config.easing = data2.el.attr("data-easing") || "ease";
          config.easing2 = data2.el.attr("data-easing2") || "ease";
          var duration = data2.el.attr("data-duration");
          config.duration = duration != null ? Number(duration) : 400;
          config.docHeight = data2.el.attr("data-doc-height");
          data2.config = config;
        }
        function handler(data2) {
          return function(evt, options) {
            options = options || {};
            var winWidth = $win.width();
            configure(data2);
            options.open === true && open(data2, true);
            options.open === false && close(data2, true);
            data2.open && _.defer(function() {
              if (winWidth !== $win.width()) {
                reopen(data2);
              }
            });
          };
        }
        function makeToggleButtonKeyboardHandler(data2) {
          return function(evt) {
            switch (evt.keyCode) {
              case KEY_CODES2.SPACE:
              case KEY_CODES2.ENTER: {
                toggle(data2)();
                evt.preventDefault();
                return evt.stopPropagation();
              }
              case KEY_CODES2.ESCAPE: {
                close(data2);
                evt.preventDefault();
                return evt.stopPropagation();
              }
              case KEY_CODES2.ARROW_RIGHT:
              case KEY_CODES2.ARROW_DOWN:
              case KEY_CODES2.HOME:
              case KEY_CODES2.END: {
                if (!data2.open) {
                  evt.preventDefault();
                  return evt.stopPropagation();
                }
                if (evt.keyCode === KEY_CODES2.END) {
                  data2.selectedIdx = data2.links.length - 1;
                } else {
                  data2.selectedIdx = 0;
                }
                focusSelectedLink(data2);
                evt.preventDefault();
                return evt.stopPropagation();
              }
            }
          };
        }
        function makeLinksKeyboardHandler(data2) {
          return function(evt) {
            if (!data2.open) {
              return;
            }
            data2.selectedIdx = data2.links.index(document.activeElement);
            switch (evt.keyCode) {
              case KEY_CODES2.HOME:
              case KEY_CODES2.END: {
                if (evt.keyCode === KEY_CODES2.END) {
                  data2.selectedIdx = data2.links.length - 1;
                } else {
                  data2.selectedIdx = 0;
                }
                focusSelectedLink(data2);
                evt.preventDefault();
                return evt.stopPropagation();
              }
              case KEY_CODES2.ESCAPE: {
                close(data2);
                data2.button.focus();
                evt.preventDefault();
                return evt.stopPropagation();
              }
              case KEY_CODES2.ARROW_LEFT:
              case KEY_CODES2.ARROW_UP: {
                data2.selectedIdx = Math.max(-1, data2.selectedIdx - 1);
                focusSelectedLink(data2);
                evt.preventDefault();
                return evt.stopPropagation();
              }
              case KEY_CODES2.ARROW_RIGHT:
              case KEY_CODES2.ARROW_DOWN: {
                data2.selectedIdx = Math.min(data2.links.length - 1, data2.selectedIdx + 1);
                focusSelectedLink(data2);
                evt.preventDefault();
                return evt.stopPropagation();
              }
            }
          };
        }
        function focusSelectedLink(data2) {
          if (data2.links[data2.selectedIdx]) {
            var selectedElement = data2.links[data2.selectedIdx];
            selectedElement.focus();
            navigate(selectedElement);
          }
        }
        function reopen(data2) {
          if (!data2.open) {
            return;
          }
          close(data2, true);
          open(data2, true);
        }
        function toggle(data2) {
          return debounce2(function() {
            data2.open ? close(data2) : open(data2);
          });
        }
        function navigate(data2) {
          return function(evt) {
            var link = $2(this);
            var href = link.attr("href");
            if (!Webflow.validClick(evt.currentTarget)) {
              evt.preventDefault();
              return;
            }
            if (href && href.indexOf("#") === 0 && data2.open) {
              close(data2);
            }
          };
        }
        function outside(data2) {
          if (data2.outside) {
            $doc.off("click" + namespace, data2.outside);
          }
          return function(evt) {
            var $target = $2(evt.target);
            if (inEditor && $target.closest(".w-editor-bem-EditorOverlay").length) {
              return;
            }
            outsideDebounced(data2, $target);
          };
        }
        var outsideDebounced = debounce2(function(data2, $target) {
          if (!data2.open) {
            return;
          }
          var menu = $target.closest(".w-nav-menu");
          if (!data2.menu.is(menu)) {
            close(data2);
          }
        });
        function resize(i, el) {
          var data2 = $2.data(el, namespace);
          var collapsed = data2.collapsed = data2.button.css("display") !== "none";
          if (data2.open && !collapsed && !designer) {
            close(data2, true);
          }
          if (data2.container.length) {
            var updateEachMax = updateMax(data2);
            data2.links.each(updateEachMax);
            data2.dropdowns.each(updateEachMax);
          }
          if (data2.open) {
            setOverlayHeight(data2);
          }
        }
        var maxWidth = "max-width";
        function updateMax(data2) {
          var containMax = data2.container.css(maxWidth);
          if (containMax === "none") {
            containMax = "";
          }
          return function(i, link) {
            link = $2(link);
            link.css(maxWidth, "");
            if (link.css(maxWidth) === "none") {
              link.css(maxWidth, containMax);
            }
          };
        }
        function addMenuOpen(i, el) {
          el.setAttribute("data-nav-menu-open", "");
        }
        function removeMenuOpen(i, el) {
          el.removeAttribute("data-nav-menu-open");
        }
        function open(data2, immediate) {
          if (data2.open) {
            return;
          }
          data2.open = true;
          data2.menu.each(addMenuOpen);
          data2.links.addClass(navbarOpenedLink);
          data2.dropdowns.addClass(navbarOpenedDropdown);
          data2.dropdownToggle.addClass(navbarOpenedDropdownToggle);
          data2.dropdownList.addClass(navbarOpenedDropdownList);
          data2.button.addClass(navbarOpenedButton);
          var config = data2.config;
          var animation = config.animation;
          if (animation === "none" || !tram.support.transform || config.duration <= 0) {
            immediate = true;
          }
          var bodyHeight = setOverlayHeight(data2);
          var menuHeight = data2.menu.outerHeight(true);
          var menuWidth = data2.menu.outerWidth(true);
          var navHeight = data2.el.height();
          var navbarEl = data2.el[0];
          resize(0, navbarEl);
          ix.intro(0, navbarEl);
          Webflow.redraw.up();
          if (!designer) {
            $doc.on("click" + namespace, data2.outside);
          }
          if (immediate) {
            complete();
            return;
          }
          var transConfig = "transform " + config.duration + "ms " + config.easing;
          if (data2.overlay) {
            menuSibling = data2.menu.prev();
            data2.overlay.show().append(data2.menu);
          }
          if (config.animOver) {
            tram(data2.menu).add(transConfig).set({
              x: config.animDirect * menuWidth,
              height: bodyHeight
            }).start({
              x: 0
            }).then(complete);
            data2.overlay && data2.overlay.width(menuWidth);
            return;
          }
          var offsetY = navHeight + menuHeight;
          tram(data2.menu).add(transConfig).set({
            y: -offsetY
          }).start({
            y: 0
          }).then(complete);
          function complete() {
            data2.button.attr("aria-expanded", "true");
          }
        }
        function setOverlayHeight(data2) {
          var config = data2.config;
          var bodyHeight = config.docHeight ? $doc.height() : $body.height();
          if (config.animOver) {
            data2.menu.height(bodyHeight);
          } else if (data2.el.css("position") !== "fixed") {
            bodyHeight -= data2.el.outerHeight(true);
          }
          data2.overlay && data2.overlay.height(bodyHeight);
          return bodyHeight;
        }
        function close(data2, immediate) {
          if (!data2.open) {
            return;
          }
          data2.open = false;
          data2.button.removeClass(navbarOpenedButton);
          var config = data2.config;
          if (config.animation === "none" || !tram.support.transform || config.duration <= 0) {
            immediate = true;
          }
          ix.outro(0, data2.el[0]);
          $doc.off("click" + namespace, data2.outside);
          if (immediate) {
            tram(data2.menu).stop();
            complete();
            return;
          }
          var transConfig = "transform " + config.duration + "ms " + config.easing2;
          var menuHeight = data2.menu.outerHeight(true);
          var menuWidth = data2.menu.outerWidth(true);
          var navHeight = data2.el.height();
          if (config.animOver) {
            tram(data2.menu).add(transConfig).start({
              x: menuWidth * config.animDirect
            }).then(complete);
            return;
          }
          var offsetY = navHeight + menuHeight;
          tram(data2.menu).add(transConfig).start({
            y: -offsetY
          }).then(complete);
          function complete() {
            data2.menu.height("");
            tram(data2.menu).set({
              x: 0,
              y: 0
            });
            data2.menu.each(removeMenuOpen);
            data2.links.removeClass(navbarOpenedLink);
            data2.dropdowns.removeClass(navbarOpenedDropdown);
            data2.dropdownToggle.removeClass(navbarOpenedDropdownToggle);
            data2.dropdownList.removeClass(navbarOpenedDropdownList);
            if (data2.overlay && data2.overlay.children().length) {
              menuSibling.length ? data2.menu.insertAfter(menuSibling) : data2.menu.prependTo(data2.parent);
              data2.overlay.attr("style", "").hide();
            }
            data2.el.triggerHandler("w-close");
            data2.button.attr("aria-expanded", "false");
          }
        }
        return api;
      });
    }
  });

  // packages/shared/render/plugins/Slider/webflow-slider.js
  var require_webflow_slider = __commonJS({
    "packages/shared/render/plugins/Slider/webflow-slider.js"(exports2, module2) {
      "use strict";
      var Webflow = require_webflow_lib();
      var IXEvents = require_webflow_ix2_events();
      var KEY_CODES2 = {
        ARROW_LEFT: 37,
        ARROW_UP: 38,
        ARROW_RIGHT: 39,
        ARROW_DOWN: 40,
        SPACE: 32,
        ENTER: 13,
        HOME: 36,
        END: 35
      };
      var FOCUSABLE_SELECTOR = 'a[href], area[href], [role="button"], input, select, textarea, button, iframe, object, embed, *[tabindex], *[contenteditable]';
      Webflow.define("slider", module2.exports = function($2, _) {
        var api = {};
        var tram = $2.tram;
        var $doc = $2(document);
        var $sliders;
        var designer;
        var inApp = Webflow.env();
        var namespace = ".w-slider";
        var dot = '<div class="w-slider-dot" data-wf-ignore />';
        var ariaLiveLabelHtml = '<div aria-live="off" aria-atomic="true" class="w-slider-aria-label" data-wf-ignore />';
        var forceShow = "w-slider-force-show";
        var ix = IXEvents.triggers;
        var fallback;
        var inRedraw = false;
        api.ready = function() {
          designer = Webflow.env("design");
          init3();
        };
        api.design = function() {
          designer = true;
          setTimeout(init3, 1e3);
        };
        api.preview = function() {
          designer = false;
          init3();
        };
        api.redraw = function() {
          inRedraw = true;
          init3();
          inRedraw = false;
        };
        api.destroy = removeListeners;
        function init3() {
          $sliders = $doc.find(namespace);
          if (!$sliders.length) {
            return;
          }
          $sliders.each(build);
          if (fallback) {
            return;
          }
          removeListeners();
          addListeners();
        }
        function removeListeners() {
          Webflow.resize.off(renderAll);
          Webflow.redraw.off(api.redraw);
        }
        function addListeners() {
          Webflow.resize.on(renderAll);
          Webflow.redraw.on(api.redraw);
        }
        function renderAll() {
          $sliders.filter(":visible").each(render);
        }
        function build(i, el) {
          var $el = $2(el);
          var data2 = $2.data(el, namespace);
          if (!data2) {
            data2 = $2.data(el, namespace, {
              index: 0,
              depth: 1,
              hasFocus: {
                keyboard: false,
                mouse: false
              },
              el: $el,
              config: {}
            });
          }
          data2.mask = $el.children(".w-slider-mask");
          data2.left = $el.children(".w-slider-arrow-left");
          data2.right = $el.children(".w-slider-arrow-right");
          data2.nav = $el.children(".w-slider-nav");
          data2.slides = data2.mask.children(".w-slide");
          data2.slides.each(ix.reset);
          if (inRedraw) {
            data2.maskWidth = 0;
          }
          if ($el.attr("role") === void 0) {
            $el.attr("role", "region");
          }
          if ($el.attr("aria-label") === void 0) {
            $el.attr("aria-label", "carousel");
          }
          var slideViewId = data2.mask.attr("id");
          if (!slideViewId) {
            slideViewId = "w-slider-mask-" + i;
            data2.mask.attr("id", slideViewId);
          }
          if (!designer && !data2.ariaLiveLabel) {
            data2.ariaLiveLabel = $2(ariaLiveLabelHtml).appendTo(data2.mask);
          }
          data2.left.attr("role", "button");
          data2.left.attr("tabindex", "0");
          data2.left.attr("aria-controls", slideViewId);
          if (data2.left.attr("aria-label") === void 0) {
            data2.left.attr("aria-label", "previous slide");
          }
          data2.right.attr("role", "button");
          data2.right.attr("tabindex", "0");
          data2.right.attr("aria-controls", slideViewId);
          if (data2.right.attr("aria-label") === void 0) {
            data2.right.attr("aria-label", "next slide");
          }
          if (!tram.support.transform) {
            data2.left.hide();
            data2.right.hide();
            data2.nav.hide();
            fallback = true;
            return;
          }
          data2.el.off(namespace);
          data2.left.off(namespace);
          data2.right.off(namespace);
          data2.nav.off(namespace);
          configure(data2);
          if (designer) {
            data2.el.on("setting" + namespace, handler(data2));
            stopTimer(data2);
            data2.hasTimer = false;
          } else {
            data2.el.on("swipe" + namespace, handler(data2));
            data2.left.on("click" + namespace, previousFunction(data2));
            data2.right.on("click" + namespace, next(data2));
            data2.left.on("keydown" + namespace, keyboardSlideButtonsFunction(data2, previousFunction));
            data2.right.on("keydown" + namespace, keyboardSlideButtonsFunction(data2, next));
            data2.nav.on("keydown" + namespace, "> div", handler(data2));
            if (data2.config.autoplay && !data2.hasTimer) {
              data2.hasTimer = true;
              data2.timerCount = 1;
              startTimer(data2);
            }
            data2.el.on("mouseenter" + namespace, hasFocus(data2, true, "mouse"));
            data2.el.on("focusin" + namespace, hasFocus(data2, true, "keyboard"));
            data2.el.on("mouseleave" + namespace, hasFocus(data2, false, "mouse"));
            data2.el.on("focusout" + namespace, hasFocus(data2, false, "keyboard"));
          }
          data2.nav.on("click" + namespace, "> div", handler(data2));
          if (!inApp) {
            data2.mask.contents().filter(function() {
              return this.nodeType === 3;
            }).remove();
          }
          var $elHidden = $el.filter(":hidden");
          $elHidden.addClass(forceShow);
          var $elHiddenParents = $el.parents(":hidden");
          $elHiddenParents.addClass(forceShow);
          if (!inRedraw) {
            render(i, el);
          }
          $elHidden.removeClass(forceShow);
          $elHiddenParents.removeClass(forceShow);
        }
        function configure(data2) {
          var config = {};
          config.crossOver = 0;
          config.animation = data2.el.attr("data-animation") || "slide";
          if (config.animation === "outin") {
            config.animation = "cross";
            config.crossOver = 0.5;
          }
          config.easing = data2.el.attr("data-easing") || "ease";
          var duration = data2.el.attr("data-duration");
          config.duration = duration != null ? parseInt(duration, 10) : 500;
          if (isAttrTrue(data2.el.attr("data-infinite"))) {
            config.infinite = true;
          }
          if (isAttrTrue(data2.el.attr("data-disable-swipe"))) {
            config.disableSwipe = true;
          }
          if (isAttrTrue(data2.el.attr("data-hide-arrows"))) {
            config.hideArrows = true;
          } else if (data2.config.hideArrows) {
            data2.left.show();
            data2.right.show();
          }
          if (isAttrTrue(data2.el.attr("data-autoplay"))) {
            config.autoplay = true;
            config.delay = parseInt(data2.el.attr("data-delay"), 10) || 2e3;
            config.timerMax = parseInt(data2.el.attr("data-autoplay-limit"), 10);
            var touchEvents = "mousedown" + namespace + " touchstart" + namespace;
            if (!designer) {
              data2.el.off(touchEvents).one(touchEvents, function() {
                stopTimer(data2);
              });
            }
          }
          var arrowWidth = data2.right.width();
          config.edge = arrowWidth ? arrowWidth + 40 : 100;
          data2.config = config;
        }
        function isAttrTrue(value2) {
          return value2 === "1" || value2 === "true";
        }
        function hasFocus(data2, focusIn, eventType) {
          return function(evt) {
            if (!focusIn) {
              if ($2.contains(data2.el.get(0), evt.relatedTarget)) {
                return;
              }
              data2.hasFocus[eventType] = focusIn;
              if (data2.hasFocus.mouse && eventType === "keyboard" || data2.hasFocus.keyboard && eventType === "mouse") {
                return;
              }
            } else {
              data2.hasFocus[eventType] = focusIn;
            }
            if (focusIn) {
              data2.ariaLiveLabel.attr("aria-live", "polite");
              if (data2.hasTimer) {
                stopTimer(data2);
              }
            } else {
              data2.ariaLiveLabel.attr("aria-live", "off");
              if (data2.hasTimer) {
                startTimer(data2);
              }
            }
            return;
          };
        }
        function keyboardSlideButtonsFunction(data2, directionFunction) {
          return function(evt) {
            switch (evt.keyCode) {
              case KEY_CODES2.SPACE:
              case KEY_CODES2.ENTER: {
                directionFunction(data2)();
                evt.preventDefault();
                return evt.stopPropagation();
              }
            }
          };
        }
        function previousFunction(data2) {
          return function() {
            change(data2, {
              index: data2.index - 1,
              vector: -1
            });
          };
        }
        function next(data2) {
          return function() {
            change(data2, {
              index: data2.index + 1,
              vector: 1
            });
          };
        }
        function select(data2, value2) {
          var found = null;
          if (value2 === data2.slides.length) {
            init3();
            layout(data2);
          }
          _.each(data2.anchors, function(anchor, index2) {
            $2(anchor.els).each(function(i, el) {
              if ($2(el).index() === value2) {
                found = index2;
              }
            });
          });
          if (found != null) {
            change(data2, {
              index: found,
              immediate: true
            });
          }
        }
        function startTimer(data2) {
          stopTimer(data2);
          var config = data2.config;
          var timerMax = config.timerMax;
          if (timerMax && data2.timerCount++ > timerMax) {
            return;
          }
          data2.timerId = window.setTimeout(function() {
            if (data2.timerId == null || designer) {
              return;
            }
            next(data2)();
            startTimer(data2);
          }, config.delay);
        }
        function stopTimer(data2) {
          window.clearTimeout(data2.timerId);
          data2.timerId = null;
        }
        function handler(data2) {
          return function(evt, options) {
            options = options || {};
            var config = data2.config;
            if (designer && evt.type === "setting") {
              if (options.select === "prev") {
                return previousFunction(data2)();
              }
              if (options.select === "next") {
                return next(data2)();
              }
              configure(data2);
              layout(data2);
              if (options.select == null) {
                return;
              }
              select(data2, options.select);
              return;
            }
            if (evt.type === "swipe") {
              if (config.disableSwipe) {
                return;
              }
              if (Webflow.env("editor")) {
                return;
              }
              if (options.direction === "left") {
                return next(data2)();
              }
              if (options.direction === "right") {
                return previousFunction(data2)();
              }
              return;
            }
            if (data2.nav.has(evt.target).length) {
              var index2 = $2(evt.target).index();
              if (evt.type === "click") {
                change(data2, {
                  index: index2
                });
              }
              if (evt.type === "keydown") {
                switch (evt.keyCode) {
                  case KEY_CODES2.ENTER:
                  case KEY_CODES2.SPACE: {
                    change(data2, {
                      index: index2
                    });
                    evt.preventDefault();
                    break;
                  }
                  case KEY_CODES2.ARROW_LEFT:
                  case KEY_CODES2.ARROW_UP: {
                    focusDot(data2.nav, Math.max(index2 - 1, 0));
                    evt.preventDefault();
                    break;
                  }
                  case KEY_CODES2.ARROW_RIGHT:
                  case KEY_CODES2.ARROW_DOWN: {
                    focusDot(data2.nav, Math.min(index2 + 1, data2.pages));
                    evt.preventDefault();
                    break;
                  }
                  case KEY_CODES2.HOME: {
                    focusDot(data2.nav, 0);
                    evt.preventDefault();
                    break;
                  }
                  case KEY_CODES2.END: {
                    focusDot(data2.nav, data2.pages);
                    evt.preventDefault();
                    break;
                  }
                  default: {
                    return;
                  }
                }
              }
            }
          };
        }
        function focusDot($nav, index2) {
          var $active = $nav.children().eq(index2).focus();
          $nav.children().not($active);
        }
        function change(data2, options) {
          options = options || {};
          var config = data2.config;
          var anchors = data2.anchors;
          data2.previous = data2.index;
          var index2 = options.index;
          var shift = {};
          if (index2 < 0) {
            index2 = anchors.length - 1;
            if (config.infinite) {
              shift.x = -data2.endX;
              shift.from = 0;
              shift.to = anchors[0].width;
            }
          } else if (index2 >= anchors.length) {
            index2 = 0;
            if (config.infinite) {
              shift.x = anchors[anchors.length - 1].width;
              shift.from = -anchors[anchors.length - 1].x;
              shift.to = shift.from - shift.x;
            }
          }
          data2.index = index2;
          var $active = data2.nav.children().eq(index2).addClass("w-active").attr("aria-pressed", "true").attr("tabindex", "0");
          data2.nav.children().not($active).removeClass("w-active").attr("aria-pressed", "false").attr("tabindex", "-1");
          if (config.hideArrows) {
            data2.index === anchors.length - 1 ? data2.right.hide() : data2.right.show();
            data2.index === 0 ? data2.left.hide() : data2.left.show();
          }
          var lastOffsetX = data2.offsetX || 0;
          var offsetX = data2.offsetX = -anchors[data2.index].x;
          var resetConfig = {
            x: offsetX,
            opacity: 1,
            visibility: ""
          };
          var targets = $2(anchors[data2.index].els);
          var prevTargs = $2(anchors[data2.previous] && anchors[data2.previous].els);
          var others = data2.slides.not(targets);
          var animation = config.animation;
          var easing = config.easing;
          var duration = Math.round(config.duration);
          var vector = options.vector || (data2.index > data2.previous ? 1 : -1);
          var fadeRule = "opacity " + duration + "ms " + easing;
          var slideRule = "transform " + duration + "ms " + easing;
          targets.find(FOCUSABLE_SELECTOR).removeAttr("tabindex");
          targets.removeAttr("aria-hidden");
          targets.find("*").removeAttr("aria-hidden");
          others.find(FOCUSABLE_SELECTOR).attr("tabindex", "-1");
          others.attr("aria-hidden", "true");
          others.find("*").attr("aria-hidden", "true");
          if (!designer) {
            targets.each(ix.intro);
            others.each(ix.outro);
          }
          if (options.immediate && !inRedraw) {
            tram(targets).set(resetConfig);
            resetOthers();
            return;
          }
          if (data2.index === data2.previous) {
            return;
          }
          if (!designer) {
            data2.ariaLiveLabel.text(`Slide ${index2 + 1} of ${anchors.length}.`);
          }
          if (animation === "cross") {
            var reduced = Math.round(duration - duration * config.crossOver);
            var wait = Math.round(duration - reduced);
            fadeRule = "opacity " + reduced + "ms " + easing;
            tram(prevTargs).set({
              visibility: ""
            }).add(fadeRule).start({
              opacity: 0
            });
            tram(targets).set({
              visibility: "",
              x: offsetX,
              opacity: 0,
              zIndex: data2.depth++
            }).add(fadeRule).wait(wait).then({
              opacity: 1
            }).then(resetOthers);
            return;
          }
          if (animation === "fade") {
            tram(prevTargs).set({
              visibility: ""
            }).stop();
            tram(targets).set({
              visibility: "",
              x: offsetX,
              opacity: 0,
              zIndex: data2.depth++
            }).add(fadeRule).start({
              opacity: 1
            }).then(resetOthers);
            return;
          }
          if (animation === "over") {
            resetConfig = {
              x: data2.endX
            };
            tram(prevTargs).set({
              visibility: ""
            }).stop();
            tram(targets).set({
              visibility: "",
              zIndex: data2.depth++,
              x: offsetX + anchors[data2.index].width * vector
            }).add(slideRule).start({
              x: offsetX
            }).then(resetOthers);
            return;
          }
          if (config.infinite && shift.x) {
            tram(data2.slides.not(prevTargs)).set({
              visibility: "",
              x: shift.x
            }).add(slideRule).start({
              x: offsetX
            });
            tram(prevTargs).set({
              visibility: "",
              x: shift.from
            }).add(slideRule).start({
              x: shift.to
            });
            data2.shifted = prevTargs;
          } else {
            if (config.infinite && data2.shifted) {
              tram(data2.shifted).set({
                visibility: "",
                x: lastOffsetX
              });
              data2.shifted = null;
            }
            tram(data2.slides).set({
              visibility: ""
            }).add(slideRule).start({
              x: offsetX
            });
          }
          function resetOthers() {
            targets = $2(anchors[data2.index].els);
            others = data2.slides.not(targets);
            if (animation !== "slide") {
              resetConfig.visibility = "hidden";
            }
            tram(others).set(resetConfig);
          }
        }
        function render(i, el) {
          var data2 = $2.data(el, namespace);
          if (!data2) {
            return;
          }
          if (maskChanged(data2)) {
            return layout(data2);
          }
          if (designer && slidesChanged(data2)) {
            layout(data2);
          }
        }
        function layout(data2) {
          var pages = 1;
          var offset = 0;
          var anchor = 0;
          var width2 = 0;
          var maskWidth = data2.maskWidth;
          var threshold = maskWidth - data2.config.edge;
          if (threshold < 0) {
            threshold = 0;
          }
          data2.anchors = [{
            els: [],
            x: 0,
            width: 0
          }];
          data2.slides.each(function(i, el) {
            if (anchor - offset > threshold) {
              pages++;
              offset += maskWidth;
              data2.anchors[pages - 1] = {
                els: [],
                x: anchor,
                width: 0
              };
            }
            width2 = $2(el).outerWidth(true);
            anchor += width2;
            data2.anchors[pages - 1].width += width2;
            data2.anchors[pages - 1].els.push(el);
            var ariaLabel = i + 1 + " of " + data2.slides.length;
            $2(el).attr("aria-label", ariaLabel);
            $2(el).attr("role", "group");
          });
          data2.endX = anchor;
          if (designer) {
            data2.pages = null;
          }
          if (data2.nav.length && data2.pages !== pages) {
            data2.pages = pages;
            buildNav(data2);
          }
          var index2 = data2.index;
          if (index2 >= pages) {
            index2 = pages - 1;
          }
          change(data2, {
            immediate: true,
            index: index2
          });
        }
        function buildNav(data2) {
          var dots = [];
          var $dot;
          var spacing = data2.el.attr("data-nav-spacing");
          if (spacing) {
            spacing = parseFloat(spacing) + "px";
          }
          for (var i = 0, len = data2.pages; i < len; i++) {
            $dot = $2(dot);
            $dot.attr("aria-label", "Show slide " + (i + 1) + " of " + len).attr("aria-pressed", "false").attr("role", "button").attr("tabindex", "-1");
            if (data2.nav.hasClass("w-num")) {
              $dot.text(i + 1);
            }
            if (spacing != null) {
              $dot.css({
                "margin-left": spacing,
                "margin-right": spacing
              });
            }
            dots.push($dot);
          }
          data2.nav.empty().append(dots);
        }
        function maskChanged(data2) {
          var maskWidth = data2.mask.width();
          if (data2.maskWidth !== maskWidth) {
            data2.maskWidth = maskWidth;
            return true;
          }
          return false;
        }
        function slidesChanged(data2) {
          var slidesWidth = 0;
          data2.slides.each(function(i, el) {
            slidesWidth += $2(el).outerWidth(true);
          });
          if (data2.slidesWidth !== slidesWidth) {
            data2.slidesWidth = slidesWidth;
            return true;
          }
          return false;
        }
        return api;
      });
    }
  });

  // <stdin>
  require_webflow_lottie();
  require_webflow_brand();
  require_webflow_edit();
  require_webflow_focus_visible();
  require_webflow_focus();
  require_webflow_ix2_events();
  require_webflow_ix2();
  require_webflow_links();
  require_webflow_scroll();
  require_webflow_touch();
  require_webflow_commerce();
  require_webflow_forms();
  require_webflow_lightbox();
  require_webflow_navbar();
  require_webflow_slider();
})();
/*!
 * tram.js v0.8.2-global
 * Cross-browser CSS3 transitions in JavaScript
 * https://github.com/bkwld/tram
 * MIT License
 */
/*!
 * Webflow._ (aka) Underscore.js 1.6.0 (custom build)
 *
 * http://underscorejs.org
 * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Underscore may be freely distributed under the MIT license.
 * @license MIT
 */
/*! Bundled license information:

timm/lib/timm.js:
  (*!
   * Timm
   *
   * Immutability helpers with fast reads and acceptable writes.
   *
   * @copyright Guillermo Grau Panea 2016
   * @license MIT
   *)

react/cjs/react.production.min.js:
  (**
   * @license React
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

moment/moment.js:
  (*! moment.js *)

moment-timezone/moment-timezone.js:
  (*! moment-timezone.js *)
  (*! version : 0.5.31 *)
  (*! Copyright (c) JS Foundation and other contributors *)
  (*! license : MIT *)
  (*! github.com/moment/moment-timezone *)

accounting/accounting.js:
  (*!
   * accounting.js v0.4.1
   * Copyright 2014 Open Exchange Rates
   *
   * Freely distributable under the MIT license.
   * Portions of accounting.js are inspired or borrowed from underscore.js
   *
   * Full details and documentation:
   * http://openexchangerates.github.io/accounting.js/
   *)
*/
/**
 * ----------------------------------------------------------------------
 * Webflow: Interactions 2.0: Init
 */
Webflow.require('ix2').init(
{"events":{"e":{"id":"e","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-2"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0c0ef45f813|cde51f98-4a62-0c88-cef4-5b5234697a93","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"5f8f28a0d0c17d4d4c9b8e14|b1d25e44-48fd-8d9b-76da-0193dba48a21","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1604967001679},"e-3":{"id":"e-3","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-4"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce02b0845f818|cde51f98-4a62-0c88-cef4-5b5234697a93","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce02b0845f818|cde51f98-4a62-0c88-cef4-5b5234697a93","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1611269171523},"e-5":{"id":"e-5","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-6"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce09fb445f806|cde51f98-4a62-0c88-cef4-5b5234697a93","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce09fb445f806|cde51f98-4a62-0c88-cef4-5b5234697a93","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1611269267144},"e-13":{"id":"e-13","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-14","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-14"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|24c5c6ca-b092-bf4d-3b98-3588842862a7","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|24c5c6ca-b092-bf4d-3b98-3588842862a7","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635347963896},"e-19":{"id":"e-19","name":"","animationType":"custom","eventTypeId":"MOUSE_MOVE","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-26","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff","appliesTo":"PAGE","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-26-p","selectedAxis":"X_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":99,"restingState":50},{"continuousParameterGroupId":"a-26-p-2","selectedAxis":"Y_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":99,"restingState":50}],"createdOn":1635432975869},"e-20":{"id":"e-20","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-21"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|0f88f594-8523-519f-e1a8-a8256d423d61","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|0f88f594-8523-519f-e1a8-a8256d423d61","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635434909654},"e-22":{"id":"e-22","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-23"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|8b5f53fe-5dfd-403d-68ce-843f33e9739e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|8b5f53fe-5dfd-403d-68ce-843f33e9739e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635435158415},"e-24":{"id":"e-24","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-2","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-25"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|1567b00e-3760-e247-4c9e-481d4c919144","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|1567b00e-3760-e247-4c9e-481d4c919144","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635435166918},"e-28":{"id":"e-28","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-2","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-29"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|95e8687c-73f3-b0b1-179c-d41fc8c8a619","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|95e8687c-73f3-b0b1-179c-d41fc8c8a619","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635435257830},"e-36":{"id":"e-36","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-37"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".card.home-perks","originalId":"61e55a07ff9ce03c7a45f7ff|36263fbd-e1ec-3a38-7699-04ea16fb1a41","appliesTo":"CLASS"},"targets":[{"selector":".card.home-perks","originalId":"61e55a07ff9ce03c7a45f7ff|36263fbd-e1ec-3a38-7699-04ea16fb1a41","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635435865543},"e-66":{"id":"e-66","name":"","animationType":"custom","eventTypeId":"MOUSE_OVER","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-17","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-67"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".link-primary","originalId":"61e55a07ff9ce03c7a45f7ff|57748b4c-3cf6-2fac-c354-2a6be2e13840","appliesTo":"CLASS"},"targets":[{"selector":".link-primary","originalId":"61e55a07ff9ce03c7a45f7ff|57748b4c-3cf6-2fac-c354-2a6be2e13840","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635474226660},"e-67":{"id":"e-67","name":"","animationType":"custom","eventTypeId":"MOUSE_OUT","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-18","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-66"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".link-primary","originalId":"61e55a07ff9ce03c7a45f7ff|57748b4c-3cf6-2fac-c354-2a6be2e13840","appliesTo":"CLASS"},"targets":[{"selector":".link-primary","originalId":"61e55a07ff9ce03c7a45f7ff|57748b4c-3cf6-2fac-c354-2a6be2e13840","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635474226661},"e-68":{"id":"e-68","name":"","animationType":"custom","eventTypeId":"MOUSE_OVER","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-17","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-69"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".card.integration-card","originalId":"61e55a07ff9ce03c7a45f7ff|de4ffe36-671e-3c1a-1a24-db0ab1d4549d","appliesTo":"CLASS"},"targets":[{"selector":".card.integration-card","originalId":"61e55a07ff9ce03c7a45f7ff|de4ffe36-671e-3c1a-1a24-db0ab1d4549d","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635474436655},"e-69":{"id":"e-69","name":"","animationType":"custom","eventTypeId":"MOUSE_OUT","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-18","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-68"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".card.integration-card","originalId":"61e55a07ff9ce03c7a45f7ff|de4ffe36-671e-3c1a-1a24-db0ab1d4549d","appliesTo":"CLASS"},"targets":[{"selector":".card.integration-card","originalId":"61e55a07ff9ce03c7a45f7ff|de4ffe36-671e-3c1a-1a24-db0ab1d4549d","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635474436656},"e-78":{"id":"e-78","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-79"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".grid-2-columns.title-button","originalId":"61e55a07ff9ce03c7a45f7ff|346cf7dd-3446-3ffe-acc1-5804fc8c8257","appliesTo":"CLASS"},"targets":[{"selector":".grid-2-columns.title-button","originalId":"61e55a07ff9ce03c7a45f7ff|346cf7dd-3446-3ffe-acc1-5804fc8c8257","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635475134375},"e-90":{"id":"e-90","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-91"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".shape.cta","originalId":"61e55a07ff9ce03c7a45f7ff|e6018e1e-bd4c-7796-33d7-e43c47ae4620","appliesTo":"CLASS"},"targets":[{"selector":".shape.cta","originalId":"61e55a07ff9ce03c7a45f7ff|e6018e1e-bd4c-7796-33d7-e43c47ae4620","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":16,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635518603792},"e-122":{"id":"e-122","name":"","animationType":"custom","eventTypeId":"MOUSE_OVER","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-17","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-123"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".card.press-card","originalId":"61e55a07ff9ce0bd7545f804|93201b4f-0db1-d773-ef51-a66fa7162018","appliesTo":"CLASS"},"targets":[{"selector":".card.press-card","originalId":"61e55a07ff9ce0bd7545f804|93201b4f-0db1-d773-ef51-a66fa7162018","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635532314545},"e-123":{"id":"e-123","name":"","animationType":"custom","eventTypeId":"MOUSE_OUT","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-18","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-122"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".card.press-card","originalId":"61e55a07ff9ce0bd7545f804|93201b4f-0db1-d773-ef51-a66fa7162018","appliesTo":"CLASS"},"targets":[{"selector":".card.press-card","originalId":"61e55a07ff9ce0bd7545f804|93201b4f-0db1-d773-ef51-a66fa7162018","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635532314546},"e-134":{"id":"e-134","name":"","animationType":"custom","eventTypeId":"NAVBAR_OPEN","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-24","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-135"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"58db7844-5919-d71b-dd74-2323ed8dffe9","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"58db7844-5919-d71b-dd74-2323ed8dffe9","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635557912963},"e-135":{"id":"e-135","name":"","animationType":"custom","eventTypeId":"NAVBAR_CLOSE","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-25","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-134"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"58db7844-5919-d71b-dd74-2323ed8dffe9","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"58db7844-5919-d71b-dd74-2323ed8dffe9","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635557912964},"e-138":{"id":"e-138","name":"","animationType":"custom","eventTypeId":"MOUSE_MOVE","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-26","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff","appliesTo":"PAGE","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-26-p","selectedAxis":"X_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":91,"restingState":50},{"continuousParameterGroupId":"a-26-p-2","selectedAxis":"Y_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":91,"restingState":50}],"createdOn":1635560095251},"e-155":{"id":"e-155","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-156"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"55044fd6-74d2-231a-2698-4ff60432725a","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"55044fd6-74d2-231a-2698-4ff60432725a","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635566284792},"e-162":{"id":"e-162","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"FADE_EFFECT","instant":false,"config":{"actionListId":"fadeIn","autoStopEventId":"e-163"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6f0aed0e-6273-a30e-5445-82bbb0e0e58e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6f0aed0e-6273-a30e-5445-82bbb0e0e58e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":5,"scrollOffsetUnit":"%","delay":200,"direction":null,"effectIn":true},"createdOn":1635567403180},"e-184":{"id":"e-184","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-185"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c3345f80a|b6b099c3-5a00-470d-a03a-4995ab29ab39","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c3345f80a|b6b099c3-5a00-470d-a03a-4995ab29ab39","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":5,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635570184250},"e-186":{"id":"e-186","name":"","animationType":"preset","eventTypeId":"MOUSE_OVER","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-21","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-187"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c3345f80a|b6b099c3-5a00-470d-a03a-4995ab29ab3c","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c3345f80a|b6b099c3-5a00-470d-a03a-4995ab29ab3c","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635570184250},"e-187":{"id":"e-187","name":"","animationType":"preset","eventTypeId":"MOUSE_OUT","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-27","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-186"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c3345f80a|b6b099c3-5a00-470d-a03a-4995ab29ab3c","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c3345f80a|b6b099c3-5a00-470d-a03a-4995ab29ab3c","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635570184250},"e-242":{"id":"e-242","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-243"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce09fb445f806|3d874e0c-ce7d-af6a-08c5-d3b830d0ab0a","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce09fb445f806|3d874e0c-ce7d-af6a-08c5-d3b830d0ab0a","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635578768368},"e-244":{"id":"e-244","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-245"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0c0ef45f813|c852c6e1-2e20-22c3-c517-ec15a37acfda","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0c0ef45f813|c852c6e1-2e20-22c3-c517-ec15a37acfda","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635578777683},"e-246":{"id":"e-246","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-247"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0c0ef45f813|535aac87-c625-74be-7a81-5d3c0526a623","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0c0ef45f813|535aac87-c625-74be-7a81-5d3c0526a623","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":5,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635578783578},"e-248":{"id":"e-248","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"FADE_EFFECT","instant":false,"config":{"actionListId":"fadeIn","autoStopEventId":"e-249"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0175845f819|b2fa23d4-8136-d8f4-e5c4-4d7ef74dcc61","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0175845f819|b2fa23d4-8136-d8f4-e5c4-4d7ef74dcc61","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":350,"direction":null,"effectIn":true},"createdOn":1635578801241},"e-250":{"id":"e-250","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-251"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0a18f45f809|6a79190c-6b75-b919-8eb4-65e206f503f2","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0a18f45f809|6a79190c-6b75-b919-8eb4-65e206f503f2","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635602468415},"e-252":{"id":"e-252","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-253"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0a18f45f809|0a63a931-01b4-d09e-bc02-7e7ea7e4572d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0a18f45f809|0a63a931-01b4-d09e-bc02-7e7ea7e4572d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635602484402},"e-254":{"id":"e-254","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-255"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0a18f45f809|51edbca2-0c2f-7fd8-72da-047f2d6a0ecc","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0a18f45f809|51edbca2-0c2f-7fd8-72da-047f2d6a0ecc","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635603181207},"e-256":{"id":"e-256","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-257"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0a18f45f809|992cbaba-8c20-198f-d451-2fc48ca1d75d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0a18f45f809|992cbaba-8c20-198f-d451-2fc48ca1d75d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635603185844},"e-258":{"id":"e-258","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-259"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0a18f45f809|4ea15bb3-8969-5120-62e4-fc676e1830e5","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0a18f45f809|4ea15bb3-8969-5120-62e4-fc676e1830e5","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635603422157},"e-260":{"id":"e-260","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-261"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0a18f45f809|1f969604-e3d5-a139-3347-80a02440cb3a","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0a18f45f809|1f969604-e3d5-a139-3347-80a02440cb3a","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":5,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635603443488},"e-262":{"id":"e-262","name":"","animationType":"preset","eventTypeId":"MOUSE_OVER","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-21","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-263"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0a18f45f809|1f969604-e3d5-a139-3347-80a02440cb3d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0a18f45f809|1f969604-e3d5-a139-3347-80a02440cb3d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635603443488},"e-263":{"id":"e-263","name":"","animationType":"preset","eventTypeId":"MOUSE_OUT","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-27","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-262"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0a18f45f809|1f969604-e3d5-a139-3347-80a02440cb3d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0a18f45f809|1f969604-e3d5-a139-3347-80a02440cb3d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635603443488},"e-264":{"id":"e-264","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-265"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0bb4145f80d|f214e151-dede-f4cd-1a5a-1ad74f89ccc9","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0bb4145f80d|f214e151-dede-f4cd-1a5a-1ad74f89ccc9","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635603895157},"e-266":{"id":"e-266","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-267"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0bb4145f80d|f214e151-dede-f4cd-1a5a-1ad74f89cccf","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0bb4145f80d|f214e151-dede-f4cd-1a5a-1ad74f89cccf","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":5,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635603895157},"e-270":{"id":"e-270","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-271"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0225345f80c|d8f3708a-5a18-576c-87ec-904b07969029","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0225345f80c|d8f3708a-5a18-576c-87ec-904b07969029","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":5,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635604033232},"e-272":{"id":"e-272","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-273"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0225345f80c|7f961db3-1357-d5d8-4d62-4472ae300cbc","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0225345f80c|7f961db3-1357-d5d8-4d62-4472ae300cbc","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635604449809},"e-274":{"id":"e-274","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-275"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0225345f80c|897d8773-7145-a915-1819-9651851c73ff","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0225345f80c|897d8773-7145-a915-1819-9651851c73ff","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635604578591},"e-276":{"id":"e-276","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-277"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0d7d845f810|c4169272-9c80-d7a6-268d-7bef7e503ba9","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0d7d845f810|c4169272-9c80-d7a6-268d-7bef7e503ba9","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635605574805},"e-278":{"id":"e-278","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-279"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0d7d845f810|69144c2b-c75b-af86-4fba-9f73d94dce3b","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0d7d845f810|69144c2b-c75b-af86-4fba-9f73d94dce3b","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":5,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635605640268},"e-280":{"id":"e-280","name":"","animationType":"preset","eventTypeId":"MOUSE_OVER","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-21","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-281"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0d7d845f810|69144c2b-c75b-af86-4fba-9f73d94dce3e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0d7d845f810|69144c2b-c75b-af86-4fba-9f73d94dce3e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635605640268},"e-281":{"id":"e-281","name":"","animationType":"preset","eventTypeId":"MOUSE_OUT","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-27","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-280"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0d7d845f810|69144c2b-c75b-af86-4fba-9f73d94dce3e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0d7d845f810|69144c2b-c75b-af86-4fba-9f73d94dce3e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1635605640268},"e-282":{"id":"e-282","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-283"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0d7d845f810|c5216732-a334-4d96-1d0a-6a50c536258d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0d7d845f810|c5216732-a334-4d96-1d0a-6a50c536258d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":5,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635605744311},"e-284":{"id":"e-284","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-285"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0586545f80b|62c6c0ea-72c3-f87c-f7c9-6f5b0e026356","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0586545f80b|62c6c0ea-72c3-f87c-f7c9-6f5b0e026356","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635606477511},"e-286":{"id":"e-286","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-287"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0586545f80b|62c6c0ea-72c3-f87c-f7c9-6f5b0e02635e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0586545f80b|62c6c0ea-72c3-f87c-f7c9-6f5b0e02635e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635606590034},"e-288":{"id":"e-288","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-289"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce02a2545f80e|d4b98912-25c9-4ac0-b086-bd26ee3f9690","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce02a2545f80e|d4b98912-25c9-4ac0-b086-bd26ee3f9690","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635607291939},"e-290":{"id":"e-290","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-291"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0518a45f807|36f7f09f-5380-a68a-cfc3-fd791c5f1fad","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0518a45f807|36f7f09f-5380-a68a-cfc3-fd791c5f1fad","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635607675878},"e-292":{"id":"e-292","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-293"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0518a45f807|60130abb2fe6f04b9eaf170a00000000000b","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0518a45f807|60130abb2fe6f04b9eaf170a00000000000b","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635607702552},"e-294":{"id":"e-294","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-295"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce078ba45f815|4179cb53-4393-9646-0277-fb848a2aca15","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce078ba45f815|4179cb53-4393-9646-0277-fb848a2aca15","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635607719618},"e-296":{"id":"e-296","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-297"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce078ba45f815|60130abb2fe6f00462af170c00000000000b","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce078ba45f815|60130abb2fe6f00462af170c00000000000b","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635607725175},"e-298":{"id":"e-298","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-299"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0cde045f814|6f24c486-870b-928a-fac6-fc4c37e756d1","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0cde045f814|6f24c486-870b-928a-fac6-fc4c37e756d1","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635607740589},"e-300":{"id":"e-300","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-301"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0cde045f814|60130abb2fe6f0e2caaf170e00000000000b","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0cde045f814|60130abb2fe6f0e2caaf170e00000000000b","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635607746596},"e-302":{"id":"e-302","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-303"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0428445f802|5e86ada79942c1e4247fd4c700000000000b","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0428445f802|5e86ada79942c1e4247fd4c700000000000b","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635607916936},"e-304":{"id":"e-304","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-305"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce000f745f803|5e86adabd2a28d2afbf80eae00000000000b","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce000f745f803|5e86adabd2a28d2afbf80eae00000000000b","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635608414919},"e-308":{"id":"e-308","name":"","animationType":"custom","eventTypeId":"MOUSE_MOVE","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-31","affectedElements":{},"duration":0}},"mediaQueries":["main","medium"],"target":{"id":"61e55a07ff9ce000f745f803","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce000f745f803","appliesTo":"PAGE","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-31-p","selectedAxis":"X_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":90,"restingState":50},{"continuousParameterGroupId":"a-31-p-2","selectedAxis":"Y_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":90,"restingState":50}],"createdOn":1635608429013},"e-309":{"id":"e-309","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-310"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0bc2c45f817|efe0cba5-0055-a451-5a9b-029afb42196f","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0bc2c45f817|efe0cba5-0055-a451-5a9b-029afb42196f","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635609518942},"e-311":{"id":"e-311","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-312"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce0bc2c45f817|617c7ee7f6f3702ea05f2110000000000012","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce0bc2c45f817|617c7ee7f6f3702ea05f2110000000000012","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1635609525926},"e-313":{"id":"e-313","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-314"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|75f269b6-7afe-e90d-da1f-6bfa111a682d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|75f269b6-7afe-e90d-da1f-6bfa111a682d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646579333573},"e-315":{"id":"e-315","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-316"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|75f269b6-7afe-e90d-da1f-6bfa111a682f","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|75f269b6-7afe-e90d-da1f-6bfa111a682f","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646579333573},"e-319":{"id":"e-319","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-320"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|53c5c27a-0e8d-3e4f-16fd-c9eb5f12d938","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|53c5c27a-0e8d-3e4f-16fd-c9eb5f12d938","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646579375218},"e-323":{"id":"e-323","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-324"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|b0dd96c3-d15b-3b58-e576-76cf6c12a46c","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|b0dd96c3-d15b-3b58-e576-76cf6c12a46c","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646579984503},"e-325":{"id":"e-325","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-326"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|35c20f22-3180-3335-9cb1-0e9b4c359d7c","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|35c20f22-3180-3335-9cb1-0e9b4c359d7c","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646589484379},"e-327":{"id":"e-327","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-328"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|8855cffc-97a7-4f49-dda6-2d9b35570b84","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|8855cffc-97a7-4f49-dda6-2d9b35570b84","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646589490150},"e-337":{"id":"e-337","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-338"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|f4d544e1-bfb3-9850-3916-969daa8a7699","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|f4d544e1-bfb3-9850-3916-969daa8a7699","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646590259265},"e-339":{"id":"e-339","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-340"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|f581c5f1-eb20-e13f-a4c0-4a818f18308a","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|f581c5f1-eb20-e13f-a4c0-4a818f18308a","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646590261429},"e-341":{"id":"e-341","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-342"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|1c189cba-a06b-5fb7-5d29-52aed02da192","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|1c189cba-a06b-5fb7-5d29-52aed02da192","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646590438701},"e-343":{"id":"e-343","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-344"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|1c189cba-a06b-5fb7-5d29-52aed02da194","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|1c189cba-a06b-5fb7-5d29-52aed02da194","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646590438701},"e-345":{"id":"e-345","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-346"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|532caff5-66c3-0ba9-2df6-e83d35244ec2","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|532caff5-66c3-0ba9-2df6-e83d35244ec2","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646590536200},"e-347":{"id":"e-347","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-348"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|532caff5-66c3-0ba9-2df6-e83d35244ec4","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|532caff5-66c3-0ba9-2df6-e83d35244ec4","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646590536200},"e-349":{"id":"e-349","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-350"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|c7611b2a-6c58-22a5-b1d2-fc2c40e89d38","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|c7611b2a-6c58-22a5-b1d2-fc2c40e89d38","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646591066825},"e-351":{"id":"e-351","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-352"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|c7611b2a-6c58-22a5-b1d2-fc2c40e89d3a","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|c7611b2a-6c58-22a5-b1d2-fc2c40e89d3a","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646591066825},"e-363":{"id":"e-363","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-364"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|754472c3-a6b2-cdec-cc65-9b4af2f0aab0","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|754472c3-a6b2-cdec-cc65-9b4af2f0aab0","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1646593402120},"e-367":{"id":"e-367","name":"","animationType":"preset","eventTypeId":"DROPDOWN_OPEN","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-22","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-368"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|92cdf2e9-f813-b2c5-c755-bc370441d434","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|92cdf2e9-f813-b2c5-c755-bc370441d434","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1646765826273},"e-368":{"id":"e-368","name":"","animationType":"preset","eventTypeId":"DROPDOWN_CLOSE","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-23","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-367"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|92cdf2e9-f813-b2c5-c755-bc370441d434","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|92cdf2e9-f813-b2c5-c755-bc370441d434","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1646765826273},"e-401":{"id":"e-401","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-402"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|83398499-c7bc-5962-d06b-29d0c656188e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|83398499-c7bc-5962-d06b-29d0c656188e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1647791949754},"e-408":{"id":"e-408","name":"","animationType":"custom","eventTypeId":"PAGE_SCROLL_DOWN","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-32","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-407"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":66,"scrollOffsetUnit":"PX","delay":null,"direction":null,"effectIn":null},"createdOn":1648655136649},"e-415":{"id":"e-415","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-416"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|153dfde1-83c7-828d-c230-29abc56f77dd","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|153dfde1-83c7-828d-c230-29abc56f77dd","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662045300839},"e-417":{"id":"e-417","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-418"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|aeba53cf-66f9-6aa2-feb3-85155596dc07","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|aeba53cf-66f9-6aa2-feb3-85155596dc07","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662045707972},"e-419":{"id":"e-419","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-420"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|aeba53cf-66f9-6aa2-feb3-85155596dc09","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|aeba53cf-66f9-6aa2-feb3-85155596dc09","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662045707972},"e-423":{"id":"e-423","name":"","animationType":"preset","eventTypeId":"MOUSE_MOVE","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-12","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2","appliesTo":"PAGE","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-12-p","selectedAxis":"X_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":99,"restingState":50},{"continuousParameterGroupId":"a-12-p-2","selectedAxis":"Y_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":99,"restingState":50}],"createdOn":1662046209808},"e-424":{"id":"e-424","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-425"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|0f88f594-8523-519f-e1a8-a8256d423d61","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|0f88f594-8523-519f-e1a8-a8256d423d61","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-426":{"id":"e-426","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-427"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|8b5f53fe-5dfd-403d-68ce-843f33e9739e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|8b5f53fe-5dfd-403d-68ce-843f33e9739e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-428":{"id":"e-428","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-2","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-429"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|1567b00e-3760-e247-4c9e-481d4c919144","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|1567b00e-3760-e247-4c9e-481d4c919144","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-430":{"id":"e-430","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-2","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-431"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|95e8687c-73f3-b0b1-179c-d41fc8c8a619","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|95e8687c-73f3-b0b1-179c-d41fc8c8a619","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-436":{"id":"e-436","name":"","animationType":"preset","eventTypeId":"MOUSE_MOVE","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-35","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2","appliesTo":"PAGE","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-35-p","selectedAxis":"X_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":91,"restingState":50},{"continuousParameterGroupId":"a-35-p-2","selectedAxis":"Y_AXIS","basedOn":"VIEWPORT","reverse":false,"smoothing":91,"restingState":50}],"createdOn":1662046209808},"e-437":{"id":"e-437","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-438"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|75f269b6-7afe-e90d-da1f-6bfa111a682d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|75f269b6-7afe-e90d-da1f-6bfa111a682d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-439":{"id":"e-439","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-440"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|75f269b6-7afe-e90d-da1f-6bfa111a682f","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|75f269b6-7afe-e90d-da1f-6bfa111a682f","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-441":{"id":"e-441","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-442"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|53c5c27a-0e8d-3e4f-16fd-c9eb5f12d938","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|53c5c27a-0e8d-3e4f-16fd-c9eb5f12d938","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-443":{"id":"e-443","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-444"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|b0dd96c3-d15b-3b58-e576-76cf6c12a46c","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|b0dd96c3-d15b-3b58-e576-76cf6c12a46c","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-455":{"id":"e-455","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-456"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|f4d544e1-bfb3-9850-3916-969daa8a7699","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|f4d544e1-bfb3-9850-3916-969daa8a7699","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-457":{"id":"e-457","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-458"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|f581c5f1-eb20-e13f-a4c0-4a818f18308a","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|f581c5f1-eb20-e13f-a4c0-4a818f18308a","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-465":{"id":"e-465","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-466"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|532caff5-66c3-0ba9-2df6-e83d35244ec4","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|532caff5-66c3-0ba9-2df6-e83d35244ec4","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-477":{"id":"e-477","name":"","animationType":"preset","eventTypeId":"DROPDOWN_OPEN","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-22","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-478"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|92cdf2e9-f813-b2c5-c755-bc370441d434","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|92cdf2e9-f813-b2c5-c755-bc370441d434","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-478":{"id":"e-478","name":"","animationType":"preset","eventTypeId":"DROPDOWN_CLOSE","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-23","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-477"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|92cdf2e9-f813-b2c5-c755-bc370441d434","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|92cdf2e9-f813-b2c5-c755-bc370441d434","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-516":{"id":"e-516","name":"","animationType":"preset","eventTypeId":"PAGE_SCROLL_DOWN","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-36","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-515"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":66,"scrollOffsetUnit":"PX","delay":null,"direction":null,"effectIn":null},"createdOn":1662046209808},"e-525":{"id":"e-525","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-526"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|be6fc2cf-4c69-1c20-c19c-ca36de771c50","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|be6fc2cf-4c69-1c20-c19c-ca36de771c50","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662049149508},"e-529":{"id":"e-529","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-530"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|7f28cd86-8ab0-0b3d-8076-b8381336b2cb","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|7f28cd86-8ab0-0b3d-8076-b8381336b2cb","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662399745717},"e-531":{"id":"e-531","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-532"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|0e464a27-3d22-78eb-2b4a-d0d306045cab","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|0e464a27-3d22-78eb-2b4a-d0d306045cab","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1662399824481},"e-537":{"id":"e-537","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-538"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|3fd72510-7914-92d1-078a-5aaf1287b0f5","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|3fd72510-7914-92d1-078a-5aaf1287b0f5","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1663243979729},"e-539":{"id":"e-539","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-540"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|3873132c-126b-d2cf-5111-ecdd218336da","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|3873132c-126b-d2cf-5111-ecdd218336da","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1663244076104},"e-541":{"id":"e-541","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-542"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6310d0006987144b44eafcc2|5d447ddc-347e-c109-7b93-500bf5941b6f","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6310d0006987144b44eafcc2|5d447ddc-347e-c109-7b93-500bf5941b6f","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1663244101278},"e-543":{"id":"e-543","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-544"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|2ae0b37a-7311-14a8-b56a-1f521b5e8f1d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|2ae0b37a-7311-14a8-b56a-1f521b5e8f1d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1712668075081},"e-545":{"id":"e-545","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-13","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-546"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"61e55a07ff9ce03c7a45f7ff|2ae0b37a-7311-14a8-b56a-1f521b5e8f1f","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"61e55a07ff9ce03c7a45f7ff|2ae0b37a-7311-14a8-b56a-1f521b5e8f1f","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1712668075081}},"actionLists":{"a":{"id":"a","title":"Zoom In 0.2s","actionItemGroups":[{"actionItems":[{"id":"a-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"xValue":0.97,"yValue":0.97,"locked":true}},{"id":"a-n-2","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"value":0,"unit":""}}]},{"actionItems":[{"id":"a-n-3","actionTypeId":"TRANSFORM_SCALE","config":{"delay":200,"easing":"ease","duration":300,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"xValue":1,"yValue":1,"locked":true}},{"id":"a-n-4","actionTypeId":"STYLE_OPACITY","config":{"delay":200,"easing":"ease","duration":300,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"value":1,"unit":""}}]}],"useFirstGroupAsInitialState":true,"createdOn":1593022020596},"a-14":{"id":"a-14","title":"Zoom In 0.5s","actionItemGroups":[{"actionItems":[{"id":"a-14-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"xValue":0.97,"yValue":0.97,"locked":true}},{"id":"a-14-n-2","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"value":0,"unit":""}}]},{"actionItems":[{"id":"a-14-n-3","actionTypeId":"TRANSFORM_SCALE","config":{"delay":500,"easing":"ease","duration":300,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"xValue":1,"yValue":1,"locked":true}},{"id":"a-14-n-4","actionTypeId":"STYLE_OPACITY","config":{"delay":500,"easing":"ease","duration":300,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"value":1,"unit":""}}]}],"useFirstGroupAsInitialState":true,"createdOn":1593022020596},"a-26":{"id":"a-26","title":"CTA Illustration Animation","continuousParameterGroups":[{"id":"a-26-p","type":"MOUSE_X","parameterLabel":"Mouse X","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-26-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"xValue":10,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-26-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|69cdd3f7-f4de-952a-dc68-cdd9c28a7681"},"xValue":-8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-26-n-9","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|a2417129-ef01-b07b-86b6-09f2fa200219"},"xValue":-8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-26-n-13","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|5b0d07e0-9ede-a814-efb2-47be051250dc"},"xValue":10,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-26-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"xValue":-10,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-26-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|69cdd3f7-f4de-952a-dc68-cdd9c28a7681"},"xValue":8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-26-n-10","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|a2417129-ef01-b07b-86b6-09f2fa200219"},"xValue":8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-26-n-14","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|5b0d07e0-9ede-a814-efb2-47be051250dc"},"xValue":-10,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}]},{"id":"a-26-p-2","type":"MOUSE_Y","parameterLabel":"Mouse Y","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-26-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"yValue":8,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-26-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|69cdd3f7-f4de-952a-dc68-cdd9c28a7681"},"yValue":-10,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-26-n-11","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|a2417129-ef01-b07b-86b6-09f2fa200219"},"xValue":null,"yValue":8,"xUnit":"%","yUnit":"%","zUnit":"PX"}},{"id":"a-26-n-15","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"yValue":10,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-26-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"yValue":-8,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-26-n-8","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|69cdd3f7-f4de-952a-dc68-cdd9c28a7681"},"yValue":10,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-26-n-12","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|a2417129-ef01-b07b-86b6-09f2fa200219"},"yValue":8,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-26-n-16","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce03c7a45f7ff|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"yValue":-10,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1635560098536},"a-13":{"id":"a-13","title":"Zoom In 0.3s","actionItemGroups":[{"actionItems":[{"id":"a-13-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"xValue":0.97,"yValue":0.97,"locked":true}},{"id":"a-13-n-2","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"value":0,"unit":""}}]},{"actionItems":[{"id":"a-13-n-3","actionTypeId":"TRANSFORM_SCALE","config":{"delay":300,"easing":"ease","duration":300,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"xValue":1,"yValue":1,"locked":true}},{"id":"a-13-n-4","actionTypeId":"STYLE_OPACITY","config":{"delay":300,"easing":"ease","duration":300,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"value":1,"unit":""}}]}],"useFirstGroupAsInitialState":true,"createdOn":1593022020596},"a-2":{"id":"a-2","title":"Zoom In 0.4s","actionItemGroups":[{"actionItems":[{"id":"a-2-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"xValue":0.97,"yValue":0.97,"locked":true}},{"id":"a-2-n-2","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"value":0,"unit":""}}]},{"actionItems":[{"id":"a-2-n-3","actionTypeId":"TRANSFORM_SCALE","config":{"delay":400,"easing":"ease","duration":300,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"xValue":1,"yValue":1,"locked":true}},{"id":"a-2-n-4","actionTypeId":"STYLE_OPACITY","config":{"delay":400,"easing":"ease","duration":300,"target":{"useEventTarget":true,"id":"483cd0ea-0ffd-1df5-02c0-5a28799302cc"},"value":1,"unit":""}}]}],"useFirstGroupAsInitialState":true,"createdOn":1593022020596},"a-17":{"id":"a-17","title":"Link Primary Hover","actionItemGroups":[{"actionItems":[{"id":"a-17-n-3","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".underline-fill","selectorGuids":["6542c804-08b1-9d53-00c4-128518daa22d"]},"widthValue":0,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-17-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".link-arrow","selectorGuids":["8cd20284-6ec6-0d88-f50f-8bccf5465b7e"]},"xValue":0,"xUnit":"px","yUnit":"PX","zUnit":"PX"}}]},{"actionItems":[{"id":"a-17-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".underline-fill","selectorGuids":["6542c804-08b1-9d53-00c4-128518daa22d"]},"widthUnit":"AUTO","heightUnit":"px","locked":false}},{"id":"a-17-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".link-arrow","selectorGuids":["8cd20284-6ec6-0d88-f50f-8bccf5465b7e"]},"xValue":4,"xUnit":"px","yUnit":"PX","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1635474229279},"a-18":{"id":"a-18","title":"Link Primary Hover Out","actionItemGroups":[{"actionItems":[{"id":"a-18-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".underline-fill","selectorGuids":["6542c804-08b1-9d53-00c4-128518daa22d"]},"widthValue":0,"widthUnit":"%","heightUnit":"px","locked":false}},{"id":"a-18-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".link-arrow","selectorGuids":["8cd20284-6ec6-0d88-f50f-8bccf5465b7e"]},"xValue":0,"xUnit":"px","yUnit":"PX","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1635474229279},"a-24":{"id":"a-24","title":"Hamburger Menu Opens","actionItemGroups":[{"actionItems":[{"id":"a-24-n","actionTypeId":"PLUGIN_LOTTIE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".lottie-nav-menu","selectorGuids":["2322087d-1a06-6236-2fc5-71c96ba81dcf"]},"value":0}}]},{"actionItems":[{"id":"a-24-n-2","actionTypeId":"PLUGIN_LOTTIE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".lottie-nav-menu","selectorGuids":["2322087d-1a06-6236-2fc5-71c96ba81dcf"]},"value":40}}]}],"useFirstGroupAsInitialState":true,"createdOn":1635557915243},"a-25":{"id":"a-25","title":"Hamburger Menu Closes","actionItemGroups":[{"actionItems":[{"id":"a-25-n","actionTypeId":"PLUGIN_LOTTIE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".lottie-nav-menu","selectorGuids":["2322087d-1a06-6236-2fc5-71c96ba81dcf"]},"value":0}}]}],"useFirstGroupAsInitialState":false,"createdOn":1635557950713},"a-21":{"id":"a-21","title":"Blog Post Card Hover In","actionItemGroups":[{"actionItems":[{"id":"a-21-n-3","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".underline-fill","selectorGuids":["6542c804-08b1-9d53-00c4-128518daa22d"]},"widthValue":0,"widthUnit":"%","heightUnit":"%","locked":false}},{"id":"a-21-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".link-arrow","selectorGuids":["8cd20284-6ec6-0d88-f50f-8bccf5465b7e"]},"xValue":0,"xUnit":"px","yUnit":"PX","zUnit":"PX"}},{"id":"a-21-n-5","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".image.blog-card","selectorGuids":["7a2b64dc-c516-ebec-72d5-4ad016365461","d8ce7409-d4fe-181c-3054-74d405fcff1a"]},"xValue":1,"yValue":1,"locked":true}}]},{"actionItems":[{"id":"a-21-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".image.blog-card","selectorGuids":["7a2b64dc-c516-ebec-72d5-4ad016365461","d8ce7409-d4fe-181c-3054-74d405fcff1a"]},"xValue":1.05,"yValue":1.05,"locked":true}},{"id":"a-21-n-4","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".underline-fill","selectorGuids":["6542c804-08b1-9d53-00c4-128518daa22d"]},"widthUnit":"AUTO","heightUnit":"PX","locked":false}},{"id":"a-21-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".link-arrow","selectorGuids":["8cd20284-6ec6-0d88-f50f-8bccf5465b7e"]},"xValue":4,"xUnit":"px","yUnit":"PX","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1635550695276},"a-27":{"id":"a-27","title":"Blog Post Card Hover Out","actionItemGroups":[{"actionItems":[{"id":"a-27-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".image.blog-card","selectorGuids":["7a2b64dc-c516-ebec-72d5-4ad016365461","d8ce7409-d4fe-181c-3054-74d405fcff1a"]},"xValue":1,"yValue":1,"locked":true}},{"id":"a-27-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".link-arrow","selectorGuids":["8cd20284-6ec6-0d88-f50f-8bccf5465b7e"]},"xValue":0,"yValue":null,"xUnit":"px","yUnit":"px","zUnit":"PX"}},{"id":"a-27-n-2","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".underline-fill","selectorGuids":["6542c804-08b1-9d53-00c4-128518daa22d"]},"widthValue":0,"widthUnit":"%","heightUnit":"px","locked":false}}]}],"useFirstGroupAsInitialState":false,"createdOn":1635564198646},"a-31":{"id":"a-31","title":"404 Shapes","continuousParameterGroups":[{"id":"a-31-p","type":"MOUSE_X","parameterLabel":"Mouse X","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-31-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|a2d1fb9a-2ef9-7652-3cd1-5eef0aeab434"},"xValue":6,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-31-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|40e9666f-4bc1-07ea-190c-c2d5fa76ddee"},"xValue":-8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-31-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|7887d484-1b64-3a8d-e0ea-ea62f82c45ff"},"xValue":8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-31-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|07f62bb0-746b-0f05-1448-c1b3cf53d1d9"},"xValue":-6,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-31-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|a2d1fb9a-2ef9-7652-3cd1-5eef0aeab434"},"xValue":-6,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-31-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|40e9666f-4bc1-07ea-190c-c2d5fa76ddee"},"xValue":8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-31-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|7887d484-1b64-3a8d-e0ea-ea62f82c45ff"},"xValue":-8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-31-n-8","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|07f62bb0-746b-0f05-1448-c1b3cf53d1d9"},"xValue":6,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}]},{"id":"a-31-p-2","type":"MOUSE_Y","parameterLabel":"Mouse Y","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-31-n-9","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|a2d1fb9a-2ef9-7652-3cd1-5eef0aeab434"},"xValue":null,"yValue":-8,"xUnit":"%","yUnit":"%","zUnit":"PX"}},{"id":"a-31-n-11","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|40e9666f-4bc1-07ea-190c-c2d5fa76ddee"},"xValue":null,"yValue":6,"xUnit":"%","yUnit":"%","zUnit":"PX"}},{"id":"a-31-n-13","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|7887d484-1b64-3a8d-e0ea-ea62f82c45ff"},"xValue":null,"yValue":8,"xUnit":"%","yUnit":"%","zUnit":"PX"}},{"id":"a-31-n-15","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|07f62bb0-746b-0f05-1448-c1b3cf53d1d9"},"xValue":null,"yValue":6,"xUnit":"%","yUnit":"%","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-31-n-10","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|a2d1fb9a-2ef9-7652-3cd1-5eef0aeab434"},"xValue":null,"yValue":8,"xUnit":"%","yUnit":"%","zUnit":"PX"}},{"id":"a-31-n-12","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|40e9666f-4bc1-07ea-190c-c2d5fa76ddee"},"xValue":null,"yValue":-6,"xUnit":"%","yUnit":"%","zUnit":"PX"}},{"id":"a-31-n-14","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|7887d484-1b64-3a8d-e0ea-ea62f82c45ff"},"xValue":null,"yValue":-8,"xUnit":"%","yUnit":"%","zUnit":"PX"}},{"id":"a-31-n-16","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"61e55a07ff9ce000f745f803|07f62bb0-746b-0f05-1448-c1b3cf53d1d9"},"xValue":null,"yValue":-6,"xUnit":"%","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1635608433724},"a-22":{"id":"a-22","title":"Dropdown Opens","actionItemGroups":[{"actionItems":[{"id":"a-22-n","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"value":"none"}},{"id":"a-22-n-4","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}},{"id":"a-22-n-3","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"value":0,"unit":""}},{"id":"a-22-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"yValue":10,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-22-n-5","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"value":"block"}}]},{"actionItems":[{"id":"a-22-n-6","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"value":1,"unit":""}},{"id":"a-22-n-9","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-arrow","selectorGuids":["06597f62-aa09-4c5f-d7ce-5884457beaa0"]},"zValue":-180,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-22-n-8","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"widthUnit":"PX","heightUnit":"AUTO","locked":false}},{"id":"a-22-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1635556627555},"a-23":{"id":"a-23","title":"Dropdown Close","actionItemGroups":[{"actionItems":[{"id":"a-23-n","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"value":0,"unit":""}},{"id":"a-23-n-4","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-arrow","selectorGuids":["06597f62-aa09-4c5f-d7ce-5884457beaa0"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-23-n-3","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}},{"id":"a-23-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"ease","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"yValue":10,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-23-n-5","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".dropdown-container","selectorGuids":["b1777d94-566c-aac5-7693-3135d882878c"]},"value":"none"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1635556796216},"a-32":{"id":"a-32","title":"Pozadí","actionItemGroups":[{"actionItems":[{"id":"a-32-n","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"","duration":500,"target":{"id":"58db7844-5919-d71b-dd74-2323ed8dffe9"},"globalSwatchId":"","rValue":0,"bValue":0,"gValue":0,"aValue":0}}]},{"actionItems":[{"id":"a-32-n-3","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"","duration":500,"target":{"id":"58db7844-5919-d71b-dd74-2323ed8dffe9"},"globalSwatchId":"","rValue":7,"bValue":41,"gValue":10,"aValue":0.9}}]}],"useFirstGroupAsInitialState":true,"createdOn":1648652111386},"a-12":{"id":"a-12","title":"Home Hero Mouse Animation","continuousParameterGroups":[{"id":"a-12-p","type":"MOUSE_X","parameterLabel":"Mouse X","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-12-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".image-wrapper.home-hero-image","selectorGuids":["99bffc61-72f6-2939-806e-39ad504a419c","443e4a15-38e4-cd16-d1e9-73ac2e68d49f"]},"xValue":2,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-12-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".home-hero-shapes---a","selectorGuids":["b2c019b8-18ba-9e08-4e72-9732c7da6c5c"]},"xValue":4,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-12-n-10","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".home-hero-shapes---b","selectorGuids":["efb92a9c-8493-4a42-ff8e-93e57c124a5c"]},"xValue":8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-12-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".image-wrapper.home-hero-image","selectorGuids":["99bffc61-72f6-2939-806e-39ad504a419c","443e4a15-38e4-cd16-d1e9-73ac2e68d49f"]},"xValue":-2,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-12-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".home-hero-shapes---a","selectorGuids":["b2c019b8-18ba-9e08-4e72-9732c7da6c5c"]},"xValue":-4,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-12-n-11","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".home-hero-shapes---b","selectorGuids":["efb92a9c-8493-4a42-ff8e-93e57c124a5c"]},"xValue":-8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}]},{"id":"a-12-p-2","type":"MOUSE_Y","parameterLabel":"Mouse Y","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-12-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".image-wrapper.home-hero-image","selectorGuids":["99bffc61-72f6-2939-806e-39ad504a419c","443e4a15-38e4-cd16-d1e9-73ac2e68d49f"]},"xValue":null,"yValue":-3,"xUnit":"px","yUnit":"%","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-12-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".image-wrapper.home-hero-image","selectorGuids":["99bffc61-72f6-2939-806e-39ad504a419c","443e4a15-38e4-cd16-d1e9-73ac2e68d49f"]},"xValue":null,"yValue":3,"xUnit":"px","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1635431497054},"a-35":{"id":"a-35","title":"CTA Illustration Animation 2","continuousParameterGroups":[{"id":"a-35-p","type":"MOUSE_X","parameterLabel":"Mouse X","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-35-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"xValue":10,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-35-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|69cdd3f7-f4de-952a-dc68-cdd9c28a7681"},"xValue":-8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-35-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|a2417129-ef01-b07b-86b6-09f2fa200219"},"xValue":-8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-35-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|5b0d07e0-9ede-a814-efb2-47be051250dc"},"xValue":10,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-35-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"xValue":-10,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-35-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|69cdd3f7-f4de-952a-dc68-cdd9c28a7681"},"xValue":8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-35-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|a2417129-ef01-b07b-86b6-09f2fa200219"},"xValue":8,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-35-n-8","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|5b0d07e0-9ede-a814-efb2-47be051250dc"},"xValue":-10,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}]},{"id":"a-35-p-2","type":"MOUSE_Y","parameterLabel":"Mouse Y","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-35-n-9","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"yValue":8,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-35-n-10","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|69cdd3f7-f4de-952a-dc68-cdd9c28a7681"},"yValue":-10,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-35-n-11","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|a2417129-ef01-b07b-86b6-09f2fa200219"},"xValue":null,"yValue":8,"xUnit":"%","yUnit":"%","zUnit":"PX"}},{"id":"a-35-n-12","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"yValue":10,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-35-n-13","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"yValue":-8,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-35-n-14","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|69cdd3f7-f4de-952a-dc68-cdd9c28a7681"},"yValue":10,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-35-n-15","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|a2417129-ef01-b07b-86b6-09f2fa200219"},"yValue":8,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-35-n-16","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|1ed37c4f-646b-a0b7-5d4b-e0e748e83e9e"},"yValue":-10,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1635560098536},"a-36":{"id":"a-36","title":"Pozadí 2","actionItemGroups":[{"actionItems":[{"id":"a-36-n","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|58db7844-5919-d71b-dd74-2323ed8dffe9"},"globalSwatchId":"","rValue":0,"bValue":0,"gValue":0,"aValue":0}}]},{"actionItems":[{"id":"a-36-n-2","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"","duration":500,"target":{"id":"6310d0006987144b44eafcc2|58db7844-5919-d71b-dd74-2323ed8dffe9"},"globalSwatchId":"","rValue":7,"bValue":41,"gValue":10,"aValue":0.9}}]}],"useFirstGroupAsInitialState":true,"createdOn":1648652111386},"fadeIn":{"id":"fadeIn","useFirstGroupAsInitialState":true,"actionItemGroups":[{"actionItems":[{"actionTypeId":"STYLE_OPACITY","config":{"delay":0,"duration":0,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"value":0}}]},{"actionItems":[{"actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"outQuart","duration":1000,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"value":1}}]}]}},"site":{"mediaQueries":[{"key":"main","min":992,"max":10000},{"key":"medium","min":768,"max":991},{"key":"small","min":480,"max":767},{"key":"tiny","min":0,"max":479}]}}
);

Webflow.require('commerce') && Webflow.require('commerce').init({siteId: "61e55a05ff9ce033ad45f7fa", apiUrl: "https://render.webflow.com"});
