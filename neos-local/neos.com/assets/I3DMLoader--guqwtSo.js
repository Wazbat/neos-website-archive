import{L as z,r as Z,F as J,B as q,a as K}from"./readMagicBytes-ReGFEf36.js";import{bh as X,k as M,l as L,bw as Y,Q as k}from"./three.module-CQU0seT4.js";import{G as tt}from"./GLTFLoader-Bzr6GmPM.js";import{E as et}from"./Ellipsoid-BKsGN9dG.js";const ct=-1,lt=0,pt=1,Tt=2,ht=3,G=6378137,st=6356752314245179e-9;class at extends z{parse(o){const a=new DataView(o),s=Z(a);console.assert(s==="i3dm");const A=a.getUint32(4,!0);console.assert(A===1);const w=a.getUint32(8,!0);console.assert(w===o.byteLength);const b=a.getUint32(12,!0),S=a.getUint32(16,!0),i=a.getUint32(20,!0),f=a.getUint32(24,!0),m=a.getUint32(28,!0),h=32,_=o.slice(h,h+b+S),n=new J(_,0,b,S),e=h+b+S,p=o.slice(e,e+i+f),E=new q(p,n.getData("INSTANCES_LENGTH"),0,i,f),d=e+i+f,u=new Uint8Array(o,d,w-d);let O=null,T=null,U=null;if(m)O=u,T=Promise.resolve();else{const r=this.resolveExternalURL(K(u)),g=r.split(/[\\/]/g);g.pop(),U=g.join("/"),T=fetch(r,this.fetchOptions).then(c=>{if(!c.ok)throw new Error(`I3DMLoaderBase : Failed to load file "${r}" with status ${c.status} : ${c.statusText}`);return c.arrayBuffer()}).then(c=>{O=new Uint8Array(c)})}return T.then(()=>({version:A,featureTable:n,batchTable:E,glbBytes:O,gltfWorkingPath:U}))}}const Q=new et(G,G,st);Q.name="WGS84 Earth";const H=new L,D=new L,C=new L,F=new L,P=new k,I=new L,y=new M,V=new M,W=new L,v=new M,x=new k,B={};class ut extends at{constructor(o=X){super(),this.manager=o,this.adjustmentTransform=new M,this.ellipsoid=Q.clone()}resolveExternalURL(o){return this.manager.resolveURL(super.resolveExternalURL(o))}parse(o){return super.parse(o).then(a=>{const{featureTable:s,batchTable:A}=a,w=a.glbBytes.slice().buffer;return new Promise((b,S)=>{const i=this.fetchOptions,f=this.manager,m=f.getHandler("path.gltf")||new tt(f);i.credentials==="include"&&i.mode==="cors"&&m.setCrossOrigin("use-credentials"),"credentials"in i&&m.setWithCredentials(i.credentials==="include"),i.headers&&m.setRequestHeader(i.headers);let h=a.gltfWorkingPath??this.workingPath;/[\\/]$/.test(h)||(h+="/");const _=this.adjustmentTransform;m.parse(w,h,n=>{const e=s.getData("INSTANCES_LENGTH"),p=s.getData("POSITION",e,"FLOAT","VEC3"),E=s.getData("NORMAL_UP",e,"FLOAT","VEC3"),d=s.getData("NORMAL_RIGHT",e,"FLOAT","VEC3"),u=s.getData("SCALE_NON_UNIFORM",e,"FLOAT","VEC3"),O=s.getData("SCALE",e,"FLOAT","SCALAR"),T=s.getData("RTC_CENTER",1,"FLOAT","VEC3"),U=s.getData("EAST_NORTH_UP");["QUANTIZED_VOLUME_OFFSET","QUANTIZED_VOLUME_SCALE","POSITION_QUANTIZED","NORMAL_UP_OCT32P","NORMAL_RIGHT_OCT32P"].forEach(t=>{t in s.header&&console.warn(`I3DMLoader: Unsupported FeatureTable feature "${t}" detected.`)});const r=new L;for(let t=0;t<e;t++)r.x+=p[t*3+0]/e,r.y+=p[t*3+1]/e,r.z+=p[t*3+2]/e;const g=[],c=[];n.scene.updateMatrixWorld(),n.scene.traverse(t=>{if(t.isMesh){c.push(t);const{geometry:N,material:R}=t,l=new Y(N,R,e);l.position.copy(r),T&&(l.position.x+=T[0],l.position.y+=T[1],l.position.z+=T[2]),g.push(l)}});for(let t=0;t<e;t++){F.set(p[t*3+0]-r.x,p[t*3+1]-r.y,p[t*3+2]-r.z),P.identity(),E&&(D.set(E[t*3+0],E[t*3+1],E[t*3+2]),C.set(d[t*3+0],d[t*3+1],d[t*3+2]),H.crossVectors(C,D).normalize(),y.makeBasis(C,D,H),P.setFromRotationMatrix(y)),I.set(1,1,1),u&&I.set(u[t*3+0],u[t*3+1],u[t*3+2]),O&&I.multiplyScalar(O[t]);for(let N=0,R=g.length;N<R;N++){const l=g[N];x.copy(P),U&&(l.updateMatrixWorld(),W.copy(F).applyMatrix4(l.matrixWorld),this.ellipsoid.getPositionToCartographic(W,B),this.ellipsoid.getEastNorthUpFrame(B.lat,B.lon,v),x.setFromRotationMatrix(v)),y.compose(F,x,I).multiply(_);const $=c[N];V.multiplyMatrices(y,$.matrixWorld),l.setMatrixAt(t,V)}}n.scene.clear(),n.scene.add(...g),n.batchTable=A,n.featureTable=s,n.scene.batchTable=A,n.scene.featureTable=s,b(n)},S)})})}}export{ct as F,ut as I,ht as L,Tt as P,lt as U,Q as W,G as a,pt as b};
//# sourceMappingURL=I3DMLoader--guqwtSo.js.map
